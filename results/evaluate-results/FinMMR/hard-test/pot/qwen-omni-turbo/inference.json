[
  {
    "question_id": "hard-test-0",
    "output": [
      "qtr_2023_profit = 179.8\n    qtr_2024_profit = 210.0\n    \n    # Calculate difference between profits\n    profit_diff = qtr_2024_profit - qtr_2023_profit\n    \n    # Calculate growth rate\n    growth_rate = (profit_diff / qtr_2023_profit) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 127,
      "prompt_tokens": 3231,
      "completion_tokens_details": {
        "text_tokens": 127
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 2952
      },
      "total_tokens": 3358
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年第三季度净利润与2023年第三季度净利润的差值，并将该差值除以2023年第三季度净利润，得到的增长率保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    net_profit_2023_q3 = 1254.4\n    net_profit_2024_q3 = 491.6\n\n    # Multi-step logic\n    diff = net_profit_2024_q3 - net_profit_2023_q3\n    growth_rate = diff / net_profit_2023_q3 * 100\n    return round(growth_rate, 2)",
    "image_id": "strategy_05_05_18_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2996",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2791-1.png",
      "./MultiFinance/images/2791-2.png",
      "./MultiFinance/images/2791-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2791-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-1",
    "output": [
      "psvf_025 = 0.997506\n    psvf_05 = 0.992556\n    psvf_075 = 0.985222\n    psvf_1 = 0.97561\n    \n    # Do math calculation to get the answer\n    r = (psvf_025 - psvf_05) / (psvf_05 - psvf_075)\n    x = ((psvf_025 - psvf_05) * psvf_075 + (psvf_05 - psvf_075) * psvf_025) / (psvf_025 - psvf_075)\n    \n    answer = x / r\n    \n    # return answer\n    return round(answer, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 219,
      "prompt_tokens": 1568,
      "completion_tokens_details": {
        "text_tokens": 219
      },
      "prompt_tokens_details": {
        "text_tokens": 326,
        "image_tokens": 1242
      },
      "total_tokens": 1787
    },
    "model": "qwen-omni-turbo",
    "question": "Three months ago, a supervisor initiated a receive-fixed and pay-equity swap. The annualized fixed interest is 3% and the equity index was at 100 at the time of the swap. The expiry of the swap is one year with a quarterly reset, and the nominal amount is valued at $100 million. The present spot rates are as stated: At what equity index level would this equity swap value stand at zero? Answer to three decimal places.",
    "python_solution": "def solution():\n    fixed_rate = 0.03\n    nominal_amount = 100000000\n    current_spot_rates = [0.997506, 0.992556, 0.985222]\n    number_of_days = 90\n    denominator = 360\n\n    value_fixed_leg = fixed_rate * (number_of_days / denominator) * nominal_amount * sum(current_spot_rates) + (nominal_amount * current_spot_rates[-1])\n\n    equity_index_price = value_fixed_leg / nominal_amount * 100\n    return equity_index_price",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 5,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.595119850134591,
    "source_id": "validation-92",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/326-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-2",
    "output": [
      "year_2022_second_item = -48.66\n    year_2021_second_item = 17.85\n    \n    # Do math calculation to get the answer\n    difference = year_2022_second_item - year_2021_second_item\n    result = (difference / year_2021_second_item) * 100\n    \n    # return answer\n    return round(result, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 1311,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 1032
      },
      "total_tokens": 1416
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2022年与2021年的第二项指标的差值，并将该差值除以2021年的第二项指标，得到的结果表示为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_2021 = 17.85\n    value_2022 = -48.66\n    diff = value_2022 - value_2021\n    ratio = diff / value_2021 * 100\n    return round(ratio, 1)",
    "image_id": "market_09_09_24_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2793",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3040-1.png",
      "./MultiFinance/images/3040-2.png",
      "./MultiFinance/images/3040-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3040-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-3",
    "output": [
      "plant_start_up_costs_2017 = -927\n    plant_start_up_costs_2018 = 929\n    \n    # Do math calculation to get the answer\n    change_in_plant_start_up_costs = plant_start_up_costs_2018 - plant_start_up_costs_2017\n    \n    # return answer\n    return round(change_in_plant_start_up_costs)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 101,
      "prompt_tokens": 1521,
      "completion_tokens_details": {
        "text_tokens": 101
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1262
      },
      "total_tokens": 1622
    },
    "model": "qwen-omni-turbo",
    "question": "What was the change in the Plant start-up costs between 2017 and 2018? Answer to the nearest integer.",
    "answer": "502",
    "program": "plant_startup_2018 = df[\"Non-GAAP adjustments: -- Plant start-up costs (2)\"][\"2018\"]\nplant_startup_2017 = df[\"Non-GAAP adjustments: -- Plant start-up costs (2)\"][\"2017\"]\nanswer = plant_startup_2018 - plant_startup_2017",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 58,
        "total_numbers": 60
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 5,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 4
      }
    },
    "difficulty": 3.2188758248682006,
    "source_id": "test-233",
    "img_type": "['Tables']",
    "source": "CodeTAT-QA",
    "images": [
      "./MultiFinance/images/597-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-4",
    "output": [
      "ms_friar_options = 109_026\n    ms_henry_options = 109_026\n    ms_reses_options = 109_026\n    ms_whiteley_options = 47_699\n    \n    # Calculate the sum of all options\n    total_options = ms_friar_options + ms_henry_options + ms_reses_options + ms_whiteley_options\n    \n    # Calculate the average number of securities underlying options\n    average_options = total_options / 4\n    \n    # Return the result\n    return average_options\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 142,
      "prompt_tokens": 2399,
      "completion_tokens_details": {
        "text_tokens": 142
      },
      "prompt_tokens_details": {
        "text_tokens": 1149,
        "image_tokens": 1250
      },
      "total_tokens": 2541
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the average number of securities underlying options of those executive officers who receive them if Ms. Whiteley’s number of securities options is 109,026?",
    "python_solution": "def solution():\n    # Define variables name and value\n    num_executive_officers = 4\n    ms_friar_options = 109026\n    ms_henry_options = 109026\n    ms_reses_options = 109026\n    ms_whiteley_options = 109026\n\n    # Do math calculation to get the answer\n    answer = (ms_friar_options + ms_henry_options + ms_reses_options + ms_whiteley_options) / num_executive_officers\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-64",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n In 2018, we granted new equity awards to our named executive officers described in the table below. In determining the size and terms of these equity awards for Mses. Friar, Henry, Reses and Whiteley, our compensation committee, with input from our CEO, our then-current People Lead and Compensia, considered the past and expected future key contributions of each of these named executive officers, the extent to which their existing equity awards were vested and the competitive market data for similarly situated executives. Our compensation committee believed it was appropriate to grant each of them new equity awards to help achieve our retention goals and further align their compensation with the competitive market. (1) Ms. Friar resigned from her position as Chief Financial Officer, effective as of November 16, 2018. (2) One-twelfth of 10% of the shares subject to the option vest in equal monthly installments over one year from April 1, 2018, and one-thirty-sixth of 90% of the shares subject to the option vest in equal monthly installments over three years from April 1, 2019, subject to continued service with us. (3) 2.5% of RSAs vest in four equal quarterly installments over one year from April 1, 2018, and 7.5% RSUs vest in 12 quarterly installments over three years from April 1, 2019, subject to continued service with us. (4) With respect to 16,695 of the total RSAs, 2.5% of RSAs vest in four equal quarterly installments over one year from April 1, 2018, and 7.5% RSUs vest in 12 quarterly installments over three years from April 1, 2019, subject to continued service with us. And, with respect to 11,784 of the total RSAs, one-sixteenth of RSAs vest in 16 equal quarterly installments over four years from October 1, 2018, subject to continued service with us. (5) Messrs. Daswani and Murphy did not receive any additional equity awards in conjunction with their service as interim co-CFOs. Equity awards to Messrs. Daswani and Murphy were granted equity awards in April 2018, prior to their becoming named executive officers, as part of the company-wide compensation review program. Their grants were recommended by their direct manager, reviewed by the then-current People Lead and approved by our compensation committee. (6) With respect to 1,336 of the total RSAs, one-sixteenth of RSAs vest in 16 equal quarterly installments over four years from April 1, 2018, subject to continued service with us. And, with respect to 2,862 of the total RSAs, 2.5% of RSAs vest in four equal quarterly installments over one year from April 1, 2018, and 7.5% RSUs vest in 12 quarterly installments over three years from April 1, 2019, subject to continued service with us. (7) With respect to 1,527 of the total RSAs, one-sixteenth of RSAs vest in 16 equal quarterly installments over four years from April 1, 2018, subject to continued service with us. And, with respect to 3,435 of the total RSAs, 2.5% of RSAs vest in four equal quarterly installments over one year from April 1, 2018, and 7.5% RSUs vest in 12 quarterly installments over three years from April 1, 2019, subject to continued service with us. Mr. Dorsey did not receive any equity awards in 2018 at his request, and because our compensation committee believed that his existing equity ownership position sufficiently aligned his interests with those of our stockholders.",
    "images": [
      "./MultiFinance/images/1803-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.6888794541139367,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-5",
    "output": [
      "cagr_2023_2028 = (149.60 - 136.06) / 136.06 * 100\n    \n    # Do math calculation to get the answer\n    answer = round(cagr_2023_2028, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 86,
      "prompt_tokens": 2015,
      "completion_tokens_details": {
        "text_tokens": 86
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 1748
      },
      "total_tokens": 2101
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算韩国从2023年到2028年的预测复合年增长率（CAGR），并将其结果保留两位小数。",
    "python_solution": "def solution():\n    value_2023 = 95.63\n    value_2028 = 142.59\n    years = 2028 - 2023\n\n    cagr = ((value_2028 / value_2023) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_23_23_11_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-973",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2461-1.png",
      "./MultiFinance/images/2461-2.png",
      "./MultiFinance/images/2461-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2461-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-6",
    "output": [
      "year_1 = 54\n    year_2 = 106\n    year_3 = 91\n    \n    # Do math calculation to get the answer\n    average_growth_rate = ((year_3 - year_1) / (year_1 * 2)) ** (1/2)\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 90,
      "prompt_tokens": 2874,
      "completion_tokens_details": {
        "text_tokens": 90
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2611
      },
      "total_tokens": 2964
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年到2026年锂精矿供给的平均增长率。请保留两位小数。",
    "python_solution": "def solution():\n    supply_2024 = 54\n    supply_2025 = 106\n    supply_2026 = 91\n\n    growth_2024_2025 = (supply_2025 - supply_2024) / supply_2024 * 100\n    growth_2025_2026 = (supply_2026 - supply_2025) / supply_2025 * 100\n    average_growth = (growth_2024_2025 + growth_2025_2026) / 2\n    return round(average_growth, 2)",
    "image_id": "company_15_15_18_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1934",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.477336814478207,
    "images": [
      "./MultiFinance/images/2242-1.png",
      "./MultiFinance/images/2242-2.png",
      "./MultiFinance/images/2242-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2242-1.png",
      "./MultiFinance/images/2242-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-7",
    "output": [
      "rank_ic_assets_turnover = 1.62\n    rank_ic_margin_profit = 0.15\n    \n    # Do math calculation to get the answer\n    difference_rank_ic = rank_ic_assets_turnover - rank_ic_margin_profit\n    \n    # return answer\n    return round(difference_rank_ic, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 72,
      "prompt_tokens": 2371,
      "completion_tokens_details": {
        "text_tokens": 72
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2112
      },
      "total_tokens": 2443
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算盈利能力下的资产周转率和毛利润率的RankIC之差，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    asset_turnover_rate = 1.62\n    gross_margin_rate = -1.44\n    \n    # Multi-step logic\n    difference = asset_turnover_rate - gross_margin_rate\n    result = round(difference, 2)\n    \n    return result",
    "image_id": "market_09_09_31_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2804",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3043-1.png",
      "./MultiFinance/images/3043-2.png",
      "./MultiFinance/images/3043-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3043-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-8",
    "output": [
      "interest_expense_2009 = [177271, 191027, 213105, 232452]\n    \n    # Do math calculation to get the answer\n    total_interest_expense_2009 = sum(interest_expense_2009) / len(interest_expense_2009)\n    \n    # return answer\n    return total_interest_expense_2009\n\n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 1531,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 1256
      },
      "total_tokens": 1638
    },
    "model": "qwen-omni-turbo",
    "question": "What's the average of Interest expense in 2009? (in thousand)",
    "python_solution": "def solution():\n    # Define variables name and value\n    interest_expense_q4 = 177271\n    interest_expense_q3 = 191027\n    interest_expense_q2 = 213105\n    interest_expense_q1 = 232452\n    quarters = 4\n    \n    # Do math calculation to get the answer\n    answer = (interest_expense_q4 + interest_expense_q3 + interest_expense_q2 + interest_expense_q1) / quarters\n    \n    return answer",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-89",
    "img_type": "['Tables']",
    "context": "Table 58 — Selected Quarterly Income Statement Data(1)\n<image 1>",
    "images": [
      "./MultiFinance/images/1729-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.6888794541139367,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-9",
    "output": [
      "sum_3_0_group = -18.21 + (-12.58) + (-8.00) + (-14.64)\n    \n    # Do math calculation to get the answer\n    average_3_0_group = sum_3_0_group / 4\n    \n    # return answer\n    return round(average_3_0_group, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 1426,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1167
      },
      "total_tokens": 1517
    },
    "model": "qwen-omni-turbo",
    "question": "请计算第3.0组2014年到2024年的平均年化超额，并保留两位小数。",
    "python_solution": "def solution():\n    values = [-16.21, 34.32, 6.29, -7.8, 2.84, 6.17, -0.7, 25.04, 15.59, 15.25, 7.89]\n    average = sum(values) / len(values)\n    return round(average, 2)",
    "image_id": "strategy_04_04_28_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3098",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 12
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3062-1.png",
      "./MultiFinance/images/3062-2.png",
      "./MultiFinance/images/3062-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3062-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-10",
    "output": [
      "net_profit_2023 = 2051\n    net_profit_2024 = 1278\n    operating_cost_2023 = 461835\n    \n    # Calculate the difference in net profit between 2023 and 2024\n    net_profit_difference = net_profit_2023 - net_profit_2024\n    \n    # Calculate the percentage change in net profit relative to 2023's operating cost\n    percentage_change = (net_profit_difference / operating_cost_2023) * 100\n    \n    # Round the result to one decimal place\n    rounded_percentage_change = round(percentage_change, 1)\n    \n    # Return the calculated percentage change\n    return rounded_percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 184,
      "prompt_tokens": 2901,
      "completion_tokens_details": {
        "text_tokens": 184
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 2631
      },
      "total_tokens": 3085
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年和2024年的净利润差值，并将该差值占2023年营业成本的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    cost_of_revenue_2023 = 461835\n    net_profit_2023 = 2051\n    net_profit_2024 = 1278\n    diff = net_profit_2024 - net_profit_2023\n    ratio = diff / cost_of_revenue_2023\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_14_14_22_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-66",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2901-1.png",
      "./MultiFinance/images/2901-2.png",
      "./MultiFinance/images/2901-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2901-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-11",
    "output": [
      "pe_2023 = 100.1\n    pe_2024 = 68.1\n    pe_2025 = 44.1\n    \n    # Do math calculation to get the answer\n    average_pe = (pe_2023 + pe_2024 + pe_2025) / 3\n    \n    # return answer\n    return round(average_pe, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 114,
      "prompt_tokens": 1799,
      "completion_tokens_details": {
        "text_tokens": 114
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1538
      },
      "total_tokens": 1913
    },
    "model": "qwen-omni-turbo",
    "question": "请计算奥赛康2023年到2026年的PE倍数的平均值，并将结果保留一位小数。",
    "python_solution": "def solution():\n    pe_2023 = -29.34\n    pe_2024 = 100.1\n    pe_2025 = 68.1\n    pe_2026 = 44.1\n    \n    average_pe = (pe_2023 + pe_2024 + pe_2025 + pe_2026) / 4\n    return round(average_pe, 1)",
    "image_id": "company_38_38_26_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1155",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2568-1.png",
      "./MultiFinance/images/2568-2.png",
      "./MultiFinance/images/2568-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2568-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-12",
    "output": [
      "accrued_bonus_2018 = 10766\n    total_accrued_expenses_2018 = 42101\n    increase_total_accrued_expenses = 10000\n    \n    # Calculate the new total accrued expenses with the increase\n    new_total_accrued_expenses = total_accrued_expenses_2018 + increase_total_accrued_expenses\n    \n    # Calculate the percentage of the 2018 accrued bonus as a part of the new total accrued expenses\n    percentage_of_new_total = (accrued_bonus_2018 / new_total_accrued_expenses) * 100\n    \n    # Return the calculated percentage\n    return percentage_of_new_total\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 176,
      "prompt_tokens": 1564,
      "completion_tokens_details": {
        "text_tokens": 176
      },
      "prompt_tokens_details": {
        "text_tokens": 344,
        "image_tokens": 1220
      },
      "total_tokens": 1740
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the value of the 2018 accrued bonus as a percentage of the 2018 total accrued expenses if the total was increased by 10,000 thousand? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    accrued_bonus_2018 = 10766\n    total_accrued_expenses_2018 = 42101\n    additional_expenses = 10000\n    \n    # Do math calculation to get the answer\n    answer = (accrued_bonus_2018 / (total_accrued_expenses_2018 + additional_expenses)) * 100\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-26",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Accrued expenses consisted of the following (in thousands): Contract liabilities represent amounts that are collected in advance of the satisfaction of performance obligations under the new revenue recognition standard. See Recently Adopted Accounting Standards in Note 2 and Contract Liabilities in Note 6.",
    "images": [
      "./MultiFinance/images/1765-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-13",
    "output": [
      "pre_mining_group_equity_ratio = 80.0\n    \n    # Do math calculation to get the answer\n    post_mining_group_equity_ratio = (1 - pre_mining_group_equity_ratio) * 40.0 + pre_mining_group_equity_ratio\n    \n    # return answer\n    return round(post_mining_group_equity_ratio, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 84,
      "prompt_tokens": 1537,
      "completion_tokens_details": {
        "text_tokens": 84
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1278
      },
      "total_tokens": 1621
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算本次交易前矿业集团的股权比例，并将其转换为百分比形式；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share_roadbridge = 60.00\n    share_mineralgroup = 20.00\n\n    # Multi-step logic\n    total_share = share_roadbridge + share_mineralgroup\n    mineralgroup_percentage = (share_mineralgroup / total_share) * 100\n    return round(mineralgroup_percentage, 1)",
    "image_id": "company_26_26_10_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1749",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2642-1.png",
      "./MultiFinance/images/2642-2.png",
      "./MultiFinance/images/2642-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2642-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-14",
    "output": [
      "cash_flow_2023 = 120\n    cash_flow_2024 = -349\n    difference = cash_flow_2023 - cash_flow_2024\n    percentage_difference = (difference / abs(cash_flow_2023)) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 99,
      "prompt_tokens": 2692,
      "completion_tokens_details": {
        "text_tokens": 99
      },
      "prompt_tokens_details": {
        "text_tokens": 282,
        "image_tokens": 2410
      },
      "total_tokens": 2791
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年和2024年的筹资活动现金流的差值，并将该差值占2023年筹资活动现金流的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    financing_2023 = 120\n    financing_2024 = -349\n    diff = financing_2024 - financing_2023\n    ratio = diff / financing_2023 * 100\n    return round(ratio, 1)",
    "image_id": "company_24_24_21_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-686",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2943-1.png",
      "./MultiFinance/images/2943-2.png",
      "./MultiFinance/images/2943-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2943-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-15",
    "output": [
      "equity_per_share = 12.31\n    total_liabilities_ratio = 15.56\n    \n    # Calculate total assets using the formula: Total Assets = Equity + Liabilities\n    total_assets = (equity_per_share * 417.46) / (1 - total_liabilities_ratio)\n    \n    # Calculate total share capital using the formula: Total Share Capital = Total Assets / Equity per Share\n    total_share_capital = total_assets / equity_per_share\n    \n    # Return the result rounded to two decimal places\n    return round(total_share_capital, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 140,
      "prompt_tokens": 806,
      "completion_tokens_details": {
        "text_tokens": 140
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 551
      },
      "total_tokens": 946
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中的每股净资产和总资产负债率计算该公司的总股本价值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    net_asset_per_share = 12.31\n    debt_ratio = 15.56 / 100\n    total_shares = 417.46 * 1000000\n\n    total_value = total_shares * net_asset_per_share * (1 - debt_ratio)\n    return round(total_value, 2)",
    "image_id": "company_33_33_00_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-129",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 3,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2669-1.png",
      "./MultiFinance/images/2669-2.png",
      "./MultiFinance/images/2669-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2669-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-16",
    "output": [
      "total_current_assets_2010 = 152872771\n    total_current_assets_2009 = 152217064\n    total_assets_2010 = 185960018\n    total_assets_2009 = 183224468\n    \n    # Calculate differences\n    diff_total_current_assets = total_current_assets_2010 - total_current_assets_2009\n    diff_total_assets = total_assets_2010 - total_assets_2009\n    \n    # Calculate percentage differences\n    percent_diff_total_current_assets = (diff_total_current_assets / total_current_assets_2009) * 100\n    percent_diff_total_assets = (diff_total_assets / total_assets_2009) * 100\n    \n    # Return answers\n    return f\"Difference in Total Current Assets: {diff_total_current_assets}, Percentage Difference: {percent_diff_total_current_assets:.2f}%\", \\\n           f\"Difference in Total Assets: {diff_total_assets}, Percentage Difference: {percent_diff_total_assets:.2f}%\"\n\n# Call the function and print the results\nresults = solution()\nprint(results)\n```"
    ],
    "usage": {
      "completion_tokens": 271,
      "prompt_tokens": 1539,
      "completion_tokens_details": {
        "text_tokens": 271
      },
      "prompt_tokens_details": {
        "text_tokens": 283,
        "image_tokens": 1256
      },
      "total_tokens": 1810
    },
    "model": "qwen-omni-turbo",
    "question": "What is the difference between Total Current Assets in 2010 and 2009, and how does this percentage difference compare to the difference in Total Assets for the same period?",
    "python_solution": "def solution():\n     #Define variables name and value\n    Total_Current_Assets_2010 = 152872771  \n    Total_Current_Assets_2009 = 152217064\n    Total_Assets_2010 = 185960018\n    Total_Assets_2009 = 183224468\n\n    #Do math calculation to get the answer\n    Current_Asset_difference = Total_Current_Assets_2010 - Total_Current_Assets_2009\n    Total_Assets_difference = Total_Assets_2010 - Total_Assets_2009\n    answer = Current_Asset_difference / Total_Assets_difference * 100\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-281",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2133-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 0
      }
    },
    "difficulty": 3.6888794541139367,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-17",
    "output": [
      "flow_asset_2023 = 14633\n    flow_asset_2022 = 16175\n    difference = flow_asset_2023 - flow_asset_2022\n    percentage = (difference / flow_asset_2022) * 100\n    \n    # return answer\n    return round(percentage, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 101,
      "prompt_tokens": 3150,
      "completion_tokens_details": {
        "text_tokens": 101
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 2873
      },
      "total_tokens": 3251
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年流动资产合计的差值，并将该差值占2022年流动资产合计的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2022 = 16175\n    current_assets_2023 = 14633\n\n    # Multi-step logic\n    diff = current_assets_2023 - current_assets_2022\n    ratio = diff / current_assets_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_05_05_37_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1517",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2633-1.png",
      "./MultiFinance/images/2633-2.png",
      "./MultiFinance/images/2633-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2633-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-18",
    "output": [
      "week_1_buy_hold = 1 + 4\n    month_1_buy_hold = 13 + 6\n    \n    # Do math calculation to get the answer\n    total_week_1 = week_1_buy_hold\n    total_month_1 = month_1_buy_hold\n    \n    # return answer\n    return round(total_week_1 - total_month_1, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 84,
      "prompt_tokens": 1425,
      "completion_tokens_details": {
        "text_tokens": 84
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 1158
      },
      "total_tokens": 1509
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算一周内买入和增持的总和，并将其与一月内的买入和增持的总和进行比较；结果保留两位小数。",
    "python_solution": "def solution():\n    buy_week = 1\n    hold_week = 0\n    buy_month = 4\n    hold_month = 1\n    sum_week = buy_week + hold_week\n    sum_month = buy_month + hold_month\n    result = sum_week - sum_month\n    return round(result, 2)",
    "image_id": "company_20_20_15_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-178",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2862-1.png",
      "./MultiFinance/images/2862-2.png",
      "./MultiFinance/images/2862-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2862-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-19",
    "output": [
      "dec_31_2021_assets = 234309\n    jun_30_2022_assets = 177297892\n    \n    # Calculate the net percentage change\n    net_percentage_change = ((jun_30_2022_assets - dec_31_2021_assets) / dec_31_2021_assets) * 100\n    \n    # Return the result\n    return net_percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 123,
      "prompt_tokens": 1521,
      "completion_tokens_details": {
        "text_tokens": 123
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1241
      },
      "total_tokens": 1644
    },
    "model": "qwen-omni-turbo",
    "question": "What is the net percentage change in the total assets of the company from December 31, 2021 to June 30, 2022?",
    "python_solution": "def solution():\n    #Define variables name and value\n    total_assets_2022 = 177297892\n    total_assets_2021 = 234309\n\n    #Do math calculation to get the answer\n    percentage_change = ((total_assets_2022 - total_assets_2021)/total_assets_2021)*100\n    answer = percentage_change\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-84",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1996-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-20",
    "output": [
      "phillips = 40.3\n    fisher = 6.6\n    resmed = 17.8\n    \n    total = phillips + fisher\n    resmed_percentage = (resmed / total) * 100\n    \n    # return answer\n    return round(resmed_percentage, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 74,
      "prompt_tokens": 1407,
      "completion_tokens_details": {
        "text_tokens": 74
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 1129
      },
      "total_tokens": 1481
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中飞利浦和费雪派克的市场份额总和，并将其与瑞思迈的市场份额进行比较，求出瑞思迈市场份额占两者总和的百分比；结果保留一位小数。",
    "python_solution": "def solution():\n    philips_share = 40.3\n    fisher_paykel_share = 37.8\n    resmed_share = 6.6\n\n    total_share = philips_share + fisher_paykel_share\n    percentage = (resmed_share / total_share) * 100\n    return round(percentage, 1)",
    "image_id": "company_34_34_14_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-486",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2928-1.png",
      "./MultiFinance/images/2928-2.png",
      "./MultiFinance/images/2928-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2928-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-21",
    "output": [
      "centrally_carried_pension_expense_2019 = -500\n    centrally_carried_pension_expense_2018 = -423\n    \n    # Do math calculation to get the answer\n    percentage_change = ((centrally_carried_pension_expense_2019 - centrally_carried_pension_expense_2018) / abs(centrally_carried_pension_expense_2018)) * 100\n    \n    # return answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 129,
      "prompt_tokens": 1676,
      "completion_tokens_details": {
        "text_tokens": 129
      },
      "prompt_tokens_details": {
        "text_tokens": 444,
        "image_tokens": 1232
      },
      "total_tokens": 1805
    },
    "model": "qwen-omni-turbo",
    "question": "If the Centrally carried pension expense amounts to (500) million in 2019, what will be the percentage increase / (decrease) from 2018 to 2019? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    centrally_carried_pension_expense_2019 = -500\n    centrally_carried_pension_expense_2018 = -423\n    \n    # Do math calculation to get the answer\n    answer = (centrally_carried_pension_expense_2019 / centrally_carried_pension_expense_2018) - 1\n    \n    return answer * 100",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-93",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n A.3.10 Reconciliation to Consolidated Financial Statements The negative swing in Corporate items was mainly due to large positive effects in fiscal 2018 – the gain of € 900 million resulting from the transfer of Siemens’ shares in Atos SE to Siemens Pension- Trust e. V. and the gain of € 655 million from the sale of OSRAM Licht AG shares. These effects substantially outweighed a positive result in fiscal 2019 from the measurement of a major asset retirement obligation, which was previously reported in Centrally managed portfolio activities. Severance charges within Corporate items were € 99 million (€ 159 million in fiscal 2018).",
    "images": [
      "./MultiFinance/images/1832-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-22",
    "output": [
      "GB200_NVL72_3_5 = 117\n    GB200_NVL72_4 = 133\n    GB200_difference = GB200_NVL72_4 - GB200_NVL72_3_5\n   柴发单机功率2000kw的价格 = 360\n    answer = GB200_difference / 柴发单机功率2000kw的价格\n\n    # return answer\n    return round(answer, 2)\n\n# Call the function and print the result\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 134,
      "prompt_tokens": 2139,
      "completion_tokens_details": {
        "text_tokens": 134
      },
      "prompt_tokens_details": {
        "text_tokens": 293,
        "image_tokens": 1846
      },
      "total_tokens": 2273
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算柴发单机功率为2000kw时，GB200 NVL72等效（w柜）市场规模在3.5和4之间的差值，并将结果除以该功率对应的柴发价格；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    power = 2000\n    gb200_3_5 = 151\n    gb200_4 = 173\n    price = 360\n\n    # Multi-step logic\n    diff = gb200_4 - gb200_3_5\n    result = diff / price\n    return round(result, 2)",
    "image_id": "industry_15_15_14_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2171",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.401197381662156,
    "images": [
      "./MultiFinance/images/2796-1.png",
      "./MultiFinance/images/2796-2.png",
      "./MultiFinance/images/2796-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2796-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-23",
    "output": [
      "tax_rate_reduction = 4\n    adjusted_income = 67269 * (1 - tax_rate_reduction)\n    \n    # Do math calculation to get the answer\n    potential_impact = adjusted_income - 67269\n    \n    # return answer\n    return potential_impact\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 77,
      "prompt_tokens": 1533,
      "completion_tokens_details": {
        "text_tokens": 77
      },
      "prompt_tokens_details": {
        "text_tokens": 427,
        "image_tokens": 1106
      },
      "total_tokens": 1610
    },
    "model": "qwen-omni-turbo",
    "question": "If the U.S. corporate federal income tax rate was re-instituted back to 35% from the reduced 21%, what would be the potential impact on Blucora's net income for the first nine months of 2018?",
    "python_solution": "def solution():\n    #Define variables name and value\n    old_tax_rate = 35 / 100\n    new_tax_rate = 21 / 100\n    net_income = 63078\n\n    #Do math calculation to get the answer\n    # first, calculate pretax income based on the new rate\n    pre_tax_income = net_income / (1-new_tax_rate)\n    # then, calculate net income under old tax rate\n    net_income_old_rate = pre_tax_income * (1-old_tax_rate)\n    answer = net_income_old_rate\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-252",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2108-1.png"
    ],
    "context": "The Tax Cuts and Jobs Act (the “Tax Legislation”) was enacted on December 22, 2017, reducing the U.S. corporate federal income tax rate to 21% from 35%. The Company applied the guidance in Staff Accounting Bulletin 118, Income Tax Accounting Implications of the Tax Cuts and Jobs Act, when accounting for the enactment date effects of the Tax Legislation. In 2017, the Company provisionally remeasured certain deferred tax assets and liabilities based on the rates at which they are expected to reverse in the future, which is generally 21%.\n<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 4
      }
    },
    "difficulty": 4.356708826689592,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-24",
    "output": [
      "year_2018_income = 24.48\n    year_2023_income = 29.74\n    \n    # Do math calculation to get the answer\n    cagr = ((year_2023_income / year_2018_income) ** (1/5)) - 1\n    answer = round(cagr * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 100,
      "prompt_tokens": 1611,
      "completion_tokens_details": {
        "text_tokens": 100
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1349
      },
      "total_tokens": 1711
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2019年到2023年期间，收入的年均复合增长率（CAGR）。请保留两位小数。",
    "python_solution": "def solution():\n    income_2019 = 297.82\n    income_2023 = 467.73\n    years = 4  # From 2019 to 2023\n\n    cagr = ((income_2023 / income_2019) ** (1 / years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_13_13_17_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-871",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2610-1.png",
      "./MultiFinance/images/2610-2.png",
      "./MultiFinance/images/2610-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2610-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-25",
    "output": [
      "total_supply_volume = 112 + 104\n    total_supply_volume_all = sum([112, 104, 104, 79, 43, 22, 14, 5, 6])\n    \n    # Do math calculation to get the answer\n    percentage = (total_supply_volume / total_supply_volume_all) * 100\n    \n    # return answer\n    return round(percentage, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 117,
      "prompt_tokens": 2971,
      "completion_tokens_details": {
        "text_tokens": 117
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 2697
      },
      "total_tokens": 3088
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算中科环保与城发环境的对外供蒸汽量之和，并将其作为基数。然后计算该基数占总对外供蒸汽量的比例；请保留两位小数。",
    "python_solution": "def solution():\n    zhongke_huanbao = 112\n    chengfa_huanjing = 104\n    total_steam = 112 + 104 + 104 + 111 + 79 + 43 + 14 + 14 + 5 + 6 + 0 + 0\n    base = zhongke_huanbao + chengfa_huanjing\n    ratio = base / total_steam * 100\n    return round(ratio, 2)",
    "image_id": "industry_11_11_20_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2088",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 12,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 14
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 4.584967478670571,
    "images": [
      "./MultiFinance/images/2223-1.png",
      "./MultiFinance/images/2223-2.png",
      "./MultiFinance/images/2223-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2223-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-26",
    "output": [
      "dec_31_2017_total_assets = 389192\n    jun_30_2018_total_assets = 202531997\n    \n    # Calculate the increase amount\n    increase_amount = jun_30_2018_total_assets - dec_31_2017_total_assets\n    \n    # Calculate the increase percentage\n    increase_percentage = (increase_amount / dec_31_2017_total_assets) * 100\n    \n    # Return the increase percentage as a string with two decimal places\n    return f\"{increase_percentage:.2f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 140,
      "prompt_tokens": 1539,
      "completion_tokens_details": {
        "text_tokens": 140
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1262
      },
      "total_tokens": 1679
    },
    "model": "qwen-omni-turbo",
    "question": "What is the increase percentage of total assets from December 31, 2017 to June 30, 2018 in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n    total_assets_jun_2018 = 202531997  \n    total_assets_dec_2017 = 389192  \n\n    #Do math calculation to get the answer\n    asset_increase_percentage = ((total_assets_jun_2018 - total_assets_dec_2017) / total_assets_dec_2017) * 100\n    answer = round(asset_increase_percentage, 2)\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-123",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2029-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.401197381662156,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-27",
    "output": [
      "yearly_volatility_second_item = 37.46\n    karma_ratio_second_item = -0.04\n    difference = yearly_volatility_second_item - karma_ratio_second_item\n    \n    # Do math calculation to get the answer\n    result = difference * 100\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 88,
      "prompt_tokens": 1590,
      "completion_tokens_details": {
        "text_tokens": 88
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 1330
      },
      "total_tokens": 1678
    },
    "model": "qwen-omni-turbo",
    "question": "请计算第二项的年化波动与卡尔玛比率的差值，并将结果乘以100，保留一位小数。",
    "python_solution": "def solution():\n    annual_volatility = 37.46 / 100\n    calmar_ratio = -0.04\n    difference = annual_volatility - calmar_ratio\n    result = difference * 100\n    return round(result, 1)",
    "image_id": "market_09_09_37_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2814",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3045-1.png",
      "./MultiFinance/images/3045-2.png",
      "./MultiFinance/images/3045-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3045-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-28",
    "output": [
      "max_value = 34.11\n    min_value = -16.16\n    \n    # Do math calculation to get the answer\n    difference = max_value - min_value\n    \n    # return answer\n    return round(difference, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 61,
      "prompt_tokens": 2291,
      "completion_tokens_details": {
        "text_tokens": 61
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 2024
      },
      "total_tokens": 2352
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2014年至2024年情绪调整后反转多空组净值的最大值和最小值之间的差值，并将结果保留一位小数。",
    "python_solution": "def solution():\n    values = [4.63, 34.11, 24.32, -5.67, 11.55, 14.00, 12.29, -6.34, 29.96, -16.16, 20.18]\n    max_value = max(values)\n    min_value = min(values)\n    difference = max_value - min_value\n    return round(difference, 1)",
    "image_id": "strategy_04_04_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3101",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 12
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2793-1.png",
      "./MultiFinance/images/2793-2.png",
      "./MultiFinance/images/2793-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2793-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-29",
    "output": [
      "growth_rate_2025_01 = 5.90\n    growth_rate_2024_12 = -7.80\n    \n    # Do math calculation to get the answer\n    growth_rate_difference = growth_rate_2025_01 - growth_rate_2024_12\n    \n    # return answer\n    return round(growth_rate_difference, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 95,
      "prompt_tokens": 3893,
      "completion_tokens_details": {
        "text_tokens": 95
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 3627
      },
      "total_tokens": 3988
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算鲜菜在2025年1月与2024年12月的增长率；请保留两位小数。",
    "python_solution": "def solution():\n    value_2025_01 = 5.90\n    value_2024_12 = -13.00\n    growth_rate = (value_2025_01 - value_2024_12) / value_2024_12 * 100\n    return round(growth_rate, 2)",
    "image_id": "macro_09_09_16_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2621",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3025-1.png",
      "./MultiFinance/images/3025-2.png",
      "./MultiFinance/images/3025-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3025-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-30",
    "output": [
      "china_continent = 11 + 12\n    taiwan = 11 + 12\n    us = 38\n    \n    # Do math calculation to get the answer\n    total = china_continent + taiwan\n    difference = abs(us - total)\n    \n    # return answer\n    return round(difference, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 81,
      "prompt_tokens": 2902,
      "completion_tokens_details": {
        "text_tokens": 81
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 2637
      },
      "total_tokens": 2983
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算半导体设计环节中中国大陆和中国台湾的占比总和，并将其与美国的占比进行比较，结果保留一位小数。",
    "python_solution": "def solution():\n    china_mainland_design = 0.05 + 0.11\n    taiwan_design = 0.04\n    us_design = 0.65\n    total_china_taiwan = china_mainland_design + taiwan_design\n    comparison = (total_china_taiwan / us_design) * 100\n    return round(comparison, 1)",
    "image_id": "strategy_05_05_12_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2973",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2790-1.png",
      "./MultiFinance/images/2790-2.png",
      "./MultiFinance/images/2790-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2790-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-31",
    "output": [
      "gtv_2018 = 64970\n    gtv_2019 = 66600\n    gtv_2020 = 71000\n    gtv_2021 = 65000\n    gtv_2022 = 66000\n    gtv_2023 = 73000\n    \n    total_gtv = gtv_2018 + gtv_2019 + gtv_2020 + gtv_2021 + gtv_2022 + gtv_2023\n    \n    # Round to nearest thousand\n    rounded_total_gtv = round(total_gtv, -3)\n    \n    # return answer\n    return rounded_total_gtv\n```"
    ],
    "usage": {
      "completion_tokens": 185,
      "prompt_tokens": 1427,
      "completion_tokens_details": {
        "text_tokens": 185
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 1157
      },
      "total_tokens": 1612
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年至2023年贝壳存量房GTV的总和，并将结果四舍五入到最接近的千位。",
    "python_solution": "def solution():\n    gtv_2018 = 64000\n    gtv_2019 = 66000\n    gtv_2020 = 74000\n    gtv_2021 = 69000\n    gtv_2022E = 65000\n    gtv_2023E = 74000\n\n    total_gtv = gtv_2018 + gtv_2019 + gtv_2020 + gtv_2021 + gtv_2022E + gtv_2023E\n    return round(total_gtv / 1000) * 1000",
    "image_id": "company_06_06_15_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1467",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 4.143134726391533,
    "images": [
      "./MultiFinance/images/2308-1.png",
      "./MultiFinance/images/2308-2.png",
      "./MultiFinance/images/2308-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2308-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-32",
    "output": [
      "x = [0.50, 1.75, 2, 2.25, 2.25, 2.5, 2.75, 3.25, 3.75, 3.75]\n    f_x = [4.25, 4.25, 4.25, 4.25, 4.5, 4.75, 4.75, 4.75, 5, 5]\n    \n    # Calculate cumulative relative frequencies\n    cdf = []\n    total_frequency = sum(f_x)\n    running_sum = 0\n    for i in range(len(x)):\n        running_sum += f_x[i] / total_frequency\n        cdf.append(running_sum)\n    \n    # Find the index where waiting time is less than 6.1 minutes\n    index = next((i for i, val in enumerate(cdf) if val >= 6.1), None)\n    \n    # Return the cumulative relative frequency as a percentage\n    if index is not None:\n        return round(cdf[index] * 100, 0)\n    else:\n        return 100\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 274,
      "prompt_tokens": 1267,
      "completion_tokens_details": {
        "text_tokens": 274
      },
      "prompt_tokens_details": {
        "text_tokens": 319,
        "image_tokens": 948
      },
      "total_tokens": 1541
    },
    "model": "qwen-omni-turbo",
    "question": "Thuy Dau, Ngoc Bui, Sam Su, and Lan Voung conducted a survey as to how long customers at Lucky claimed to wait in the checkout line until their turn. Let X = time in line. Table 6.1 displays the ordered real data (in minutes): <image 1> Determine the cumulative relative frequency for waiting less than 6.1 minutes. Answer as a percentage to the nearest integer.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Market Research",
    "source_id": "validation_Marketing_23",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/116-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-33",
    "output": [
      "dec_2012_total_unrealized_loss = 1432\n    mar_2013_total_unrealized_loss = 1426\n    \n    # Calculate the percentage change\n    percentage_change = ((mar_2013_total_unrealized_loss - dec_2012_total_unrealized_loss) / dec_2012_total_unrealized_loss) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 2576,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 283,
        "image_tokens": 2293
      },
      "total_tokens": 2694
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in total unrealized losses from December 31, 2012, to March 31, 2013?",
    "python_solution": "def solution():\n     #Define variables name and value\n    unrealized_losses_Dec_2012 = -1946 \n    unrealized_losses_Mar_2013 = -2255    \n\n    #Do math calculation to get the answer\n    percentage_change = ((unrealized_losses_Mar_2013 - unrealized_losses_Dec_2012) / abs(unrealized_losses_Dec_2012)) * 100\n    return percentage_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-153",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2046-1.png",
      "./MultiFinance/images/2046-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.8066624897703196,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-34",
    "output": [
      "growth_rate_2007_to_2008 = -40.30 - 5.78\n    growth_rate_2008_to_2009 = 94.45 + 40.30\n    growth_rate_2009_to_2010 = 4.49 + 94.45\n    \n    total_growth = growth_rate_2007_to_2008 + growth_rate_2008_to_2009 + growth_rate_2009_to_2010\n    \n    # return answer\n    return int(total_growth)\n```"
    ],
    "usage": {
      "completion_tokens": 144,
      "prompt_tokens": 682,
      "completion_tokens_details": {
        "text_tokens": 144
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 422
      },
      "total_tokens": 826
    },
    "model": "qwen-omni-turbo",
    "question": "请计算南华工业品指数在2006年到2010年的总增长量，并将结果保留整数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    nhgyph_2006 = 22.32\n    nhgyph_2007 = 5.78\n    nhgyph_2008 = -40.30\n    nhgyph_2009 = 94.45\n    nhgyph_2010 = 4.49\n\n    # Multi-step logic\n    total_change = nhgyph_2006 + nhgyph_2007 + nhgyph_2008 + nhgyph_2009 + nhgyph_2010\n    return int(total_change)",
    "image_id": "strategy_03_03_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2971",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2334-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2334-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-35",
    "output": [
      "deposit_2023 = 2560\n    deposit_2022 = 275\n    total_assets_2022 = 14033\n    \n    # Calculate the difference between 2023 and 2022 regular deposits\n    diff_deposit = deposit_2023 - deposit_2022\n    \n    # Calculate the percentage of this difference relative to the 2022 total assets\n    percentage_diff = (diff_deposit / total_assets_2022) * 100\n    \n    # Return the calculated percentage with one decimal place\n    return round(percentage_diff, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 157,
      "prompt_tokens": 1164,
      "completion_tokens_details": {
        "text_tokens": 157
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 890
      },
      "total_tokens": 1321
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年定期存款的差额，并将该差额占2022年总资产的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    deposit_2022 = 2275\n    deposit_2023 = 2560\n    total_assets_2022 = 12149\n\n    diff = deposit_2023 - deposit_2022\n    ratio = diff / total_assets_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_27_27_15_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-404",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2922-1.png",
      "./MultiFinance/images/2922-2.png",
      "./MultiFinance/images/2922-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2922-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-36",
    "output": [
      "us_high_grade_2004 = 45465\n    us_high_grade_2003 = 40310\n    \n    # Do math calculation to get the answer\n    increase_amount = us_high_grade_2004 - us_high_grade_2003\n    percent_change = (increase_amount / us_high_grade_2003) * 100\n    \n    # return answer\n    return percent_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 1550,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 294,
        "image_tokens": 1256
      },
      "total_tokens": 1663
    },
    "model": "qwen-omni-turbo",
    "question": "What's the current increasing rate of U.S. high-grade?",
    "python_solution": "def solution():\n    # Define variables name and value\n    us_high_grade_2004 = 45465\n    us_high_grade_2003 = 40310\n\n    # Do math calculation to get the answer\n    increase_amount = us_high_grade_2004 - us_high_grade_2003\n    increasing_rate = (increase_amount / us_high_grade_2004) * 100\n\n    return increasing_rate\n\nsolution()",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-87",
    "img_type": "['Tables']",
    "context": "Revenues Our revenues for the years ended December 31, 2004 and 2003, and the resulting dollar and percentage change, are as follows:\n<image 1>",
    "images": [
      "./MultiFinance/images/1727-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.401197381662156,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-37",
    "output": [
      "stock_and_fund_2018 = 42.7 + 10.7\n    stock_and_fund_2019 = 40.4 + 12.2\n    other_2018 = 39.3\n    other_2019 = 42.7\n    total_2018 = stock_and_fund_2018 + other_2018\n    total_2019 = stock_and_fund_2019 + other_2019\n    growth_rate = ((total_2019 - total_2018) / total_2018) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 188,
      "prompt_tokens": 2892,
      "completion_tokens_details": {
        "text_tokens": 188
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 2626
      },
      "total_tokens": 3080
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2018年和2019年股票+基金与其他类别的总占比，并求出这两个年度之间的增长率；结果保留两位小数。",
    "python_solution": "def solution():\n    stock_fund_2018 = 10.7\n    other_2018 = 32.3\n    total_2018 = stock_fund_2018 + other_2018\n\n    stock_fund_2019 = 12.2\n    other_2019 = 29.5\n    total_2019 = stock_fund_2019 + other_2019\n\n    growth = (total_2019 - total_2018) / total_2018 * 100\n    return round(growth, 2)",
    "image_id": "company_27_27_11_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-454",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2389-1.png",
      "./MultiFinance/images/2389-2.png",
      "./MultiFinance/images/2389-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2389-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-38",
    "output": [
      "price_2023 = 41.80\n    eps_2023 = 0.64\n    price_2024 = 41.80 * (1 + 59.1%)\n    eps_2024 = 0.64 * (1 + 59.1%)\n    \n    ratio_2023 = price_2023 / eps_2023\n    ratio_2024 = price_2024 / eps_2024\n    \n    diff_ratio = abs(ratio_2023 - ratio_2024)\n    \n    # return answer\n    return round(diff_ratio, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 174,
      "prompt_tokens": 3656,
      "completion_tokens_details": {
        "text_tokens": 174
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 3384
      },
      "total_tokens": 3830
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算隆盛科技在2023年和2024年的股价与EPS的比率，并求这两个比率的差值；请保留一位小数。",
    "python_solution": "def solution():\n    price_2023 = 41.80\n    eps_2023 = 0.64\n    price_2024 = 41.80\n    eps_2024 = 1.03\n    ratio_2023 = price_2023 / eps_2023\n    ratio_2024 = price_2024 / eps_2024\n    difference = ratio_2024 - ratio_2023\n    return round(difference, 1)",
    "image_id": "company_16_16_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1878",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2881-1.png",
      "./MultiFinance/images/2881-2.png",
      "./MultiFinance/images/2881-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2881-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-39",
    "output": [
      "principal = 700000 * (1 - 0.3)\n    interest_rate = 3 / 12\n    term_years = 20\n    term_months = term_years * 12\n    \n    # Calculate monthly payment using the formula for mortgage payments\n    monthly_payment = (principal * interest_rate) / (1 - (1 + interest_rate) ** (-term_months))\n    \n    # Return the calculated monthly payment rounded to two decimal places\n    return round(monthly_payment, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 124,
      "prompt_tokens": 485,
      "completion_tokens_details": {
        "text_tokens": 124
      },
      "prompt_tokens_details": {
        "text_tokens": 323,
        "image_tokens": 162
      },
      "total_tokens": 609
    },
    "model": "qwen-omni-turbo",
    "question": "Ricky is considering purchasing an apartment costing $700,000. He will pay a 30% down payment and take out a mortgage for the remainder. Since he just got married and wants to save some money for future use, he will choose the plan with the lowest monthly payment. After visiting several banks, he received the following mortgage offers: <image 1> What is the monthly payment for Bank B? Answer to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_96",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/203-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-40",
    "output": [
      "total_future_minimum_annual_rental_payments = 4935 + 3144 + 3160 + 3200 + 2768 + 9934\n    \n    # Calculate the average\n    average_future_minimum_annual_rental_payment = total_future_minimum_annual_rental_payments / 6\n    \n    # Return the result\n    return average_future_minimum_annual_rental_payment\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 2071,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 827,
        "image_tokens": 1244
      },
      "total_tokens": 2176
    },
    "model": "qwen-omni-turbo",
    "question": "what is the average future minimum annual rental payment for the next five years? (in thousand)",
    "python_solution": "def solution():\n    # Define variables name and value\n    year_2009 = 3144\n    year_2010 = 3160\n    year_2011 = 3200\n    year_2012 = 2768\n    year_thereafter = 9934\n    \n    # Do math calculation to get the answer\n    total = year_2009 + year_2010 + year_2011 + year_2012 + year_thereafter\n    answer = total / 5\n    \n    return answer",
    "source": "FinQA",
    "source_id": "simpshort-testmini-26",
    "img_type": "['Tables']",
    "context": "alexion pharmaceuticals , inc . notes to consolidated financial statements 2014 ( continued ) for the years ended december 31 , 2007 and 2006 , five month period ended december 31 , 2005 , and year ended july 31 , 2005 ( amounts in thousands , except share and per share amounts ) aggregate future minimum annual rental payments for the next five years and thereafter under non-cancellable operating leases ( including facilities and equipment ) as of december 31 , 2007 are: . \n<image 1>\n 9 . commitments and contingencies legal proceedings on march 16 , 2007 , pdl biopharma , inc. , or pdl , filed a civil action against alexion in the u.s . district court for the district of delaware . pdl claims willful infringement by alexion of pdl patents due to sales of soliris . pdl seeks unspecified damages , but no less than a reasonable royalty , plus attorney 2019s fees . alexion has denied pdl's claims . in addition , we filed counterclaims seeking declarations of non-infringement and invalidity of certain u.s . patents held by pdl . alexion believes it has good and valid defenses to pdl's claims and intends to vigorously defend the case and pursue its counterclaims . on february 4 , 2008 , sb2 , inc . filed a civil action against alexion in the united states district court for the northern district of california . sb2 , inc . claims willfull infringement by alexion of sb2 , inc . patents due to sales of soliris . sb2 , inc . seeks unspecified monetary damages , equitable relief and attorneys fees . alexion believes it has good and valid defenses to sb2's claims and intends to vigorously defend the case and pursue its counterclaims . the results of such civil actions cannot be predicted with certainty due to their early stages . however , depending on the outcome of these legal matters , the operating results of the company could be materially impacted through adjustments to cost of sales ( see notes 2 , 6 and 15 for additional information related to royalties ) . product supply the large-scale product supply agreement dated december 18 , 2002 , or the lonza agreement , between lonza sales ag , or lonza , and us , relating to the manufacture of soliris , was amended in june 2007 . we amended our supply agreement to provide for additional purchase commitments of soliris of $ 30000 to $ 35000 through 2013 . such commitments may only be cancelled in limited circumstances. .",
    "images": [
      "./MultiFinance/images/1473-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 0
      }
    },
    "difficulty": 3.9120230054281464,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-41",
    "output": [
      "dec_31_2019_contract_assets = 1857\n    jun_30_2020_contract_assets = 1763\n    dec_31_2019_total_accounts_receivable = 6473\n    jun_30_2020_total_accounts_receivable = 5658\n    \n    dec_31_2019_percentage = (dec_31_2019_contract_assets / dec_31_2019_total_accounts_receivable) * 100\n    jun_30_2020_percentage = (jun_30_2020_contract_assets / jun_30_2020_total_accounts_receivable) * 100\n    \n    increase_in_percentage = jun_30_2020_percentage - dec_31_2019_percentage\n    \n    # return answer\n    return increase_in_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 226,
      "prompt_tokens": 1070,
      "completion_tokens_details": {
        "text_tokens": 226
      },
      "prompt_tokens_details": {
        "text_tokens": 447,
        "image_tokens": 623
      },
      "total_tokens": 1296
    },
    "model": "qwen-omni-turbo",
    "question": "What is the increase in the percentage of the total contract assets proportion to the total accounts receivable from December 31, 2019 to June 30, 2020 in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n    contract_assets_2020 = 1763\n    contract_assets_2019 = 1857\n    total_accounts_receivable_2020 = 5658\n    total_accounts_receivable_2019 = 6473\n\n    #Do math calculation to get the answer\n    contract_assets_percentage_2020 = (contract_assets_2020 / total_accounts_receivable_2020) * 100\n    contract_assets_percentage_2019 = (contract_assets_2019 / total_accounts_receivable_2019) * 100\n    diff_percentage = contract_assets_percentage_2020 - contract_assets_percentage_2019\n    return diff_percentage\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-131",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2034-1.png"
    ],
    "context": "The timing of revenue recognition, billings and cash collections results in billed accounts receivable, unbilled receivables (contract assets), and customer advances and deposits (contract liabilities) on the consolidated balance sheets. In our Air Pollution Control Technology segment, amounts are billed as work progresses in accordance with agreed-upon contractual terms. Generally, billing occurs subsequent to revenue recognition, resulting in contract assets. These assets are reported on the consolidated balance sheet on a contract-by-contract basis at the end of each reporting period. At June 30, 2020 and December 31, 2019, contract assets were approximately $1,763 and $1,857, respectively, and are included in accounts receivable on the consolidated balance sheets.\n<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 4.0943445622221,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-42",
    "output": [
      "protect_carrying_values_2002 = -41\n    protect_carrying_values_2003 = -57\n    \n    # Do math calculation to get the answer\n    percent_increase = ((protect_carrying_values_2003 - protect_carrying_values_2002) / abs(protect_carrying_values_2002)) * 100\n    \n    # return answer\n    return round(percent_increase)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 114,
      "prompt_tokens": 2285,
      "completion_tokens_details": {
        "text_tokens": 114
      },
      "prompt_tokens_details": {
        "text_tokens": 1065,
        "image_tokens": 1220
      },
      "total_tokens": 2399
    },
    "model": "qwen-omni-turbo",
    "question": "by what percentage did protect carrying values of excess inventories increase from 2002 to 2003? Answer to the nearest integer.",
    "answer": "39",
    "context": "rm&t segment marathon 2019s rm&t operations primarily use derivative commodity instruments to mitigate the price risk of certain crude oil and other feedstock purchases , to protect carrying values of excess inventories , to protect margins on fixed price sales of refined products and to lock-in the price spread between refined products and crude oil . derivative instruments are used to mitigate the price risk between the time foreign and domestic crude oil and other feedstock purchases for refinery supply are priced and when they are actually refined into salable petroleum products . in addition , natural gas options are in place to manage the price risk associated with approximately 60% ( 60 % ) of the anticipated natural gas purchases for refinery use through the first quarter of 2004 and 50% ( 50 % ) through the second quarter of 2004 . derivative commodity instruments are also used to protect the value of excess refined product , crude oil and lpg inventories . derivatives are used to lock in margins associated with future fixed price sales of refined products to non-retail customers . derivative commodity instruments are used to protect against decreases in the future crack spreads . within a limited framework , derivative instruments are also used to take advantage of opportunities identified in the commodity markets . derivative gains ( losses ) included in rm&t segment income for each of the last two years are summarized in the following table : strategy ( in millions ) 2003 2002 .\n\n<image 1>\n\ngenerally , derivative losses occur when market prices increase , which are offset by gains on the underlying physical commodity transaction . conversely , derivative gains occur when market prices decrease , which are offset by losses on the underlying physical commodity transaction . oerb segment marathon has used derivative instruments to convert the fixed price of a long-term gas sales contract to market prices . the underlying physical contract is for a specified annual quantity of gas and matures in 2008 . similarly , marathon will use derivative instruments to convert shorter term ( typically less than a year ) fixed price contracts to market prices in its ongoing purchase for resale activity ; and to hedge purchased gas injected into storage for subsequent resale . derivative gains ( losses ) included in oerb segment income were $ 19 million , $ ( 8 ) million and $ ( 29 ) million for 2003 , 2002 and 2001 . oerb 2019s trading activity gains ( losses ) of $ ( 7 ) million , $ 4 million and $ ( 1 ) million in 2003 , 2002 and 2001 are included in the aforementioned amounts . other commodity risk marathon is subject to basis risk , caused by factors that affect the relationship between commodity futures prices reflected in derivative commodity instruments and the cash market price of the underlying commodity . natural gas transaction prices are frequently based on industry reference prices that may vary from prices experienced in local markets . for example , new york mercantile exchange ( 201cnymex 201d ) contracts for natural gas are priced at louisiana 2019s henry hub , while the underlying quantities of natural gas may be produced and sold in the western united states at prices that do not move in strict correlation with nymex prices . to the extent that commodity price changes in one region are not reflected in other regions , derivative commodity instruments may no longer provide the expected hedge , resulting in increased exposure to basis risk . these regional price differences could yield favorable or unfavorable results . otc transactions are being used to manage exposure to a portion of basis risk . marathon is subject to liquidity risk , caused by timing delays in liquidating contract positions due to a potential inability to identify a counterparty willing to accept an offsetting position . due to the large number of active participants , liquidity risk exposure is relatively low for exchange-traded transactions. .\n",
    "program": "increase = -57 - -41\ndecrease = -41 - -11\npercent_increase = increase / -41\npercent_decrease = decrease / -11\nanswer = percent_increase * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 39,
        "total_numbers": 41
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 8,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 0
      }
    },
    "difficulty": 4.007333185232471,
    "source_id": "test-740",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1392-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-43",
    "output": [
      "DeepSeek_R1_Distill_Qwen_7B_MATH_500_pass1 = 92.8\n    DeepSeek_R1_Distill_Qwen_14B_MATH_500_pass1 = 93.9\n    GPT_4o_0513_MATH_500_pass1 = 74.6\n    \n    # Calculate average of DeepSeek-R1-Distill-Qwen-7B and DeepSeek-R1-Distill-Qwen-14B in MATH-500 pass@1\n    average_MATH_500_pass1 = (DeepSeek_R1_Distill_Qwen_7B_MATH_500_pass1 + DeepSeek_R1_Distill_Qwen_14B_MATH_500_pass1) / 2\n    \n    # Calculate difference between average and GPT-4o-0513's MATH-500 pass@1\n    difference = average_MATH_500_pass1 - GPT_4o_0513_MATH_500_pass1\n    \n    # Return the result with two decimal places\n    return round(difference, 2)\n\n# Call the function and print the result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 281,
      "prompt_tokens": 1619,
      "completion_tokens_details": {
        "text_tokens": 281
      },
      "prompt_tokens_details": {
        "text_tokens": 321,
        "image_tokens": 1298
      },
      "total_tokens": 1900
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算DeepSeek-R1-Distill-Qwen-7B和DeepSeek-R1-Distill-Qwen-14B在MATH-500 pass@1指标上的平均值，并将该平均值与GPT-4o-0513的MATH-500 pass@1指标进行比较，计算出它们之间的差值；请保留两位小数。",
    "python_solution": "def solution():\n    qwen_7b_value = 92.8\n    qwen_14b_value = 93.9\n    gpt_value = 74.6\n\n    average = (qwen_7b_value + qwen_14b_value) / 2\n    diff = average - gpt_value\n    return round(diff, 2)",
    "image_id": "industry_01_01_05_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2128",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3003-1.png",
      "./MultiFinance/images/3003-2.png",
      "./MultiFinance/images/3003-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3003-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-44",
    "output": [
      "beta_ford = 1.26\n    beta_harley = 0.96\n    std_dev_ford = 18.9\n    std_dev_harley = 23.1\n    weight_ford = 0.5\n    weight_harley = 0.5\n    \n    # Calculate the portfolio beta\n    portfolio_beta = (weight_ford * beta_ford) + (weight_harley * beta_harley)\n    \n    # Calculate the portfolio standard deviation using the formula for weighted average\n    portfolio_std_dev = ((weight_ford ** 2 * std_dev_ford ** 2) + \n                         (weight_harley ** 2 * std_dev_harley ** 2) +\n                         (2 * weight_ford * weight_harley * std_dev_ford * std_dev_harley)) ** 0.5\n    \n    # Convert the result to percentage\n    portfolio_std_dev_percentage = portfolio_std_dev * 100\n    \n    # return answer\n    return portfolio_std_dev_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 238,
      "prompt_tokens": 427,
      "completion_tokens_details": {
        "text_tokens": 238
      },
      "prompt_tokens_details": {
        "text_tokens": 310,
        "image_tokens": 117
      },
      "total_tokens": 665
    },
    "model": "qwen-omni-turbo",
    "question": "Here are some historical data on the risk characteristics of Ford and Harley Davidson: <image 1>. What is the standard deviation if the portfolio is split evenly between Ford and Harley Davidson and is financed at 50% margin, that is, the investor puts up only 50% of the total amount and borrows the balance from the broker? Answer as a percentage to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_250",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/172-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-45",
    "output": [
      "year_2024_profit = 50.85\n    year_2026_profit = 63.52\n    \n    # Do math calculation to get the answer\n    cagr = ((year_2026_profit / year_2024_profit) ** (1/2)) - 1\n    answer = round(cagr * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 100,
      "prompt_tokens": 2505,
      "completion_tokens_details": {
        "text_tokens": 100
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 2239
      },
      "total_tokens": 2605
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2026年归母净利润相对于2024年的复合年增长率（CAGR），并将结果保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = 50.85\n    net_profit_2026 = 63.52\n    years = 2\n    cagr = ((net_profit_2026 / net_profit_2024) ** (1/years)) - 1\n    return round(cagr * 100, 2)",
    "image_id": "company_04_04_22_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-738",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2450-1.png",
      "./MultiFinance/images/2450-2.png",
      "./MultiFinance/images/2450-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2450-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-46",
    "output": [
      "direct_share = 49 / 100\n    indirect_share = (2 / 100) * (36.29 / 100)\n    \n    total_share = direct_share + indirect_share\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(total_share, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 89,
      "prompt_tokens": 2373,
      "completion_tokens_details": {
        "text_tokens": 89
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2114
      },
      "total_tokens": 2462
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算中国宝武直接和间接持有的山东钢铁的股份比例总和；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    zhongguo_baowu_direct_percentage = 49\n    shansteel_group_percentage = 36.29\n    baogang_stock_percentage = 0.06\n\n    # Multi-step logic\n    total_percentage = (zhongguo_baowu_direct_percentage / 100) + ((shansteel_group_percentage / 100) * (baogang_stock_percentage / 100))\n    return round(total_percentage, 2)",
    "image_id": "company_05_05_05_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1548",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 10
      }
    },
    "difficulty": 4.276666119016055,
    "images": [
      "./MultiFinance/images/2278-1.png",
      "./MultiFinance/images/2278-2.png",
      "./MultiFinance/images/2278-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2278-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-47",
    "output": [
      "year1_margin = 48.51\n    year2_margin = 45.44\n    year3_margin = 45.52\n    year4_margin = 45.55\n    \n    # Calculate average margin\n    total_margin = (year1_margin + year2_margin + year3_margin + year4_margin) / 4\n    answer = round(total_margin, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 101,
      "prompt_tokens": 2139,
      "completion_tokens_details": {
        "text_tokens": 101
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1880
      },
      "total_tokens": 2240
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中合计的毛利润率数据，计算从第一年到第四年的平均毛利润率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    margin_year1 = 48.51\n    margin_year2 = 45.44\n    margin_year3 = 45.52\n    margin_year4 = 45.55\n\n    average_margin = (margin_year1 + margin_year2 + margin_year3 + margin_year4) / 4\n    return round(average_margin, 2)",
    "image_id": "company_03_03_18_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-14",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2693-1.png",
      "./MultiFinance/images/2693-2.png",
      "./MultiFinance/images/2693-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2693-3.png",
      "./MultiFinance/images/2693-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-48",
    "output": [
      "input_api_price_cache_missed = 4 + 22\n    output_api_price = 16\n    total_input_api_price_cache_missed = sum(input_api_price_cache_missed)\n    \n    difference = abs(total_input_api_price_cache_missed - output_api_price)\n    \n    # return answer\n    return difference\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 84,
      "prompt_tokens": 3863,
      "completion_tokens_details": {
        "text_tokens": 84
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 3589
      },
      "total_tokens": 3947
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算输入API价格（缓存未命中）的总和，并将其与输出API价格的总和进行比较，求出两者的差值；请保留整数。",
    "python_solution": "def solution():\n    input_sum = 4 + 22 + 110 + 110\n    output_sum = 16 + 88 + 438 + 438\n    difference = output_sum - input_sum\n    return int(difference)",
    "image_id": "industry_08_08_07_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2224",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2686-1.png",
      "./MultiFinance/images/2686-2.png",
      "./MultiFinance/images/2686-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2686-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-49",
    "output": [
      "year_2018_financial_expense_rate = 7.0%\n    year_2019_financial_expense_rate = 5.7%\n    research_and_development_expense_rate_2018 = 4.4%\n    research_and_development_expense_rate_2019 = 2.4%\n    \n    # Calculate the difference between 2019 and 2018 financial expense rates\n    financial_expense_difference = (year_2019_financial_expense_rate - year_2018_financial_expense_rate)\n    \n    # Calculate the average research and development expense rate for 2018 and 2019\n    average_research_and_development_expense_rate = ((research_and_development_expense_rate_2018 + research_and_development_expense_rate_2019) / 2)\n    \n    # Divide the financial expense difference by the average research and development expense rate\n    result = financial_expense_difference / average_research_and_development_expense_rate\n    \n    # Return the result rounded to two decimal places\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 261,
      "prompt_tokens": 2212,
      "completion_tokens_details": {
        "text_tokens": 261
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 1940
      },
      "total_tokens": 2473
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2019年与2018年的财务费用率之差，并将结果除以研发费用率的平均值；请保留两位小数。",
    "python_solution": "def solution():\n    financial_expense_rate_2018 = 2.4\n    financial_expense_rate_2019 = 2.3\n    r_and_d_expense_rate_avg = (7.0 + 7.9) / 2\n\n    diff = financial_expense_rate_2019 - financial_expense_rate_2018\n    result = diff / r_and_d_expense_rate_avg\n    return round(result, 2)",
    "image_id": "company_16_16_08_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1885",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2751-1.png",
      "./MultiFinance/images/2751-2.png",
      "./MultiFinance/images/2751-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2751-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-50",
    "output": [
      "one_year_lowest_price = 15.66\n    closing_price = 34.35\n    \n    # Calculate the difference between closing price and one-year lowest price\n    price_difference = closing_price - one_year_lowest_price\n    \n    # Calculate the growth rate in percentage\n    growth_rate = (price_difference / one_year_lowest_price) * 100\n    \n    # Round the result to one decimal place\n    growth_rate = round(growth_rate, 1)\n    \n    # Return the calculated growth rate\n    return growth_rate\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 131,
      "prompt_tokens": 863,
      "completion_tokens_details": {
        "text_tokens": 131
      },
      "prompt_tokens_details": {
        "text_tokens": 288,
        "image_tokens": 575
      },
      "total_tokens": 994
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中的数据，计算该股票从一年最低价到收盘价的增长率。首先，计算收盘价与一年最低价的差值，然后将这个差值除以一年最低价，最后将结果转换为百分比。请保留一位小数。",
    "python_solution": "def calculate_growth_rate():\n    closing_price = 34.35\n    lowest_price_in_year = 15.66\n\n    difference = closing_price - lowest_price_in_year\n    growth_rate = (difference / lowest_price_in_year) * 100\n    return round(growth_rate, 1)",
    "image_id": "company_11_11_00_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1333",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2879-1.png",
      "./MultiFinance/images/2879-2.png",
      "./MultiFinance/images/2879-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2879-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-51",
    "output": [
      "rate_2018 = 7.4\n    rate_2023 = 11.0\n    \n    # Do math calculation to get the answer\n    growth_rate = (rate_2023 - rate_2018) / rate_2018 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 90,
      "prompt_tokens": 1368,
      "completion_tokens_details": {
        "text_tokens": 90
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1110
      },
      "total_tokens": 1458
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2018年到2023年间，电商渠道占比的增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    e_commerce_2018 = 7.4\n    e_commerce_2023 = 11.0\n\n    # Multi-step logic\n    growth = (e_commerce_2023 - e_commerce_2018) / e_commerce_2018 * 100\n    return round(growth, 2)",
    "image_id": "company_23_23_13_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-965",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2719-1.png",
      "./MultiFinance/images/2719-2.png",
      "./MultiFinance/images/2719-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2719-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-52",
    "output": [
      "year_1 = 0.647\n    year_2 = 0.328\n    year_3 = 0.122\n    year_4 = 0.405\n    year_5 = 0.550\n    year_6 = 0.683\n    \n    # Do math calculation to get the answer\n    total_years = 6 - 1\n    growth_rate = ((year_6 / year_1) ** (1/total_years)) - 1\n    answer = round(growth_rate * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 156,
      "prompt_tokens": 2032,
      "completion_tokens_details": {
        "text_tokens": 156
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1774
      },
      "total_tokens": 2188
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2026年期间，每股收益的复合年增长率，并保留两位小数。",
    "python_solution": "def solution():\n    eps_2021 = 0.647\n    eps_2026 = 0.683\n    years = 5\n    cagr = ((eps_2026 / eps_2021) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_02_02_25_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-106",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2591-1.png",
      "./MultiFinance/images/2591-2.png",
      "./MultiFinance/images/2591-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2591-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-53",
    "output": [
      "q2_2021 = -8.45\n    q3_2021 = -7.41\n    q1_2021 = 9.63\n    \n    # Do math calculation to get the answer\n    diff_q2_q3 = q2_2021 - q3_2021\n    result = (diff_q2_q3 / q1_2021) * 100\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 129,
      "prompt_tokens": 1419,
      "completion_tokens_details": {
        "text_tokens": 129
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 1149
      },
      "total_tokens": 1548
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年第二季度与第三季度的差值，并将该差值除以第一季度的数值，然后将结果转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_q1_2021 = 19.68\n    value_q2_2021 = 21.49\n    value_q3_2021 = 34.39\n\n    diff = value_q2_2021 - value_q3_2021\n    ratio = diff / value_q1_2021\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_27_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2798",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3042-1.png",
      "./MultiFinance/images/3042-2.png",
      "./MultiFinance/images/3042-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3042-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-54",
    "output": [
      "year_2023_operating_profit = 894\n    year_2022_operating_profit = 748\n    year_2023_operating_profit_difference = year_2023_operating_profit - year_2022_operating_profit\n    percentage_change = (year_2023_operating_profit_difference / year_2022_operating_profit) * 100\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(percentage_change, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 137,
      "prompt_tokens": 2662,
      "completion_tokens_details": {
        "text_tokens": 137
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 2387
      },
      "total_tokens": 2799
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2022年的营业利润差值，并将该差值占2022年营业收入的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    operating_profit_2022 = 748\n    operating_profit_2023 = 894\n    revenue_2022 = 3885\n\n    # Multi-step logic\n    diff = operating_profit_2023 - operating_profit_2022\n    ratio = diff / revenue_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_30_30_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-993",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2542-1.png",
      "./MultiFinance/images/2542-2.png",
      "./MultiFinance/images/2542-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2542-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-55",
    "output": [
      "other = 40\n    easy_puili = 11\n    guangdong_hongda = 8\n    boli_lianhe = 7\n    yahua = 5\n    kunming_mibao = 5\n    shengli_mibao = 4\n    longhua = 4\n    guotai = 4\n    kailong = 4\n\n    # Do math calculation to get the answer\n    total_market_share = other + easy_puili + guangdong_hongda + boli_lianhe + yahua + kunming_mibao + shengli_mibao + longhua + guotai + kailong\n    top_three_percentage = (easy_puili + guangdong_hongda + boli_lianhe) / total_market_share * 100\n\n    # return answer\n    return round(top_three_percentage, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 204,
      "prompt_tokens": 1657,
      "completion_tokens_details": {
        "text_tokens": 204
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 1388
      },
      "total_tokens": 1861
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中前三大公司的市场份额总和，并将其与剩余市场的份额进行比较，求出前三大公司市场份额占总市场份额的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    company1 = 0.10\n    company2 = 0.10\n    company3 = 0.06\n    total_market = 1.00\n\n    # Multi-step logic\n    top_three_sum = company1 + company2 + company3\n    remaining_market = total_market - top_three_sum\n    percentage = (top_three_sum / total_market) * 100\n    return round(percentage, 1)",
    "image_id": "company_32_32_10_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1089",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 4.276666119016055,
    "images": [
      "./MultiFinance/images/2276-1.png",
      "./MultiFinance/images/2276-2.png",
      "./MultiFinance/images/2276-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2276-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-56",
    "output": [
      "ppi_2023_01 = -1.4\n    ppi_2024_01 = 0.8\n    \n    # Do math calculation to get the answer\n    average_ppi = (ppi_2023_01 + ppi_2024_01) / 2\n    \n    # return answer\n    return round(average_ppi, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 98,
      "prompt_tokens": 4025,
      "completion_tokens_details": {
        "text_tokens": 98
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 3756
      },
      "total_tokens": 4123
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中2023年1月和2024年1月的PPI值，计算这两个月之间的平均值；结果请保留一位小数。",
    "python_solution": "def solution():\n    ppi_jan_2023 = -1.4\n    ppi_jan_2024 = -2.8\n    average_value = (ppi_jan_2023 + ppi_jan_2024) / 2\n    return round(average_value, 1)",
    "image_id": "macro_09_09_20_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2642",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3029-1.png",
      "./MultiFinance/images/3029-2.png",
      "./MultiFinance/images/3029-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3029-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-57",
    "output": [
      "dec_31_2021_total = 20151\n    mar_31_2022_total = 19759\n    \n    # Do math calculation to get the answer\n    change_in_total = dec_31_2021_total - mar_31_2022_total\n    \n    # return answer\n    return change_in_total\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 100,
      "prompt_tokens": 915,
      "completion_tokens_details": {
        "text_tokens": 100
      },
      "prompt_tokens_details": {
        "text_tokens": 292,
        "image_tokens": 623
      },
      "total_tokens": 1015
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in total fair value for \"Fixed maturity securities\" and \"Limited partnerships and LLCs\" from December 31, 2021 to March 31, 2022 (in millions)?",
    "python_solution": "def solution():\n    #Define variables name and value\n    fixed_maturity_securities_dec_2021 = 16472\n    fixed_maturity_securities_mar_2022 = 15871\n    limited_partnerships_and_llcs_dec_2021 = 3679\n    limited_partnerships_and_llcs_mar_2022 = 3888\n\n    #Do math calculation to get the answer\n    change_in_fixed_maturity_securities = fixed_maturity_securities_mar_2022 - fixed_maturity_securities_dec_2021\n    change_in_limited_partnerships_and_llcs = limited_partnerships_and_llcs_mar_2022 - limited_partnerships_and_llcs_dec_2021\n    total_change = change_in_fixed_maturity_securities + change_in_limited_partnerships_and_llcs\n    return total_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-268",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2122-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 0
      }
    },
    "difficulty": 3.401197381662156,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-58",
    "output": [
      "first_2021 = -19.61\n    first_2020 = 14.5\n    difference = (first_2021 - first_2020) * 100 / first_2020\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(difference, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 86,
      "prompt_tokens": 1311,
      "completion_tokens_details": {
        "text_tokens": 86
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 1032
      },
      "total_tokens": 1397
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年与2020年的第一项指标的差值，并将该差值除以2020年的第一项指标，得到的结果表示为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_2020 = -2.40\n    value_2021 = 5.51\n    diff = value_2021 - value_2020\n    ratio = diff / value_2020 * 100\n    return round(ratio, 1)",
    "image_id": "market_09_09_24_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2792",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3039-1.png",
      "./MultiFinance/images/3039-2.png",
      "./MultiFinance/images/3039-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3039-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-59",
    "output": [
      "dec_2016_total_liabilities = 41573\n    dec_2016_total_assets = 323848\n    mar_2016_total_liabilities = 38146\n    mar_2016_total_assets = 313452\n    \n    dec_ratio = dec_2016_total_liabilities / dec_2016_total_assets\n    mar_ratio = mar_2016_total_liabilities / mar_2016_total_assets\n    \n    percentage_change = ((mar_ratio - dec_ratio) / dec_ratio) * 100\n    \n    # return answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 163,
      "prompt_tokens": 1518,
      "completion_tokens_details": {
        "text_tokens": 163
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1244
      },
      "total_tokens": 1681
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the ratio of Total Liabilities to Total Assets from December 2016 to March 2016?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    total_assets_december_2016 = 323848  # in thousands\n    total_liabilities_december_2016 = 41573  # in thousands\n\n    total_assets_march_2016 = 313452  # in thousands\n    total_liabilities_march_2016 = 38146  # in thousands\n\n    #Do math calculation to get the answer\n    ratio_december_2016 = (total_liabilities_december_2016 / total_assets_december_2016) * 100\n    ratio_march_2016 = (total_liabilities_march_2016 / total_assets_march_2016) * 100\n    change_in_ratio = round(ratio_december_2016 - ratio_march_2016, 2)\n    return change_in_ratio\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-82",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1994-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 6
      }
    },
    "difficulty": 4.174387269895637,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-60",
    "output": [
      "revenues_2018_third_quarter = 1768500\n    gross_profit_2018_third_quarter = 798339\n    revenues_2017_third_quarter = 5704693\n    gross_profit_2017_third_quarter = 2119816\n    \n    # Calculate the gross profit to revenue ratios\n    gross_profit_to_revenue_ratio_2018_third_quarter = gross_profit_2018_third_quarter / revenues_2018_third_quarter\n    gross_profit_to_revenue_ratio_2017_third_quarter = gross_profit_2017_third_quarter / revenues_2017_third_quarter\n    \n    # Calculate the percentage change in the gross profit to revenue ratio\n    percentage_change = ((gross_profit_to_revenue_ratio_2018_third_quarter - gross_profit_to_revenue_ratio_2017_third_quarter) / gross_profit_to_revenue_ratio_2017_third_quarter) * 100\n    \n    # Return the answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 261,
      "prompt_tokens": 1507,
      "completion_tokens_details": {
        "text_tokens": 261
      },
      "prompt_tokens_details": {
        "text_tokens": 289,
        "image_tokens": 1218
      },
      "total_tokens": 1768
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the gross profit to revenue ratio for American Education Center, Inc. from the three months ended June 30, 2017 to the same period in 2018?",
    "python_solution": "def solution():\n     #Define variables name and value\n    revenue_2018 = 1768500 \n    gross_profit_2018 = 798339\n    revenue_2017 = 5704693\n    gross_profit_2017 = 2119816\n\n    #Calculate Gross profit margin for both years\n    gross_profit_margin_2018 = gross_profit_2018 / revenue_2018\n    gross_profit_margin_2017 = gross_profit_2017 / revenue_2017\n\n    #Calculate Percentage change in gross profit margin\n    percentage_change = ((gross_profit_margin_2018 - gross_profit_margin_2017) / gross_profit_margin_2017) * 100\n    answer = round(percentage_change, 2)\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-58",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1975-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 6
      }
    },
    "difficulty": 4.31748811353631,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-61",
    "output": [
      "year_1 = 13.4\n    year_2 = 17.1\n    year_3 = 20.9\n    year_4 = 23.3\n    \n    total_growth = (year_4 - year_1) + (year_3 - year_2) + (year_2 - year_1)\n    \n    average_growth_rate = total_growth / 3\n    \n    answer = round(average_growth_rate * 100, 2)\n    \n    return answer\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 117,
      "prompt_tokens": 2008,
      "completion_tokens_details": {
        "text_tokens": 117
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 1752
      },
      "total_tokens": 2125
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年到2027年乘用车市场规模的年均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2024 = 13.4\n    value_2025 = 17.1\n    value_2026 = 20.9\n    value_2027 = 23.3\n\n    # Multi-step logic\n    growth_2024_2025 = (value_2025 - value_2024) / value_2024 * 100\n    growth_2025_2026 = (value_2026 - value_2025) / value_2025 * 100\n    growth_2026_2027 = (value_2027 - value_2026) / value_2026 * 100\n\n    avg_growth = (growth_2024_2025 + growth_2025_2026 + growth_2026_2027) / 3\n    return round(avg_growth, 2)",
    "image_id": "company_16_16_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1879",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 4,
          "*": 3,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 13
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 10
      }
    },
    "difficulty": 5.337538079701318,
    "images": [
      "./MultiFinance/images/2161-1.png",
      "./MultiFinance/images/2161-2.png",
      "./MultiFinance/images/2161-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2161-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-62",
    "output": [
      "asset_liability_rate_2023A = 50.3\n    asset_liability_rate_2024E = 51.0\n    asset_liability_rate_2025E = 50.3\n    asset_liability_rate_2026E = 48.8\n    \n    # Do math calculation to get the answer\n    average_asset_liability_rate = (asset_liability_rate_2023A + asset_liability_rate_2024E + \n                                    asset_liability_rate_2025E + asset_liability_rate_2026E) / 4\n    \n    # return answer\n    return round(average_asset_liability_rate, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 172,
      "prompt_tokens": 2705,
      "completion_tokens_details": {
        "text_tokens": 172
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2446
      },
      "total_tokens": 2877
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2026年期间，资产负责率的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    debt_ratio_2023 = 50.3\n    debt_ratio_2024 = 51.0\n    debt_ratio_2025 = 50.3\n    debt_ratio_2026 = 48.8\n\n    average_debt_ratio = (debt_ratio_2023 + debt_ratio_2024 + debt_ratio_2025 + debt_ratio_2026) / 4\n    return round(average_debt_ratio, 1)",
    "image_id": "company_35_35_18_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-666",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2711-1.png",
      "./MultiFinance/images/2711-2.png",
      "./MultiFinance/images/2711-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2711-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-63",
    "output": [
      "import numpy as np\n    \n    values = [-3, -11, 3, -18, 18, 20, -6, 9, 2, -16]\n    \n    # Calculate the sample standard deviation\n    std_deviation = np.std(values)\n    \n    # Return the result rounded to three decimal places\n    return round(std_deviation, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 98,
      "prompt_tokens": 1498,
      "completion_tokens_details": {
        "text_tokens": 98
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 1242
      },
      "total_tokens": 1596
    },
    "model": "qwen-omni-turbo",
    "question": "What is the sample standard deviation from the following 10 measurements taken from a roughly normal group? Answer to three decimal places.",
    "python_solution": "def solution():\n    import math\n    measurements = [-3, -11, 3, -18, 18, 20, -6, 9, 2, -16]\n    mean = sum(measurements) / len(measurements)\n    variance = sum((xi - mean) ** 2 for xi in measurements) / (len(measurements) - 1)\n    return math.sqrt(variance)",
    "topic": "Quantitative Analysis & Valuation",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 7,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 14
      }
    },
    "difficulty": 4.787491742782047,
    "source_id": "validation-115",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/336-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-64",
    "output": [
      "flowAssets2022A = 200\n    flowAssets2023A = 342\n    \n    # Do math calculation to get the answer\n    difference = flowAssets2023A - flowAssets2022A\n    percentage = (difference / flowAssets2022A) * 100\n    \n    # return answer\n    return round(percentage, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 2817,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 2543
      },
      "total_tokens": 2924
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年流动资产的差值，并将该差值占2022年流动资产的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2022 = 200\n    current_assets_2023 = 342\n\n    # Multi-step logic\n    diff = current_assets_2023 - current_assets_2022\n    ratio = diff / current_assets_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_22_22_44_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-261",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2600-1.png",
      "./MultiFinance/images/2600-2.png",
      "./MultiFinance/images/2600-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2600-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-65",
    "output": [
      "total_operating_revenue_2011 = 4092.2\n    total_operating_revenue_2010 = 3487.7\n    \n    # Calculate the increase from 2010 to 2011\n    increase = total_operating_revenue_2011 - total_operating_revenue_2010\n    \n    # Calculate the growth rate\n    growth_rate = increase / total_operating_revenue_2010\n    \n    # Calculate the projected total operating revenue for 2012\n    total_operating_revenue_2012 = total_operating_revenue_2011 * (1 + growth_rate)\n    \n    # Return the result\n    return total_operating_revenue_2012\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 185,
      "prompt_tokens": 1553,
      "completion_tokens_details": {
        "text_tokens": 185
      },
      "prompt_tokens_details": {
        "text_tokens": 304,
        "image_tokens": 1249
      },
      "total_tokens": 1738
    },
    "model": "qwen-omni-turbo",
    "question": "If Total operating revenues develops with the same increasing rate in 2011, what will it reach in 2012? (in million)",
    "python_solution": "def solution():\n    # Define variables\n    total_operating_revenues_2011 = 4092.2\n    total_operating_revenues_2010 = 3487.7\n\n    # Calculate the rate of increase\n    rate_of_increase = (total_operating_revenues_2011 - total_operating_revenues_2010) / total_operating_revenues_2010\n\n    # Estimate the total operating revenues for 2012\n    answer = total_operating_revenues_2011 * (1 + rate_of_increase)\n\n    return answer",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-2",
    "img_type": "['Tables']",
    "context": "Operating Revenues and Net Revenues The main categories of revenues, and the dollar and percentage change between the periods, are as follows:\n<image 1>",
    "images": [
      "./MultiFinance/images/1649-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-66",
    "output": [
      "market_share_1 = 12.93\n    market_share_2 = 8.71\n    market_share_3 = 8.18\n    market_share_4 = 4.84\n    market_share_5 = 3.82\n    \n    total_market_share = market_share_1 + market_share_2 + market_share_3 + market_share_4 + market_share_5\n    \n    # return answer\n    return round(total_market_share, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 2469,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 251,
        "image_tokens": 2218
      },
      "total_tokens": 2587
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中排名前五的药品市场份额总和，并将结果保留两位小数。",
    "python_solution": "def solution():\n    market_share_1 = 1.93\n    market_share_2 = 1.78\n    market_share_3 = 1.74\n    market_share_4 = 1.29\n    market_share_5 = 1.23\n\n    total_market_share = market_share_1 + market_share_2 + market_share_3 + market_share_4 + market_share_5\n    return round(total_market_share, 2)",
    "image_id": "company_30_30_10_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-989",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2721-1.png",
      "./MultiFinance/images/2721-2.png",
      "./MultiFinance/images/2721-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2721-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-67",
    "output": [
      "year_21A_cost = 1920.23\n    year_22A_cost = 2163.57\n    year_23A_cost = 2358.61\n    year_24E_cost = 2165.15\n    year_25E_cost = 2212.33\n    year_26E_cost = 2279.35\n    \n    # Calculate the total cost for each year\n    total_cost_21A = year_21A_cost\n    total_cost_22A = year_21A_cost + year_22A_cost\n    total_cost_23A = year_21A_cost + year_22A_cost + year_23A_cost\n    total_cost_24E = year_21A_cost + year_22A_cost + year_23A_cost + year_24E_cost\n    total_cost_25E = year_21A_cost + year_22A_cost + year_23A_cost + year_24E_cost + year_25E_cost\n    total_cost_26E = year_21A_cost + year_22A_cost + year_23A_cost + year_24E_cost + year_25E_cost + year_26E_cost\n    \n    # Calculate the average cost per year\n    avg_cost_21A = total_cost_21A / 1\n    avg_cost_22A = total_cost_22A / 2\n    avg_cost_23A = total_cost_23A / 3\n    avg_cost_24E = (total_cost_24E - year_21A_cost) / 4\n    avg_cost_25E = (total_cost_25E - year_21A_cost) / 5\n    avg_cost_26E = (total_cost_26E - year_21A_cost) / 6\n    \n    # Calculate the year-over-year growth rate for each year\n    yoy_22A = ((year_22A_cost - year_21A_cost) / year_21A_cost) * 100\n    yoy_23A = ((year_23A_cost - year_22A_cost) / year_22A_cost) * 100\n    yoy_24E = ((year_24E_cost - year_23A_cost) / year_23A_cost) * 100\n    yoy_25E = ((year_25E_cost - year_24E_cost) / year_24E_cost) * 100\n    yoy_26E = ((year_26E_cost - year_25E_cost) / year_25E_cost) * 100\n    \n    # Calculate the average year-over-year growth rate over the period from 21A to 26E\n    avg_yoy = (yoy_22A + yoy_23A + yoy_24E + yoy_25E + yoy_26E) / 5\n    \n    # Return the result rounded to two decimal places\n    return round(avg_yoy, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 753,
      "prompt_tokens": 1711,
      "completion_tokens_details": {
        "text_tokens": 753
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1452
      },
      "total_tokens": 2464
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算21A至26E期间主营业务成本的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    cost_21A = 1920.23\n    cost_26E = 2279.35\n    years = 5\n\n    # Multi-step logic\n    total_growth = (cost_26E / cost_21A) ** (1/years) - 1\n    annual_growth_rate = total_growth * 100\n    return round(annual_growth_rate, 2)",
    "image_id": "company_35_35_16_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-654",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.189654742026425,
    "images": [
      "./MultiFinance/images/2300-1.png",
      "./MultiFinance/images/2300-2.png",
      "./MultiFinance/images/2300-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2300-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-68",
    "output": [
      "max_share = 40\n    min_share = 3\n    difference = max_share - min_share\n    \n    # Do math calculation to get the answer\n    percentage_difference = (difference / max_share) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 71,
      "prompt_tokens": 1643,
      "completion_tokens_details": {
        "text_tokens": 71
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1385
      },
      "total_tokens": 1714
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中最大份额与最小份额的差值，并将结果表示为百分比形式；请保留一位小数。",
    "python_solution": "def solution():\n    max_share = 40\n    min_share = 3\n    diff = max_share - min_share\n    percentage = diff / (max_share + min_share) * 100\n    return round(percentage, 1)",
    "image_id": "company_16_16_13_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1867",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2838-1.png",
      "./MultiFinance/images/2838-2.png",
      "./MultiFinance/images/2838-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2838-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-69",
    "output": [
      "total_revenue = 113571\n    net_loss = -38803\n    dividends_declared_per_share = 0.50\n    \n    # Calculate Revenue per Share (RPS)\n    rps = (total_revenue + net_loss) / dividends_declared_per_share\n    \n    # Return the calculated RPS\n    return rps\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 93,
      "prompt_tokens": 1640,
      "completion_tokens_details": {
        "text_tokens": 93
      },
      "prompt_tokens_details": {
        "text_tokens": 406,
        "image_tokens": 1234
      },
      "total_tokens": 1733
    },
    "model": "qwen-omni-turbo",
    "question": "What is the Revenue per Share (RPS) in dollars?",
    "python_solution": "def solution():\n    #Define variables name and value\n\n    total_revenue = 113571000 # in dollars, the report usually use thousands as unit\n    class_a_shares = 25261542\n    class_b_shares = 1589020\n    class_c_shares = 6329485\n    operating_units = 24176327\n\n    #Do math calculation to get the answer\n    total_shares_units = class_a_shares + class_b_shares + class_c_shares + operating_units \n    rps = total_revenue/total_shares_units\n    return rps\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-289",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2139-1.png"
    ],
    "context": "At March 4, 2016, there were 25,261,542 Class A common shares issued and outstanding which were held by approximately 154 shareholders of record. The number of shareholders of record does not reflect persons or entities that held their shares in nominee or “street” name.\nIn addition, at March 4, 2016, there were 1,589,020 Class B non-economic common shares issued and outstanding, 6,329,485 Class C non-voting common shares issued and outstanding and 24,176,327 outstanding Operating Partnership units held by limited partners other than the Company.\n<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 0
      }
    },
    "difficulty": 3.6888794541139367,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-70",
    "output": [
      "growth_rate_1 = (1 - (-22%)) * 100\n    growth_rate_2 = (1 - (-19%)) * 100\n    \n    # Do math calculation to get the answer\n    difference = growth_rate_1 - growth_rate_2\n    \n    # return answer\n    return difference\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 88,
      "prompt_tokens": 3987,
      "completion_tokens_details": {
        "text_tokens": 88
      },
      "prompt_tokens_details": {
        "text_tokens": 290,
        "image_tokens": 3697
      },
      "total_tokens": 4075
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算1993/4-1995/6期间日经225指数的增长率，并将其与1995/7-1997/12期间的增长率进行比较；请提供结果作为百分比。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_1993_1995 = -22\n    value_1995_1997 = 5\n\n    # Multi-step logic\n    growth_rate_1993_1995 = (value_1993_1995 + 100) / 100\n    growth_rate_1995_1997 = (value_1995_1997 + 100) / 100\n\n    final_result = (growth_rate_1995_1997 - growth_rate_1993_1995) * 100\n    return round(final_result, 2)",
    "image_id": "strategy_08_08_28_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3017",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 8
      }
    },
    "difficulty": 4.564348191467836,
    "images": [
      "./MultiFinance/images/2229-1.png",
      "./MultiFinance/images/2229-2.png",
      "./MultiFinance/images/2229-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2229-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-71",
    "output": [
      "pension_service_cost_2015 = 2\n    retiree_medical_and_other_postretirement_benefits_service_cost_2015 = 3\n    pension_interest_cost_2015 = 737\n    retiree_medical_and_other_postretirement_benefits_interest_cost_2015 = 654\n    pension_expected_return_on_assets_2015 = -851\n    retiree_medical_and_other_postretirement_benefits_expected_return_on_assets_2015 = -786\n    pension_curtailments_2015 = 0\n    retiree_medical_and_other_postretirement_benefits_curtailments_2015 = 2\n    pension_settlements_2015 = 1\n    retiree_medical_and_other_postretirement_benefits_settlements_2015 = -1\n    pension_prior_service_cost_benefit_2015 = 28\n    retiree_medical_and_other_postretirement_benefits_prior_service_cost_benefit_2015 = 28\n    pension_unrecognized_net_loss_gain_2015 = 112\n    retiree_medical_and_other_postretirement_benefits_unrecognized_net_loss_gain_2015 = 90\n    pension_net_periodic_benefit_cost_income_for_defined_benefit_plans_2015 = 29\n    retiree_medical_and_other_postretirement_benefits_net_periodic_benefit_cost_income_for_defined_benefit_plans_2015 = 56\n    pension_defined_contribution_plans_2015 = 662\n    retiree_medical_and_other_postretirement_benefits_defined_contribution_plans_2015 = 328\n\n    # Do math calculation to get the answer\n    defined_benefit_plans_total_2015 = pension_service_cost_2015 + retiree_medical_and_other_postretirement_benefits_service_cost_2015 + pension_interest_cost_2015 + retiree_medical_and_other_postretirement_benefits_interest_cost_2015 + pension_expected_return_on_assets_2015 + retiree_medical_and_other_postretirement_benefits_expected_return_on_assets_2015 + pension_curtailments_2015 + retiree_medical_and_other_postretirement_benefits_curtailments_2015 + pension_settlements_2015 + retiree_medical_and_other_postretirement_benefits_settlements_2015 + pension_prior_service_cost_benefit_2015 + retiree_medical_and_other_postretirement_benefits_prior_service_cost_benefit_2015 + pension_unrecognized_net_loss_gain_2015 + retiree_medical_and_other_postretirement_benefits_unrecognized_net_loss_gain_2015 + pension_net_periodic_benefit_cost_income_for_defined_benefit_plans_2015 + retiree_medical_and_other_postretirement_benefits_net_periodic_benefit_cost_income_for_defined_benefit_plans_2015 + pension_defined_contribution_plans_2015 + retiree_medical_and_other_postretirement_benefits_defined_contribution_plans_2015\n\n    # return answer\n    return defined_benefit_plans_total_2015\n```"
    ],
    "usage": {
      "completion_tokens": 757,
      "prompt_tokens": 1550,
      "completion_tokens_details": {
        "text_tokens": 757
      },
      "prompt_tokens_details": {
        "text_tokens": 308,
        "image_tokens": 1242
      },
      "total_tokens": 2307
    },
    "model": "qwen-omni-turbo",
    "question": "What's the total amount of Defined benefit plans excluding those negative ones in 2015?",
    "python_solution": "def solution():\n    #Define variables name and value\n    service_cost = 2\n    interest_cost = 737\n    curtailments = 1\n    settlements = 3\n    amortization = 50\n\n    #Do math calculation to get the answer\n    answer = service_cost + interest_cost + curtailments + settlements + amortization\n    \n    return answer",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-72",
    "img_type": "['Tables']",
    "context": "The following tables provide the components of net periodic benefit cost (income) for the years ended December 31, 2015, 2014 and 2013 (in millions):\n<image 1>",
    "images": [
      "./MultiFinance/images/1714-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.58351893845611,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-72",
    "output": [
      "year_7_difference = -4.89 - (-1.11)\n    year_9_value = -5.74\n    \n    # Do math calculation to get the answer\n    result = (year_7_difference / year_9_value) * 100\n    \n    # return answer\n    return round(result, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 78,
      "prompt_tokens": 1705,
      "completion_tokens_details": {
        "text_tokens": 78
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1428
      },
      "total_tokens": 1783
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年第七项指标与第八项指标的差值，并将该差值除以第九项指标，然后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_2023_seventh = 17.59\n    value_2023_eighth = -10.04\n    value_2023_ninth = 17.46\n\n    diff = value_2023_seventh - value_2023_eighth\n    ratio = diff / value_2023_ninth\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_23_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2848",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2785-1.png",
      "./MultiFinance/images/2785-2.png",
      "./MultiFinance/images/2785-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2785-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-73",
    "output": [
      "alll_reserve_2012 = 587\n    tdr_portfolio_2012 = 2859\n    \n    # Calculate percentage\n    percentage_alll_to_tdr_2012 = (alll_reserve_2012 / tdr_portfolio_2012) * 100\n    \n    # Return the answer rounded to three decimal places\n    return round(percentage_alll_to_tdr_2012, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 2412,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 1170,
        "image_tokens": 1242
      },
      "total_tokens": 2530
    },
    "model": "qwen-omni-turbo",
    "question": "the specific reserves in the alll as of december 31 , 2012 were what percent of the tdr portfolio? Answer to three decimal places.",
    "answer": "20.532",
    "context": "troubled debt restructurings ( tdrs ) a tdr is a loan whose terms have been restructured in a manner that grants a concession to a borrower experiencing financial difficulties . tdrs typically result from our loss mitigation activities and include rate reductions , principal forgiveness , postponement/reduction of scheduled amortization , extensions , and bankruptcy discharges where no formal reaffirmation was provided by the borrower and therefore a concession has been granted based upon discharge from personal liability , which are intended to minimize economic loss and to avoid foreclosure or repossession of collateral . in those situations where principal is forgiven , the amount of such principal forgiveness is immediately charged some tdrs may not ultimately result in the full collection of principal and interest , as restructured , and result in potential incremental losses . these potential incremental losses have been factored into our overall alll estimate . the level of any subsequent defaults will likely be affected by future economic conditions . once a loan becomes a tdr , it will continue to be reported as a tdr until it is ultimately repaid in full , the collateral is foreclosed upon , or it is fully charged off . we held specific reserves in the alll of $ 587 million and $ 580 million at december 31 , 2012 and december 31 , 2011 , respectively , for the total tdr portfolio . table 71 : summary of troubled debt restructurings in millions dec . 31 dec . 31 .\n\n<image 1>\n\n( a ) pursuant to regulatory guidance issued in the third quarter of 2012 , additional troubled debt restructurings related to changes in treatment of certain loans of $ 366 million in 2012 , net of charge-offs , resulting from bankruptcy where no formal reaffirmation was provided by the borrower and therefore a concession has been granted based upon discharge from personal liability were added to the consumer lending population . the additional tdr population increased nonperforming loans by $ 288 million . charge-offs have been taken where the fair value less costs to sell the collateral was less than the recorded investment of the loan and were $ 128.1 million . of these nonperforming loans , approximately 78% ( 78 % ) were current on their payments at december 31 , 2012 . ( b ) accruing loans have demonstrated a period of at least six months of performance under the restructured terms and are excluded from nonperforming loans . ( c ) includes credit cards and certain small business and consumer credit agreements whose terms have been restructured and are tdrs . however , since our policy is to exempt these loans from being placed on nonaccrual status as permitted by regulatory guidance as generally these loans are directly charged off in the period that they become 180 days past due , these loans are excluded from nonperforming loans . the following table quantifies the number of loans that were classified as tdrs as well as the change in the recorded investments as a result of the tdr classification during the years ended december 31 , 2012 and 2011 . additionally , the table provides information about the types of tdr concessions . the principal forgiveness tdr category includes principal forgiveness and accrued interest forgiveness . these types of tdrs result in a write down of the recorded investment and a charge-off if such action has not already taken place . the rate reduction tdr category includes reduced interest rate and interest deferral . the tdrs within this category would result in reductions to future interest income . the other tdr category primarily includes postponement/reduction of scheduled amortization , as well as contractual extensions . in some cases , there have been multiple concessions granted on one loan . when there have been multiple concessions granted , the principal forgiveness tdr was prioritized for purposes of determining the inclusion in the table below . for example , if there is principal forgiveness in conjunction with lower interest rate and postponement of amortization , the type of concession will be reported as principal forgiveness . second in priority would be rate reduction . for example , if there is an interest rate reduction in conjunction with postponement of amortization , the type of concession will be reported as a rate reduction . the pnc financial services group , inc . 2013 form 10-k 155 .\n",
    "program": "specific_reserves_2012 = 587\nspecific_reserves_2011 = 580\ntotal_specific_reserves = specific_reserves_2012 + specific_reserves_2011\ntotal_tdr_portfolio = 2859\nnonperforming_loans = 1589\naccruing_loans = 1037\ncredit_card_loans = 233\ntotal_tdrs = total_tdr_portfolio\nnonperforming_loans_percent = nonperforming_loans / total_tdrs\naccruing_loans_percent = accruing_loans / total_tdrs\ncredit_card_loans_percent = credit_card_loans / total_tdrs\nanswer = specific_reserves_2012 / total_tdr_portfolio * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 50,
        "total_numbers": 52
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 0
      }
    },
    "difficulty": 4.276666119016055,
    "source_id": "test-590",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1242-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-74",
    "output": [
      "office_type_2019 = 30.4\n    office_type_2022 = 48.0\n    \n    # Do math calculation to get the answer\n    growth_rate = (office_type_2022 - office_type_2019) / office_type_2019 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 2721,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2459
      },
      "total_tokens": 2817
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2019年到2022年办公区型占比的增长率；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    office_2019 = 20.0\n    office_2020 = 20.0\n    office_2021 = 20.0\n    office_2022 = 36.0\n\n    # Multi-step logic\n    growth_rate = (office_2022 - office_2019) / office_2019 * 100\n    return round(growth_rate, 2)\n",
    "image_id": "industry_16_16_21_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2268",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2554-1.png",
      "./MultiFinance/images/2554-2.png",
      "./MultiFinance/images/2554-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2554-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-75",
    "output": [
      "growth_rate_2021_to_2022 = (28 - 23) / 23 * 100\n    growth_rate_2022_to_2023 = (39 - 28) / 28 * 100\n    \n    average_growth_rate = (growth_rate_2021_to_2022 + growth_rate_2022_to_2023) / 2\n    \n    # return answer\n    return round(average_growth_rate, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 122,
      "prompt_tokens": 1604,
      "completion_tokens_details": {
        "text_tokens": 122
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1343
      },
      "total_tokens": 1726
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年到2023年的品种数的平均增长率；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2021 = 23\n    value_2022 = 28\n    value_2023 = 39\n\n    # Multi-step logic\n    growth_2021_2022 = (value_2022 - value_2021) / value_2021 * 100\n    growth_2022_2023 = (value_2023 - value_2022) / value_2022 * 100\n    average_growth = (growth_2021_2022 + growth_2022_2023) / 2\n    return round(average_growth, 1)",
    "image_id": "company_12_12_20_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1619",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 8
      }
    },
    "difficulty": 4.762173934797756,
    "images": [
      "./MultiFinance/images/2194-1.png",
      "./MultiFinance/images/2194-2.png",
      "./MultiFinance/images/2194-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2194-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-76",
    "output": [
      "net_profit_2023 = 14997\n    net_profit_2027 = 19320\n    \n    # Calculate compound annual growth rate (CAGR)\n    years = 2027 - 2023 + 1\n    cagr = ((net_profit_2027 / net_profit_2023) ** (1 / years)) - 1\n    \n    # Return the result as a percentage rounded to two decimal places\n    return round(cagr * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 134,
      "prompt_tokens": 2220,
      "completion_tokens_details": {
        "text_tokens": 134
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 1965
      },
      "total_tokens": 2354
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2027年净利润的复合年增长率，并保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2023 = 14997\n    net_profit_2027 = 19320\n    years = 4\n    cagr = ((net_profit_2027 / net_profit_2023) ** (1/years) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_19_19_01_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1039",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2466-1.png",
      "./MultiFinance/images/2466-2.png",
      "./MultiFinance/images/2466-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2466-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-77",
    "output": [
      "adjusted_operating_income_2019 = 237235\n    adjusted_operating_income_2018 = 142105\n    \n    # Do math calculation to get the answer\n    percentage_change = ((adjusted_operating_income_2019 - adjusted_operating_income_2018) / adjusted_operating_income_2018) * 100\n    \n    # return answer\n    return round(percentage_change, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 119,
      "prompt_tokens": 1527,
      "completion_tokens_details": {
        "text_tokens": 119
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1262
      },
      "total_tokens": 1646
    },
    "model": "qwen-omni-turbo",
    "question": "What was the percentage change in the Adjusted operating income (non-GAAP) between 2018 and 2019? Answer to two decimal places.",
    "answer": "66.94",
    "program": "adjusted_operating_income_2019 = df[\"Non-GAAP adjustments: -- Adjusted operating income (non-GAAP) (1)\"][\"2019\"]\nadjusted_operating_income_2018 = df[\"Non-GAAP adjustments: -- Adjusted operating income (non-GAAP) (1)\"][\"2018\"]\nanswer = ( adjusted_operating_income_2019 - adjusted_operating_income_2018 ) / adjusted_operating_income_2018 * 100.0",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 58,
        "total_numbers": 60
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 5,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 10
      }
    },
    "difficulty": 4.025351690735149,
    "source_id": "test-235",
    "img_type": "['Tables']",
    "source": "CodeTAT-QA",
    "images": [
      "./MultiFinance/images/599-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-78",
    "output": [
      "net_earnings_per_diluted_share_2022 = 8.25\n    net_earnings_per_diluted_share_2021 = 14.93\n    \n    # Calculate the percentage change\n    percentage_change = ((net_earnings_per_diluted_share_2022 - net_earnings_per_diluted_share_2021) / net_earnings_per_diluted_share_2021) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 134,
      "prompt_tokens": 1523,
      "completion_tokens_details": {
        "text_tokens": 134
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 1244
      },
      "total_tokens": 1657
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the Net Earnings Per Diluted Share from Three Months Ended September 2021 to Three Months Ended September 2022?",
    "python_solution": "def solution():\n    #Define variables name and value\n\n    earnings_per_diluted_share_2022 = 8.25 #dollars\n\n    earnings_per_diluted_share_2021 = 14.93 #dollars \n\n    #Do math calculation to get the answer\n    percentage_change = ((earnings_per_diluted_share_2022 - earnings_per_diluted_share_2021) / earnings_per_diluted_share_2021) * 100\n    return percentage_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-121",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2027-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-79",
    "output": [
      "total_units = 24000\n    units_2011 = 8000\n    units_2012 = 8000\n    units_2013 = 8000\n    \n    # Calculate the portion of total restricted units that will vest in 2011\n    portion_2011 = (units_2011 / total_units) * 100\n    \n    # Return the answer as a percentage rounded to three decimal places\n    return round(portion_2011, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 139,
      "prompt_tokens": 2254,
      "completion_tokens_details": {
        "text_tokens": 139
      },
      "prompt_tokens_details": {
        "text_tokens": 998,
        "image_tokens": 1256
      },
      "total_tokens": 2393
    },
    "model": "qwen-omni-turbo",
    "question": "what portion of the total restricted units will vest in 2011? Answer as percentage to three decimal places.",
    "answer": "33.333",
    "context": "the total shareholder return of entergy corporation measured over the nine-year period between mr . leonard's appointment as ceo of entergy corporation in january 1999 and the january 24 , 2008 grant date exceeded all of the industry peer group companies as well as all other u.s . utility companies . for additional information regarding stock options awarded in 2008 to each of the named executive officers , see the 2008 grants of plan-based awards table . under the equity ownership plans , all options must have an exercise price equal to the closing fair market value of entergy corporation common stock on the date of grant . in 2008 , entergy corporation implemented guidelines that require an executive officer to achieve and maintain a level of entergy corporation stock ownership equal to a multiple of his or her salary . until an executive officer achieves the multiple ownership position of entergy corporation common stock , the executive officer ( including a named executive officer ) upon exercising any stock option granted on or after january 1 , 2003 , must retain at least 75% ( 75 % ) of the after-tax net profit from such stock option exercise in the form of entergy corporation common stock . entergy corporation has not adopted a formal policy regarding the granting of options at times when it is in possession of material non-public information . however , entergy corporation generally grants options to named executive officers only during the month of january in connection with its annual executive compensation decisions . on occasion , it may grant options to newly hired employees or existing employees for retention or other limited purposes . restricted units restricted units granted under the equity ownership plans represent phantom shares of entergy corporation common stock ( i.e. , non-stock interests that have an economic value equivalent to a share of entergy corporation common stock ) . entergy corporation occasionally grants restricted units for retention purposes , to offset forfeited compensation from a previous employer or other limited purposes . if all conditions of the grant are satisfied , restrictions on the restricted units lift at the end of the restricted period , and a cash equivalent value of the restricted units is paid . the settlement price is equal to the number of restricted units multiplied by the closing price of entergy corporation common stock on the date restrictions lift . restricted units are not entitled to dividends or voting rights . restricted units are generally time-based awards for which restrictions lift , subject to continued employment , over a two- to five-year period . in january 2008 , the committee granted mr . denault , entergy corporation's chief financial officer , 24000 restricted units . the committee determined that , in light of the numerous strategic challenges facing entergy ( including the challenges associated with the completion of entergy's pending separation of its non- utility nuclear business ) it was essential that entergy retain mr . denault's continued services as an executive officer of entergy . the committee also took into account the competitive market for chief financial officers and mr . denault's broader role in the leadership of entergy . in determining the size of the grant , the committee consulted its independent consultant to confirm that the grant was consistent with market practices . the committee chose restricted units over other retention instruments because it believes that restricted stock units better align the interest of the officer with entergy corporation's shareholders in terms of growing shareholder value and increasing shareholder returns on equity . the committee also noted , based on the advice of its independent consultant , that such grants are a commonly used market technique for retention purposes . the restricted units will vest on the following dates: .\n\n<image 1>\n\n.\n",
    "program": "units_2011 = 8000\nunits_2012 = 8000\nunits_2013 = 8000\ntotal_units = units_2011 + units_2012 + units_2013\npercent_2011 = units_2011 / total_units\npercent_2012 = units_2012 / total_units\npercent_2013 = units_2013 / total_units\nanswer = percent_2011 * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 1,
        "context_numbers": 24,
        "total_numbers": 25
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 0
      }
    },
    "difficulty": 3.8712010109078907,
    "source_id": "test-418",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1070-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-80",
    "output": [
      "total_amount_2019 = 30000 + 250000\n    total_amount_2020 = 40000 + 30000\n    \n    growth_rate = ((total_amount_2020 - total_amount_2019) / total_amount_2019) * 100\n    \n    # return answer\n    return round(growth_rate, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 100,
      "prompt_tokens": 2866,
      "completion_tokens_details": {
        "text_tokens": 100
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 2582
      },
      "total_tokens": 2966
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2020年8月增资天津爱旭的总金额，并将其与2019年11月增资浙江爱旭的金额进行比较，求出增长百分比；结果保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2019 = 30000\n    value_2020_tianjin = 40000 + 30000\n    \n    # Multi-step logic\n    diff = value_2020_tianjin - value_2019\n    ratio = diff / value_2019\n    percentage = ratio * 100\n    \n    return round(percentage, 1)",
    "image_id": "company_21_21_05_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-814",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2452-1.png",
      "./MultiFinance/images/2452-2.png",
      "./MultiFinance/images/2452-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2452-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-81",
    "output": [
      "net_income_2018 = 263509\n    net_income_2017 = 188901\n    provision_for_credit_losses_2018 = 24431\n    provision_for_credit_losses_2017 = 21996\n    \n    # Calculate net income after provision for credit losses\n    net_income_after_provision_2018 = net_income_2018 - provision_for_credit_losses_2018\n    net_income_after_provision_2017 = net_income_2017 - provision_for_credit_losses_2017\n    \n    # Calculate growth rate\n    growth_rate = ((net_income_after_provision_2018 - net_income_after_provision_2017) / net_income_after_provision_2017) * 100\n    \n    # Return the answer as a percentage\n    return round(growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 225,
      "prompt_tokens": 1545,
      "completion_tokens_details": {
        "text_tokens": 225
      },
      "prompt_tokens_details": {
        "text_tokens": 283,
        "image_tokens": 1262
      },
      "total_tokens": 1770
    },
    "model": "qwen-omni-turbo",
    "question": "What is the growth rate of the net income after provision for credit losses from September 30, 2017 to September 30, 2018 in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n    net_income_2018 = 263509\n    provision_for_credit_losses_2018 = 24431\n    net_income_2017 = 188901\n    provision_for_credit_losses_2017 = 21996\n\n    #Calculate the net income after provision for credit loses for both years\n    net_income_provision_2018 = net_income_2018 - provision_for_credit_losses_2018\n    net_income_provision_2017 = net_income_2017 - provision_for_credit_losses_2017\n\n    #Do math calculation to get the answer\n    growth_rate = ((net_income_provision_2018 - net_income_provision_2017)/net_income_provision_2017) * 100\n    answer = growth_rate\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-72",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1987-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 4
      }
    },
    "difficulty": 4.2484952420493585,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-82",
    "output": [
      "prepaid_expenses_2018 = 90981\n    prepaid_expenses_2019 = prepaid_expenses_2018 * 1.20\n    \n    # Calculate the increase in prepaid expenses\n    increase_in_prepaid_expenses = prepaid_expenses_2019 - prepaid_expenses_2018\n    \n    # Return the answer\n    return increase_in_prepaid_expenses\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 1846,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 623,
        "image_tokens": 1223
      },
      "total_tokens": 1952
    },
    "model": "qwen-omni-turbo",
    "question": "What will be the increase in prepaid expenses from 2018 to 2019 if the amount of prepaid expense in 2019 increased by 20%? (in thousand)",
    "python_solution": "def solution():\n    # Define variables name and value\n    prepaid_expenses_2019 = 137927\n    prepaid_expenses_2018 = 90981\n    increase_rate = 0.2\n    \n    # Do math calculation to get the answer\n    increased_prepaid_expenses_2019 = prepaid_expenses_2019 * (1 + increase_rate)\n    answer = increased_prepaid_expenses_2019 - prepaid_expenses_2018\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-185",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Prepaid expenses and other current assets Prepaid expenses and other current assets consisted of the following at December 31, 2019 and 2018 (in thousands): (1) In November 2014 and February 2016, we entered into a term loan agreement and a convertible loan agreement, respectively, with Clean Energy Collective, LLC (“CEC”). Our term loan bears interest at 16% per annum, and our convertible loan bears interest at 10% per annum. In November 2018, we amended the terms of the loan agreements to (i) extend their maturity to June 2020, (ii) waive the conversion features on our convertible loan, and (iii) increase the frequency of interest payments, subject to certain conditions. In January 2019, CEC finalized certain restructuring arrangements, which resulted in a dilution of our ownership interest in CEC and the loss of our representation on the company’s board of managers. As a result of such restructuring, CEC no longer qualified to be accounted for under the equity method. As of December 31, 2019, the aggregate balance outstanding on the loans was $23.9 million and was presented within “Prepaid expenses and other current assets.” As of December 31, 2018, the aggregate balance outstanding on the loans was $22.8 million and was presented within “Notes receivable, affiliate.” (2) See Note 9. “Derivative Financial Instruments” to our consolidated financial statements for discussion of our derivative instruments.",
    "images": [
      "./MultiFinance/images/1924-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-83",
    "output": [
      "year_2018 = 2.19\n    year_2022 = 4.18\n    \n    # Do math calculation to get the answer\n    total_growth_rate = (year_2022 - year_2018) * 100 / year_2018\n    \n    # return answer\n    return round(total_growth_rate, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 102,
      "prompt_tokens": 3044,
      "completion_tokens_details": {
        "text_tokens": 102
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 2776
      },
      "total_tokens": 3146
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年至2022年期间中国大宗供应链CR4市场占有率的总增长百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    cr4_2018 = 2.19\n    cr4_2019 = 2.73\n    cr4_2020 = 3.59\n    cr4_2021 = 4.06\n    cr4_2022 = 4.18\n\n    # Multi-step logic\n    total_cr4_growth = cr4_2022 - cr4_2018\n    percentage_growth = (total_cr4_growth / cr4_2018) * 100\n    return round(percentage_growth, 1)",
    "image_id": "company_14_14_12_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-70",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 3.8712010109078907,
    "images": [
      "./MultiFinance/images/2411-1.png",
      "./MultiFinance/images/2411-2.png",
      "./MultiFinance/images/2411-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2411-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-84",
    "output": [
      "product_sales = [7.44, 3.71, 2.51, 2.23, 2.21]\n    \n    # Calculate total sales of top five products\n    total_sales = sum(product_sales)\n    \n    # Return result rounded to two decimal places\n    return round(total_sales, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 3039,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 250,
        "image_tokens": 2789
      },
      "total_tokens": 3126
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中排名前五的产品销售额总和，并将结果保留两位小数。",
    "python_solution": "def solution():\n    value1 = 7.44\n    value2 = 3.71\n    value3 = 2.51\n    value4 = 2.23\n    value5 = 2.21\n\n    total_sales = value1 + value2 + value3 + value4 + value5\n    return round(total_sales, 2)",
    "image_id": "company_30_30_13_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1005",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2723-1.png",
      "./MultiFinance/images/2723-2.png",
      "./MultiFinance/images/2723-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2723-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-85",
    "output": [
      "sales_expense_rate_2019 = 45\n    management_expense_rate_2019 = 8\n    sales_expense_rate_2023 = 28\n    management_expense_rate_2023 = 28\n    \n    # Do math calculation to get the answer\n    growth_rate = (management_expense_rate_2023 - management_expense_rate_2019) / management_expense_rate_2019 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 131,
      "prompt_tokens": 2149,
      "completion_tokens_details": {
        "text_tokens": 131
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1888
      },
      "total_tokens": 2280
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2019年到2023年管理费用率的增长率；请保留两位小数。",
    "python_solution": "def solution():\n    management_expense_rate_2019 = 8\n    management_expense_rate_2020 = 8\n    management_expense_rate_2021 = 8\n    management_expense_rate_2022 = 8\n    management_expense_rate_2023 = 8\n\n    growth_rate = ((management_expense_rate_2023 - management_expense_rate_2019) / management_expense_rate_2019) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_12_12_07_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1633",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.401197381662156,
    "images": [
      "./MultiFinance/images/2795-1.png",
      "./MultiFinance/images/2795-2.png",
      "./MultiFinance/images/2795-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2795-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-86",
    "output": [
      "eps_2025 = (2.78 + 3.56) / 2\n    eps_2026 = (2.78 + 3.56) / 2\n    pe_2025 = 17\n    average_eps = (eps_2025 + eps_2026) / 2\n    answer = int(average_eps * pe_2025)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 110,
      "prompt_tokens": 1836,
      "completion_tokens_details": {
        "text_tokens": 110
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 1565
      },
      "total_tokens": 1946
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中某公司2025年和2026年的EPS平均值，然后用该平均值乘以2025年的PE，结果保留整数。",
    "python_solution": "def solution():\n    eps_2025 = 2.78\n    eps_2026 = 3.56\n    pe_2025 = 17\n\n    avg_eps = (eps_2025 + eps_2026) / 2\n    result = avg_eps * pe_2025\n    return int(result)",
    "image_id": "company_02_02_24_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-115",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2906-1.png",
      "./MultiFinance/images/2906-2.png",
      "./MultiFinance/images/2906-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2906-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-87",
    "output": [
      "june_shares = 801_659\n    july_shares = 400_000\n    june_price = 183.18\n    july_price = 194.65\n    \n    # Calculate total price paid for both months\n    total_june_price = june_shares * june_price\n    total_july_price = july_shares * july_price\n    \n    # Calculate total shares bought\n    total_shares_bought = june_shares + july_shares\n    \n    # Calculate average price paid per share\n    average_price_per_share = (total_june_price + total_july_price) / total_shares_bought\n    \n    # Return the answer\n    return average_price_per_share\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 180,
      "prompt_tokens": 2019,
      "completion_tokens_details": {
        "text_tokens": 180
      },
      "prompt_tokens_details": {
        "text_tokens": 769,
        "image_tokens": 1250
      },
      "total_tokens": 2199
    },
    "model": "qwen-omni-turbo",
    "question": "What is Accenture's average share price paid per share for June and July of 2019 if the number of shares bought in July is 400,000 instead?",
    "python_solution": "def solution():\n    # Define variables name and value\n    shares_june = 801659\n    price_june = 183.18\n    shares_july = 400000\n    price_july = 194.65\n\n    # Do math calculation to get the answer\n    answer = (shares_june * price_june + shares_july * price_july) / (shares_june + shares_july)\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-2",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Purchases of Accenture plc Class A Ordinary Shares The following table provides information relating to our purchases of Accenture plc Class A ordinary shares during the fourth quarter of fiscal 2019. For year-to-date information on all of our share purchases, redemptions and exchanges and further discussion of our share purchase activity, see “Management’s Discussion and Analysis of Financial Condition and Results of Operations—Liquidity and Capital Resources—Share Purchases and Redemptions.” (1) Average price paid per share reflects the total cash outlay for the period, divided by the number of shares acquired, including those acquired by purchase or redemption for cash and any acquired by means of employee forfeiture. (2) Since August 2001, the Board of Directors of Accenture plc has authorized and periodically confirmed a publicly\nannounced open-market share purchase program for acquiring Accenture plc Class A ordinary shares. During\nthe fourth quarter of fiscal 2019, we purchased 2,048,307 Accenture plc Class A ordinary shares under this\nprogram for an aggregate price of $389 million. The open-market purchase program does not have an expiration\ndate (3) As of August 31, 2019, our aggregate available authorization for share purchases and redemptions was $3,674 million, which management has the discretion to use for either our publicly announced open-market share purchase program or our other share purchase programs. Since August 2001 and as of August 31, 2019, the Board of Directors of Accenture plc has authorized an aggregate of $35.1 billion for share purchases and redemptions by Accenture plc and Accenture Canada Holdings Inc (4) During the fourth quarter of fiscal 2019, Accenture purchased 66,017 Accenture plc Class A ordinary shares in transactions unrelated to publicly announced share plans or programs. These transactions consisted of acquisitions of Accenture plc Class A ordinary shares primarily via share withholding for payroll tax obligations due from employees and former employees in connection with the delivery of Accenture plc Class A ordinary shares under our various employee equity share plans. These purchases of shares in connection with employee share plans do not affect our aggregate available authorization for our publicly announced open-market share purchase and our other share purchase programs.",
    "images": [
      "./MultiFinance/images/1741-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 2,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.9120230054281464,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-88",
    "output": [
      "Equity_2011 = 419651\n    Equity_2012 = 534648\n    \n    # Do math calculation to get the answer\n    growth_rate = ((Equity_2012 - Equity_2011) / Equity_2011)\n    \n    # return answer\n    return round(growth_rate * 100, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 2495,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 1261,
        "image_tokens": 1234
      },
      "total_tokens": 2600
    },
    "model": "qwen-omni-turbo",
    "question": "what is the growth rate in the balance of equity during 2012? Answer to three decimal places.",
    "answer": "27.403",
    "context": "product management , business development and client service . our alternatives products fall into two main categories 2013 core , which includes hedge funds , funds of funds ( hedge funds and private equity ) and real estate offerings , and currency and commodities . the products offered under the bai umbrella are described below . 2022 hedge funds ended the year with $ 26.6 billion in aum , down $ 1.4 billion as net inflows into single- strategy hedge funds of $ 1.0 billion were more than offset by return of capital on opportunistic funds . market valuation gains contributed $ 1.1 billion to aum growth . hedge fund aum includes a variety of single-strategy , multi-strategy , and global macro , as well as portable alpha , distressed and opportunistic offerings . products include both open-end hedge funds and similar products , and closed-end funds created to take advantage of specific opportunities over a defined , often longer- term investment horizon . 2022 funds of funds aum increased $ 6.3 billion , or 28% ( 28 % ) , to $ 29.1 billion at december 31 , 2012 , including $ 17.1 billion in funds of hedge funds and hybrid vehicles and $ 12.0 billion in private equity funds of funds . growth largely reflected $ 6.2 billion of assets from srpep as we expanded our fund of funds product offerings and further engage in european and asian markets . 2022 real estate and hard assets aum totaled $ 12.7 billion , down $ 0.1 billion , or 1% ( 1 % ) , reflecting $ 0.6 billion in client net redemptions and distributions and $ 0.5 billion in portfolio valuation gains . offerings include high yield debt and core , value-added and opportunistic equity portfolios and renewable power funds . we continued to expand our real estate platform and product offerings with the launch of our first u.s . real estate investment trust ( 201creit 201d ) mutual fund and addition of an infrastructure debt team to further increase and diversify our offerings within global infrastructure investing . currency and commodities . aum in currency and commodities strategies totaled $ 41.4 billion at year-end 2012 , flat from year-end 2011 , reflecting net outflows of $ 1.5 billion , primarily from active currency and currency overlays , and $ 0.8 billion of market and foreign exchange gains . claymore also contributed $ 0.9 billion of aum . currency and commodities products include a range of active and passive products . our ishares commodities products represented $ 24.3 billion of aum , including $ 0.7 billion acquired from claymore , and are not eligible for performance fees . cash management cash management aum totaled $ 263.7 billion at december 31 , 2012 , up $ 9.1 billion , or 4% ( 4 % ) , from year-end 2011 . cash management products include taxable and tax-exempt money market funds and customized separate accounts . portfolios may be denominated in u.s . dollar , euro or british pound . at year-end 2012 , 84% ( 84 % ) of cash aum was managed for institutions and 16% ( 16 % ) for retail and hnw investors . the investor base was also predominantly in the americas , with 69% ( 69 % ) of aum managed for investors in the americas and 31% ( 31 % ) for clients in other regions , mostly emea-based . we generated net inflows of $ 5.0 billion during 2012 , reflecting continued uncertainty around future regulatory changes and a challenging investing environment . to meet investor needs , we sought to provide new solutions and choices for our clients by launching short duration products in the united states , which both immediately address the challenge of a continuing low interest rate environment and will also be important investment options should regulatory changes occur . in the emea business , and in particular for our euro product set , we have taken action to ensure that we can provide effective cash management solutions in the face of a potentially negative yield environment by taking steps to launch new products and re-engineer our existing product set . ishares our industry-leading u.s . and international ishares etp suite is discussed below . component changes in aum 2013 ishares ( dollar amounts in millions ) 12/31/2011 net new business acquired market /fx app ( dep ) 12/31/2012 .\n\n<image 1>\n\n.\n",
    "program": "increase = 534648 - 419651\ndecrease = 52973 - 3517\npercent_increase = increase / 419651\npercent_decrease = decrease / 3517\nanswer = percent_increase * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 1,
        "context_numbers": 108,
        "total_numbers": 109
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 0
      }
    },
    "difficulty": 3.2188758248682006,
    "source_id": "test-145",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/797-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-89",
    "output": [
      "year_growth_rate = [544, -10, 255, -7, 9, -16, 4, 37, 34, 25]\n    \n    # Calculate average growth rate\n    total_growth = sum(year_growth_rate)\n    num_years = len(year_growth_rate) - 1\n    average_growth_rate = total_growth / num_years\n    \n    # Return the result with one decimal place\n    return round(average_growth_rate, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 120,
      "prompt_tokens": 2170,
      "completion_tokens_details": {
        "text_tokens": 120
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 1902
      },
      "total_tokens": 2290
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中指南针销售商品、服务现金流的年增长率数据，计算2013年至2023年的平均年增长率；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    growth_rates = [544, -10, 255, -7, 9, -16, 4, 37, 34, 25, -22]\n    total_growth = sum(growth_rates)\n    average_growth = total_growth / len(growth_rates)\n    return round(average_growth, 1)",
    "image_id": "company_29_29_07_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1264",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2570-1.png",
      "./MultiFinance/images/2570-2.png",
      "./MultiFinance/images/2570-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2570-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-90",
    "output": [
      "first_wave_change_rate = -2.03\n    second_wave_change_rate = -0.84\n    \n    # Do math calculation to get the answer\n    difference = first_wave_change_rate - second_wave_change_rate\n    \n    # return answer\n    return round(difference * 100, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 68,
      "prompt_tokens": 1755,
      "completion_tokens_details": {
        "text_tokens": 68
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1492
      },
      "total_tokens": 1823
    },
    "model": "qwen-omni-turbo",
    "question": "请计算第一波和第二波影响轮次的日均涨跌幅的差值，并将结果转换为百分比形式；请保留一位小数。",
    "python_solution": "def solution():\n    first_wave = -2.03\n    second_wave = -0.84\n    diff = first_wave - second_wave\n    percentage = diff * 100\n    return round(percentage, 1)",
    "image_id": "macro_03_03_09_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2521",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3021-1.png",
      "./MultiFinance/images/3021-2.png",
      "./MultiFinance/images/3021-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3021-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-91",
    "output": [
      "second_quarter = 2.46\n    third_quarter = 3.02\n    fourth_quarter = 1.32\n    first_quarter = 1.71\n    \n    total_second_to_fourth_quarter = second_quarter + third_quarter + fourth_quarter\n    growth_percentage = (total_second_to_fourth_quarter - first_quarter) / first_quarter * 100\n    \n    # return answer\n    return round(growth_percentage, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 121,
      "prompt_tokens": 3186,
      "completion_tokens_details": {
        "text_tokens": 121
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 2902
      },
      "total_tokens": 3307
    },
    "model": "qwen-omni-turbo",
    "question": "请计算中信建投国家电投新能源 REIT 在2024年第二季度至第四季度的上网电量总和，并将其与2024年第一季度的上网电量进行比较，计算增长百分比；结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values from the table\n    q1_2024 = 4.17\n    q2_2024 = 2.46\n    q3_2024 = 0.63\n    q4_2024 = 3.02\n\n    total_q2_to_q4 = q2_2024 + q3_2024 + q4_2024\n    growth_percentage = ((total_q2_to_q4 - q1_2024) / q1_2024) * 100\n    return round(growth_percentage, 2)",
    "image_id": "industry_18_18_18_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2458",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2357-1.png",
      "./MultiFinance/images/2357-2.png",
      "./MultiFinance/images/2357-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2357-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-92",
    "output": [
      "net_income = 55000\n    depreciation = 60000\n    taxes_paid = 25000\n    interest_paid = 5000\n    dividends_paid = 10000\n    cash_received_from_sale_of_company_building = 40000\n    issuance_of_preferred_stock = 45000\n    repurchase_of_common_stock = 20000\n    purchase_of_machinery = 20000\n    issuance_of_bonds = 40000\n    debt_retired_through_issuance_of_common_stock = 45000\n    paid_off_long_term_bank_borrowings = 10000\n    profit_on_sale_of_building = 15000\n    \n    # Do math calculation to get the answer\n    cash_flow_from_financing_activities = -dividends_paid + (cash_received_from_sale_of_company_building - repurchase_of_common_stock) + (debt_retired_through_issuance_of_common_stock - paid_off_long_term_bank_borrowings)\n    \n    # return answer\n    return round(cash_flow_from_financing_activities, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 259,
      "prompt_tokens": 1505,
      "completion_tokens_details": {
        "text_tokens": 259
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 1252
      },
      "total_tokens": 1764
    },
    "model": "qwen-omni-turbo",
    "question": "Assuming the cash flow from financing activities according to U.S. GAAP is: Answer to a single decimal place.",
    "python_solution": "def solution():\n    issuance_of_preferred_stock = 45000\n    issuance_of_bonds = 40000\n    principal_payments_on_bank_borrowings = 10000\n    repurchase_of_common_stock = 20000\n    dividends_paid = 10000\n\n    CFF = issuance_of_preferred_stock + issuance_of_bonds - principal_payments_on_bank_borrowings - repurchase_of_common_stock - dividends_paid\n\n    return CFF",
    "topic": "Accounting",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 0
      }
    },
    "difficulty": 3.332204510175204,
    "source_id": "validation-49",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/308-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-93",
    "output": [
      "warning = 71\n    technology_experiment = 50\n    electronic_surveillance = 46\n    meteorology = 26\n    \n    average = (warning + technology_experiment + electronic_surveillance) / 3\n    answer = round(average * meteorology, 1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 74,
      "prompt_tokens": 2131,
      "completion_tokens_details": {
        "text_tokens": 74
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1868
      },
      "total_tokens": 2205
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中预警、技术试验和电子侦察的平均值，然后将这个平均值乘以气象的值；请保留一位小数。",
    "python_solution": "def solution():\n    early_warning = 71\n    technical_test = 50\n    electronic_reconnaissance = 46\n    meteorology = 26\n\n    average = (early_warning + technical_test + electronic_reconnaissance) / 3\n    result = average * meteorology\n    return round(result, 1)",
    "image_id": "company_22_22_20_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-288",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2602-1.png",
      "./MultiFinance/images/2602-2.png",
      "./MultiFinance/images/2602-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2602-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-94",
    "output": [
      "abc_2024q3_cost = 0.805\n    abc_2025q2_cost = 0.732\n    topcon_cost = 0.682\n    abc_end_year_cost = 0.701\n    \n    abc_2024q3_non_silicon_cost = 0.495\n    abc_2025q2_non_silicon_cost = 0.368\n    topcon_non_silicon_cost = 0.318\n    abc_end_year_non_silicon_cost = 0.3\n    abc_2024q3_total_cost = abc_2024q3_cost + abc_2024q3_non_silicon_cost\n    abc_2025q2_total_cost = abc_2025q2_cost + abc_2025q2_non_silicon_cost\n    topcon_total_cost = topcon_cost + topcon_non_silicon_cost\n    abc_end_year_total_cost = abc_end_year_cost + abc_end_year_non_silicon_cost\n    \n    total_cost_2024q3_and_2025q2 = abc_2024q3_total_cost + abc_2025q2_total_cost\n    total_cost_topcon_and_abc_end_year = topcon_total_cost + abc_end_year_total_cost\n    \n    growth_rate = (total_cost_topcon_and_abc_end_year - total_cost_2024q3_and_2025q2) / total_cost_2024q3_and_2025q2 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 384,
      "prompt_tokens": 3101,
      "completion_tokens_details": {
        "text_tokens": 384
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 2827
      },
      "total_tokens": 3485
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中2024Q3和2025Q2的硅成本与电池非硅成本之和，并求这两个时间点总和的增长率；结果保留两位小数。",
    "python_solution": "def solution():\n    silicon_cost_2024Q3 = 0.12\n    non_silicon_battery_cost_2024Q3 = 0.28\n    total_2024Q3 = silicon_cost_2024Q3 + non_silicon_battery_cost_2024Q3\n\n    silicon_cost_2025Q2 = 0.12\n    non_silicon_battery_cost_2025Q2 = 0.22\n    total_2025Q2 = silicon_cost_2025Q2 + non_silicon_battery_cost_2025Q2\n\n    growth_rate = ((total_2025Q2 - total_2024Q3) / total_2024Q3) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_21_21_16_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-799",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2352-1.png",
      "./MultiFinance/images/2352-2.png",
      "./MultiFinance/images/2352-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2352-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-95",
    "output": [
      "dec_31_2021_total_liabilities = 104710586\n    jun_30_2022_total_liabilities = 104710586\n    \n    # Do math calculation to get the answer\n    growth_rate = (jun_30_2022_total_liabilities - dec_31_2021_total_liabilities) / dec_31_2021_total_liabilities * 100\n    \n    # return answer\n    return growth_rate\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 134,
      "prompt_tokens": 1538,
      "completion_tokens_details": {
        "text_tokens": 134
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 1262
      },
      "total_tokens": 1672
    },
    "model": "qwen-omni-turbo",
    "question": "What is the growth rate of total liabilities from December 31, 2021, to June 30, 2022?",
    "python_solution": "def solution():\n     #Define variables name and value\n    Total_liabilities_Dec_2021 = 3_073_701\n    Total_liabilities_June_2022 = 2_802_873\n\n    #Do math calculation to get the answer\n    answer = ((Total_liabilities_June_2022 - Total_liabilities_Dec_2021) / Total_liabilities_Dec_2021) * 100\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-125",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2031-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-96",
    "output": [
      "cagr_kidney_sales_2018_to_2021 = ((43.5 - 15.9) / (15.9)) ** (1/3) - 1\n    answer = round(cagr_kidney_sales_2018_to_2021 * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 90,
      "prompt_tokens": 1686,
      "completion_tokens_details": {
        "text_tokens": 90
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1422
      },
      "total_tokens": 1776
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年至2021年Kidney的复合年增长率（CAGR），并保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    sales_2018 = 2.0\n    sales_2021 = 10.0\n    years = 3\n\n    # Multi-step logic\n    cagr = ((sales_2021 / sales_2018) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_00_00_15_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-239",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2346-1.png",
      "./MultiFinance/images/2346-2.png",
      "./MultiFinance/images/2346-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2346-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-97",
    "output": [
      "facility_closure_costs_2015 = 231\n    total_restructuring_charges_2015 = 6304\n    \n    # Do math calculation to get the answer\n    portion_of_total_related_to_facility_closer_costs = (facility_closure_costs_2015 / total_restructuring_charges_2015) * 100\n    \n    # return answer\n    return portion_of_total_related_to_facility_closer_costs\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 114,
      "prompt_tokens": 2278,
      "completion_tokens_details": {
        "text_tokens": 114
      },
      "prompt_tokens_details": {
        "text_tokens": 1041,
        "image_tokens": 1237
      },
      "total_tokens": 2392
    },
    "model": "qwen-omni-turbo",
    "question": "what portion of the total 2015 restructuring programs is related to facility closer costs? Answer as percentage to three decimal places.",
    "answer": "3.664",
    "context": "teleflex incorporated notes to consolidated financial statements 2014 ( continued ) in june 2014 , the company initiated programs to consolidate locations in australia and terminate certain european distributor agreements in an effort to reduce costs . as a result of these actions , the company incurred aggregate restructuring charges of $ 3.6 million as of december 31 , 2015 . these programs include costs related to termination benefits , contract termination costs and other exit costs . the company completed the programs in 2015 . 2013 restructuring programs in 2013 , the company initiated restructuring programs to consolidate administrative and manufacturing facilities in north america and warehouse facilities in europe and terminate certain european distributor agreements in an effort to reduce costs . as of december 31 , 2015 , the company incurred net aggregate restructuring charges of $ 10.9 million related to these programs . these programs entail costs related to termination benefits , contract termination costs and charges related to facility closure and other exit costs . the company completed the programs in 2015 lma restructuring program in connection with the acquisition of substantially all of the assets of lma international n.v . ( the 201clma business 201d ) in 2012 , the company commenced a program ( the \"lma restructuring program\" ) related to the integration of the lma business and the company 2019s other businesses . the program was focused on the closure of the lma business 2019 corporate functions and the consolidation of manufacturing , sales , marketing , and distribution functions in north america , europe and asia . the company incurred net aggregate restructuring charges related to the lma restructuring program of $ 11.3 million . the company completed the program in 2015 . for the year ended december 31 , 2014 , the company recorded a net credit of $ 3.3 million , primarily resulting from the reversal of contract termination costs following the favorable settlement of a terminated distributor agreement . 2012 restructuring program in 2012 , the company identified opportunities to improve its supply chain strategy by consolidating its three north american warehouses into one centralized warehouse , and lower costs and improve operating efficiencies through the termination of certain distributor agreements in europe , the closure of certain north american facilities and workforce reductions . as of december 31 , 2015 , the company has incurred net aggregate restructuring and impairment charges of $ 6.3 million in connection with this program , and expects future restructuring expenses associated with the program , if any , to be nominal . as of december 31 , 2015 , the company has a reserve of $ 0.5 million in connection with the program . the company expects to complete this program in 2016 . impairment charges there were no impairment charges recorded for the years ended december 31 , 2015 or 2014 . in 2013 , the company recorded $ 7.3 million of ipr&d charges and $ 3.5 million in impairment charges related to assets held for sale that had a carrying value in excess of their appraised fair value . the restructuring and other impairment charges recognized for the years ended december 31 , 2015 , 2014 and 2013 consisted of the following : ( dollars in thousands ) termination benefits facility closure contract termination other exit costs total .\n\n<image 1>\n\n( 1 ) other restructuring programs - prior years includes the 2014 european restructuring plan , the other 2014 restructuring programs , the 2013 restructuring programs and the lma restructuring program. .\n",
    "program": "restructuring_charges_2015 = 5009\nfacility_closure_2015 = 231\ncontract_termination_2015 = 1000\nother_exit_2015 = 64\ntotal_2015 = restructuring_charges_2015 + facility_closure_2015 + contract_termination_2015 + other_exit_2015\nanswer = facility_closure_2015 / total_2015 * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 1,
        "context_numbers": 77,
        "total_numbers": 78
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 0
      }
    },
    "difficulty": 3.401197381662155,
    "source_id": "test-392",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1044-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-98",
    "output": [
      "one_month_within = 4 + 5 + 19\n    two_months_within = 0 + 0 + 0\n    three_months_within = 0 + 0 + 0\n    six_months_within = 0 + 0 + 0\n    score = 1.00 + 1.00 + 1.00\n\n    # Do math calculation to get the answer\n    total = (one_month_within + two_months_within + three_months_within + six_months_within) / score\n\n    # return answer\n    return round(total, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 126,
      "prompt_tokens": 1441,
      "completion_tokens_details": {
        "text_tokens": 126
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 1172
      },
      "total_tokens": 1567
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算买入评级在二月内、三月内和六月内的总和，并将其除以评分的总和；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    buy_2_months = 4\n    buy_3_months = 5\n    buy_6_months = 19\n    rating_sum = 1.00 + 1.00 + 1.00\n\n    # Multi-step logic\n    total_buy = buy_2_months + buy_3_months + buy_6_months\n    result = total_buy / rating_sum\n    return round(result, 2)",
    "image_id": "company_09_09_21_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-26",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2316-1.png",
      "./MultiFinance/images/2316-2.png",
      "./MultiFinance/images/2316-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2316-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-99",
    "output": [
      "shares_september_2021 = 43207183\n    shares_march_2022 = 43304602\n    total_equity_september_2021 = 56534226\n    total_equity_march_2022 = 45127548\n    net_income_september_2021 = -418196412\n    net_income_march_2022 = -436802510\n    \n    # Calculate ROE\n    roe_september_2021 = net_income_september_2021 / total_equity_september_2021\n    roe_march_2022 = net_income_march_2022 / total_equity_march_2022\n    \n    # Calculate average ROE\n    average_roe = (roe_september_2021 + roe_march_2022) / 2\n    \n    # Apply tax rate\n    after_tax_roe = average_roe * (1 - 0.285)\n    \n    # Annualize the result\n    annualized_after_tax_roe = after_tax_roe * 365 / 90\n    \n    # return answer\n    return round(annualized_after_tax_roe, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 330,
      "prompt_tokens": 1543,
      "completion_tokens_details": {
        "text_tokens": 330
      },
      "prompt_tokens_details": {
        "text_tokens": 299,
        "image_tokens": 1244
      },
      "total_tokens": 1873
    },
    "model": "qwen-omni-turbo",
    "question": "What is the annualized post-tax Return on Equity (ROE) for the fiscal year 2022 using balances at the end of September 2021 and March 2022, considering a tax rate of 28.5%?",
    "python_solution": "def solution():\n    #Define variables name and value\n    equity_sept_2021 = 56534226\n    equity_march_2022 = 45127548\n    net_loss_2021 = -8782606 \n    net_loss_2022 = -9823492 \n    # Tax rate\n    tax_rate = 0.285\n\n    #Do math calculation to get the answer\n    #Calculate average equity for year 2022\n    avg_equity_2022 = (equity_sept_2021 + equity_march_2022) / 2\n    #Calculate total net income for year 2022\n    total_net_income_2022 = net_loss_2021 + net_loss_2022\n    #Post-tax net income\n    post_tax_net_income = total_net_income_2022 * (1 - tax_rate)\n    #Calculate annualized post-tax ROE\n    roe_2022 = (post_tax_net_income / avg_equity_2022) * 100\n    return roe_2022\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-206",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2077-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 5,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 17,
        "parentheses": 6
      }
    },
    "difficulty": 5.393627546352361,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-100",
    "output": [
      "year_2022 = -14.75\n    year_2023 = -20.86\n    \n    growth_rate = (year_2023 - year_2022) / year_2022 * 100\n    \n    # return answer\n    return int(growth_rate)\n\nprint(solution())  \n```"
    ],
    "usage": {
      "completion_tokens": 80,
      "prompt_tokens": 1589,
      "completion_tokens_details": {
        "text_tokens": 80
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1326
      },
      "total_tokens": 1669
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2022年相比，第十个指标的增长率，并将结果保留整数。",
    "python_solution": "def solution():\n    value_2022 = -15.70\n    value_2023 = 41.48\n    growth_rate = (value_2023 - value_2022) / value_2022 * 100\n    return int(growth_rate)",
    "image_id": "market_09_09_38_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2888",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3054-1.png",
      "./MultiFinance/images/3054-2.png",
      "./MultiFinance/images/3054-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3054-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-101",
    "output": [
      "current_ratio_2013 = (208736/29812)\n    current_ratio_2012 = (193781/38850)\n    \n    # Calculate the percentage change\n    percentage_change = ((current_ratio_2013 - current_ratio_2012) / current_ratio_2012) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 115,
      "prompt_tokens": 1500,
      "completion_tokens_details": {
        "text_tokens": 115
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 1224
      },
      "total_tokens": 1615
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the current ratio from June 30, 2012 to March 31, 2013?",
    "python_solution": "def solution():\n    #Define variables name and value\n    current_assets_2012 = 193781\n    current_assets_2013 = 208736\n    current_liabilities_2012 = 63919 \n    current_liabilities_2013 = 59308 \n\n    #Do math calculation to get the answer\n    current_ratio_2012 = current_assets_2012 / current_liabilities_2012\n    current_ratio_2013 = current_assets_2013 / current_liabilities_2013\n    percentage_change = ((current_ratio_2013 - current_ratio_2012) / current_ratio_2012) * 100\n    answer = percentage_change\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-107",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2016-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 4
      }
    },
    "difficulty": 4.174387269895637,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-102",
    "output": [
      "design_and_decoration_cost = 8250\n    hardware_purchase_cost = 47696\n    total_investment = 57000\n    \n    difference = design_and_decoration_cost - hardware_purchase_cost\n    percentage_difference = (difference / total_investment) * 100\n    \n    # return answer\n    return round(percentage_difference, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 3025,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 2760
      },
      "total_tokens": 3121
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中机房设计、装修工程费等与硬件设备购置费的差值，并将该差值占总投资金额的比例保留两位小数。",
    "python_solution": "def solution():\n    design_cost = 8250\n    hardware_cost = 47696\n    total_investment = 57000\n    diff = abs(design_cost - hardware_cost)\n    ratio = diff / total_investment * 100\n    return round(ratio, 2)",
    "image_id": "industry_07_07_28_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2347",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3010-1.png",
      "./MultiFinance/images/3010-2.png",
      "./MultiFinance/images/3010-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3010-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-103",
    "output": [
      "net_profit_margin_2017_to_2022 = [7.9, 7.9, 6.3, 5.8, 3.4, 5.3, 6.4]\n    \n    # Calculate average net profit margin from 2017 to 2022\n    average_net_profit_margin = sum(net_profit_margin_2017_to_2022) / len(net_profit_margin_2017_to_2022)\n    \n    # Return the result rounded to two decimal places\n    return round(average_net_profit_margin, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 149,
      "prompt_tokens": 1966,
      "completion_tokens_details": {
        "text_tokens": 149
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 1710
      },
      "total_tokens": 2115
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2017年至2022年净利率的平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    net_margin_2017 = 7.9\n    net_margin_2018 = 7.9\n    net_margin_2019 = 6.3\n    net_margin_2020 = 5.8\n    net_margin_2021 = 3.4\n    net_margin_2022 = 5.3\n\n    average_net_margin = (net_margin_2017 + net_margin_2018 + net_margin_2019 + net_margin_2020 + net_margin_2021 + net_margin_2022) / 6\n    return round(average_net_margin, 2)",
    "image_id": "company_08_08_06_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-594",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2321-1.png",
      "./MultiFinance/images/2321-2.png",
      "./MultiFinance/images/2321-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2321-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-104",
    "output": [
      "rank_ic = -2.3\n    multi_profit = 8.6\n    \n    # Do math calculation to get the answer\n    difference = rank_ic - multi_profit\n    \n    # Convert result to percentage formate\n    answer = round(difference * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 73,
      "prompt_tokens": 1100,
      "completion_tokens_details": {
        "text_tokens": 73
      },
      "prompt_tokens_details": {
        "text_tokens": 282,
        "image_tokens": 818
      },
      "total_tokens": 1173
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中Meta_RiskControl因子在沪深300选股域/基准指数下，最近一月（4周）的RankIC与多空收益之差，并将结果转换为百分比形式，保留两位小数。",
    "python_solution": "def solution():\n    rankic = 8.6\n    long_short_return = -2.3\n    # Multi-step logic\n    diff = rankic - long_short_return\n    percentage = diff * 100\n    return round(percentage, 2)\n",
    "image_id": "strategy_06_06_02_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3037",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2856-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2856-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-105",
    "output": [
      "year_2023_liabilities = 74503\n    year_2024_liabilities = 87860\n    \n    difference = year_2024_liabilities - year_2023_liabilities\n    percentage_difference = (difference / year_2023_liabilities) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 108,
      "prompt_tokens": 2715,
      "completion_tokens_details": {
        "text_tokens": 108
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 2440
      },
      "total_tokens": 2823
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2024年的负债合计的差值，并将该差值占2023年负债合计的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    total_liabilities_2023 = 74503\n    total_liabilities_2024 = 87860\n\n    # Multi-step logic\n    diff = total_liabilities_2024 - total_liabilities_2023\n    ratio = diff / total_liabilities_2023\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_14_14_22_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-64",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2588-1.png",
      "./MultiFinance/images/2588-2.png",
      "./MultiFinance/images/2588-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2588-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-106",
    "output": [
      "year_1 = 127.1\n    year_2 = 147.1\n    year_3 = 168.5\n    \n    # Do math calculation to get the answer\n    CAGR = ((year_3 / year_1) ** (1/2)) - 1\n    answer = round(CAGR * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 2825,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 2558
      },
      "total_tokens": 2931
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算农夫山泉2024年到2026年的归母净利润的复合年增长率；请保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = 127.1\n    net_profit_2026 = 168.5\n    years = 2\n\n    cagr = ((net_profit_2026 / net_profit_2024) ** (1 / years) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_23_23_26_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-953",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2459-1.png",
      "./MultiFinance/images/2459-2.png",
      "./MultiFinance/images/2459-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2459-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-107",
    "output": [
      "r = 0.12\n    rf = 0.04\n    b = 1.4\n    n = 10\n    c0 = -100\n    c1 = 15\n    c2 = 15\n    c3 = 15\n    c4 = 15\n    c5 = 15\n    c6 = 15\n    c7 = 15\n    c8 = 15\n    c9 = 15\n    c10 = 15\n\n    # Do math calculation to get the answer\n    k = rf + b * (r - rf)\n    p = sum([c1 / ((1 + k) ** i) for i in range(1, n + 1)])\n    q = c0 + sum([(c1 + c2 + c3 + c4 + c5 + c6 + c7 + c8 + c9 + c10) / ((1 + k) ** i) for i in range(n + 1, n + 11)])\n\n    npv = p - q\n\n    # return answer\n    return round(npv, 4)\n\n```"
    ],
    "usage": {
      "completion_tokens": 260,
      "prompt_tokens": 388,
      "completion_tokens_details": {
        "text_tokens": 260
      },
      "prompt_tokens_details": {
        "text_tokens": 311,
        "image_tokens": 77
      },
      "total_tokens": 648
    },
    "model": "qwen-omni-turbo",
    "question": "Epsilon Corp. is evaluating an expansion of its business. The cash-flow forecasts for the project are as follows: <image 1>. The firm's existing assets have a beta of 1.4. The risk-free interest rate is 4% and the expected return on the market portfolio is 12%. What is the project's NPV (in millions)? Answer to four decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_247",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/192-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-108",
    "output": [
      "year_1 = 8.93\n    year_6 = 289.92\n    \n    # Do math calculation to get the answer\n    cagr = ((year_6/year_1)**(1/5)) - 1\n    answer = round(cagr * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 82,
      "prompt_tokens": 1861,
      "completion_tokens_details": {
        "text_tokens": 82
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 1593
      },
      "total_tokens": 1943
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年到2028年BBU市场空间的年均复合增长率（CAGR）。请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    bbu_market_2023 = 8.93\n    bbu_market_2028 = 289.92\n    years = 5\n\n    # Multi-step logic\n    cagr = ((bbu_market_2028 / bbu_market_2023) ** (1 / years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_02_02_16_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-108",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2344-1.png",
      "./MultiFinance/images/2344-2.png",
      "./MultiFinance/images/2344-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2344-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-109",
    "output": [
      "beta_1_portfolio_A = .85\n    beta_2_portfolio_A = 1.15\n    expected_return_portfolio_A = 16\n\n    beta_1_portfolio_B = 1.45\n    beta_2_portfolio_B = -.25\n    expected_return_portfolio_B = 12\n\n    risk_free_rate = 4\n\n    # Calculate the risk premium for factor F1\n    risk_premium_F1 = (expected_return_portfolio_A - expected_return_portfolio_B) * \\\n                      ((beta_1_portfolio_A + beta_2_portfolio_A) / 2)\n\n    # Convert to percentage and round to two decimal places\n    risk_premium_F1_percentage = round(risk_premium_F1 * 100, 2)\n\n    # Return the result\n    return risk_premium_F1_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 190,
      "prompt_tokens": 350,
      "completion_tokens_details": {
        "text_tokens": 190
      },
      "prompt_tokens_details": {
        "text_tokens": 300,
        "image_tokens": 50
      },
      "total_tokens": 540
    },
    "model": "qwen-omni-turbo",
    "question": "Suppose stock returns can be explained by a two-factor model. The firm-specific risks for all stocks are independent. The following table shows the information for two diversified portfolios: <image 1> If the risk-free rate is 4 percent, what is the risk premium for factor F1 in this model? Answer as a percentage to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Accounting",
    "source_id": "test_Accounting_201",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/209-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-110",
    "output": [
      "huawei_2023 = 28.1\n    tudiadong_2023 = 15.1\n    huaqi_2023 = 23.1\n    suzhengjiuchuang_2023 = 33.0\n    other_2023 = 0.7\n    \n    # Do math calculation to get the answer\n    total_market_share_2023 = huawei_2023 + tudiadong_2023 + huaqi_2023 + suzhengjiuchuang_2023 + other_2023\n    \n    # Verify if it's equal to 100%\n    verification_result = round(total_market_share_2023 * 10) == 100\n    \n    # return answer\n    return f\"Total market share in 2023: {total_market_share_2023:.1f}%, Verification result: {'Yes' if verification_result else 'No'}\"\n```"
    ],
    "usage": {
      "completion_tokens": 232,
      "prompt_tokens": 2029,
      "completion_tokens_details": {
        "text_tokens": 232
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 1774
      },
      "total_tokens": 2261
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有公司的市场份额总和，并验证是否为100%；请保留一位小数。",
    "python_solution": "def solution():\n    share_huawei = 28.1\n    share_heisai = 23.1\n    share_tudatu = 15.1\n    share_suteng = 33.0\n    share_other = 0.7\n\n    total_share = share_huawei + share_heisai + share_tudatu + share_suteng + share_other\n    return round(total_share, 1)",
    "image_id": "company_18_18_35_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-772",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2713-1.png",
      "./MultiFinance/images/2713-2.png",
      "./MultiFinance/images/2713-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2713-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-111",
    "output": [
      "year_2023_income = 1786\n    year_2024_H1_income = 3.0\n    year_2022_income = 7.0\n    \n    total_income_2023_and_2024_H1 = year_2023_income + year_2024_H1_income\n    growth_percentage = ((total_income_2023_and_2024_H1 - year_2022_income) / year_2022_income) * 100\n    \n    # return answer\n    return round(growth_percentage, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 151,
      "prompt_tokens": 1878,
      "completion_tokens_details": {
        "text_tokens": 151
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 1599
      },
      "total_tokens": 2029
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年和2024年上半年的营业收入总和，并将该总和与2022年的营业收入相比，求出增长百分比；结果保留两位小数。",
    "python_solution": "def solution():\n    revenue_2023 = 6.5\n    revenue_2024_H1 = 3.0\n    total_revenue = revenue_2023 + revenue_2024_H1\n    revenue_2022 = 7.0\n    growth_percentage = ((total_revenue - revenue_2022) / revenue_2022) * 100\n    return round(growth_percentage, 2)",
    "image_id": "company_39_39_19_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1204",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2625-1.png",
      "./MultiFinance/images/2625-2.png",
      "./MultiFinance/images/2625-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2625-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-112",
    "output": [
      "close_price = 127.00\n    lowest_price = 50.71\n    highest_price = 130.55\n    \n    # Calculate annual price fluctuation range in percentage\n    price_fluctuation_range = ((highest_price - lowest_price) / lowest_price) * 100\n    \n    # Return the result as a string with two decimal places\n    return f\"{price_fluctuation_range:.2f}%\"\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 111,
      "prompt_tokens": 843,
      "completion_tokens_details": {
        "text_tokens": 111
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 575
      },
      "total_tokens": 954
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中给出的收盘价、一年最低价和最高价，计算该股票的年度价格波动范围，并将其表示为百分比；结果保留两位小数。",
    "python_solution": "def solution():\n    closing_price = 127.00\n    low_price = 50.71\n    high_price = 130.55\n\n    price_range = high_price - low_price\n    percentage_range = (price_range / low_price) * 100\n    return round(percentage_range, 2)",
    "image_id": "company_24_24_00_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-697",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2944-1.png",
      "./MultiFinance/images/2944-2.png",
      "./MultiFinance/images/2944-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2944-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-113",
    "output": [
      "year_2019 = 40.9\n    year_2025 = 60.8\n    \n    # Calculate the growth rate\n    growth_rate = ((year_2025 - year_2019) / year_2019) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 103,
      "prompt_tokens": 2248,
      "completion_tokens_details": {
        "text_tokens": 103
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1987
      },
      "total_tokens": 2351
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2019年到2025年间推理占比的增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    inference_2019 = 40.9\n    inference_2025 = 60.8\n\n    # Multi-step logic\n    growth_rate = (inference_2025 - inference_2019) / inference_2019 * 100\n    return round(growth_rate, 2)",
    "image_id": "industry_07_07_13_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2372",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2765-1.png",
      "./MultiFinance/images/2765-2.png",
      "./MultiFinance/images/2765-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2765-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-114",
    "output": [
      "q2_profit = 1789.25\n    q3_profit = 4643.53\n    q4_profit = 4643.53\n    total_profit = q2_profit + q3_profit + q4_profit\n    q1_profit = 2630.25\n    growth_rate = (total_profit - q1_profit) / q1_profit * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 125,
      "prompt_tokens": 3565,
      "completion_tokens_details": {
        "text_tokens": 125
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 3284
      },
      "total_tokens": 3690
    },
    "model": "qwen-omni-turbo",
    "question": "请计算中信建投明阳智能 REIT 在2024年第二季度至第四季度的净利润总和，并将其与2024年第一季度的净利润进行比较，计算增长百分比；结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values from the table\n    net_profit_1Q24 = 13006.59\n    net_profit_2Q24 = 2815.46\n    net_profit_3Q24 = 5788.25\n    net_profit_4Q24 = 7279.34\n\n    # Calculate total net profit for 2024 Q2 to Q4\n    total_net_profit_2024_Q2_to_Q4 = net_profit_2Q24 + net_profit_3Q24 + net_profit_4Q24\n\n    # Calculate growth percentage\n    growth_percentage = ((total_net_profit_2024_Q2_to_Q4 - net_profit_1Q24) / net_profit_1Q24) * 100\n    return round(growth_percentage, 2)",
    "image_id": "industry_18_18_17_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2466",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 6
      }
    },
    "difficulty": 4.174387269895637,
    "images": [
      "./MultiFinance/images/2306-1.png",
      "./MultiFinance/images/2306-2.png",
      "./MultiFinance/images/2306-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2306-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-115",
    "output": [
      "研发强度1 = 3.90\n   研发强度2 = 3.91\n    \n    # Do math calculation to get the answer\n    average_research_intensity = (研发强度1 + 研发强度2) / 2\n    \n    # return answer\n    return round(average_research_intensity, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 76,
      "prompt_tokens": 3457,
      "completion_tokens_details": {
        "text_tokens": 76
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 3195
      },
      "total_tokens": 3533
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年和2025年的研发投入强度的平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    r_d_intensity_2024 = 3.90\n    r_d_intensity_2025 = 3.91\n    \n    # Multi-step logic\n    average_r_d_intensity = (r_d_intensity_2024 + r_d_intensity_2025) / 2\n    return round(average_r_d_intensity, 2)",
    "image_id": "company_30_30_05_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-977",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2955-1.png",
      "./MultiFinance/images/2955-2.png",
      "./MultiFinance/images/2955-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2955-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-116",
    "output": [
      "q_ratio_2019 = (224 - 224) / 224 * 100\n    q_ratio_2020 = (3956 - 224) / 3956 * 100\n    \n    # Calculate the percentage change\n    percentage_change = (q_ratio_2020 - q_ratio_2019) / q_ratio_2019 * 100\n    \n    # return answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 128,
      "prompt_tokens": 1502,
      "completion_tokens_details": {
        "text_tokens": 128
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1222
      },
      "total_tokens": 1630
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the company's Quick Ratio from December 31, 2019 to September 30, 2020 in percentage?",
    "python_solution": "def solution():\n    cash_dec = 224\n    cash_sep = 3956\n    current_liabilities_dec = 68683\n    current_liabilities_sep = 111020\n\n    # Calculate Quick Ratio\n    quick_ratio_dec = cash_dec/current_liabilities_dec\n    quick_ratio_sep = cash_sep/current_liabilities_sep\n\n    # Percentage change in Quick Ratio\n    percent_change = ((quick_ratio_sep - quick_ratio_dec)/quick_ratio_dec)*100\n    answer = percent_change\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-94",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2004-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 4
      }
    },
    "difficulty": 4.174387269895637,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-117",
    "output": [
      "building_and_improvements_2019 = 370451 * 1.10\n    total_assets_2019 = 1012214\n    total_assets_2018 = 939091\n    \n    # Calculate the revised average\n    revised_average = (building_and_improvements_2019 + total_assets_2019) / 2\n    \n    # Return the answer\n    return revised_average\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 121,
      "prompt_tokens": 1769,
      "completion_tokens_details": {
        "text_tokens": 121
      },
      "prompt_tokens_details": {
        "text_tokens": 527,
        "image_tokens": 1242
      },
      "total_tokens": 1890
    },
    "model": "qwen-omni-turbo",
    "question": "If the building and improvements increases by 10% in 2019, what is the revised average? (in thousand)",
    "python_solution": "def solution():\n    # Define variables name and value\n    buildings_and_improvements_2019 = 370451\n    buildings_and_improvements_2018 = 360030\n    increase_percentage = 0.1\n\n    # Do math calculation to get the answer\n    revised_building_and_improvements_2019 = buildings_and_improvements_2019 * (1 + increase_percentage)\n    answer = (revised_building_and_improvements_2019 + buildings_and_improvements_2018) / 2\n\n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-51",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n 6. Property, Plant and Equipment Property, plant and equipment consisted of the following (in thousands): Depreciation expense was $51.7 million, $51.1 million and $48.8 million in fiscal years 2019, 2018 and 2017, respectively. The Company maintains insurance for both property damage and business interruption relating to catastrophic events, such as fires. Insurance recoveries received for property damage and business interruption in excess of the net book value of damaged assets, clean-up and demolition costs, and post-event costs are recognized as income in the period received or committed when all contingencies associated with the recoveries are resolved. Gains on insurance recoveries related to business interruption are recorded within “Cost of sales” and any gains or losses related to property damage are recorded within “Other income (expense).” Insurance recoveries related to business interruption are classified as operating cash flows and recoveries related to property damage are classified as investing cash flows in the statement of cash flows. Insurance claims incurred or finalized during the fiscal years ended 2019, 2018, and 2017 did not have a material affect on the Company's consolidated financial statements.",
    "images": [
      "./MultiFinance/images/1790-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-118",
    "output": [
      "investment_income_2022A = 190\n    investment_income_2023A = -38\n    \n    # Do math calculation to get the answer\n    difference = (investment_income_2022A - investment_income_2023A) * 100 / abs(investment_income_2022A)\n    \n    # return answer\n    return round(difference, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 99,
      "prompt_tokens": 1624,
      "completion_tokens_details": {
        "text_tokens": 99
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1358
      },
      "total_tokens": 1723
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2022年和2023年的投资收益差值，并将结果作为百分比表示，保留一位小数。",
    "python_solution": "def solution():\n    investment_income_2022 = 190\n    investment_income_2023 = -38\n    diff = investment_income_2023 - investment_income_2022\n    percentage = diff / investment_income_2022 * 100\n    return round(percentage, 1)",
    "image_id": "company_27_27_15_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-452",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2927-1.png",
      "./MultiFinance/images/2927-2.png",
      "./MultiFinance/images/2927-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2927-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-119",
    "output": [
      "local_advertising_revenue_2018 = 70.7\n    local_advertising_revenue_2019 = 66.9\n    \n    # Calculate the difference between 2018 and 2019\n    difference = local_advertising_revenue_2018 - local_advertising_revenue_2019\n    \n    # Calculate the percentage change\n    percentage_change = (difference / local_advertising_revenue_2018) * 100\n    \n    # Return the answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 135,
      "prompt_tokens": 965,
      "completion_tokens_details": {
        "text_tokens": 135
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 692
      },
      "total_tokens": 1100
    },
    "model": "qwen-omni-turbo",
    "question": "How much percent would the total revenue increase if local advertising revenue was the same in 2019 as in 2018?",
    "python_solution": "def solution():\n     # Define variables name and value\n    total_revenue_2019 = 444.8\n    total_revenue_2018 = 441.4\n    # Given\n    local_ad_revenue_2019 = 66.9\n    local_ad_revenue_2018 = 70.7\n\n    # The new hypothetical total revenue for 2019\n    new_total_revenue_2019 = total_revenue_2019 - local_ad_revenue_2019 + local_ad_revenue_2018\n\n    # Do math calculation to get the answer\n    percent_increase = ((new_total_revenue_2019 - total_revenue_2018) / total_revenue_2018) * 100\n    answer = percent_increase\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-234",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2096-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 4
      }
    },
    "difficulty": 4.2484952420493585,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-120",
    "output": [
      "net_profit_2023 = -6716\n    net_profit_2024 = -4401\n    \n    difference = net_profit_2023 - net_profit_2024\n    percentage_difference = (difference / abs(net_profit_2023)) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 1752,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1478
      },
      "total_tokens": 1843
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年与2023年的净利润差值，并将该差值占2023年净利润的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    net_profit_2023 = -6716\n    net_profit_2024 = -4401\n    diff = net_profit_2024 - net_profit_2023\n    percentage = (diff / abs(net_profit_2023)) * 100\n    return round(percentage, 1)",
    "image_id": "company_00_00_00_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-227",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2562-1.png",
      "./MultiFinance/images/2562-2.png",
      "./MultiFinance/images/2562-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2562-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-121",
    "output": [
      "chc_total = 45 + 58 + 61 + 63 + 47\n    rx_total = 38 + 35 + 33 + 21\n    difference = chc_total - rx_total\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(difference, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 81,
      "prompt_tokens": 2173,
      "completion_tokens_details": {
        "text_tokens": 81
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 1888
      },
      "total_tokens": 2254
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2019年到2023年处方药（RX）的总占比，并将其与健康消费品（CHC）的总占比进行比较，求出两者的差值；请保留一位小数。",
    "python_solution": "def solution():\n    rx_total = 45 + 38 + 35 + 33 + 21\n    chc_total = 51 + 58 + 61 + 63 + 47\n    difference = chc_total - rx_total\n    return round(difference, 1)",
    "image_id": "company_12_12_06_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1663",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 8,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2491-1.png",
      "./MultiFinance/images/2491-2.png",
      "./MultiFinance/images/2491-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2491-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-122",
    "output": [
      "net_profit_2021 = 5694\n    net_profit_2022 = 11366\n    net_profit_2023 = 9037\n    net_profit_2024E = 7638\n    net_profit_2025E = 8052\n    net_profit_2026E = 8465\n    \n    total_net_profit = round(net_profit_2021 + net_profit_2022 + net_profit_2023 + net_profit_2024E + net_profit_2025E + net_profit_2026E)\n    \n    # return answer\n    return total_net_profit\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 177,
      "prompt_tokens": 1424,
      "completion_tokens_details": {
        "text_tokens": 177
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1158
      },
      "total_tokens": 1601
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年到2026年的净利润总和，并将结果四舍五入至最接近的整数。",
    "python_solution": "def solution():\n    net_profit_2021 = 5694\n    net_profit_2022 = 11366\n    net_profit_2023 = 9037\n    net_profit_2024E = 7638\n    net_profit_2025E = 8052\n    net_profit_2026E = 8465\n\n    total_net_profit = net_profit_2021 + net_profit_2022 + net_profit_2023 + net_profit_2024E + net_profit_2025E + net_profit_2026E\n    return round(total_net_profit)",
    "image_id": "company_26_26_16_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1738",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2492-1.png",
      "./MultiFinance/images/2492-2.png",
      "./MultiFinance/images/2492-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2492-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-123",
    "output": [
      "gross_profit_2024E = -16.67% * 600.00\n    \n    # Do math calculation to get the answer\n    gross_margin_2024E = (gross_profit_2024E / 600.00) * 100\n    \n    # return answer\n    return round(gross_margin_2024E, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 3114,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 247,
        "image_tokens": 2867
      },
      "total_tokens": 3219
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年预计的毛利率，并保留两位小数。",
    "python_solution": "def calculate_margin_2024():\n    revenue_2024 = 600.00\n    cost_2024 = 700.00\n    margin_2024 = (revenue_2024 - cost_2024) / revenue_2024 * 100\n    return round(margin_2024, 2)",
    "image_id": "company_21_21_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-834",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2951-1.png",
      "./MultiFinance/images/2951-2.png",
      "./MultiFinance/images/2951-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2951-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-124",
    "output": [
      "year_2021 = 15.2\n    year_2022 = 12.4\n    year_2023 = 14.5\n    \n    # Do math calculation to get the answer\n    cagr = ((year_2023 / year_2021) ** (1/2)) - 1\n    answer = round(cagr * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 120,
      "prompt_tokens": 2288,
      "completion_tokens_details": {
        "text_tokens": 120
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 2033
      },
      "total_tokens": 2408
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年至2023年境外销售的复合年增长率，并保留两位小数。",
    "python_solution": "def solution():\n    value_2021 = 15.2\n    value_2022 = 12.4\n    value_2023 = 14.5\n    n = 2\n\n    cagr = ((value_2023 / value_2021) ** (1 / n) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_36_36_16_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-325",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 8
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2385-1.png",
      "./MultiFinance/images/2385-2.png",
      "./MultiFinance/images/2385-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2385-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-125",
    "output": [
      "investment_cash_flow_2023 = -32\n    investment_cash_flow_2024 = -31\n    difference = investment_cash_flow_2023 - investment_cash_flow_2024\n    percentage_difference = (difference / abs(investment_cash_flow_2023)) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 102,
      "prompt_tokens": 2692,
      "completion_tokens_details": {
        "text_tokens": 102
      },
      "prompt_tokens_details": {
        "text_tokens": 282,
        "image_tokens": 2410
      },
      "total_tokens": 2794
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年和2024年的投资活动现金流的差值，并将该差值占2023年投资活动现金流的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    investment_2023 = 225\n    investment_2024 = -32\n    diff = investment_2024 - investment_2023\n    ratio = diff / investment_2023 * 100\n    return round(ratio, 1)",
    "image_id": "company_24_24_21_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-685",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2942-1.png",
      "./MultiFinance/images/2942-2.png",
      "./MultiFinance/images/2942-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2942-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-126",
    "output": [
      "flowAsset_2023 = 3750\n    flowAsset_2024 = 4141\n    \n    # Do math calculation to get the answer\n    growthRate = (flowAsset_2024 - flowAsset_2023) / flowAsset_2023 * 100\n    \n    # return answer\n    return round(growthRate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 2861,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 2606
      },
      "total_tokens": 2967
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2024年的流动资产增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2023 = 3750\n    current_assets_2024 = 4141\n\n    # Multi-step logic\n    growth_rate = (current_assets_2024 - current_assets_2023) / current_assets_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_10_10_14_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-377",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2701-1.png",
      "./MultiFinance/images/2701-2.png",
      "./MultiFinance/images/2701-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2701-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-127",
    "output": [
      "year_1 = 2200\n    year_2 = 2400\n    year_3 = 2660\n    \n    # Do math calculation to get the answer\n    growth_rate = ((year_3 - year_1) / year_1 + (year_2 - year_1) / year_1) / 2 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 2448,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2185
      },
      "total_tokens": 2553
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算蜀道集团2021年至2023年营业收入的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    revenue_2021 = 2200\n    revenue_2022 = 2400\n    revenue_2023 = 2660\n    growth_rate_2022 = (revenue_2022 - revenue_2021) / revenue_2021 * 100\n    growth_rate_2023 = (revenue_2023 - revenue_2022) / revenue_2022 * 100\n    avg_growth_rate = (growth_rate_2022 + growth_rate_2023) / 2\n    return round(avg_growth_rate, 2)",
    "image_id": "company_26_26_09_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1760",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.477336814478207,
    "images": [
      "./MultiFinance/images/2241-1.png",
      "./MultiFinance/images/2241-2.png",
      "./MultiFinance/images/2241-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2241-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-128",
    "output": [
      "year_2016 = 8507\n    year_2024Q2 = 13770\n    \n    # Do math calculation to get the answer\n    growth_rate = ((year_2024Q2 - year_2016) / year_2016) ** (1/9)\n    \n    answer = round(growth_rate * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 115,
      "prompt_tokens": 3650,
      "completion_tokens_details": {
        "text_tokens": 115
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 3387
      },
      "total_tokens": 3765
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2016年至2024年第二季度长三角（除上海）地区的贷款规模的年均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    # 长三角（除上海）2016年和2024年第二季度的贷款规模\n    value_2016 = 1491\n    value_2024Q2 = 4462\n    # 计算年均增长率\n    years = 8\n    growth_rate = ((value_2024Q2 / value_2016) ** (1/years)) - 1\n    return round(growth_rate, 2)",
    "image_id": "company_07_07_13_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1842",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 3.7841896339182615,
    "images": [
      "./MultiFinance/images/2516-1.png",
      "./MultiFinance/images/2516-2.png",
      "./MultiFinance/images/2516-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2516-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-129",
    "output": [
      "sales_expense_rate_2018 = 4.4\n    sales_expense_rate_2017 = 6.1\n    management_expense_rate_2017 = 12.0\n    management_expense_rate_2018 = 12.0\n    management_expense_rate_2019 = 7.9\n    management_expense_rate_2020 = 6.7\n    management_expense_rate_2021 = 5.2\n    management_expense_rate_2022 = 4.2\n    management_expense_rate_2023 = 4.1\n    management_expense_rate_2024Q1_Q3 = 3.1\n    average_management_expense_rate = (management_expense_rate_2017 + management_expense_rate_2018 + management_expense_rate_2019 + management_expense_rate_2020 + management_expense_rate_2021 + management_expense_rate_2022 + management_expense_rate_2023 + management_expense_rate_2024Q1_Q3) / 8\n    \n    # Do math calculation to get the answer\n    difference_sales_expense_rate = sales_expense_rate_2018 - sales_expense_rate_2017\n    result = difference_sales_expense_rate * average_management_expense_rate\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 341,
      "prompt_tokens": 2212,
      "completion_tokens_details": {
        "text_tokens": 341
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 1940
      },
      "total_tokens": 2553
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年与2017年的销售费用率之差，并将结果乘以管理费用率的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    sales_expense_rate_2017 = 4.4\n    sales_expense_rate_2018 = 5.0\n    management_expense_rate_avg = (6.1 + 12.0) / 2\n\n    diff = sales_expense_rate_2018 - sales_expense_rate_2017\n    result = diff * management_expense_rate_avg\n    return round(result, 1)",
    "image_id": "company_16_16_08_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1884",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2750-1.png",
      "./MultiFinance/images/2750-2.png",
      "./MultiFinance/images/2750-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2750-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-130",
    "output": [
      "sales_expense_2020 = 0.09\n    sales_expense_2021 = 0.12\n    sales_expense_2022 = 0.09\n    \n    total_sales_expense_2020_2021 = sales_expense_2020 + sales_expense_2021\n    percentage_increase = (sales_expense_2022 - total_sales_expense_2020_2021) / total_sales_expense_2020_2021 * 100\n    \n    # return answer\n    return round(percentage_increase, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 149,
      "prompt_tokens": 2245,
      "completion_tokens_details": {
        "text_tokens": 149
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 1964
      },
      "total_tokens": 2394
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年和2021年的公斤奶销售费用之和，然后将这个总和与2022年的公斤奶销售费用进行比较，求出百分比增长；请保留一位小数。",
    "python_solution": "def solution():\n    sales_expense_2020 = 0.05\n    sales_expense_2021 = 0.09\n    sales_expense_2022 = 0.09\n\n    total_sales_expense_2020_2021 = sales_expense_2020 + sales_expense_2021\n    growth_percentage = ((sales_expense_2022 - total_sales_expense_2020_2021) / total_sales_expense_2020_2021) * 100\n    return round(growth_percentage, 1)",
    "image_id": "company_35_35_15_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-659",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2608-1.png",
      "./MultiFinance/images/2608-2.png",
      "./MultiFinance/images/2608-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2608-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-131",
    "output": [
      "close_price = 6.32\n    high_low_difference = 8.29 - 5.46\n    \n    # Calculate percentage fluctuation\n    percentage_fluctuation = (high_low_difference / close_price) * 100\n    \n    # Return result rounded to one decimal place\n    return round(percentage_fluctuation, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 90,
      "prompt_tokens": 412,
      "completion_tokens_details": {
        "text_tokens": 90
      },
      "prompt_tokens_details": {
        "text_tokens": 290,
        "image_tokens": 122
      },
      "total_tokens": 502
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中给出的收盘价和一年内最高/最低价，计算出该股票在这一年内价格波动的幅度（最高价与最低价之差），然后将这个差值除以当前的收盘价，得到一个百分比；请保留一位小数。",
    "python_solution": "def solution():\n    closing_price = 6.32\n    high_price = 8.29\n    low_price = 5.46\n\n    price_range = high_price - low_price\n    percentage = (price_range / closing_price) * 100\n    return round(percentage, 1)",
    "image_id": "company_14_14_00_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-71",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2902-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2902-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-132",
    "output": [
      "year1_profit_margin = 40.0%\n    year2_profit_margin = 40.0%\n    \n    # Calculate the difference between two years' profit margin\n    difference = year2_profit_margin - year1_profit_margin\n    \n    # Calculate the growth rate\n    growth_rate = (difference / year1_profit_margin) * 100\n    \n    # Return the result\n    return round(growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 3180,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2918
      },
      "total_tokens": 3285
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算其他业务在第一年和第二年的毛利润，并求这两者之间的增长率；结果请保留两位小数。",
    "python_solution": "def solution():\n    gross_profit_year1 = 92.7 * 0.618\n    gross_profit_year2 = 143.4 * 0.400\n    growth = (gross_profit_year2 - gross_profit_year1) / gross_profit_year1 * 100\n    return round(growth, 2)",
    "image_id": "company_01_01_28_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1420",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 3,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.401197381662155,
    "images": [
      "./MultiFinance/images/2806-1.png",
      "./MultiFinance/images/2806-2.png",
      "./MultiFinance/images/2806-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2806-2.png",
      "./MultiFinance/images/2806-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-133",
    "output": [
      "fund_returns = [1.52, 1.46, 0.74, 2.53, 0.45, 1.20, 1.52, 1.38, 4.30]\n    benchmark_returns = [1.52, 1.46, 0.74, 2.53, 0.45, 1.20, 1.52, 1.38, 4.30]\n    \n    # Calculate cumulative returns for each fund and benchmark\n    cumulative_fund_returns = []\n    cumulative_benchmark_returns = []\n    \n    total_fund_return = 1\n    total_benchmark_return = 1\n    \n    for i in range(len(fund_returns)):\n        total_fund_return *= (1 + fund_returns[i])\n        total_benchmark_return *= (1 + benchmark_returns[i])\n        \n        cumulative_fund_returns.append(total_fund_return)\n        cumulative_benchmark_returns.append(total_benchmark_return)\n    \n    # Calculate the difference between the two cumulative returns\n    difference = sum(cumulative_fund_returns) - sum(cumulative_benchmark_returns)\n    \n    # Return the difference rounded to two decimal places\n    return round(difference, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 287,
      "prompt_tokens": 3517,
      "completion_tokens_details": {
        "text_tokens": 287
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 3232
      },
      "total_tokens": 3804
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算某基金在特定时间点的累计收益率，并将其与基准指数进行比较。首先，计算基金的累计收益率，然后计算基准指数的累计收益率，最后求出两者之间的差值；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    fund_cumulative_return = 1.2345\n    benchmark_cumulative_return = 1.1234\n\n    # Multi-step logic\n    fund_return = fund_cumulative_return - 1\n    benchmark_return = benchmark_cumulative_return - 1\n    difference = fund_return - benchmark_return\n\n    return round(difference, 2)",
    "image_id": "macro_00_00_09_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2580",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2655-1.png",
      "./MultiFinance/images/2655-2.png",
      "./MultiFinance/images/2655-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2655-3.png",
      "./MultiFinance/images/2655-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-134",
    "output": [
      "samsung_market_share = 45\n    murata_market_share = 19\n    lg_market_share = 8.8\n    jiangsu_tianpeng_market_share = 7.9\n    other_market_share = 10\n    \n    # Calculate the sum of Samsung and Murata's market shares\n    samsung_murata_total = samsung_market_share + murata_market_share\n    \n    # Calculate the sum of LG, Jiangsu Tianpeng, and Other's market shares\n    lg_jiangsu_other_total = lg_market_share + jiangsu_tianpeng_market_share + other_market_share\n    \n    # Calculate the difference between the two sums\n    difference = samsung_murata_total - lg_jiangsu_other_total\n    \n    # Return the result rounded to one decimal place\n    return round(difference, 1)\n\n# Call the function and print the result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 191,
      "prompt_tokens": 1707,
      "completion_tokens_details": {
        "text_tokens": 191
      },
      "prompt_tokens_details": {
        "text_tokens": 287,
        "image_tokens": 1420
      },
      "total_tokens": 1898
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中三星、村田、LG、江苏天鹏和其他的市场份额，计算三星和村田的市场份额总和，并将其与LG、江苏天鹏和其他的市场份额总和进行比较，求出两者的差值；请保留一位小数。",
    "python_solution": "def solution():\n    samsung = 45\n    murata = 19\n    lg = 10\n    jiangsu_tianpeng = 5\n    other = 21\n\n    sum_samsung_murata = samsung + murata\n    sum_others = lg + jiangsu_tianpeng + other\n    difference = sum_samsung_murata - sum_others\n    return round(difference, 1)",
    "image_id": "company_02_02_12_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-98",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2530-1.png",
      "./MultiFinance/images/2530-2.png",
      "./MultiFinance/images/2530-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2530-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-135",
    "output": [
      "year_2022 = 17.2\n    year_2023 = 25.3\n    \n    # Do math calculation to get the answer\n    growth_rate = (year_2023 - year_2022) / year_2022 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 2534,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2275
      },
      "total_tokens": 2625
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年相对于2022年的营业收入增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    revenue_2022 = 17.2\n    revenue_growth_rate_2023 = 50\n    revenue_2023 = revenue_2022 * (1 + revenue_growth_rate_2023 / 100)\n    growth_rate = (revenue_2023 - revenue_2022) / revenue_2022 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_16_16_09_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1869",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.8712010109078907,
    "images": [
      "./MultiFinance/images/2415-1.png",
      "./MultiFinance/images/2415-2.png",
      "./MultiFinance/images/2415-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2415-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-136",
    "output": [
      "num_instruments_2019 = 7\n    num_instruments_2018 = 10\n    notional_amount_2019 = 800000\n    notional_amount_2018 = 1200000\n    \n    # Calculate the average notional amount per instrument for each year\n    avg_notional_amount_2019 = notional_amount_2019 / num_instruments_2019\n    avg_notional_amount_2018 = notional_amount_2018 / num_instruments_2018\n    \n    # Calculate the change in average notional amount per instrument from 2018 to 2019\n    change_avg_notional_amount = avg_notional_amount_2019 - avg_notional_amount_2018\n    \n    # Return the absolute value of the change as the answer\n    return abs(change_avg_notional_amount)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 224,
      "prompt_tokens": 689,
      "completion_tokens_details": {
        "text_tokens": 224
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 416
      },
      "total_tokens": 913
    },
    "model": "qwen-omni-turbo",
    "question": "How much has the average notional amount per interest rate swap instrument changed from 2018 to 2019 in dollars?",
    "python_solution": "def solution():\n     #Define variables name and value\n    num_instruments_2019 = 7\n    num_instruments_2018 = 10\n    notional_amt_2019 = 800000\n    notional_amt_2018 = 1200000\n\n    #Do math calculation to get the answer\n    average_notional_amt_per_instrument_2019 = notional_amt_2019 / num_instruments_2019\n    average_notional_amt_per_instrument_2018 = notional_amt_2018 / num_instruments_2018\n    answer = average_notional_amt_per_instrument_2019 - average_notional_amt_per_instrument_2018\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-88",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1999-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 0
      }
    },
    "difficulty": 3.401197381662156,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-137",
    "output": [
      "operating_expenses_2014 = 53264\n    operating_expenses_2013 = 55438\n    \n    # Do math calculation to get the answer\n    average_operating_expenses = (operating_expenses_2014 + operating_expenses_2013) / 2\n    \n    # return answer\n    return average_operating_expenses\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 102,
      "prompt_tokens": 1583,
      "completion_tokens_details": {
        "text_tokens": 102
      },
      "prompt_tokens_details": {
        "text_tokens": 351,
        "image_tokens": 1232
      },
      "total_tokens": 1685
    },
    "model": "qwen-omni-turbo",
    "question": "What was the average of the Operating Expenses in the years where Revenue is positive? (in million)",
    "python_solution": "def solution():\n    # Define variables name and value\n    operating_expenses_2014 = 53264\n    operating_expenses_2013 = 48404\n    operating_expenses_2012 = 52784\n    const_3 = 3\n    \n    # Do math calculation to get the answer\n    answer = (operating_expenses_2014 + operating_expenses_2013 + operating_expenses_2012) / const_3\n    \n    return answer",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-85",
    "img_type": "['Tables']",
    "context": "Our consolidated results are presented in the table below:\n<image 1>\nUNITED PARCEL SERVICE, INC.  AND SUBSIDIARIES MANAGEMENT'S DISCUSSION AND ANALYSIS OF FINANCIAL CONDITION AND RESULTS OF OPERATIONS 30 Revenue The change in overall revenue was impacted by the following factors for the years ended December 31, 2014 and 2013, compared with the corresponding prior year periods:",
    "images": [
      "./MultiFinance/images/1726-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-138",
    "output": [
      "yoy_2019_to_2020 = (744.6 - 661.5) / 661.5 * 100\n    yoy_2020_to_2021 = (939.2 - 744.6) / 744.6 * 100\n    \n    # Calculate percentage difference\n    diff_percentage = abs(yoy_2020_to_2021 - yoy_2019_to_2020)\n    \n    # Return result with one decimal place\n    return round(diff_percentage, 1)\n\n# Call the function and print the result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 160,
      "prompt_tokens": 1891,
      "completion_tokens_details": {
        "text_tokens": 160
      },
      "prompt_tokens_details": {
        "text_tokens": 283,
        "image_tokens": 1608
      },
      "total_tokens": 2051
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2020年到2021年的市场规模增长率，并将其与2019年到2020年的增长率进行比较；请提供结果的百分比差值，保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2019 = 770\n    value_2020 = 970\n    value_2021 = 1116\n\n    # Multi-step logic\n    growth_rate_2019_to_2020 = (value_2020 - value_2019) / value_2019 * 100\n    growth_rate_2020_to_2021 = (value_2021 - value_2020) / value_2020 * 100\n    percentage_difference = abs(growth_rate_2020_to_2021 - growth_rate_2019_to_2020)\n    return round(percentage_difference, 1)",
    "image_id": "company_13_13_13_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-891",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 8
      }
    },
    "difficulty": 4.6443908991413725,
    "images": [
      "./MultiFinance/images/2211-1.png",
      "./MultiFinance/images/2211-2.png",
      "./MultiFinance/images/2211-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2211-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-139",
    "output": [
      "corp_less_than_12m_loss_2021 = -3\n    corp_less_than_12m_fv_2021 = 255\n    corp_less_than_12m_ratio_2021 = corp_less_than_12m_loss_2021 / corp_less_than_12m_fv_2021\n    \n    corp_less_than_12m_loss_2020 = -2\n    corp_less_than_12m_fv_2020 = 133\n    corp_less_than_12m_ratio_2020 = corp_less_than_12m_loss_2020 / corp_less_than_12m_fv_2020\n    \n    diff = corp_less_than_12m_ratio_2021 - corp_less_than_12m_ratio_2020\n    \n    # return answer\n    return round(diff * 100, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 217,
      "prompt_tokens": 1571,
      "completion_tokens_details": {
        "text_tokens": 217
      },
      "prompt_tokens_details": {
        "text_tokens": 296,
        "image_tokens": 1275
      },
      "total_tokens": 1788
    },
    "model": "qwen-omni-turbo",
    "question": "What is the difference in the ratio of the corporate and other securities' unrealized loss to fair value over less than twelve months period between March 31, 2021 and December 31, 2020 in percentage points?",
    "python_solution": "def solution():\n    #Define variables name and value \n    unrealized_loss_2021 = -3 \n    fair_value_2021 = 255\n    unrealized_loss_2020 = -2\n    fair_value_2020 = 133\n\n    #Do math calculation to get the answer \n    ratio_2021 = abs(unrealized_loss_2021)/ fair_value_2021\n    ratio_2020 = abs(unrealized_loss_2020)/ fair_value_2020\n    difference = (ratio_2021 - ratio_2020)*100 # multiply by 100 to get percentage\n    return difference\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-109",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2017-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 6
      }
    },
    "difficulty": 4.356708826689592,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-140",
    "output": [
      "spot_rate_1_year = 8.0 / 100\n    spot_rate_2_years = (9.0 + (9.0 / 2)) / 100\n    spot_rate_3_years = (9.5 + (9.5 / 2) + (9.5 / 3)) / 100\n    \n    # Do math calculation to get the answer\n    present_value = (spot_rate_1_year * 10) + (spot_rate_2_years * 10) + (spot_rate_3_years * 10)\n    \n    answer = 100 - present_value\n    \n    # return answer\n    return round(answer, 3)\n\n```"
    ],
    "usage": {
      "completion_tokens": 154,
      "prompt_tokens": 1522,
      "completion_tokens_details": {
        "text_tokens": 154
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1242
      },
      "total_tokens": 1676
    },
    "model": "qwen-omni-turbo",
    "question": "Assuming the same series of spot rates, what is the cost of a 3-year bond that provides an annual interest payment at a 10% coupon rate, and has a face value of 100? Answer to three decimal places.",
    "python_solution": "def solution():\n    Z1, Z2, Z3, PMT, FV = 0.08, 0.09, 0.095, 10, 100\n    PV1 = PMT / (1 + Z1)\n    PV2 = PMT / (1 + Z2)**2\n    PV3 = (PMT + FV) / (1 + Z3)**3\n    PV = PV1 + PV2 + PV3\n    return PV",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 3,
          "%": 0,
          "**": 2
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 8
      }
    },
    "difficulty": 4.700480365792417,
    "source_id": "validation-82",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/322-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-141",
    "output": [
      "cash_2020 = 17435\n    cash_2019 = 11390\n    \n    # Calculate the percentage increase\n    percentage_increase = ((cash_2020 - cash_2019) / cash_2019) * 100\n    \n    # Return the result\n    return percentage_increase\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 95,
      "prompt_tokens": 2720,
      "completion_tokens_details": {
        "text_tokens": 95
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 2441
      },
      "total_tokens": 2815
    },
    "model": "qwen-omni-turbo",
    "question": "What was the percentage increase in the value of the company's cash assets over the nine months ended September 30, 2020?",
    "python_solution": "def solution():\n     #Define variables name and value \n\n    ending_cash_sept2020 = 17435    #Cash value at the end of September 2020 \n\n    beginning_cash_jan2020 = 3743   #Cash value at the beginning of the period in January 2020\n\n    #Do math calculation to get the answer\n    percent_increase = ((ending_cash_sept2020 - beginning_cash_jan2020) / beginning_cash_jan2020) * 100\n    answer = percent_increase\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-35",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1961-1.png",
      "./MultiFinance/images/1961-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-142",
    "output": [
      "net_income_2021 = 41\n    weighted_average_common_shares_outstanding_basic_2021 = 745.9\n    weighted_average_common_shares_outstanding_diluted_2021 = 751.4\n    \n    # Calculate profit per share (basic)\n    profit_per_share_basic = net_income_2021 / weighted_average_common_shares_outstanding_basic_2021\n    \n    # Calculate profit per share (dilutive effect)\n    profit_per_share_dilutive = net_income_2021 / weighted_average_common_shares_outstanding_diluted_2021\n    \n    # Calculate average profit per share\n    average_profit_per_share = (profit_per_share_basic + profit_per_share_dilutive) / 2\n    \n    # Return the answer\n    return average_profit_per_share\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 198,
      "prompt_tokens": 2184,
      "completion_tokens_details": {
        "text_tokens": 198
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 1899
      },
      "total_tokens": 2382
    },
    "model": "qwen-omni-turbo",
    "question": "What is the average amount of profit per share, considering both basic and dilutive effects of equity compensation plans in the first six months of 2021 in US dollars?",
    "python_solution": "def solution():\n    net_income = 2938\n    weighted_avg_common_shares_basic = 745.9\n    dilutive_effect_equity_compensation_plans = 5.5\n    total_shares = weighted_avg_common_shares_basic + dilutive_effect_equity_compensation_plans\n\n    # Do math calculation to get the answer\n    earnings_per_share = net_income / (total_shares * 1e6) # Since number of shares is in millions\n    answer = earnings_per_share\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-45",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1965-1.png",
      "./MultiFinance/images/1965-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-143",
    "output": [
      "# Calculate the sum of the annual long-term debt maturities for the next five years\n    sum_maturities = 760_000 + 857_679 + 898_500 + 960_764 + 1_304_431\n    \n    # Return the rounded sum\n    return round(sum_maturities)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 102,
      "prompt_tokens": 2369,
      "completion_tokens_details": {
        "text_tokens": 102
      },
      "prompt_tokens_details": {
        "text_tokens": 1125,
        "image_tokens": 1244
      },
      "total_tokens": 2471
    },
    "model": "qwen-omni-turbo",
    "question": "what was the sum of the annual long-term debt maturities outstanding as of december 31 , 2017 , for the next five years Answer to the nearest integer.",
    "answer": "4781374",
    "context": "( a ) consists of pollution control revenue bonds and environmental revenue bonds , some of which are secured by collateral mortgage bonds . ( b ) pursuant to the nuclear waste policy act of 1982 , entergy 2019s nuclear owner/licensee subsidiaries have contracts with the doe for spent nuclear fuel disposal service . a0 a0the contracts include a one-time fee for generation prior to april 7 , 1983 . a0 a0entergy arkansas is the only entergy company that generated electric power with nuclear fuel prior to that date and includes the one-time fee , plus accrued interest , in long-term debt . ( c ) see note 10 to the financial statements for further discussion of the waterford 3 lease obligation and entergy louisiana 2019s acquisition of the equity participant 2019s beneficial interest in the waterford 3 leased assets and for further discussion of the grand gulf lease obligation . ( d ) this note did not have a stated interest rate , but had an implicit interest rate of 7.458% ( 7.458 % ) . ( e ) the fair value excludes lease obligations of $ 34 million at system energy and long-term doe obligations of $ 183 million at entergy arkansas , and includes debt due within one year . a0 a0fair values are classified as level 2 in the fair value hierarchy discussed in note 15 to the financial statements and are based on prices derived from inputs such as benchmark yields and reported trades . the annual long-term debt maturities ( excluding lease obligations and long-term doe obligations ) for debt outstanding as of december a031 , 2017 , for the next five years are as follows : amount ( in thousands ) .\n\n<image 1>\n\nin november 2000 , entergy 2019s non-utility nuclear business purchased the fitzpatrick and indian point 3 power plants in a seller-financed transaction . as part of the purchase agreement with nypa , entergy recorded a liability representing the net present value of the payments entergy would be liable to nypa for each year that the fitzpatrick and indian point 3 power plants would run beyond their respective original nrc license expiration date . in october 2015 , entergy announced a planned shutdown of fitzpatrick at the end of its fuel cycle . as a result of the announcement , entergy reduced this liability by $ 26.4 million pursuant to the terms of the purchase agreement . in august 2016 , entergy entered into a trust transfer agreement with nypa to transfer the decommissioning trust funds and decommissioning liabilities for the indian point 3 and fitzpatrick plants to entergy . as part of the trust transfer agreement , the original decommissioning agreements were amended , and the entergy subsidiaries 2019 obligation to make additional license extension payments to nypa was eliminated . in the third quarter 2016 , entergy removed the note payable of $ 35.1 million from the consolidated balance sheet . entergy louisiana , entergy mississippi , entergy new orleans , entergy texas , and system energy have obtained long-term financing authorizations from the ferc that extend through october 2019 . a0 a0entergy arkansas has obtained long-term financing authorization from the apsc that extends through december 2018 . entergy new orleans has also obtained long-term financing authorization from the city council that extends through june 2018 , as the city council has concurrent jurisdiction with the ferc over such issuances . capital funds agreement pursuant to an agreement with certain creditors , entergy corporation has agreed to supply system energy with sufficient capital to : 2022 maintain system energy 2019s equity capital at a minimum of 35% ( 35 % ) of its total capitalization ( excluding short- term debt ) ; entergy corporation and subsidiaries notes to financial statements .\n",
    "program": "debt_maturity_2018 = 760000\ndebt_maturity_2019 = 857679\ndebt_maturity_2020 = 898500\ndebt_maturity_2021 = 960764\ndebt_maturity_2022 = 1304431\ntotal_debt = debt_maturity_2018 + debt_maturity_2019 + debt_maturity_2020 + debt_maturity_2021 + debt_maturity_2022\nanswer = total_debt",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 59,
        "total_numbers": 61
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 0
      }
    },
    "difficulty": 3.332204510175204,
    "source_id": "test-745",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1397-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-144",
    "output": [
      "pe_2024 = 14.49\n    pe_2025 = 13.82\n    eps_2024 = 1.58\n    \n    # Do math calculation to get the answer\n    average_pe = (pe_2024 + pe_2025) / 2\n    result = average_pe / eps_2024\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 117,
      "prompt_tokens": 2853,
      "completion_tokens_details": {
        "text_tokens": 117
      },
      "prompt_tokens_details": {
        "text_tokens": 286,
        "image_tokens": 2567
      },
      "total_tokens": 2970
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算某公司在2024年和2025年的预期市盈率（PE）的平均值，并将结果除以该公司的2024年预期每股收益（EPS）；请保留一位小数。",
    "python_solution": "def solution():\n    pe_2024 = 14.45\n    pe_2025 = 11.19\n    eps_2024 = 1.66\n\n    avg_pe = (pe_2024 + pe_2025) / 2\n    result = avg_pe / eps_2024\n    return round(result, 1)",
    "image_id": "company_09_09_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-39",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2899-1.png",
      "./MultiFinance/images/2899-2.png",
      "./MultiFinance/images/2899-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2899-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-145",
    "output": [
      "total_depreciation_amortization = sum([4667, 5368, 5051, 5326, 5598])\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return int(total_depreciation_amortization)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 79,
      "prompt_tokens": 2221,
      "completion_tokens_details": {
        "text_tokens": 79
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 1965
      },
      "total_tokens": 2300
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2027年折旧摊销的总和，并保留整数。",
    "python_solution": "def solution():\n    depreciation_2023 = 4667\n    depreciation_2024 = 5368\n    depreciation_2025 = 5051\n    depreciation_2026 = 5326\n    depreciation_2027 = 5598\n    total_depreciation = depreciation_2023 + depreciation_2024 + depreciation_2025 + depreciation_2026 + depreciation_2027\n    return int(total_depreciation)",
    "image_id": "company_19_19_01_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1040",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2724-1.png",
      "./MultiFinance/images/2724-2.png",
      "./MultiFinance/images/2724-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2724-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-146",
    "output": [
      "hansson_shares = 4_380_659\n    jim_kelly_shares = 0\n    \n    # Calculate the new number of shares owned by the Hanssen family after doubling\n    doubled_hansson_shares = hansson_shares * 2\n    \n    # Calculate the average number of shares owned by the Hanssen family and Jim Kelly\n    average_shares = (doubled_hansson_shares + jim_kelly_shares) / 2\n    \n    # Return the answer\n    return average_shares\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 129,
      "prompt_tokens": 1800,
      "completion_tokens_details": {
        "text_tokens": 129
      },
      "prompt_tokens_details": {
        "text_tokens": 538,
        "image_tokens": 1262
      },
      "total_tokens": 1929
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the average number of shares owned by the Hanssen family and Jim Kelly if the number of shares owned by the Hanssen family is doubled 2 ?",
    "python_solution": "def solution():\n    # Define variables name and value\n    hansson_family_shares = 4380659\n    jim_kelly_shares = 0\n\n    # Double the number of shares owned by the Hanssen family\n    hansson_family_shares_doubled = hansson_family_shares * 2\n\n    # Calculate the average number of shares owned by the Hanssen family and Jim Kelly\n    answer = (hansson_family_shares_doubled + jim_kelly_shares) / 2\n\n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-39",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n ITEM 7. MAJOR SHAREHOLDERS AND RELATED PARTY TRANSACTIONS A. Major Shareholders The following table sets forth information regarding beneficial ownership of our common shares for (i) owners of more than five percent of our common shares and (ii) our directors and officers, of which we are aware of the date of this annual report. (1) Based on 147,230,634 common shares outstanding as of the date of this annual report. (2) The holdings of High Seas AS, which are for the economic interest of members of the Hansson family, as well as the personal holdings of our Chief Executive Officer and Chairman, Mr. Herbjorn Hansson, and our director, Alexander Hansson, are included in the amount reported herein. * Less than 1% of our common outstanding shares. As of April 14, 2020, we had 575 holders of record in the United States, including Cede & Co., which is the Depositary Trust Company’s nominee for holding shares on behalf of brokerage firms, as a single holder of record. We had a total of 147,230,634 Common Shares outstanding as of the date of this annual report.",
    "images": [
      "./MultiFinance/images/1778-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-147",
    "output": [
      "cpi_2023_1_to_2023_6 = -0.8 + (-0.7) + (-0.5) + (-0.3) + (0.0) + (0.1)\n    cpi_2024_12_to_2024_6 = 0.5 + 0.6 + 0.7 + 0.8 + 0.9 + 1.0\n    \n    total_cpi_2023_1_to_2023_6 = sum(cpi_2023_1_to_2023_6)\n    total_cpi_2024_12_to_2024_6 = sum(cpi_2024_12_to_2024_6)\n    \n    growth_percentage = ((total_cpi_2024_12_to_2024_6 - total_cpi_2023_1_to_2023_6) / abs(total_cpi_2023_1_to_2023_6)) * 100\n    \n    # return answer\n    return round(growth_percentage, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 272,
      "prompt_tokens": 3956,
      "completion_tokens_details": {
        "text_tokens": 272
      },
      "prompt_tokens_details": {
        "text_tokens": 297,
        "image_tokens": 3659
      },
      "total_tokens": 4228
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年12月到2024年6月的CPI总和，并将其与2023年1月到2023年6月的CPI总和进行比较，求出增长百分比；请保留两位小数。",
    "python_solution": "def solution():\n    cpi_2023_1_to_6 = [2.1, 1.0, 0.7, 0.1, 0.2, -0.3]\n    cpi_2023_12_to_2024_6 = [-0.8, 0.7, 0.1, 0.3, 0.3, 0.2, 0.5, 0.6]\n    \n    sum_2023_1_to_6 = sum(cpi_2023_1_to_6)\n    sum_2023_12_to_2024_6 = sum(cpi_2023_12_to_2024_6)\n    \n    growth_percentage = ((sum_2023_12_to_2024_6 - sum_2023_1_to_6) / sum_2023_1_to_6) * 100\n    return round(growth_percentage, 2)",
    "image_id": "macro_09_09_19_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2644",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 9
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 10
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2359-1.png",
      "./MultiFinance/images/2359-2.png",
      "./MultiFinance/images/2359-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2359-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-148",
    "output": [
      "february_27_total_debt = 844.3 + 754.8\n    september_11_total_debt = 844.3 + 754.8\n    \n    february_27_assets = 26598.0\n    september_11_assets = 27344.3\n    \n    # Calculate the rate of increase in total debt as a percentage of total assets\n    rate_of_increase = ((september_11_total_debt - february_27_total_debt) / february_27_total_debt) * 100\n    \n    # Return the calculated rate of increase\n    return rate_of_increase\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 167,
      "prompt_tokens": 1551,
      "completion_tokens_details": {
        "text_tokens": 167
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 1267
      },
      "total_tokens": 1718
    },
    "model": "qwen-omni-turbo",
    "question": "What is the rate of increase in total debt as a percentage of total assets from February 27, 2021 to September 11, 2021 in percent?",
    "python_solution": "def solution():\n     #Define variables name and value\n    total_debt_feb_21 = 8101.2 \n    total_assets_feb_21 = 26598.0\n    total_debt_sep_21 = 8129.1\n    total_assets_sep_21 = 27344.3\n\n    #Do math calculation to get the answer\n    debt_to_asset_ratio_feb_21 = total_debt_feb_21 / total_assets_feb_21\n    debt_to_asset_ratio_sep_21 = total_debt_sep_21 / total_assets_sep_21\n    rate_of_increase = ((debt_to_asset_ratio_sep_21 - debt_to_asset_ratio_feb_21)/ debt_to_asset_ratio_feb_21) * 100\n    answer = rate_of_increase\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-193",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2065-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 4
      }
    },
    "difficulty": 4.174387269895637,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-149",
    "output": [
      "sum_return_2_0 = -17.84 + (-11.71) + (-14.48) + (-15.27) + (-17.84) + (33.73) + (45.89) + (42.94) + (30.67) + (13.47) + (-18.41) + (-2.63) + (7.35) + (13.57) + (15.47) + (-15.67) + (-12.55) + (-8.16) + (-8.09) + (-12.79) + (-9.28) + (-0.93) + (2.83) + (8.69) + (2.34) + (-2.49) + (4.19) + (3.15) + (2.98) + (0.13) + (-13.29) + (-2.03) + (0.46) + (5.99) + (-1.29) + (5.30) + (14.50) + (21.85) + (28.72) + (28.38) + (28.83) + (25.41) + (16.26) + (9.73) + (1.30) + (22.96) + (15.01) + (14.91) + (14.02) + (5.41) + (2.06) + (4.11) + (8.05) + (5.80) + (0.62) + (3.59) + (8.46) + (11.31) + (11.31) + (18.17) + (22.66) + (28.06) + (23.07) + (0.62) + (3.61) + (8.21) + (6.50) + (15.81) + (15.36) + (15.36) + (8.04) + (8.06) + (8.06) + (8.06) + (7.02) + (7.07) + (7.07)\n    \n    # return answer\n    return round(sum_return_2_0, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 613,
      "prompt_tokens": 2613,
      "completion_tokens_details": {
        "text_tokens": 613
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2350
      },
      "total_tokens": 3226
    },
    "model": "qwen-omni-turbo",
    "question": "请计算第2.0组在2014年到2024年的总年化超额收益，并将结果保留两位小数。",
    "python_solution": "def solution():\n    values = [-11.71, 45.89, -2.63, -12.55, -0.93, 4.19, -2.03, 14.5, 25.41, 15.01, 4.11]\n    total = sum(values)\n    return round(total, 2)",
    "image_id": "strategy_04_04_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3112",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 12
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 5,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 4
      }
    },
    "difficulty": 3.2188758248682006,
    "images": [
      "./MultiFinance/images/2897-1.png",
      "./MultiFinance/images/2897-2.png",
      "./MultiFinance/images/2897-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2897-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-150",
    "output": [
      "investment1 = 500\n    return1 = 12/100\n    investment2 = 600\n    return2 = 5/100\n    investment3 = 1000\n    return3 = 1/100\n    \n    total_investment = investment1 + investment2 + investment3\n    total_return = investment1 * return1 + investment2 * return2 + investment3 * return3\n    holding_period_return = total_return / total_investment\n    \n    # return answer\n    return round(holding_period_return*100, 3)\n```"
    ],
    "usage": {
      "completion_tokens": 132,
      "prompt_tokens": 1508,
      "completion_tokens_details": {
        "text_tokens": 132
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1242
      },
      "total_tokens": 1640
    },
    "model": "qwen-omni-turbo",
    "question": "John oversees a fund, with the returns for the first three years displayed below: What will be the holding period return (expressed as a percentage)? Answer to three decimal places.",
    "python_solution": "def solution():\n    # Define variables name and value\n    investment_year_1 = 500\n    return_year_1 = 0.12\n    \n    investment_year_2 = 600\n    return_year_2 = 0.05\n    \n    investment_year_3 = 1000\n    return_year_3 = 0.01\n    \n    # Calculate future value for each year\n    future_value_year_1 = investment_year_1 * (1 + return_year_1)\n    future_value_year_2 = investment_year_2 * (1 + return_year_2)\n    future_value_year_3 = investment_year_3 * (1 + return_year_3)\n    \n    # Calculate total future value\n    total_future_value = future_value_year_1 + future_value_year_2 + future_value_year_3\n    \n    # Calculate total initial investment\n    total_initial_investment = investment_year_1 + investment_year_2 + investment_year_3\n    \n    # Calculate holding period return\n    holding_period_return = ((total_future_value / total_initial_investment) - 1) * 100\n    \n    # return answer\n    return holding_period_return\n",
    "topic": "Portfolio Management & Strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 7,
          "-": 1,
          "*": 4,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 13
      },
      "code_statistics": {
        "lines": 19,
        "parentheses": 10
      }
    },
    "difficulty": 5.7430031878094825,
    "source_id": "validation-144",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/345-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-151",
    "output": [
      "financial_style_change = -0.46 + -0.90\n    consumption_style_change = 1.07 + -0.90\n    shanghai_stock_index_change = 0.60\n    \n    # Do math calculation to get the answer\n    result = (financial_style_change + consumption_style_change) * shanghai_stock_index_change\n    \n    # return answer\n    return round(result, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 94,
      "prompt_tokens": 3746,
      "completion_tokens_details": {
        "text_tokens": 94
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 3479
      },
      "total_tokens": 3840
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算金融风格与消费风格的变动值之和，并将该和值乘以上证指数的变动值；请保留一位小数。",
    "python_solution": "def solution():\n    finance_style = -0.60\n    consumption_style = -3.27\n    shanghai_index = -0.99\n\n    sum_styles = finance_style + consumption_style\n    result = sum_styles * shanghai_index\n    return round(result, 1)",
    "image_id": "strategy_02_02_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3093",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2691-1.png",
      "./MultiFinance/images/2691-2.png",
      "./MultiFinance/images/2691-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2691-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-152",
    "output": [
      "total_market_share = 21.2 + 16.6 + 12.9 + 8.6 + 6.7 + 3.3 + 2.2 + 1.7 + 1.5 + 0.2\n    crystal_photonics_market_share = 23.1\n    result = (total_market_share - crystal_photonics_market_share) / crystal_photonics_market_share * 100\n    \n    # return answer\n    return round(result, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 115,
      "prompt_tokens": 2561,
      "completion_tokens_details": {
        "text_tokens": 115
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 2290
      },
      "total_tokens": 2676
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有公司的市场份额总和，并将这个总和减去水晶光电的市场份额，然后将结果除以水晶光电的市场份额，得到的百分比保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    shuixianguangdian = 23.1\n    huawei = 21.2\n    huayangduomeiti = 16.6\n    zeyingdianzi = 8.6\n    jingweihengrun = 12.9\n    fudikeji = 6.7\n    yilidianzi = 3.3\n    LG = 2.2\n    dalujiatuan = 1.7\n    other = 1.5\n\n    # Multi-step logic\n    total_market_share = shuixianguangdian + huawei + huayangduomeiti + zeyingdianzi + jingweihengrun + fudikeji + yilidianzi + LG + dalujiatuan + other\n    remaining_market_share = total_market_share - shuixianguangdian\n    percentage = (remaining_market_share / shuixianguangdian) * 100\n    return round(percentage, 2)",
    "image_id": "company_18_18_31_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-784",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 8
      },
      "operator_statistics": {
        "operators": {
          "+": 9,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 13
      },
      "code_statistics": {
        "lines": 16,
        "parentheses": 4
      }
    },
    "difficulty": 5.455321115357702,
    "images": [
      "./MultiFinance/images/2155-1.png",
      "./MultiFinance/images/2155-2.png",
      "./MultiFinance/images/2155-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2155-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-153",
    "output": [
      "opec_plus_12_dec = 35279\n    opec_plus_12_jan = 35174\n    \n    change = (opec_plus_12_jan - opec_plus_12_dec) / opec_plus_12_dec * 100\n    \n    # return answer\n    return round(change, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 95,
      "prompt_tokens": 1541,
      "completion_tokens_details": {
        "text_tokens": 95
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 1262
      },
      "total_tokens": 1636
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年12月和2025年1月OPEC+合计产量的变化量，并将结果表示为2024年12月产量的百分比，保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    dec_production = 35279\n    jan_production = 35174\n\n    # Multi-step logic\n    change = jan_production - dec_production\n    percentage_change = (change / dec_production) * 100\n    rounded_percentage = round(percentage_change, 2)\n\n    return rounded_percentage",
    "image_id": "industry_06_06_03_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2033",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2548-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2548-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-154",
    "output": [
      "growth_rate = (179.85 - 179.85) / 179.85 * 100\n    \n    # Do math calculation to get the answer\n    annual_growth_rate = growth_rate / 4\n    \n    # return answer\n    return round(annual_growth_rate, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 76,
      "prompt_tokens": 3136,
      "completion_tokens_details": {
        "text_tokens": 76
      },
      "prompt_tokens_details": {
        "text_tokens": 251,
        "image_tokens": 2885
      },
      "total_tokens": 3212
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算某基金的年度增长率，并将其结果保留两位小数。",
    "python_solution": "def calculate_growth_rate():\n    value_last_year = 100.00\n    value_this_year = 120.00\n    growth_rate = (value_this_year - value_last_year) / value_last_year * 100\n    return round(growth_rate, 2)",
    "image_id": "macro_00_00_10_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2585",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3024-1.png",
      "./MultiFinance/images/3024-2.png",
      "./MultiFinance/images/3024-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3024-2.png",
      "./MultiFinance/images/3024-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-155",
    "output": [
      "sum = 0\n    count = 0\n    for i in range(19):\n        sum += float(df.iloc[i]['股票6月涨幅'])\n        count += 1\n    answer = round(sum/count,1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 61,
      "prompt_tokens": 2757,
      "completion_tokens_details": {
        "text_tokens": 61
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 2488
      },
      "total_tokens": 2818
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2014年7月31日至2015年1月31日期间，股票6月涨幅的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    stock_jul = 9.5\n    stock_aug = 10.2\n    stock_sep = 17.3\n    stock_oct = 19.3\n    stock_nov = 33.3\n    stock_dec = 65.6\n    stock_jan = 46.4\n\n    average_stock = (stock_jul + stock_aug + stock_sep + stock_oct + stock_nov + stock_dec + stock_jan) / 7\n    return round(average_stock, 1)",
    "image_id": "strategy_03_03_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2938",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 4
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2275-1.png",
      "./MultiFinance/images/2275-2.png",
      "./MultiFinance/images/2275-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2275-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-156",
    "output": [
      "nasdaq_2008 = 59.03\n    nasdaq_2009 = 82.25\n    \n    # Calculate ROI\n    roi = ((nasdaq_2009 - nasdaq_2008) / nasdaq_2008) * 100\n    \n    # Return the result\n    return roi\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 1775,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 557,
        "image_tokens": 1218
      },
      "total_tokens": 1871
    },
    "model": "qwen-omni-turbo",
    "question": "what is the roi of nasdaq composite from 2008 to 2009? (in percentage)",
    "python_solution": "def solution():\n    # Define variables name and value\n    start_value = 100\n    end_value = 59.03\n    const_100 = 100\n    \n    # Do math calculation to get the answer\n    difference = end_value - start_value\n    answer = (difference / start_value) * const_100\n    \n    return answer",
    "source": "FinQA",
    "source_id": "simpshort-testmini-48",
    "img_type": "['Tables']",
    "context": "stockholder return performance graphs the following graph compares the cumulative 5-year total stockholder return on our common stock relative to the cumulative total return of the nasdaq composite index and the s&p 400 information technology index . the graph assumes that the value of the investment in our common stock and in each index ( including reinvestment of dividends ) was $ 100 on december 29 , 2007 and tracks it through december 29 , 2012 . comparison of 5 year cumulative total return* among cadence design systems , inc. , the nasdaq composite index , and s&p 400 information technology cadence design systems , inc . nasdaq composite s&p 400 information technology 12/29/1212/31/111/1/111/2/101/3/0912/29/07 *$ 100 invested on 12/29/07 in stock or 12/31/07 in index , including reinvestment of dividends . indexes calculated on month-end basis . copyright a9 2013 s&p , a division of the mcgraw-hill companies inc . all rights reserved. . \n<image 1>\n the stock price performance included in this graph is not necessarily indicative of future stock price performance .",
    "images": [
      "./MultiFinance/images/1495-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-157",
    "output": [
      "long_term_debt_book_value = 4000000\n    preferred_stock_book_value = 40000\n    common_stock_equity_book_value = 1060000\n    total_book_value = long_term_debt_book_value + preferred_stock_book_value + common_stock_equity_book_value\n    \n    long_term_debt_market_value = 3840000\n    preferred_stock_market_value = 60000\n    common_stock_equity_market_value = 3000000\n    total_market_value = long_term_debt_market_value + preferred_stock_market_value + common_stock_equity_market_value\n    \n    after_tax_cost_long_term_debt = 6.0\n    after_tax_cost_preferred_stock = 13.0\n    after_tax_cost_common_stock_equity = 17.0\n    \n    weight_long_term_debt = long_term_debt_market_value / total_market_value\n    weight_preferred_stock = preferred_stock_market_value / total_market_value\n    weight_common_stock_equity = common_stock_equity_market_value / total_market_value\n    \n    weighted_average_cost_of_capital = (weight_long_term_debt * after_tax_cost_long_term_debt +\n                                        weight_preferred_stock * after_tax_cost_preferred_stock +\n                                        weight_common_stock_equity * after_tax_cost_common_stock_equity)\n    \n    # return answer\n    return weighted_average_cost_of_capital\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 316,
      "prompt_tokens": 478,
      "completion_tokens_details": {
        "text_tokens": 316
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 210
      },
      "total_tokens": 794
    },
    "model": "qwen-omni-turbo",
    "question": "Webster Company has compiled the information shown in the following table. <image 1> Calculate the weighted average cost of capital using market value weights. Answer as a percentage to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_238",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/262-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-158",
    "output": [
      "year_1_revenue = -24.9\n    year_2_revenue = 28.2\n    \n    # Do math calculation to get the answer\n    growth_rate = (year_2_revenue - year_1_revenue) / abs(year_1_revenue)\n    \n    # return answer\n    return round(growth_rate * 100, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 2129,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1870
      },
      "total_tokens": 2216
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2022年的营业收入增长率，并将结果保留一位小数。",
    "python_solution": "def solution():\n    revenue_2022 = -24.9\n    revenue_2023 = 28.2\n    growth_rate = (revenue_2023 - revenue_2022) / abs(revenue_2022) * 100\n    return round(growth_rate, 1)",
    "image_id": "company_06_06_39_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1499",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 6
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2828-1.png",
      "./MultiFinance/images/2828-2.png",
      "./MultiFinance/images/2828-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2828-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-159",
    "output": [
      "sharp_ratio_difference = -0.42 - (-0.19)\n    annual_volatility = 35.77\n    answer = round(sharp_ratio_difference * annual_volatility, 1)\n    \n    # return answer\n    return answer\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 61,
      "prompt_tokens": 1441,
      "completion_tokens_details": {
        "text_tokens": 61
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1182
      },
      "total_tokens": 1502
    },
    "model": "qwen-omni-turbo",
    "question": "请计算第二项的夏普比与卡尔玛之间的差值，并将结果乘以年化波动，保留一位小数。",
    "python_solution": "def solution():\n    sharpe_ratio = -0.42\n    calmar_ratio = -0.19\n    annual_volatility = 35.77\n\n    diff = sharpe_ratio - calmar_ratio\n    result = diff * annual_volatility\n    return round(result, 1)",
    "image_id": "market_09_09_41_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2803",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2847-1.png",
      "./MultiFinance/images/2847-2.png",
      "./MultiFinance/images/2847-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2847-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-160",
    "output": [
      "net_asset_value_2022 = 29335.1\n    net_asset_value_2022q3 = 28060.6\n    \n    # Calculate the growth rate\n    growth_rate = ((net_asset_value_2022 - net_asset_value_2022q3) / net_asset_value_2022q3) * 100\n    \n    # Return the growth rate as a percentage\n    return f\"{growth_rate:.2f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 1547,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1267
      },
      "total_tokens": 1660
    },
    "model": "qwen-omni-turbo",
    "question": "What is the Net Asset Value growth rate of the company from September 30, 2022 to December 31, 2022 in percentage?",
    "python_solution": "def solution():\n    #Define variables name and value\n    total_assets_dec = 29335.1\n    total_assets_sept = 28060.6\n    total_liabilities_dec = 14800.4\n    total_liabilities_sept = 14235.9\n\n    #Calculate Net Asset Value (NAV) for December and September\n    NAV_dec = total_assets_dec - total_liabilities_dec\n    NAV_sept = total_assets_sept - total_liabilities_sept\n\n    #Do math calculation to get the answer\n    growth_rate = ((NAV_dec - NAV_sept) / NAV_sept) * 100\n    answer = growth_rate\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-70",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1985-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 6
      }
    },
    "difficulty": 4.31748811353631,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-161",
    "output": [
      "gain_on_sold_properties = 156000\n    total_equity = 69127795\n    \n    # Do math calculation to get the answer\n    ratio = (gain_on_sold_properties / total_equity) * 100\n    \n    # return answer\n    return ratio\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 81,
      "prompt_tokens": 1120,
      "completion_tokens_details": {
        "text_tokens": 81
      },
      "prompt_tokens_details": {
        "text_tokens": 428,
        "image_tokens": 692
      },
      "total_tokens": 1201
    },
    "model": "qwen-omni-turbo",
    "question": "What is the ratio of the gain on sold properties to the total equity attributable to NetREIT, Inc., at the end of the third quarter 2015, in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n    sale_yucca = 1.1\n    sale_model = 0.156\n    total_equity = 56.974063\n\n    #Do math calculation to get the answer\n    total_sale = sale_yucca + sale_model\n    ratio = (total_sale / total_equity) * 100\n    return ratio\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-10",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1945-1.png"
    ],
    "context": "<image 1>\nOn April 24, 2015, the Company sold a parcel of land and its building at the Yucca Valley Retail Center for approximately $1.5 million and recognized a gain of approximately $1.1 million.\nDuring the nine months ended September 30, 2015, NetREIT Dubose and the other Model Home entities disposed of five Model Home properties. The sales price, net of selling costs, aggregated to approximately $1.5 million and approximately $702,000 in mortgage notes payable were repaid in connection with these sales. The Company recognized a gain of $156,000 related to the sale of these Model Homes.",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-162",
    "output": [
      "us_sbu_2014 = 3826\n    us_sbu_2013 = 3630\n    us_sbu_2012 = 3736\n    \n    # Do math calculation to get the answer\n    average_us_sbu = (us_sbu_2014 + us_sbu_2013 + us_sbu_2012) / 3\n    \n    # return answer\n    return average_us_sbu\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 122,
      "prompt_tokens": 1532,
      "completion_tokens_details": {
        "text_tokens": 122
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 1256
      },
      "total_tokens": 1654
    },
    "model": "qwen-omni-turbo",
    "question": "What's the average of US SBU in 2014, 2013, and 2012? (in million)",
    "python_solution": "def solution():\n    # Define variables name and value\n    us_sbu_2014 = 3826\n    us_sbu_2013 = 3630\n    us_sbu_2012 = 3736\n    const_3 = 3\n\n    # Do math calculation to get the answer\n    answer = (us_sbu_2014 + us_sbu_2013 + us_sbu_2012) / const_3\n    \n    return answer",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-10",
    "img_type": "['Tables']",
    "context": "<image 1>",
    "images": [
      "./MultiFinance/images/1656-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-163",
    "output": [
      "sales_2011 = sum([300, 352, 333, 346, 403, 597, 670, 620, 578, 440, 320, 361])\n    sales_2012 = sum([503, 367, 245, 151, 130, 89, 80, 86, 118, 94, 92, 184])\n    \n    growth_rate = ((sales_2012 - sales_2011) / sales_2011) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 198,
      "prompt_tokens": 3733,
      "completion_tokens_details": {
        "text_tokens": 198
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 3474
      },
      "total_tokens": 3931
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2011年和2012年的总销售额，并求出它们之间的增长率；结果保留两位小数。",
    "python_solution": "def solution():\n    sales_2011 = sum([300, 352, 333, 346, 403, 597, 670, 620, 578, 440, 320, 361])\n    sales_2012 = sum([503, 367, 245, 151, 130, 89, 80, 86, 118, 94, 92, 184])\n    growth_rate = ((sales_2012 - sales_2011) / sales_2011) * 100\n    return round(growth_rate, 2)",
    "image_id": "industry_02_02_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2070",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 10
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2887-1.png",
      "./MultiFinance/images/2887-2.png",
      "./MultiFinance/images/2887-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2887-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-164",
    "output": [
      "cagr_2018_to_2024 = ((4.02/3.30)**(1/(2024-2018))-1)*100\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(cagr_2018_to_2024, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 82,
      "prompt_tokens": 1876,
      "completion_tokens_details": {
        "text_tokens": 82
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 1606
      },
      "total_tokens": 1958
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算黔源电力2018年到2024年的复合年增长率（CAGR），并返回一个百分比，保留一位小数。",
    "python_solution": "def solution():\n    start_value = 3.30\n    end_value = 2.56\n    years = 6\n    cagr = ((end_value / start_value) ** (1 / years)) - 1\n    return round(cagr * 100, 1)",
    "image_id": "industry_17_17_29_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2314",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2502-1.png",
      "./MultiFinance/images/2502-2.png",
      "./MultiFinance/images/2502-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2502-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-165",
    "output": [
      "realized_losses_2019 = -5062\n    realized_losses_2018 = -6533\n    realized_losses_2017 = -18494\n    \n    total_realized_losses = realized_losses_2019 + realized_losses_2018 + realized_losses_2017\n    num_years = 3\n    \n    average_realized_losses = total_realized_losses / num_years\n    \n    # return answer\n    return average_realized_losses\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 123,
      "prompt_tokens": 1688,
      "completion_tokens_details": {
        "text_tokens": 123
      },
      "prompt_tokens_details": {
        "text_tokens": 438,
        "image_tokens": 1250
      },
      "total_tokens": 1811
    },
    "model": "qwen-omni-turbo",
    "question": "What was the average realized losses? (in thousand)",
    "python_solution": "def solution():\n    # Define variables name and value\n    realized_losses_2019 = -5062\n    realized_losses_2018 = -6533\n    realized_losses_2017 = -18494\n\n    # Do math calculation to get the answer\n    answer = (realized_losses_2019 + realized_losses_2018 + realized_losses_2017) / 3\n    \n    return answer",
    "source": "TAT-QA",
    "source_id": "simpshort-testmini-131",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Realized and unrealized losses of the cross currency swaps are recognized in earnings and reported in foreign exchange (loss) gain in the consolidated statements of loss. The effect of the gains (losses) on cross currency swaps on the consolidated statements of loss is as follows: The Company is exposed to credit loss to the extent the fair value represents an asset in the event of non-performance by the counterparties to the foreign currency forward contracts, and cross currency and interest rate swap agreements; however, the Company does not anticipate non-performance by any of the counterparties. In order to minimize counterparty risk, the Company only enters into derivative transactions with counterparties that are rated A- or better by Standard & Poor’s or A3 or better by Moody’s at the time of the transaction. In addition, to the extent possible and practical, interest rate swaps are entered into with different counterparties to reduce concentration risk.",
    "images": [
      "./MultiFinance/images/1578-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.8712010109078907,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-166",
    "output": [
      "absolute_1m = 2.50\n    absolute_2m = -8.89\n    \n    relative_3m = -27.00\n    \n    # Calculate the difference between absolute涨幅(%) of 1M and 2M\n    absolute_difference = absolute_1m - absolute_2m\n    \n    # Calculate the result as a percentage of the relative涨幅(%) of 3M\n    result = (absolute_difference / relative_3m) * 100\n    \n    # Round the result to one decimal place\n    rounded_result = round(result, 1)\n    \n    # Return the final answer\n    return rounded_result\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 154,
      "prompt_tokens": 365,
      "completion_tokens_details": {
        "text_tokens": 154
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 104
      },
      "total_tokens": 519
    },
    "model": "qwen-omni-turbo",
    "question": "请计算1M和2M的绝对涨幅之差，并将结果作为3M相对涨幅的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    abs_change_1M = 2.50\n    abs_change_2M = -8.89\n    rel_change_3M = -27.00\n\n    diff_abs_changes = abs_change_1M - abs_change_2M\n    percentage_of_rel_change_3M = (diff_abs_changes / rel_change_3M) * 100\n    return round(percentage_of_rel_change_3M, 1)",
    "image_id": "company_23_23_00_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-941",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2566-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2566-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-167",
    "output": [
      "property_and_equipment_net_2021 = 261562\n    property_and_equipment_net_2020 = 293933\n    depreciation_expense_property_and_equipment_2021_q3 = 659\n    depreciation_expense_property_and_equipment_2020_q3 = 942\n    \n    # Do math calculation to get the answer\n    depreciation_rate_property_and_equipment_q3_2021 = (depreciation_expense_property_and_equipment_2021_q3 / property_and_equipment_net_2021) * 100\n    \n    # return answer\n    return round(depreciation_rate_property_and_equipment_q3_2021, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 183,
      "prompt_tokens": 1626,
      "completion_tokens_details": {
        "text_tokens": 183
      },
      "prompt_tokens_details": {
        "text_tokens": 370,
        "image_tokens": 1256
      },
      "total_tokens": 1809
    },
    "model": "qwen-omni-turbo",
    "question": "What is the depreciation rate for property and equipment for the three months ended September 30, 2021 using straight-line depreciation method in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    Opening_balance = 293933  # Property and equipment, net value on December 31, 2020\n\n    Depreciation_expense = 659  # Depreciation expense for three months ended September 30, 2021\n\n    Closing_balance = 261562  # Property and equipment, net value on September 30, 2021\n\n    #Do math calculation to get the answer\n    # Calculate the amount of property and equipment before depreciation\n    Property_equipment_before_depreciation = Closing_balance + Depreciation_expense\n\n    # Calculate the depreciation rate\n    Depreciation_rate = (Depreciation_expense / Property_equipment_before_depreciation) * 100\n    return Depreciation_rate\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-7",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1943-1.png"
    ],
    "context": "<image 1>\n6. Property and Equipment, Net\nDepreciation expense related to property and equipment totaled $ 659 and $ 2,529 for the three and nine months ended September 30, 2021, respectively. Depreciation expense related to property and equipment totaled $ 942 and $ 3,046 for the three and nine months ended September 30, 2020, respectively.",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 3.4965075614664807,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-168",
    "output": [
      "deposit_bond_2015 = 72.89 + 42.7%\n    deposit_bond_2016 = 72.89 + 42.7%\n    \n    growth_rate = (deposit_bond_2016 - deposit_bond_2015) / deposit_bond_2015 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 2893,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 2626
      },
      "total_tokens": 2997
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2015年和2016年的定期存款与债券及债务的总占比，并求出这两个年度之间的增长率；结果保留两位小数。",
    "python_solution": "def solution():\n    deposit_2015 = 20.1\n    bond_2015 = 36.1\n    total_2015 = deposit_2015 + bond_2015\n\n    deposit_2016 = 11.7\n    bond_2016 = 35.7\n    total_2016 = deposit_2016 + bond_2016\n\n    growth = (total_2016 - total_2015) / total_2015 * 100\n    return round(growth, 2)",
    "image_id": "company_27_27_11_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-453",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2388-1.png",
      "./MultiFinance/images/2388-2.png",
      "./MultiFinance/images/2388-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2388-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-169",
    "output": [
      "sales_2019 = 950\n    costs_2019 = 250\n    pretax_income_2019 = 700\n    taxes_2019 = 200\n    net_income_2019 = 500\n    debt_2019 = 1000\n    equity_2019 = 2000\n    total_assets_2019 = 3000\n    growth_rate = 0.15\n    dividend_payout_ratio = 0.50\n    \n    # Calculate internal funds generated from operations\n    operating_profit_margin = (pretax_income_2019 - costs_2019) / sales_2019\n    asset_turnover_ratio = sales_2019 / total_assets_2019\n    profit_margin = net_income_2019 / sales_2019\n    return_on_equity = net_income_2019 / equity_2019\n    internal_funds_generated = (operating_profit_margin * asset_turnover_ratio + profit_margin) * total_assets_2019\n    \n    # Calculate required external funds\n    required_external_funds = (growth_rate / (1 - growth_rate)) * (total_assets_2019 - debt_2019)\n    \n    # Calculate retained earnings\n    retained_earnings = net_income_2019 * (1 - dividend_payout_ratio)\n    \n    # Calculate additional external funds needed\n    additional_external_funds_needed = required_external_funds - retained_earnings\n    \n    # Return the answer rounded to one decimal place\n    return round(additional_external_funds_needed, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 395,
      "prompt_tokens": 643,
      "completion_tokens_details": {
        "text_tokens": 395
      },
      "prompt_tokens_details": {
        "text_tokens": 311,
        "image_tokens": 332
      },
      "total_tokens": 1038
    },
    "model": "qwen-omni-turbo",
    "question": "The financial statements of Eagle Sport Supply are shown in the following table: <image 1>. For simplicity, 'Costs' include interest. Assume that Eagle's assets are proportional to its sales. Find Eagle's required external funds if it maintains a dividend payout ratio of 50% and plans a growth rate of 15% in 2020. Answer to single decimal place.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Corporate Finance",
    "source_id": "validation_Finance_1",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/63-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-170",
    "output": [
      "sony_market_share = 55\n    samsung_market_share = 20\n    huawei_market_share = 7\n    other_market_share = 18\n    \n    sony_samsung_total = sony_market_share + samsung_market_share\n    huawei_other_total = huawei_market_share + other_market_share\n    \n    # Do math calculation to get the answer\n    result = round(sony_samsung_total - huawei_other_total, 1)\n    \n    # return answer\n    return result\n```"
    ],
    "usage": {
      "completion_tokens": 109,
      "prompt_tokens": 2041,
      "completion_tokens_details": {
        "text_tokens": 109
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1777
      },
      "total_tokens": 2150
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算索尼和三星的市场份额总和，并将其与豪威和其他公司的市场份额总和进行比较。结果保留一位小数。",
    "python_solution": "def solution():\n    sony = 55\n    samsung = 20\n    omni = 7\n    others = 18\n\n    total_sony_samsung = sony + samsung\n    total_omni_others = omni + others\n    result = total_sony_samsung - total_omni_others\n    return round(result, 1)",
    "image_id": "industry_19_19_19_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2381",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2891-1.png",
      "./MultiFinance/images/2891-2.png",
      "./MultiFinance/images/2891-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2891-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-171",
    "output": [
      "flow_asset_2022 = 2873\n    flow_asset_2023 = 2870\n    \n    # Calculate the difference between 2023 and 2022\n    diff_flow_asset = flow_asset_2023 - flow_asset_2022\n    \n    # Calculate the percentage change from 2022 to 2023\n    percent_change = (diff_flow_asset / flow_asset_2022) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(percent_change, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 145,
      "prompt_tokens": 3069,
      "completion_tokens_details": {
        "text_tokens": 145
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 2795
      },
      "total_tokens": 3214
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年流动资产的差值，并将该差值占2022年流动资产的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2022 = 2873\n    current_assets_2023 = 2870\n\n    # Multi-step logic\n    diff = current_assets_2023 - current_assets_2022\n    ratio = diff / current_assets_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_38_38_27_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1147",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2624-1.png",
      "./MultiFinance/images/2624-2.png",
      "./MultiFinance/images/2624-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2624-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-172",
    "output": [
      "type_material_2023_sales = 7434.4\n    type_material_2024_sales = 8824.4\n    type_material_growth_rate_1 = (type_material_2024_sales - type_material_2023_sales) / type_material_2023_sales * 100\n    \n    type_material_2022_sales = 8458.1\n    type_material_2023_sales = 7434.4\n    type_material_growth_rate_2 = (type_material_2023_sales - type_material_2022_sales) / type_material_2022_sales * 100\n    \n    difference = type_material_growth_rate_1 - type_material_growth_rate_2\n    \n    # return answer\n    return round(difference, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 189,
      "prompt_tokens": 2406,
      "completion_tokens_details": {
        "text_tokens": 189
      },
      "prompt_tokens_details": {
        "text_tokens": 282,
        "image_tokens": 2124
      },
      "total_tokens": 2595
    },
    "model": "qwen-omni-turbo",
    "question": "请计算型材在2023年到2024年的销售收入增长率，并将其与2022年到2023年的增长率进行比较，最后求出这两个增长率的差值；请保留一位小数。",
    "python_solution": "def solution():\n    # 型材的销售收入\n    revenue_2022 = 8458.1\n    revenue_2023 = 7434.4\n    revenue_2024 = 8824.4\n\n    # 计算增长率\n    growth_rate_2022_2023 = (revenue_2023 - revenue_2022) / revenue_2022 * 100\n    growth_rate_2023_2024 = (revenue_2024 - revenue_2023) / revenue_2023 * 100\n\n    # 比较并求差值\n    difference = growth_rate_2023_2024 - growth_rate_2022_2023\n\n    return round(difference, 1)",
    "image_id": "company_05_05_34_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1551",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 6
      }
    },
    "difficulty": 4.51085950651685,
    "images": [
      "./MultiFinance/images/2231-1.png",
      "./MultiFinance/images/2231-2.png",
      "./MultiFinance/images/2231-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2231-2.png",
      "./MultiFinance/images/2231-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-173",
    "output": [
      "high_2011_to_March_2012 = 24.19\n    high_February_2012_to_March_2012 = 37.79\n    \n    # Do math calculation to get the answer\n    percent_increase = ((high_February_2012_to_March_2012 - high_2011_to_March_2012) / high_2011_to_March_2012) * 100\n    \n    # return answer\n    return round(percent_increase, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 147,
      "prompt_tokens": 1920,
      "completion_tokens_details": {
        "text_tokens": 147
      },
      "prompt_tokens_details": {
        "text_tokens": 693,
        "image_tokens": 1227
      },
      "total_tokens": 2067
    },
    "model": "qwen-omni-turbo",
    "question": "By what percentage did the high of MKTX stock increase from 2011 to March 2012? Answer to three decimal places.",
    "answer": 21.277,
    "context": "table of contents part ii item 5 . market for registrant 2019s common equity , related stockholder matters and issuer purchases of equity securities . price range our common stock trades on the nasdaq global select market under the symbol 201cmktx 201d . the range of closing price information for our common stock , as reported by nasdaq , was as follows : on february 20 , 2013 , the last reported closing price of our common stock on the nasdaq global select market was $ 39.60 . holders there were 33 holders of record of our common stock as of february 20 , 2013 . dividend policy we initiated a regular quarterly dividend in the fourth quarter of 2009 . during 2012 and 2011 , we paid quarterly cash dividends of $ 0.11 per share and $ 0.09 per share , respectively . on december 27 , 2012 , we paid a special dividend of $ 1.30 per share . in january 2013 , our board of directors approved a quarterly cash dividend of $ 0.13 per share payable on february 28 , 2013 to stockholders of record as of the close of business on february 14 , 2013 . any future declaration and payment of dividends will be at the sole discretion of our board of directors . the board of directors may take into account such matters as general business conditions , our financial results , capital requirements , and contractual , legal , and regulatory restrictions on the payment of dividends to our stockholders or by our subsidiaries to the parent and any other such factors as the board of directors may deem relevant . recent sales of unregistered securities securities authorized for issuance under equity compensation plans please see the section entitled 201cequity compensation plan information 201d in item 12. .\n\n<image 1>\n\n.\n",
    "program": "high_2012 = 37.79  # Highest stock price in Q1 2012 (Jan - Mar)\nhigh_2011 = 31.16  # Highest stock price in 2011 (Q4)\n\npercent_change = (high_2012 - high_2011) / high_2011\nanswer = round(percent_change * 100, 3)",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 77,
        "total_numbers": 79
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 8
      }
    },
    "difficulty": 3.465735902799726,
    "source_id": "test-13",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/665-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-174",
    "output": [
      "google_2024_income = 175095\n    google_2025_income = 50593\n    \n    # Do math calculation to get the answer\n    income_growth_rate = ((google_2025_income - google_2024_income) / google_2024_income) * 100\n    \n    # return answer\n    return round(income_growth_rate, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 112,
      "prompt_tokens": 2151,
      "completion_tokens_details": {
        "text_tokens": 112
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1893
      },
      "total_tokens": 2263
    },
    "model": "qwen-omni-turbo",
    "question": "请计算谷歌公司在2024年和2025年的收入增长百分比，并将结果保留一位小数。",
    "python_solution": "def google_revenue_growth():\n    # Numeric values from the image\n    revenue_24A_E = 25161\n    revenue_25E = 27404\n\n    # Multi-step logic\n    growth_percentage = ((revenue_25E - revenue_24A_E) / revenue_24A_E) * 100\n    return round(growth_percentage, 1)",
    "image_id": "company_19_19_44_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1053",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 3.7841896339182615,
    "images": [
      "./MultiFinance/images/2513-1.png",
      "./MultiFinance/images/2513-2.png",
      "./MultiFinance/images/2513-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2513-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-175",
    "output": [
      "year_2018_out = 123\n    year_2023_out = 259\n    \n    # Do math calculation to get the answer\n    growth_rate = (year_2023_out - year_2018_out) / year_2018_out * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 1964,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1705
      },
      "total_tokens": 2068
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2018年到2023年外销煤吨成本的增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2018 = 123\n    value_2019 = 139\n    value_2020 = 159\n    value_2021 = 232\n    value_2022 = 183\n    value_2023 = 259\n\n    # Multi-step logic\n    initial_value = value_2018\n    final_value = value_2023\n    growth_rate = (final_value - initial_value) / initial_value * 100\n    return round(growth_rate, 2)",
    "image_id": "company_31_31_10_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1733",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 4
      }
    },
    "difficulty": 4.025351690735149,
    "images": [
      "./MultiFinance/images/2340-1.png",
      "./MultiFinance/images/2340-2.png",
      "./MultiFinance/images/2340-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2340-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-176",
    "output": [
      "net_income_loss = -87677 + 11449 + 127093 + 236505 - 21736\n    proceeds_from_public_offering = 3200000\n    proceeds_from_warrants = 1550000\n    proceeds_from_initial_public_offering = 3200000\n    proceeds_from_underwriters_overallotment_option = 1914400\n    repayment_of_shareholders_note_payable = 281661\n    payment_of_underwriters_fee_and_offering_cost_of_initial_public_offering = 1728656\n    net_cash_provided_by_financing_activities = 33454083\n    net_increase_decrease_in_cash = -70042 + 25276 + 30271 - 1359 + 101671\n    cash_at_beginning_of_the_period = 100312\n    cash_at_end_of_the_period = 30271\n    deferred_underwriting_fees_net = 830903\n    ordinary_shares_subject_to_possible_redemption = 10072561\n    \n    # Do math calculation to get the answer\n    total_capital_generated = net_income_loss + proceeds_from_public_offering + proceeds_from_warrants + proceeds_from_initial_public_offering + proceeds_from_underwriters_overallotment_option - repayment_of_shareholders_note_payable - payment_of_underwriters_fee_and_offering_cost_of_initial_public_offering + net_cash_provided_by_financing_activities + net_increase_decrease_in_cash + cash_at_beginning_of_the_period + deferred_underwriting_fees_net + ordinary_shares_subject_to_possible_redemption\n    \n    # return answer\n    return total_capital_generated\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 420,
      "prompt_tokens": 1535,
      "completion_tokens_details": {
        "text_tokens": 420
      },
      "prompt_tokens_details": {
        "text_tokens": 311,
        "image_tokens": 1224
      },
      "total_tokens": 1955
    },
    "model": "qwen-omni-turbo",
    "question": "What is the total capital generated by the company through various activities from July 18, 2007 to June 30, 2009, excluding net income and assuming the interest income re-invested in the trust account was paid out to increase capital instead of being reinvested, in USD?",
    "python_solution": "def solution():\n    #Define variables name and value\n    proceeds_from_sale_of_ordinary_shares_to_founders = 25000\n    proceeds_from_shareholder_note_payable = 281661\n    proceeds_from_warrants_purchased_in_private_placement = 1550000\n    proceeds_from_initial_public_offering = 32000000\n    proceeds_from_exercise_of_underwriters_overallotment_option = 1914400\n    repayment_of_shareholders_note_payable = 281661\n    payment_of_underwriters_fee_and_offering_cost_of_initial_public_offering = 1728656\n    interest_income_re_invested_in_trust_account = 510361\n    proceeds_from_the_public_offering_deposited_in_trust_account = 33527400\n    redemption_from_the_trust_account  = 285442\n\n    #Do math calculation to get the answer\n    total_capital_generated = (\n        proceeds_from_sale_of_ordinary_shares_to_founders\n        + proceeds_from_shareholder_note_payable\n        + proceeds_from_warrants_purchased_in_private_placement\n        + proceeds_from_initial_public_offering\n        + proceeds_from_exercise_of_underwriters_overallotment_option\n        - repayment_of_shareholders_note_payable\n        - payment_of_underwriters_fee_and_offering_cost_of_initial_public_offering\n        + interest_income_re_invested_in_trust_account\n        + proceeds_from_the_public_offering_deposited_in_trust_account\n        + redemption_from_the_trust_account\n    )\n    return total_capital_generated\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-235",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2097-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 7,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 25,
        "parentheses": 2
      }
    },
    "difficulty": 5.455321115357702,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-177",
    "output": [
      "loss_per_share_2018 = -0.35\n    loss_per_share_2019 = -0.42\n    \n    # Halve the loss per share in 2018 and increase it by $0.01\n    adjusted_loss_per_share_2018 = (loss_per_share_2018 / 2) + 0.01\n    \n    # Calculate the difference in loss per share\n    difference_in_loss_per_share = adjusted_loss_per_share_2018 - loss_per_share_2019\n    \n    # return answer\n    return difference_in_loss_per_share\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 150,
      "prompt_tokens": 1679,
      "completion_tokens_details": {
        "text_tokens": 150
      },
      "prompt_tokens_details": {
        "text_tokens": 435,
        "image_tokens": 1244
      },
      "total_tokens": 1829
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the difference in loss per share between 2018 and 2019 if the loss per share in 2018 is halved and then increased by $0.01?",
    "python_solution": "def solution():\n    # Define variables name and value\n    loss_per_share_2019 = -0.42\n    loss_per_share_2018 = 0.35\n    halved_loss_per_share_2018 = loss_per_share_2018 / 2\n    increased_loss_2018 = halved_loss_per_share_2018 + 0.01\n\n    # Do math calculation to get the answer\n    answer = loss_per_share_2019 + increased_loss_2018\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-89",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Our revenues for 2019 include $1.9 million related to the acquired MGI business. Our net loss for 2019 includes $0.3 million of net loss from the acquired MGI business. The following table provides unaudited pro forma information for the periods presented as if the MGI acquisition had occurred January 1, 2018. No adjustments have been made in the pro forma information for synergies that are resulting or planned from the MGI acquisition. The unaudited proforma information is not indicative of the results that may have been achieved had the companies been combined as of January 1, 2018, or of our future operating results.",
    "images": [
      "./MultiFinance/images/1828-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 0
      }
    },
    "difficulty": 3.465735902799726,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-178",
    "output": [
      "pce_price_index_2023_dec_13 = (2.7 + 2.1) / 2\n    pce_price_index_2024_est_median = (2.0 + 2.0) / 2\n    growth_rate = ((pce_price_index_2024_est_median - pce_price_index_2023_dec_13) / pce_price_index_2023_dec_13) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 139,
      "prompt_tokens": 2351,
      "completion_tokens_details": {
        "text_tokens": 139
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 2070
      },
      "total_tokens": 2490
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年估计的PCE价格指数范围的中位数，并将其与2023年12月13日的中位数进行比较，求出增长率；结果请保留两位小数。",
    "python_solution": "def solution():\n    pce_2024_est = (2.1 + 2.7) / 2\n    pce_2023_dec = (2.7 + 3.2) / 2\n    growth = (pce_2024_est - pce_2023_dec) / pce_2023_dec * 100\n    return round(growth, 2)",
    "image_id": "market_01_01_04_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2679",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 8
      }
    },
    "difficulty": 4.025351690735149,
    "images": [
      "./MultiFinance/images/2342-1.png",
      "./MultiFinance/images/2342-2.png",
      "./MultiFinance/images/2342-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2342-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-179",
    "output": [
      "year_2021 = 20\n    year_2022 = 23\n    year_2023 = 28\n    \n    # Do math calculation to get the answer\n    growth_rate = ((year_2023 - year_2021) + (year_2022 - year_2021)) / 2 * 100 / year_2021\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 1622,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 1367
      },
      "total_tokens": 1740
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2023年毛利率的年均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    gross_margin_2021 = 20\n    gross_margin_2023 = 28\n\n    growth_rate_2021_2022 = (gross_margin_2023 / gross_margin_2021 - 1) ** (1/2) - 1\n    return round(growth_rate_2021_2022, 2)",
    "image_id": "company_06_06_10_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1463",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 6
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2673-1.png",
      "./MultiFinance/images/2673-2.png",
      "./MultiFinance/images/2673-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2673-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-180",
    "output": [
      "second_largest_percentage = 22 + 19\n    total_percentage = sum([8, 10, 11, 13, 3, 4, 5, 7])\n    \n    # Do math calculation to get the answer\n    result = (second_largest_percentage / total_percentage) * 100\n    \n    # return answer\n    return round(result, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 93,
      "prompt_tokens": 2431,
      "completion_tokens_details": {
        "text_tokens": 93
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 2174
      },
      "total_tokens": 2524
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中第二大份额与第三大份额之和占总份额的百分比，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share_yingweida = 34\n    share_shenma = 22\n    share_huafeng = 19\n    share_ningxia = 5\n    share_ahui = 5\n    share_jiangsu = 4\n    share_liaoyang = 3\n    share_other = 7\n\n    # Multi-step logic\n    sum_second_third = share_shenma + share_huafeng\n    total_share = 100\n    percentage = (sum_second_third / total_share) * 100\n    result = round(percentage, 2)\n    return result",
    "image_id": "industry_04_04_07_figure_5",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2200",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 15,
        "parentheses": 4
      }
    },
    "difficulty": 4.219507705176107,
    "images": [
      "./MultiFinance/images/2293-1.png",
      "./MultiFinance/images/2293-2.png",
      "./MultiFinance/images/2293-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2293-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-181",
    "output": [
      "total_assets = 2100\n    total_liabilities = 1200\n    preferred_equity = 120\n    common_shares_outstanding = 32\n\n    # Calculate net income (assuming it's given as 800)\n    net_income = 800\n\n    # Calculate shareholders' equity\n    shareholders_equity = total_assets - total_liabilities - preferred_equity\n\n    # Calculate normalized EPS\n    normalized_EPS = net_income / common_shares_outstanding\n\n    # Return the result rounded to three decimal places\n    return round(normalized_EPS, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 144,
      "prompt_tokens": 1656,
      "completion_tokens_details": {
        "text_tokens": 144
      },
      "prompt_tokens_details": {
        "text_tokens": 414,
        "image_tokens": 1242
      },
      "total_tokens": 1800
    },
    "model": "qwen-omni-turbo",
    "question": "The small securities company's research department director, Brian, is in charge of a team that includes 2 junior analysts using the relative value approach to determine a company's worth. Brian informed the 2 junior analysts that using the earnings from the latest 4 quarters may not accurately reflect cyclical companies' long-term earning potential. Therefore, they may find significantly different P/E ratios even though the company's business outlook remains the same. Brian suggested using normalized EPS to solve this issue. Having gathered information about the company throughout the most recent complete cycle, the 2 junior analysts found that the company's balance sheet reveals total assets worth 2100 million and total liabilities of 1200 million. The value of the preferred equity is $120 million, and there are 32 million common shares outstanding. Given this information, what is the company's normalized EPS? Answer to three decimal places.",
    "python_solution": "def solution():\n    total_assets = 2100\n    total_liabilities = 1200\n    preferred_equity = 120\n    common_shares = 32\n    roe_values = [12.00, 13.10, 10.55, 11.20, 12.05]\n\n    average_roe = sum(roe_values) / len(roe_values)\n    total_shareholder_equity = total_assets - total_liabilities\n    common_equity_value = total_shareholder_equity - preferred_equity\n    bvps = common_equity_value / common_shares\n    normalized_eps = (average_roe / 100) * bvps\n\n    return normalized_eps",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 6
      }
    },
    "difficulty": 4.430816798843313,
    "source_id": "validation-175",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/355-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-182",
    "output": [
      "year_1 = 3\n    year_4 = 7\n    year_2 = 0\n    year_3 = 3\n    year_5 = 10\n    \n    # Do math calculation to get the answer\n    compound_growth_rate = ((year_5 - year_1) / (year_4 - year_2)) ** (1/3)\n    \n    answer = round(compound_growth_rate * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 111,
      "prompt_tokens": 3020,
      "completion_tokens_details": {
        "text_tokens": 111
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 2755
      },
      "total_tokens": 3131
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算生益电子2022年到2025年的归母净利润的复合年增长率，并保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    profit_2022 = 3\n    profit_2025 = 7\n    years = 2025 - 2022\n\n    # Multi-step logic\n    cagr = ((profit_2025 / profit_2022) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_20_20_12_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-174",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.189654742026425,
    "images": [
      "./MultiFinance/images/2296-1.png",
      "./MultiFinance/images/2296-2.png",
      "./MultiFinance/images/2296-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2296-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-183",
    "output": [
      "rx_2020 = 55\n    rx_2021 = 50\n    rx_2022 = 52\n    rx_2023 = 52\n    rx_2024q1 = 52\n    \n    # Do math calculation to get the answer\n    average_rx = (rx_2020 + rx_2021 + rx_2022 + rx_2023 + rx_2024q1) / 5\n    \n    # return answer\n    return round(average_rx, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 147,
      "prompt_tokens": 1934,
      "completion_tokens_details": {
        "text_tokens": 147
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1675
      },
      "total_tokens": 2081
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年到2024年第一季度化学药占比的平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    chem_2020 = 66\n    chem_2021 = 66\n    chem_2022 = 64\n    chem_2023 = 64\n    chem_2024Q1 = 62\n\n    average_chem = (chem_2020 + chem_2021 + chem_2022 + chem_2023 + chem_2024Q1) / 5\n    return round(average_chem, 2)",
    "image_id": "company_12_12_15_figure_7",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1644",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2489-1.png",
      "./MultiFinance/images/2489-2.png",
      "./MultiFinance/images/2489-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2489-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-184",
    "output": [
      "EPS_2024_avg = (9 + 8 + 7) / 3\n    EPS_2025_avg = (6 + 7 + 10) / 3\n    \n    # Calculate growth percentage\n    growth_percentage = ((EPS_2025_avg - EPS_2024_avg) / EPS_2024_avg) * 100\n    \n    # Return the result\n    return round(growth_percentage, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 117,
      "prompt_tokens": 2579,
      "completion_tokens_details": {
        "text_tokens": 117
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 2308
      },
      "total_tokens": 2696
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中2024年EPS的平均值，并将其与2025年EPS的平均值进行比较，求出增长百分比；结果保留两位小数。",
    "python_solution": "def solution():\n    eps_2024 = (0.98 + 1.23 + 0.56 + 0.86) / 4\n    eps_2025 = (1.04 + 1.36 + 0.67 + 0.91) / 4\n    growth_percentage = ((eps_2025 - eps_2024) / eps_2024) * 100\n    return round(growth_percentage, 2)",
    "image_id": "company_26_26_15_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1753",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 9
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 10
      }
    },
    "difficulty": 4.595119850134591,
    "images": [
      "./MultiFinance/images/2220-1.png",
      "./MultiFinance/images/2220-2.png",
      "./MultiFinance/images/2220-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2220-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-185",
    "output": [
      "contribution_profit_rate_2018 = 38.9\n    contribution_profit_rate_2019 = 40.9\n    contribution_profit_rate_2020 = 37.0\n    contribution_profit_rate_2021 = 39.8\n    contribution_profit_rate_2022 = 47.2\n    contribution_profit_rate_2023 = 44.5\n    contribution_profit_rate_2024_q1_q3 = 44.5\n    \n    # Calculate average contribution profit rate\n    total_contribution_profit_rate = (contribution_profit_rate_2018 + contribution_profit_rate_2019 + \n                                      contribution_profit_rate_2020 + contribution_profit_rate_2021 + \n                                      contribution_profit_rate_2022 + contribution_profit_rate_2023 + \n                                      contribution_profit_rate_2024_q1_q3)\n    \n    average_contribution_profit_rate = total_contribution_profit_rate / 7\n    \n    # Return the result rounded to two decimal places\n    return round(average_contribution_profit_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 261,
      "prompt_tokens": 2057,
      "completion_tokens_details": {
        "text_tokens": 261
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1792
      },
      "total_tokens": 2318
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年至2024年Q1-Q3期间贡献利润率的平均值；请保留两位小数。",
    "python_solution": "def solution():\n    rate_2018 = 38.4\n    rate_2019 = 38.9\n    rate_2020 = 40.9\n    rate_2021 = 37.0\n    rate_2022 = 39.8\n    rate_2023 = 47.2\n    rate_2024_Q1_Q3 = 44.5\n\n    average_rate = (rate_2018 + rate_2019 + rate_2020 + rate_2021 + rate_2022 + rate_2023 + rate_2024_Q1_Q3) / 7\n    return round(average_rate, 2)",
    "image_id": "company_06_06_20_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1476",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 4
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2269-1.png",
      "./MultiFinance/images/2269-2.png",
      "./MultiFinance/images/2269-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2269-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-186",
    "output": [
      "year_1 = 3.74\n    year_2 = 4.84\n    year_3 = 6.02\n    \n    # Do math calculation to get the answer\n    growth_rate_year_1 = (year_2 - year_1) / year_1 * 100\n    growth_rate_year_2 = (year_3 - year_2) / year_2 * 100\n    compound_growth_rate = ((1 + growth_rate_year_1/100) * (1 + growth_rate_year_2/100))**(1/2) - 1\n    \n    # return answer\n    return round(compound_growth_rate * 100, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 173,
      "prompt_tokens": 2638,
      "completion_tokens_details": {
        "text_tokens": 173
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 2382
      },
      "total_tokens": 2811
    },
    "model": "qwen-omni-turbo",
    "question": "请计算三诺生物2024年到2026年的净利润复合增长率，并保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = 3.74\n    net_profit_2025 = 4.84\n    net_profit_2026 = 6.02\n    cagr = ((net_profit_2026 / net_profit_2024) ** (1/2) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_34_34_28_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-503",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2439-1.png",
      "./MultiFinance/images/2439-2.png",
      "./MultiFinance/images/2439-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2439-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-187",
    "output": [
      "bms_payment = 6 + 7.3\n    r_d_cost_2021 = 15046 * 2\n    max_payout_to_bms = 142 + 50\n    min_payout_to_bms = 142 + 50\n    \n    # Do math calculation to get the answer\n    total_cost = bms_payment + r_d_cost_2021 + max_payout_to_bms + min_payout_to_bms\n    \n    # return answer\n    return total_cost\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 132,
      "prompt_tokens": 2593,
      "completion_tokens_details": {
        "text_tokens": 132
      },
      "prompt_tokens_details": {
        "text_tokens": 1556,
        "image_tokens": 1037
      },
      "total_tokens": 2725
    },
    "model": "qwen-omni-turbo",
    "question": "What is the total cost of developing the drug AL102, considering the payment made to BMS, research and development costs over the 6 months of 2021, and the potential payout to BMS upon successful completion of certain clinical, regulatory and commercial milestones (in millions of dollars)?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    initial_payment_to_BMS = 6  # in million\n    stock_payment_to_BMS = 7.3  # in million\n    potential_milestone_payment_to_BMS = 142 + 50  # in million clinical + regulatory milestone payment\n\n    research_and_dev_expense = 15.046  # in million, the expense for 6 months of 2021\n\n    #Do math calculation to get the answer\n    total_cost_AL102 = initial_payment_to_BMS + stock_payment_to_BMS + potential_milestone_payment_to_BMS + research_and_dev_expense\n    return total_cost_AL102\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-164",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2052-1.png"
    ],
    "context": "We are responsible for all future development and commercialization of AL101 and AL102. In consideration for the rights granted under the agreement, we paid BMS a payment of $6 million and issued to BMS 1,125,929 shares of Series A preferred stock valued at approximately $7.3 million, which converted to 562,964 shares of common stock in connection with our initial public offering, or IPO. We are obligated to pay BMS up to approximately $142 million in the aggregate upon the achievement of certain clinical development or regulatory milestones and up to $50 million in the aggregate upon the achievement of certain commercial milestones by each product containing the licensed BMS compounds. In addition, we are obligated to pay BMS tiered royalties ranging from a high single-digit to a low teen percentage on worldwide net sales of all products containing the licensed BMS compounds. BMS has the right to terminate the BMS License Agreement in its entirety upon written notice to us (a) for insolvency-related events involving us, (b) for our material breach of the BMS License Agreement if such breach remains uncured for a defined period of time, (c) for our failure to fulfill our obligations to develop or commercialize the BMS Licensed Compounds and/or BMS Licensed Products not remedied within a defined period of time following written notice by BMS, or (d) if we or our affiliates commence any action challenging the validity, scope, enforceability or patentability of any of the licensed patent rights. We have the right to terminate the BMS License Agreement (a) for convenience upon prior written notice to BMS, the length of notice dependent on whether a BMS Licensed Product has received regulatory approval, (b) upon immediate written notice to BMS for insolvency-related events involving BMS, (c) for BMS’s material breach of the BMS License Agreement if such breach remains uncured for a defined period of time, or (d) on a BMS Licensed Compound-by-BMS Licensed Compound and/or BMS Licensed Product-by-BMS Licensed Product basis upon immediate written notice to BMS if we reasonably determine that there are unexpected safety and public health issues relating to the applicable BMS Licensed Compounds and/or BMS Licensed Products. Upon termination of the BMS License Agreement in its entirety by us for convenience or by BMS, we grant an exclusive, non-transferable, sublicensable, worldwide license to BMS under certain of our patent rights that are necessary to develop, manufacture or commercialize BMS Licensed Compounds or BMS Licensed Products. In exchange for such license, BMS must pay us a low single-digit percentage royalty on net sales of the BMS Licensed Compounds and/or BMS Licensed Products by it or its affiliates, licensees or sublicensees, provided that the termination occurred after a specified developmental milestone for such BMS Licensed Compounds and/or BMS Licensed Products. Novartis License Agreements In December 2018, we entered into an evaluation, option and license agreement, or the Novartis Agreement, with Novartis International Pharmaceutical Limited, or Novartis, pursuant to which we granted Novartis an exclusive option to obtain an exclusive license to research, develop, commercialize and manufacture AL102 for the treatment of multiple myeloma. We will continue to supply Novartis quantities of AL102, products containing AL102 and certain other materials for purposes of conducting evaluation studies not comprising human clinical trials during the option period, together with our know-how as may reasonably be necessary in order for Novartis to conduct such evaluation studies. Novartis has agreed to reimburse us for all such expenses. At any time during the option term, Novartis may exercise its option by payment of a low eight figure option exercise fee. If Novartis exercises its option, it will be obligated to pay us up to an additional $245 million upon the achievement of certain clinical development and commercial milestones. In addition, Novartis is obligated to pay us tiered royalties at percentages ranging from a mid-single digit to a low double-digit percentage on worldwide net sales of products licensed under the agreement. The option we granted to Novartis will remain in effect until the earlier of (a) 60 days following the last visit of the last subject in the evaluation studies, (b) the termination of the Novartis Agreement, or (c) 36 months following the delivery by us to Novartis of sufficient amounts of clinical evaluation materials to conduct the anticipated clinical studies. The Novartis Agreement remains in effect until such time as no Novartis Licensed Product is being developed or commercialized by Novartis, its affiliates, or sublicensees (including distributors or commercial partners), unless terminated earlier. We have the right to terminate the Novartis Agreement (a) for Novartis’s material breach if such breach remains uncured for 60 days (such cure period shall be extended for an additional period during which Novartis is making good faith efforts to cure such breach) or (b) for Novartis’s failure to use commercially reasonable efforts to develop or commercialize AL102 and/or the Novartis Licensed Product not remedied within four months following written notice to Novartis. Novartis has the right to terminate the Novartis Agreement (a) in its entirety or on a country-by-country basis for convenience, upon 60 days’ written notice to us, (b) for our material breach if such breach remains uncured for 60 days (such cure period shall be extended for an additional period during which we are making good faith efforts to cure such breach) or (c) upon immediate written notice to us for insolvency-related events involving us. Financial Overview Except as described below, there have been no material changes from the disclosure provided under the caption “Components of Results of Operations” in our Annual Report on Form 10-K for the year ended December 31, 2020. 16\n<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 0
      }
    },
    "difficulty": 3.688879454113936,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-188",
    "output": [
      "day_3_up_8_percent = 20\n    day_3_down_8_percent = 19\n    \n    # Do math calculation to get the answer\n    difference = (day_3_up_8_percent - day_3_down_8_percent) * 100\n    \n    # return answer\n    return difference\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 77,
      "prompt_tokens": 1626,
      "completion_tokens_details": {
        "text_tokens": 77
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1352
      },
      "total_tokens": 1703
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中连续3天涨幅>=8%的股票数量占比与连续3天跌幅<=8%的股票数量占比之差，并将结果转换为百分比形式，保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    increase_8_percent_3_days = 0.08\n    decrease_8_percent_3_days = 0.06\n\n    # Multi-step logic\n    difference = increase_8_percent_3_days - decrease_8_percent_3_days\n    percentage_difference = difference * 100\n    return round(percentage_difference, 1)",
    "image_id": "strategy_04_04_06_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3121",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3067-1.png",
      "./MultiFinance/images/3067-2.png",
      "./MultiFinance/images/3067-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3067-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-189",
    "output": [
      "yoy_2024 = 1.29% \n    yoy_2025 = 30% \n    yoy_2026 = 25%\n    \n    # Calculate compound annual growth rate (CAGR)\n    CAGR = ((1 + yoy_2024) * (1 + yoy_2025) * (1 + yoy_2026)) ** (1/3) - 1\n    \n    # Convert to percentage\n    CAGR_percentage = CAGR * 100\n    \n    # Return the result rounded to two decimal places\n    return round(CAGR_percentage, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 158,
      "prompt_tokens": 3046,
      "completion_tokens_details": {
        "text_tokens": 158
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 2778
      },
      "total_tokens": 3204
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算永兴股份在2023年和2026年的归母净利润预测值的复合增长率；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    net_profit_2023 = 7.35\n    net_profit_2026 = 10.63\n\n    # Multi-step logic\n    years = 3\n    cagr = ((net_profit_2026 / net_profit_2023) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "industry_11_11_23_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2081",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2356-1.png",
      "./MultiFinance/images/2356-2.png",
      "./MultiFinance/images/2356-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2356-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-190",
    "output": [
      "total_revenue = round(sum([7.46, 9.94, 11.31, 11.19, 13.63, 13.88, 10.6]), 0)\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return total_revenue\n```"
    ],
    "usage": {
      "completion_tokens": 80,
      "prompt_tokens": 3105,
      "completion_tokens_details": {
        "text_tokens": 80
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 2847
      },
      "total_tokens": 3185
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2018年到2024年的营收总和，并将结果四舍五入至整数。",
    "python_solution": "def solution():\n    revenue_2018 = 7.46\n    revenue_2019 = 9.94\n    revenue_2020 = 11.31\n    revenue_2021 = 11.19\n    revenue_2022 = 13.63\n    revenue_2023 = 13.88\n    revenue_2024 = 10.60\n\n    total_revenue = revenue_2018 + revenue_2019 + revenue_2020 + revenue_2021 + revenue_2022 + revenue_2023 + revenue_2024\n    return round(total_revenue)",
    "image_id": "company_13_13_09_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-909",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2327-1.png",
      "./MultiFinance/images/2327-2.png",
      "./MultiFinance/images/2327-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2327-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-191",
    "output": [
      "net_sales = 500343\n    cost_of_goods_sold = 373396\n    selling_general_and_administrative_expenses = 95981\n    depreciation = 10529\n    interest_expense = 2178\n    taxable_income = 18259\n    tax = 4600\n    net_income = 13659\n    shares_outstanding = 2960\n    share_price = 106\n    weighted_average_cost_of_capital = 5\n    marginal_corporate_tax_rate = 35\n    \n    # Do math calculation to get the answer\n    economic_value_added = (net_sales - cost_of_goods_sold - selling_general_and_administrative_expenses - depreciation) * (1 - weighted_average_cost_of_capital)\n    \n    # return answer\n    return round(economic_value_added)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 211,
      "prompt_tokens": 1181,
      "completion_tokens_details": {
        "text_tokens": 211
      },
      "prompt_tokens_details": {
        "text_tokens": 315,
        "image_tokens": 866
      },
      "total_tokens": 1392
    },
    "model": "qwen-omni-turbo",
    "question": "The following table gives abbreviated balance sheets and income statements for Walmart. <image 1> At the end of fiscal 2017, Walmart had 2,960 million shares outstanding with a share price of $106. The company's weighted-average cost of capital was about 5%. Assume the marginal corporate tax rate was 35%. Calculate Economic value added. Answer to the nearest integer.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Corporate Finance",
    "source_id": "validation_Finance_14",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/78-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-192",
    "output": [
      "medical_insurance_percentage = 12.2%\n    defense_expenditure_percentage = 9.2%\n    medical_assistance_percentage = 4.8%\n    education_expenditure_percentage = 14.1%\n\n    total_medical_insurance_and_defense = medical_insurance_percentage + defense_expenditure_percentage\n    total_medical_assistance_and_education = medical_assistance_percentage + education_expenditure_percentage\n\n    difference_percentage = (total_medical_assistance_and_education - total_medical_insurance_and_defense) * 100\n\n    # return answer\n    return difference_percentage\n```"
    ],
    "usage": {
      "completion_tokens": 131,
      "prompt_tokens": 718,
      "completion_tokens_details": {
        "text_tokens": 131
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 452
      },
      "total_tokens": 849
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算医疗保险和国防开支的总占比，并将其与医疗补助和教育开支的总占比进行比较。请提供结果作为百分比。",
    "python_solution": "def solution():\n    medical_insurance = 12.9\n    defense_spending = 14.1\n    medical_assistance = 9.2\n    education_spending = 4.8\n\n    total_percentage_1 = (medical_insurance + defense_spending)\n    total_percentage_2 = (medical_assistance + education_spending)\n\n    result = total_percentage_1 / total_percentage_2\n    return round(result * 100, 1)",
    "image_id": "macro_08_08_10_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2494",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 3.7841896339182615,
    "images": [
      "./MultiFinance/images/2519-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2519-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-193",
    "output": [
      "r_f = 6\n    r_m = 14\n    beta_A = 1 + 1.2 * ((r_m - r_f) / 100)\n    sigma_e_A = 10.3 / 100\n    std_excess_return_A = 21.6 / 100\n    \n    # Do math calculation to get the answer\n    info_ratio_A = (beta_A * (std_excess_return_A / beta_A)) / sigma_e_A\n    \n    # return answer\n    return round(info_ratio_A, 4)\n\n```"
    ],
    "usage": {
      "completion_tokens": 125,
      "prompt_tokens": 408,
      "completion_tokens_details": {
        "text_tokens": 125
      },
      "prompt_tokens_details": {
        "text_tokens": 301,
        "image_tokens": 107
      },
      "total_tokens": 533
    },
    "model": "qwen-omni-turbo",
    "question": "Consider the two (excess return) index-model regression results for stocks A and B. The risk-free rate over the period was 6%, and the market's average return was 14%. Performance is measured using an index model regression on excess returns. <image 1> Calculate the information ratio of Stock A. Answer to four decimal places.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Investment",
    "source_id": "validation_Accounting_24",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/33-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-194",
    "output": [
      "sales_and_marketing_2018 = 27324\n    sales_and_marketing_2019 = 38325\n    \n    total_share_based_compensation_expense_2018 = 68088\n    total_share_based_compensation_expense_2019 = 101354\n    \n    # Calculate the increase in total share-based compensation expense in 2019\n    total_share_based_compensation_increase = total_share_based_compensation_expense_2019 - total_share_based_compensation_expense_2018\n    \n    # Calculate the new total share-based compensation expense in 2019 with a 15% increase\n    new_total_share_based_compensation_expense_2019 = total_share_based_compensation_expense_2019 + (total_share_based_compensation_increase * 0.15)\n    \n    # Calculate the percentage change in share-based compensation for sales and marketing between 2018 and 2019\n    percentage_change_sales_and_marketing = ((sales_and_marketing_2019 - sales_and_marketing_2018) / sales_and_marketing_2018) * 100\n    \n    # Return the percentage change in share-based compensation for sales and marketing between 2018 and 2019\n    return percentage_change_sales_and_marketing\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 321,
      "prompt_tokens": 1587,
      "completion_tokens_details": {
        "text_tokens": 321
      },
      "prompt_tokens_details": {
        "text_tokens": 325,
        "image_tokens": 1262
      },
      "total_tokens": 1908
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the percentage change in share-based compensation for sales and marketing between 2018 and 2019 if the compensation expense in 2019 is increased by 15%? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    sbc_2019 = 31156\n    sbc_2018 = 20807\n    increase_percent = 0.15\n\n    # Do math calculation to get the answer\n    sbc_2019 += sbc_2019 * increase_percent\n    answer = (sbc_2019 - sbc_2018) / sbc_2018 * 100\n\n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-192",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Note 11. Share-Based Compensation A summary of share-based compensation expense recognized in the Company’s Consolidated Statements of Operations is as follows (in thousands):",
    "images": [
      "./MultiFinance/images/1931-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 2,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-195",
    "output": [
      "year_1 = 7.48\n    year_2 = 10.59\n    year_3 = 12.29\n    \n    # Do math calculation to get the answer\n    growth_rate_year_1 = (year_2 - year_1) / year_1 * 100\n    growth_rate_year_2 = (year_3 - year_2) / year_2 * 100\n    \n    average_growth_rate = (growth_rate_year_1 + growth_rate_year_2) / 2\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 147,
      "prompt_tokens": 1850,
      "completion_tokens_details": {
        "text_tokens": 147
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 1590
      },
      "total_tokens": 1997
    },
    "model": "qwen-omni-turbo",
    "question": "请计算稳健医疗在2024年到2026年的归母净利润的年均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = 7.48\n    net_profit_2025 = 10.59\n    net_profit_2026 = 12.29\n    growth_rate_2024_2025 = (net_profit_2025 - net_profit_2024) / net_profit_2024 * 100\n    growth_rate_2025_2026 = (net_profit_2026 - net_profit_2025) / net_profit_2025 * 100\n    average_growth_rate = (growth_rate_2024_2025 + growth_rate_2025_2026) / 2\n    return round(average_growth_rate, 2)",
    "image_id": "company_36_36_22_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-355",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.477336814478207,
    "images": [
      "./MultiFinance/images/2235-1.png",
      "./MultiFinance/images/2235-2.png",
      "./MultiFinance/images/2235-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2235-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-196",
    "output": [
      "growth_rate_2023_to_2024 = (1701 - 809) / 809 * 100\n    \n    # return answer\n    return round(growth_rate_2023_to_2024, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 75,
      "prompt_tokens": 3374,
      "completion_tokens_details": {
        "text_tokens": 75
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 3114
      },
      "total_tokens": 3449
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2024年全球电动车热管理市场空间的增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    global_market_space_2023 = 809\n    global_market_space_2024 = 992\n    # Multi-step logic\n    growth_rate = (global_market_space_2024 - global_market_space_2023) / global_market_space_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_11_11_22_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1351",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2735-1.png",
      "./MultiFinance/images/2735-2.png",
      "./MultiFinance/images/2735-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2735-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-197",
    "output": [
      "net_profit_2023 = 45.2\n    net_profit_2024 = 61.7\n    net_profit_2025 = 69.8\n    net_profit_2026 = 78.0\n    \n    # Calculate average net profit\n    average_net_profit = (net_profit_2023 + net_profit_2024 + net_profit_2025 + net_profit_2026) / 4\n    \n    # Return the result rounded to two decimal places\n    return round(average_net_profit, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 145,
      "prompt_tokens": 2487,
      "completion_tokens_details": {
        "text_tokens": 145
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2224
      },
      "total_tokens": 2632
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算华电国际2023年到2026年的净利润平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    net_profit_2023 = 45.2\n    net_profit_2024 = 61.7\n    net_profit_2025 = 69.8\n    net_profit_2026 = 78.0\n\n    average_net_profit = (net_profit_2023 + net_profit_2024 + net_profit_2025 + net_profit_2026) / 4\n    return round(average_net_profit, 2)",
    "image_id": "company_31_31_26_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1676",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2639-1.png",
      "./MultiFinance/images/2639-2.png",
      "./MultiFinance/images/2639-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2639-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-198",
    "output": [
      "year_2020 = 206\n    year_2025 = 756\n    years = 2025 - 2020 + 1\n    \n    # Do math calculation to get the answer\n    cagr = (year_2025 / year_2020) ** (1/years) - 1\n    \n    # return answer\n    return round(cagr * 100, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 3548,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 3279
      },
      "total_tokens": 3655
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中微软2020年和2025年的收入数据，计算微软在这五年间的年均复合增长率（CAGR）。请保留两位小数。",
    "python_solution": "def solution():\n    value_2020 = 206\n    value_2025 = 756\n    years = 5\n\n    cagr = ((value_2025 / value_2020) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "strategy_05_05_10_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2977",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2661-1.png",
      "./MultiFinance/images/2661-2.png",
      "./MultiFinance/images/2661-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2661-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-199",
    "output": [
      "deposits = 2900\n    loan = 2407\n    reserve = 493\n    \n    # Do math calculation to get the answer\n    m1_money_supply_change = (deposits + loan) - reserve\n    \n    # return answer\n    return int(m1_money_supply_change)\n```"
    ],
    "usage": {
      "completion_tokens": 69,
      "prompt_tokens": 395,
      "completion_tokens_details": {
        "text_tokens": 69
      },
      "prompt_tokens_details": {
        "text_tokens": 291,
        "image_tokens": 104
      },
      "total_tokens": 464
    },
    "model": "qwen-omni-turbo",
    "question": "Consider the following balance sheet for TD. <image 1> Suppose that TD is a typical bank and keeps only the required reserves. In addition, suppose that someone deposited $700. Given this data, what is the total change in the M1 Money Supply? Answer to the nearest integer.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Macroeconomics",
    "source_id": "validation_Economics_23",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/53-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-200",
    "output": [
      "total_assets_2024E = 7881\n    total_liabilities_2024E = 6636\n    \n    net_worth_2024E = total_assets_2024E - total_liabilities_2024E\n    percentage_net_worth_2024E = (net_worth_2024E / total_assets_2024E) * 100\n    \n    # return answer\n    return round(percentage_net_worth_2024E, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 138,
      "prompt_tokens": 2456,
      "completion_tokens_details": {
        "text_tokens": 138
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 2186
      },
      "total_tokens": 2594
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024E的总资产与总负债的差值，并将该差值占总资产的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    total_assets_2024E = 6636\n    total_liabilities_2024E = 1164\n\n    # Multi-step logic\n    diff = total_assets_2024E - total_liabilities_2024E\n    ratio = diff / total_assets_2024E\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_33_33_15_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-119",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2593-1.png",
      "./MultiFinance/images/2593-2.png",
      "./MultiFinance/images/2593-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2593-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-201",
    "output": [
      "product_revenue_cost_2020 = 84251\n    licensing_and_other_revenue_cost_2020 = 7666\n    research_and_development_cost_2020 = 41230\n    selling_general_and_administrative_cost_2020 = 133869\n    \n    # Calculate the expected costs with the given percentage increases\n    product_revenue_cost_increase = product_revenue_cost_2020 * 0.05\n    licensing_and_other_revenue_cost_increase = licensing_and_other_revenue_cost_2020 * 0.10\n    research_and_development_cost_increase = research_and_development_cost_2020 * 0.15\n    selling_general_and_administrative_cost_increase = selling_general_and_administrative_cost_2020 * 0.20\n    \n    # Calculate the new costs\n    product_revenue_cost_2021 = product_revenue_cost_2020 + product_revenue_cost_increase\n    licensing_and_other_revenue_cost_2021 = licensing_and_other_revenue_cost_2020 + licensing_and_other_revenue_cost_increase\n    research_and_development_cost_2021 = research_and_development_cost_2020 + research_and_development_cost_increase\n    selling_general_and_administrative_cost_2021 = selling_general_and_administrative_cost_2020 + selling_general_and_administrative_cost_increase\n    \n    # Calculate the total cost and expenses for the next six months\n    total_cost_and_expenses_2021 = (product_revenue_cost_2021 + \n                                   licensing_and_other_revenue_cost_2021 + \n                                   research_and_development_cost_2021 + \n                                   selling_general_and_administrative_cost_2021)\n    \n    # Return the answer\n    return total_cost_and_expenses_2021\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 440,
      "prompt_tokens": 1483,
      "completion_tokens_details": {
        "text_tokens": 440
      },
      "prompt_tokens_details": {
        "text_tokens": 308,
        "image_tokens": 1175
      },
      "total_tokens": 1923
    },
    "model": "qwen-omni-turbo",
    "question": "What will be the projected total cost and expenses if the company expects a cost increase of product revenues, licensing and other revenues, research and development, and Selling, general and administrative by 5%, 10%, 15%, and 20%, respectively, in the next six months? (in thousands)",
    "python_solution": "def solution():\n     #Define variables name and value\n    cost_of_product_revenues = 84251\n    cost_of_licensing_and_other_revenues = 7666 \n    research_and_development = 41230\n    selling_general_and_administrative = 133869\n    other_costs = 267016 - (cost_of_product_revenues + cost_of_licensing_and_other_revenues + research_and_development + selling_general_and_administrative)\n\n    #Do math calculation to get the answer\n    projected_product_revenues = cost_of_product_revenues * 1.05\n    projected_licensing_and_other_revenues = cost_of_licensing_and_other_revenues * 1.1\n    projected_research_and_development = research_and_development * 1.15\n    projected_selling_general_and_administrative = selling_general_and_administrative * 1.2\n    projected_total_cost_and_expenses = projected_product_revenues + projected_licensing_and_other_revenues + projected_research_and_development + projected_selling_general_and_administrative + other_costs\n    answer = projected_total_cost_and_expenses\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-124",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2030-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 7,
          "-": 1,
          "*": 4,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 14,
        "parentheses": 2
      }
    },
    "difficulty": 5.19295685089021,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-202",
    "output": [
      "property_management_fees_2018 = 497\n    construction_management_fees_2018 = 18\n    asset_management_fees_2018 = 1055\n    general_and_administrative_costs_2018 = 160\n    \n    # Do math calculation to get the answer\n    total_fees_2018 = property_management_fees_2018 + construction_management_fees_2018 + asset_management_fees_2018 + general_and_administrative_costs_2018\n    \n    # return answer\n    return total_fees_2018\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 158,
      "prompt_tokens": 1540,
      "completion_tokens_details": {
        "text_tokens": 158
      },
      "prompt_tokens_details": {
        "text_tokens": 779,
        "image_tokens": 761
      },
      "total_tokens": 1698
    },
    "model": "qwen-omni-turbo",
    "question": "What is the total property, construction and asset management fees, and general and administrative costs incurred by the company for the three months ending on March 31, 2018 in thousands?",
    "python_solution": "def solution():\n     #Define variables name and value\n    property_management_fees_2018 = 1037 \n    construction_management_fees_2018 = 111 \n    operating_expenses_2018 = 312 \n    asset_management_fees_2018 = 1055\n    general_and_administrative_costs_2018 = 160\n\n    #Do math calculation to get the answer\n    answer = property_management_fees_2018 + construction_management_fees_2018 + operating_expenses_2018 + asset_management_fees_2018 + general_and_administrative_costs_2018\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-202",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2073-1.png"
    ],
    "context": "The Company also will pay the Property Manager a separate fee for the one-time initial lease-up, leasing-up of newly constructed properties or re-leasing to existing tenants. For the three months ended March 31, 2018 and 2017, the Company incurred approximately $1,037,000 and $671,000, respectively, in property management fees to the Property Manager, which are recorded in rental and parking expenses in the accompanying condensed consolidated statements of comprehensive income. For the three months ended March 31, 2018 and 2017, the Company incurred $0 and $23,000, respectively, in leasing commissions to the Property Manager. Leasing commission fees are capitalized in other assets, net in the accompanying condensed consolidated balance sheets.\nFor acting as general contractor and/or construction manager to supervise or coordinate projects or to provide major repairs or rehabilitation on our properties, the Company may pay the Property Manager up to 5.0% of the cost of the projects, repairs and/or rehabilitation, as applicable, or construction management fees. For the three months ended March 31, 2018 and 2017, the Company incurred approximately $111,000 and $159,000, respectively, in construction management fees to the Property Manager. Construction management fees are capitalized in real estate, net in the accompanying condensed consolidated balance sheets.\nThe Company reimburses the Advisor for all operating expenses it paid or incurred in connection with the services provided to the Company, subject to certain limitations. Expenses in excess of the operating expenses in the four immediately preceding quarters that exceeds the greater of (a) 2.0% of average invested assets or (b) 25% of net income, subject to certain adjustments, will not be reimbursed unless the independent directors determine such excess expenses are justified. The Company will not reimburse the Advisor for personnel costs in connection with services for which the Advisor receives an acquisition fee or a disposition fee. For the three months ended March 31, 2018 and 2017, the Advisor allocated approximately $312,000 and $365,000, respectively, in operating expenses to the Company, which are recorded in general and administrative expenses in the accompanying condensed consolidated statements of comprehensive income.\n<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.58351893845611,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-203",
    "output": [
      "year_2021_profit = 1793 * (1 - 30.4%)\n    year_2022_profit = 1786 * (1 - 26.2%)\n    \n    profit_growth_rate = ((year_2022_profit - year_2021_profit) / year_2021_profit) * 100\n    \n    # return answer\n    return round(profit_growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 120,
      "prompt_tokens": 2054,
      "completion_tokens_details": {
        "text_tokens": 120
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 1781
      },
      "total_tokens": 2174
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2022年与2021年原料药及中间体业务的毛利润，并求出这两年毛利润的增长率；结果保留两位小数。",
    "python_solution": "def solution():\n    revenue_2021 = 1793\n    margin_2021 = 27.4 / 100\n    profit_2021 = revenue_2021 * margin_2021\n\n    revenue_2022 = 1774\n    margin_2022 = 30.9 / 100\n    profit_2022 = revenue_2022 * margin_2022\n\n    growth_rate = ((profit_2022 - profit_2021) / profit_2021) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_39_39_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1238",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 3,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2268-1.png",
      "./MultiFinance/images/2268-2.png",
      "./MultiFinance/images/2268-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2268-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-204",
    "output": [
      "year_2022A_Revenue = 20285\n    year_2023A_Revenue = 19453\n    \n    # Do math calculation to get the answer\n    growth_rate = (year_2023A_Revenue - year_2022A_Revenue) / year_2022A_Revenue * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 2744,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 254,
        "image_tokens": 2490
      },
      "total_tokens": 2862
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年的营业收入增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    revenue_2022 = 31.1\n    revenue_2023 = -4.1\n    growth_rate = (revenue_2023 - revenue_2022) / revenue_2022 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_31_31_28_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1664",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2978-1.png",
      "./MultiFinance/images/2978-2.png",
      "./MultiFinance/images/2978-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2978-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-205",
    "output": [
      "first_item_2021 = -8.03\n    second_item_2021 = 37.44\n    third_item_2021 = 49.84\n    \n    # Do math calculation to get the answer\n    difference = first_item_2021 - second_item_2021\n    result = (difference / third_item_2021) * 100\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 123,
      "prompt_tokens": 1265,
      "completion_tokens_details": {
        "text_tokens": 123
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 988
      },
      "total_tokens": 1388
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年第一项指标与第二项指标的差值，并将该差值除以第三项指标，然后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_2021_first = 19.61\n    value_2021_second = 21.08\n    value_2021_third = 71.64\n\n    diff = value_2021_second - value_2021_first\n    ratio = diff / value_2021_third\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_23_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2818",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3047-1.png",
      "./MultiFinance/images/3047-2.png",
      "./MultiFinance/images/3047-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3047-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-206",
    "output": [
      "September_30_2015_total_outstanding_amount = 190541\n    December_31_2014_total_outstanding_amount = 226073\n    \n    # Calculate the percent change\n    percent_change = ((September_30_2015_total_outstanding_amount - December_31_2014_total_outstanding_amount) / December_31_2014_total_outstanding_amount) * 100\n    \n    # Return the result\n    return percent_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 132,
      "prompt_tokens": 911,
      "completion_tokens_details": {
        "text_tokens": 132
      },
      "prompt_tokens_details": {
        "text_tokens": 288,
        "image_tokens": 623
      },
      "total_tokens": 1043
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percent change in the total outstanding amount of the Citibank Bilateral Letter of Credit Agreement from September 30, 2015 to December 31, 2014?",
    "python_solution": "def solution():\n    #Define variables name and value\n    outstanding_september_2015 = 190541  # Dollars in thousands\n    outstanding_december_2014 = 226073  # Dollars in thousands\n\n    #Do math calculation to get the answer\n    percent_change = ((outstanding_september_2015 - outstanding_december_2014) / outstanding_december_2014) * 100\n    answer = round(percent_change, 2)\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-63",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1979-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.401197381662156,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-207",
    "output": [
      "t1 = 1152.90\n    t2 = 1921.50\n    t3 = 3074.40\n    t4 = 3843.00\n    \n    # Do math calculation to get the answer\n    total_income = t1 + t2 + t3 + t4\n    \n    # return answer\n    return round(total_income, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 2551,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2292
      },
      "total_tokens": 2657
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中T+1至T+4-T+12期间测控服务的总收入，并将其保留一位小数。",
    "python_solution": "def solution():\n    value_t1 = 219 + 36 + 300\n    value_t2 = 365 + 60 + 500\n    value_t3 = 584 + 96 + 800\n    value_t4_t12 = 730 + 120 + 1000\n\n    total_income = value_t1 + value_t2 + value_t3 + value_t4_t12\n    return round(total_income, 1)",
    "image_id": "company_22_22_38_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-286",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 11,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2261-1.png",
      "./MultiFinance/images/2261-2.png",
      "./MultiFinance/images/2261-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2261-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-208",
    "output": [
      "cagr_2008_to_2010 = ((1 - float(2008/12/31[2])) ** (1/3) - 1) * 100\n    \n    # return answer\n    return round(cagr_2008_to_2010, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 76,
      "prompt_tokens": 686,
      "completion_tokens_details": {
        "text_tokens": 76
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 422
      },
      "total_tokens": 762
    },
    "model": "qwen-omni-turbo",
    "question": "请计算沪深300指数在2008年到2010年的复合年增长率（CAGR），并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    hszs_2008 = -65.61\n    hszs_2010 = -11.58\n\n    # Multi-step logic\n    start_value = 100\n    end_value = start_value * (1 + hszs_2008/100)\n    final_value = end_value * (1 + hszs_2010/100)\n    years = 2\n    cagr = ((final_value / start_value) ** (1/years)) - 1\n    return round(cagr * 100, 2)",
    "image_id": "strategy_03_03_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2972",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 4,
          "*": 3,
          "/": 4,
          "%": 0,
          "**": 1
        },
        "total_operators": 14
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 12
      }
    },
    "difficulty": 5.4116460518550396,
    "images": [
      "./MultiFinance/images/2158-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2158-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-209",
    "output": [
      "state_5_SIZE_t = -2.85\n    state_5_EARNING_t = -0.5\n    state_5_MIDCAP_t = 1.82\n    \n    # Do math calculation to get the answer\n    diff = state_5_SIZE_t - state_5_EARNING_t\n    result = (diff / state_5_MIDCAP_t) * 100\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 114,
      "prompt_tokens": 1434,
      "completion_tokens_details": {
        "text_tokens": 114
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 1162
      },
      "total_tokens": 1548
    },
    "model": "qwen-omni-turbo",
    "question": "请计算状态5的SIZE_t与EARNING_t的差值，然后将该差值除以MIDCAP_t，并将结果乘以100；请保留一位小数。",
    "python_solution": "def solution():\n    size_t = -2.45\n    earning_t = -0.52\n    midcap_t = -3.18\n\n    diff = size_t - earning_t\n    ratio = diff / midcap_t\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "strategy_03_03_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2962",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.8712010109078907,
    "images": [
      "./MultiFinance/images/2425-1.png",
      "./MultiFinance/images/2425-2.png",
      "./MultiFinance/images/2425-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2425-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-210",
    "output": [
      "income_tax_benefit_2015 = 0.4\n    income_tax_benefit_2016 = 0.6\n    total_other_income_expenses_2015 = -135\n    total_other_income_expenses_2016 = -135 + 169\n    \n    # Calculate the increase in the income tax benefit as a percentage of the total other income (expenses)\n    increase_percentage = ((income_tax_benefit_2016 - income_tax_benefit_2015) / abs(total_other_income_expenses_2015)) * 100\n    \n    # Return the answer\n    return increase_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 161,
      "prompt_tokens": 1080,
      "completion_tokens_details": {
        "text_tokens": 161
      },
      "prompt_tokens_details": {
        "text_tokens": 388,
        "image_tokens": 692
      },
      "total_tokens": 1241
    },
    "model": "qwen-omni-turbo",
    "question": "What is the increase in the income tax benefit as a percentage of the total other income (expenses) in the three months ending June 30, 2016 compared to the same period in 2015?",
    "python_solution": "def solution():\n    #Define variables name and value\n    TOI_2015 = -135 \n    TOI_2016 = 169 \n    ITB_2015 = 0.4 * 1000000\n    ITB_2016 = 0.6 * 1000000\n\n    #Do math calculation to get the answer\n    Increase = ((ITB_2016 / TOI_2016) - (ITB_2015 / TOI_2015)) * 100\n    return Increase\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-190",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2062-1.png"
    ],
    "context": "<image 1>\nThe total income tax benefit, composed of research and development tax credits recoverable, increased $0.2 million from an income tax benefit of $0.4 million for the three months ended June 30, 2015 to an income tax benefit of $0.6 million for the three months ended June 30, 2016. The level of tax credits recoverable is linked directly to qualifying research and development expenditure incurred in any one year.",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 3,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.343805421853684,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-211",
    "output": [
      "principal = 700000 * (1 - 0.3)\n    interest_rate = 4.5 / 12 / 100\n    term = 18\n\n    # Calculate monthly payment using the formula for an amortizing loan\n    monthly_payment = (principal * interest_rate) / (1 - (1 + interest_rate) ** (-term))\n\n    # Return the calculated monthly payment rounded to two decimal places\n    return round(monthly_payment, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 119,
      "prompt_tokens": 485,
      "completion_tokens_details": {
        "text_tokens": 119
      },
      "prompt_tokens_details": {
        "text_tokens": 323,
        "image_tokens": 162
      },
      "total_tokens": 604
    },
    "model": "qwen-omni-turbo",
    "question": "Ricky is considering purchasing an apartment costing $700,000. He will pay a 30% down payment and take out a mortgage for the remainder. Since he just got married and wants to save some money for future use, he will choose the plan with the lowest monthly payment. After visiting several banks, he received the following mortgage offers: <image 1> What is the monthly payment for Bank D? Answer to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_96",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/205-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-212",
    "output": [
      "US_real_estate_std_dev = 14.0\n    GIM_sharpe_ratio = 0.36\n    \n    # Do math calculation to get the answer\n    beta_US_real_estate = US_real_estate_std_dev / GIM_sharpe_ratio\n    \n    # return answer\n    return round(beta_US_real_estate, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 90,
      "prompt_tokens": 1617,
      "completion_tokens_details": {
        "text_tokens": 90
      },
      "prompt_tokens_details": {
        "text_tokens": 375,
        "image_tokens": 1242
      },
      "total_tokens": 1707
    },
    "model": "qwen-omni-turbo",
    "question": "The CME Foundation, which is based in the United States, has requested their Chief Investment Officer, Pauline Cortez, to conduct an analysis on the advantages of incorporating U.S real estate equities as a fixed asset class. As part of this process, Cortez must establish the relevant risk factor to use in the international capital asset pricing model (ICAPM) in order to appropriately determine the risk premium and expected return for this potential asset class. She will be using selected data provided by GloboStats as shown in Exhibit 1. Given the information in Exhibit 1 and under the assumption of perfect markets, what would be the calculated beta for U.S. real estate equities? Answer to three decimal places.",
    "python_solution": "def solution():\n    cov = 0.0075\n    RPM = (7.2/100) - (3.1/100)\n    sigmaM = RPM / 0.36\n    varM = sigmaM ** 2\n    beta = cov / varM\n    return beta",
    "topic": "Market Analysis & Economics",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 4,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.8712010109078907,
    "source_id": "validation-2",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/288-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-213",
    "output": [
      "year_2018 = 9.6\n    year_2024Q1_3 = 4.7\n    \n    # Do math calculation to get the answer\n    growth_rate = (year_2024Q1_3 - year_2018) / year_2018 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 2225,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1961
      },
      "total_tokens": 2332
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年到2024年第一季度保费市占率的增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    market_share_2018 = 4.2\n    market_share_2024Q1 = 4.7\n\n    # Multi-step logic\n    growth_rate = (market_share_2024Q1 - market_share_2018) / market_share_2018 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_27_27_08_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-407",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2703-1.png",
      "./MultiFinance/images/2703-2.png",
      "./MultiFinance/images/2703-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2703-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-214",
    "output": [
      "historical_position = 54 - 23\n    long_term_store_of_value_inflation_hedge = 36 - 19\n    \n    # Do math calculation to get the answer\n    difference_percentage = (long_term_store_of_value_inflation_hedge - historical_position) / historical_position * 100\n    \n    # return answer\n    return round(difference_percentage, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 89,
      "prompt_tokens": 1962,
      "completion_tokens_details": {
        "text_tokens": 89
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1703
      },
      "total_tokens": 2051
    },
    "model": "qwen-omni-turbo",
    "question": "请计算长期价值存储/通胀对冲与有效投资组合分散化两个指标的差值百分比，并保留一位小数。",
    "python_solution": "def solution():\n    long_term_store_of_value_highly_relevant = 36\n    long_term_store_of_value_somewhat_relevant = 19\n    effective_portfolio_diversifier_highly_relevant = 30\n    effective_portfolio_diversifier_somewhat_relevant = 26\n    \n    diff_long_term = long_term_store_of_value_highly_relevant + long_term_store_of_value_somewhat_relevant\n    diff_effective_portfolio = effective_portfolio_diversifier_highly_relevant + effective_portfolio_diversifier_somewhat_relevant\n    \n    percentage_diff = ((diff_long_term - diff_effective_portfolio) / diff_effective_portfolio) * 100\n    return round(percentage_diff, 1)",
    "image_id": "market_06_06_17_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2654",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2360-1.png",
      "./MultiFinance/images/2360-2.png",
      "./MultiFinance/images/2360-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2360-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-215",
    "output": [
      "year_2022_net_profit = 1.47\n    year_2024_net_profit = 1.54\n    \n    # Do math calculation to get the answer\n    net_profit_growth_rate = (year_2024_net_profit - year_2022_net_profit) / year_2022_net_profit * 100\n    \n    # return answer\n    return round(net_profit_growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 2534,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2275
      },
      "total_tokens": 2638
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年相对于2022年的净利润增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    profit_2022 = 1.4\n    profit_growth_rate_2024 = 200\n    profit_2024 = profit_2022 * (1 + profit_growth_rate_2024 / 100)\n    growth_rate = (profit_2024 - profit_2022) / profit_2022 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_16_16_09_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1870",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.8712010109078907,
    "images": [
      "./MultiFinance/images/2416-1.png",
      "./MultiFinance/images/2416-2.png",
      "./MultiFinance/images/2416-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2416-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-216",
    "output": [
      "japan_capacity = 11000 + 2000 + 3750 + 2000 + 4000\n    china_capacity = 6000 + 5000 + 6200\n    \n    total_capacity = japan_capacity + china_capacity\n    \n    # return answer\n    return int(total_capacity)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 90,
      "prompt_tokens": 3209,
      "completion_tokens_details": {
        "text_tokens": 90
      },
      "prompt_tokens_details": {
        "text_tokens": 247,
        "image_tokens": 2962
      },
      "total_tokens": 3299
    },
    "model": "qwen-omni-turbo",
    "question": "请计算日本和中国企业的总产能，并将结果保留为整数。",
    "python_solution": "def total_capacity_japan_china():\n    capacity_japan = 11000 + 3750 + 2000\n    capacity_china = 10000 + 6000 + 5000 + 6200\n    total = capacity_japan + capacity_china\n    return int(total)",
    "image_id": "industry_04_04_09_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2192",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.737669618283368,
    "images": [
      "./MultiFinance/images/2524-1.png",
      "./MultiFinance/images/2524-2.png",
      "./MultiFinance/images/2524-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2524-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-217",
    "output": [
      "cash_and_marketable_securities = 100\n    accounts_receivable = 200\n    inventory = 50\n    current_assets = 350\n    real_estate = 2100\n    other_assets = 150\n    total_assets = 2600\n    bank_loan = 280\n    accounts_payable = 120\n    current_liabilities = 400\n    long_term_debt = 1800\n    equity = 400\n    total_liabilities_and_equity = 2600\n    interest_rate_bank_debt = 0.10\n    interest_rate_real_estate_debt = 0.09\n    number_of_shares_outstanding = 10_000_000\n    price_per_share = 90\n    expected_return_on_stock = 0.18\n    marginal_tax_rate = 0.21\n\n    # Calculate weights\n    weight_bank_debt = (bank_loan + accounts_payable) / total_liabilities_and_equity\n    weight_real_estate_debt = (long_term_debt * interest_rate_real_estate_debt) / (total_liabilities_and_equity * interest_rate_bank_debt)\n    weight_equity = (equity + (number_of_shares_outstanding * price_per_share)) / total_liabilities_and_equity\n\n    # Calculate cost of each component\n    cost_bank_debt = (interest_rate_bank_debt - (interest_rate_bank_debt * marginal_tax_rate))\n    cost_real_estate_debt = (interest_rate_real_estate_debt - (interest_rate_real_estate_debt * marginal_tax_rate))\n    cost_equity = expected_return_on_stock\n\n    # Calculate WACC\n    wacc = (weight_bank_debt * cost_bank_debt) + (weight_real_estate_debt * cost_real_estate_debt) + (weight_equity * cost_equity)\n\n    # Return answer as a percentage to single decimal place\n    return round(wacc * 100, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 465,
      "prompt_tokens": 727,
      "completion_tokens_details": {
        "text_tokens": 465
      },
      "prompt_tokens_details": {
        "text_tokens": 384,
        "image_tokens": 343
      },
      "total_tokens": 1192
    },
    "model": "qwen-omni-turbo",
    "question": "Table 19.3 shows a book balance sheet for the Wishing Well Motel chain. The company's long-term debt is secured by its real estate assets, but it also uses short-term bank loans as a permanent source of financing. It pays 10% interest on the bank debt and 9% interest on the secured debt. Wishing Well has 10 million shares of stock outstanding, trading at $90 per share. The expected return on Wishing Well's common stock is 18%. Calculate Wishing Well's WACC. Assume that the book and market values of Wishing Well's debt are the same. The marginal tax rate is 21%.<image 1> Answer as a percentage to single decimal place.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_298",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/207-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-218",
    "output": [
      "net_sales_2021 = 1785.6\n    accounts_receivable_2021 = 1201.5\n    \n    # Do math calculation to get the answer\n    debtors_collection_period = (accounts_receivable_2021 * 365) / net_sales_2021\n    \n    # return answer\n    return debtors_collection_period\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 103,
      "prompt_tokens": 2773,
      "completion_tokens_details": {
        "text_tokens": 103
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 2493
      },
      "total_tokens": 2876
    },
    "model": "qwen-omni-turbo",
    "question": "What is the average debtor collection period for Avantor, Inc. between January 1 and March 31, 2021 in days?",
    "python_solution": "def solution():\n     #Define variables name and value\n    net_sales = 1785.6 \n    accounts_receivable_start = 1113.3 \n    accounts_receivable_end = 1201.5 \n\n     #average accounts receivable\n    average_accounts_receivable = (accounts_receivable_start + accounts_receivable_end) / 2\n\n    #accounts receivable turnover ratio\n    accounts_receivable_turnover = net_sales / average_accounts_receivable\n\n    #debtor collection period in days\n    debtor_collection_period = 365 / accounts_receivable_turnover\n    return debtor_collection_period\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-151",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2044-1.png",
      "./MultiFinance/images/2044-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 0,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 2
      }
    },
    "difficulty": 3.8712010109078907,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-219",
    "output": [
      "kexing_profit_growth_2023A = -110.74\n    kexing_profit_growth_2024E = 121.45\n    kexing_profit_growth_2025E = 155.76\n    kexing_profit_growth_2026E = 118.64\n    \n    # Do math calculation to get the answer\n    average_profit_growth = (kexing_profit_growth_2023A + kexing_profit_growth_2024E + kexing_profit_growth_2025E + kexing_profit_growth_2026E) / 4\n    \n    # return answer\n    return round(average_profit_growth, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 180,
      "prompt_tokens": 1798,
      "completion_tokens_details": {
        "text_tokens": 180
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 1538
      },
      "total_tokens": 1978
    },
    "model": "qwen-omni-turbo",
    "question": "请计算科兴制药2023年到2026年的净利润增速的平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    net_profit_growth_2023 = -110.74\n    net_profit_growth_2024 = 121.45\n    net_profit_growth_2025 = 155.76\n    net_profit_growth_2026 = 118.64\n    \n    average_growth = (net_profit_growth_2023 + net_profit_growth_2024 + net_profit_growth_2025 + net_profit_growth_2026) / 4\n    return round(average_growth, 2)",
    "image_id": "company_38_38_26_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1154",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2567-1.png",
      "./MultiFinance/images/2567-2.png",
      "./MultiFinance/images/2567-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2567-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-220",
    "output": [
      "mixed_type_fund_4_month = -12879.0\n    mixed_type_fund_5_month = -12879.0\n    stock_type_fund_6_month = -40000.0\n    \n    # Do math calculation to get the answer\n    total_mixed_type_fund = mixed_type_fund_4_month + mixed_type_fund_5_month\n    difference = total_mixed_type_fund - stock_type_fund_6_month\n    \n    # return answer\n    return round(difference, 1)\n\n# Call the function and print the result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 138,
      "prompt_tokens": 3198,
      "completion_tokens_details": {
        "text_tokens": 138
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 2927
      },
      "total_tokens": 3336
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算4月和5月的混合型基金收益总和，并将其与6月的股票型基金收益进行比较；请提供结果保留一位小数。",
    "python_solution": "def solution():\n    mixed_apr = -5000\n    mixed_may = -10000\n    stock_jun = 15000\n\n    sum_mixed = mixed_apr + mixed_may\n    result = (sum_mixed / stock_jun) * 100\n    return round(result, 1)",
    "image_id": "market_00_00_06_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2760",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2579-1.png",
      "./MultiFinance/images/2579-2.png",
      "./MultiFinance/images/2579-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2579-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-221",
    "output": [
      "underwriter_rank = 6\n    pre_offer_price_adjustment = 0.04\n    offer_size = 40\n    fraction_retained = 0.70\n    \n    intercept = 0.0477\n    underwriter_rank_coefficient = 0.015\n    pre_offer_coefficient = 0.435\n    offer_size_coefficient = -0.0009\n    fraction_retained_coefficient = 0.05\n    \n    # Do math calculation to get the answer\n    initial_return = intercept + \\\n                    underwriter_rank_coefficient * underwriter_rank + \\\n                    pre_offer_coefficient * pre_offer_price_adjustment + \\\n                    offer_size_coefficient * offer_size + \\\n                    fraction_retained_coefficient * fraction_retained\n    \n    # return answer\n    return round(initial_return, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 196,
      "prompt_tokens": 1666,
      "completion_tokens_details": {
        "text_tokens": 196
      },
      "prompt_tokens_details": {
        "text_tokens": 424,
        "image_tokens": 1242
      },
      "total_tokens": 1862
    },
    "model": "qwen-omni-turbo",
    "question": "According to previous studies, Smith has chosen the following independent variables to forecast the initial returns of an IPO: Underwriter rank = 1–10, with 10 being the highest rank; Pre-offer price adjustment (Represented as a decimal) = (Offer price – Initial filing price)/Initial filing price; Offer size ($ millions) = Shares sold x Offer price; Fraction retained (Represented as a decimal) = Portion of total company shares kept by insiders Smith's Regression Results Dependent Variable: IPO Initial Return (Represented in Decimal Form, i.e., 1% = 0.01) The forthcoming IPO has these characteristics: underwriter rank = 6; pre-offer price adjustment = 0.04; offer size = $40 million; fraction retained = 0.70. Based on Smith’s regression analysis, what is the anticipated initial return for the forthcoming IPO? Answer to three decimal places.",
    "python_solution": "def solution():\n    underwriter_rank = 6\n    pre_offer_price_adjustment = 0.04\n    offer_size = 40 \n    fraction_retained = 0.70\n\n    IR = 0.0477 + (0.0150 * underwriter_rank) + (0.435 * pre_offer_price_adjustment) - (0.0009 * offer_size) + (0.05 * fraction_retained)\n    return IR",
    "topic": "Quantitative Analysis & Valuation",
    "statistics": {
      "number_statistics": {
        "args_numbers": 8
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 4,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 8
      }
    },
    "difficulty": 4.382026634673881,
    "source_id": "validation-66",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/313-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-222",
    "output": [
      "investment_A_beginning_value = 23400\n    investment_A_end_value = 20100\n    cash_flow_during_period = -2800\n    \n    # Do math calculation to get the answer\n    rate_of_return = (investment_A_end_value - investment_A_beginning_value) / cash_flow_during_period * 100\n    \n    # return answer\n    return round(rate_of_return)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 519,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 242
      },
      "total_tokens": 624
    },
    "model": "qwen-omni-turbo",
    "question": "For each of the investments shown in the following table, calculate the rate of return earned over the unspecified time period. <image 1> What is the rate of return for Investment A? Answer as a percentage to the nearest integer.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_163",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/165-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-223",
    "output": [
      "total_value = 2162 + 1132\n    all_values = [2162, 1132, 1610, 30.5, 2.5, 0.2, 0.2, 0.1, 0.0, 0.1]\n    \n    # Calculate the proportion\n    proportion = (total_value / sum(all_values)) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(proportion, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 132,
      "prompt_tokens": 1880,
      "completion_tokens_details": {
        "text_tokens": 132
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1614
      },
      "total_tokens": 2012
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中离心压缩机和轴流压缩机的产值总和，然后求该总和占所有风机产值的比例；请保留两位小数。",
    "python_solution": "def solution():\n    value_centrifugal = 1132\n    value_axial = 2162\n    total_value = 1132 + 2162 + 1610 + 30.5 + 2.5 + 0.2 + 0.2 + 0.1 + 0.0 + 0.1\n    sum_value = value_centrifugal + value_axial\n    ratio = sum_value / total_value * 100\n    return round(ratio, 2)",
    "image_id": "company_09_09_04_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-36",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 10,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 4.430816798843313,
    "images": [
      "./MultiFinance/images/2243-1.png",
      "./MultiFinance/images/2243-2.png",
      "./MultiFinance/images/2243-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2243-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-224",
    "output": [
      "liquidity_factors = [\n        -4.64,\n        -2.20,\n        -5.85,\n        -5.25\n    ]\n    \n    # Calculate the average RankIC for liquidity factors\n    average_rankic = sum(liquidity_factors) / len(liquidity_factors)\n    \n    # Return the result rounded to two decimal places\n    return round(average_rankic, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 102,
      "prompt_tokens": 1972,
      "completion_tokens_details": {
        "text_tokens": 102
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 1716
      },
      "total_tokens": 2074
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算量价因子中流动性二级因子的RankIC平均值，并保留两位小数。",
    "python_solution": "def solution():\n    rankic_values = [-4.64, -2.20, -5.85, -5.25]\n    average_rankic = sum(rankic_values) / len(rankic_values)\n    return round(average_rankic, 2)",
    "image_id": "market_09_09_31_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2820",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 6
      }
    },
    "difficulty": 3.401197381662155,
    "images": [
      "./MultiFinance/images/2810-1.png",
      "./MultiFinance/images/2810-2.png",
      "./MultiFinance/images/2810-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2810-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-225",
    "output": [
      "shenpi_2023_to_2026_EPS_sum = 4.93 + 6.06 + 6.97 + 18.67\n    shenpi_2025_PE = 33.73\n    \n    # Do math calculation to get the answer\n    answer = shenpi_2023_to_2026_EPS_sum * shenpi_2025_PE\n    \n    # return answer\n    return round(answer, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 116,
      "prompt_tokens": 2477,
      "completion_tokens_details": {
        "text_tokens": 116
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 2201
      },
      "total_tokens": 2593
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算片仔癀2023年到2026年的每股收益总和，并将其与2025年的市盈率相乘；请保留两位小数。",
    "python_solution": "def solution():\n    eps_2023 = 4.64\n    eps_2024 = 4.93\n    eps_2025 = 6.06\n    eps_2026 = 6.97\n    total_eps = eps_2023 + eps_2024 + eps_2025 + eps_2026\n    pe_2025 = 44.13\n    result = total_eps * pe_2025\n    return round(result, 2)",
    "image_id": "company_12_12_28_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1585",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2636-1.png",
      "./MultiFinance/images/2636-2.png",
      "./MultiFinance/images/2636-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2636-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-226",
    "output": [
      "week_absolute_performance = -2.13\n    month_absolute_performance = 0\n    week_relative_performance = -3.13\n    month_relative_performance = -3.8\n    shenzhen_300_performance = 1\n\n    # Calculate the difference between absolute performance and relative performance for one week\n    week_difference = week_absolute_performance - week_relative_performance\n\n    # Calculate the difference between absolute performance and relative performance for one month\n    month_difference = month_absolute_performance - month_relative_performance\n\n    # Calculate the average difference over two periods (one week and one month)\n    average_difference = (week_difference + month_difference) / 2\n\n    # Divide the average difference by the Shenzhen 300% performance and round to two decimal places\n    answer = round(average_difference / shenzhen_300_performance, 2)\n\n    # Return the calculated answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 192,
      "prompt_tokens": 1208,
      "completion_tokens_details": {
        "text_tokens": 192
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 941
      },
      "total_tokens": 1400
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中1周的绝对表现与相对表现之间的差值，然后将该差值除以沪深300%的数值，并保留两位小数。",
    "python_solution": "def solution():\n    absolute_1_week = -2.13\n    relative_1_week = -3.13\n    hs300_1_week = 1\n\n    diff = absolute_1_week - relative_1_week\n    result = diff / hs300_1_week\n    return round(result, 2)",
    "image_id": "company_05_05_00_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1555",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2832-1.png",
      "./MultiFinance/images/2832-2.png",
      "./MultiFinance/images/2832-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2832-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-227",
    "output": [
      "us_model_count = 61\n    china_model_count = 15\n    total_model_count = 84\n    global_model_count = 279\n    \n    # Do math calculation to get the answer\n    total_us_china_model_count = us_model_count + china_model_count\n    percentage = (total_us_china_model_count / global_model_count) * 100\n    \n    # return answer\n    return round(percentage, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 100,
      "prompt_tokens": 2153,
      "completion_tokens_details": {
        "text_tokens": 100
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1888
      },
      "total_tokens": 2253
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中美国和中国顶尖大模型数量的总和，然后求该总和占全球顶尖大模型数量的比例；请保留一位小数。",
    "python_solution": "def solution():\n    us_models = 61\n    china_models = 15\n    total_models = us_models + china_models\n    global_models = 61 + 15 + 8 + 5 + 4 + 4 + 4 + 3\n    ratio = total_models / global_models * 100\n    return round(ratio, 1)",
    "image_id": "strategy_05_05_08_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2975",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 8,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 4.248495242049359,
    "images": [
      "./MultiFinance/images/2291-1.png",
      "./MultiFinance/images/2291-2.png",
      "./MultiFinance/images/2291-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2291-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-228",
    "output": [
      "january_stock = -487605\n    february_stock = -397605\n    march_bond = 107605\n    \n    # Do math calculation to get the answer\n    total_jan_feb_stock = january_stock + february_stock\n    difference = total_jan_feb_stock - march_bond\n    \n    # return answer\n    return difference\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 93,
      "prompt_tokens": 3197,
      "completion_tokens_details": {
        "text_tokens": 93
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 2927
      },
      "total_tokens": 3290
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算1月和2月的股票型基金收益总和，并将其与3月的债券型基金收益进行比较；请提供结果作为整数。",
    "python_solution": "def solution():\n    stock_jan = -5000\n    stock_feb = -10000\n    bond_mar = 40000\n\n    sum_stock = stock_jan + stock_feb\n    result = sum_stock - bond_mar\n    return int(result)",
    "image_id": "market_00_00_06_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2759",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2846-1.png",
      "./MultiFinance/images/2846-2.png",
      "./MultiFinance/images/2846-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2846-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-229",
    "output": [
      "net_profit_growth_2021_to_2026 = [-116, 2329, 757, -5292, 665, 1649]\n    \n    # Calculate average\n    average_net_profit_growth = sum(net_profit_growth_2021_to_2026) / len(net_profit_growth_2021_to_2026)\n    \n    # Return result with two decimal places\n    return round(average_net_profit_growth, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 128,
      "prompt_tokens": 2032,
      "completion_tokens_details": {
        "text_tokens": 128
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1774
      },
      "total_tokens": 2160
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2026年期间，净利润增长率的平均值；请保留两位小数。",
    "python_solution": "def solution():\n    net_profit_growth_rates = [-115.59, -1954.33, -67.5, None, None, 148.2]\n    valid_rates = [rate for rate in net_profit_growth_rates if rate is not None]\n    average_growth_rate = sum(valid_rates) / len(valid_rates)\n    return round(average_growth_rate, 2)",
    "image_id": "company_21_21_21_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-836",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 6
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2820-1.png",
      "./MultiFinance/images/2820-2.png",
      "./MultiFinance/images/2820-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2820-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-230",
    "output": [
      "week_buy = 3 + 4\n    month_buy = 15 + 28\n    week_add = 0 + 0\n    month_add = 1 + 4\n    difference = (week_buy + week_add) - (month_buy + month_add)\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(difference, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 1482,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1208
      },
      "total_tokens": 1569
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算一周内买入和增持的总和，并将其与一月内的买入和增持的总和进行比较，求出两者的差值；请保留一位小数。",
    "python_solution": "def solution():\n    buy_week = 3\n    hold_week = 0\n    buy_month = 4\n    hold_month = 1\n    sum_week = buy_week + hold_week\n    sum_month = buy_month + hold_month\n    difference = sum_week - sum_month\n    return round(difference, 1)",
    "image_id": "company_08_08_21_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-591",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2870-1.png",
      "./MultiFinance/images/2870-2.png",
      "./MultiFinance/images/2870-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2870-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-231",
    "output": [
      "year1 = (34.30 - 9.84) * 100 / 9.84\n    year2 = (21.50 - 11.27) * 100 / 11.27\n    year3 = (23.16 - 12.61) * 100 / 12.61\n    year4 = (16.56 - 13.88) * 100 / 13.88\n    \n    # Do math calculation to get the answer\n    average_growth_rate = (year1 + year2 + year3 + year4) / 4\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 182,
      "prompt_tokens": 2542,
      "completion_tokens_details": {
        "text_tokens": 182
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 2281
      },
      "total_tokens": 2724
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年到2026年的净利润增长率的平均值；请保留两位小数。",
    "python_solution": "def solution():\n    growth_2023 = 34.30\n    growth_2024 = 21.50\n    growth_2025 = 23.16\n    growth_2026 = 16.56\n\n    average_growth = (growth_2023 + growth_2024 + growth_2025 + growth_2026) / 4\n    return round(average_growth, 2)",
    "image_id": "company_23_23_27_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-967",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2720-1.png",
      "./MultiFinance/images/2720-2.png",
      "./MultiFinance/images/2720-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2720-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-232",
    "output": [
      "red_tu_shenzhen_anju_reit_rental_rate_1Q24 = 98.63%\n    red_tu_shenzhen_anju_reit_rental_rate_2Q24 = 98.89%\n    red_tu_shenzhen_anju_reit_rental_rate_3Q24 = 98.63%\n    red_tu_shenzhen_anju_reit_rental_rate_4Q24 = 98.79%\n    \n    # Do math calculation to get the answer\n    average_rental_rate = (red_tu_shenzhen_anju_reit_rental_rate_1Q24 + red_tu_shenzhen_anju_reit_rental_rate_2Q24 + red_tu_shenzhen_anju_reit_rental_rate_3Q24 + red_tu_shenzhen_anju_reit_rental_rate_4Q24) / 4\n    \n    # return answer\n    return round(average_rental_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 229,
      "prompt_tokens": 3155,
      "completion_tokens_details": {
        "text_tokens": 229
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2892
      },
      "total_tokens": 3384
    },
    "model": "qwen-omni-turbo",
    "question": "请计算红土深圳安居 REIT 在 2024 年第一季度至第四季度的平均出租率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    q1 = 98.63\n    q2 = 95.55\n    q3 = 90.30\n    q4 = 90.79\n\n    # Multi-step logic\n    average_occupancy_rate = (q1 + q2 + q3 + q4) / 4\n    return round(average_occupancy_rate, 2)",
    "image_id": "industry_18_18_12_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2485",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2405-1.png",
      "./MultiFinance/images/2405-2.png",
      "./MultiFinance/images/2405-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2405-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-233",
    "output": [
      "q1_rental_income = 83.50 * 6.12 * 3\n    q2_rental_income = 33.75 * 6.12 * 3\n    q3_rental_income = 145.68 * 6.12 * 3\n    q4_rental_income = 92.68 * 6.12 * 3\n    \n    # Do math calculation to get the answer\n    total_rental_income = q1_rental_income + q2_rental_income + q3_rental_income + q4_rental_income\n    \n    # return answer\n    return round(total_rental_income, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 163,
      "prompt_tokens": 3468,
      "completion_tokens_details": {
        "text_tokens": 163
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 3204
      },
      "total_tokens": 3631
    },
    "model": "qwen-omni-turbo",
    "question": "请计算华夏金茂商业 REIT 在2024年第一季度至第四季度长沙览秀城的租金总收入，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    rent_q1 = 83.50\n    area_q1 = 6.12\n    rent_q2 = 85.89\n    area_q2 = 6.12\n    rent_q3 = 90.24\n    area_q3 = 6.12\n    rent_q4 = 92.68\n    area_q4 = 6.12\n    \n    # Multi-step logic\n    revenue_q1 = rent_q1 * area_q1\n    revenue_q2 = rent_q2 * area_q2\n    revenue_q3 = rent_q3 * area_q3\n    revenue_q4 = rent_q4 * area_q4\n    \n    total_revenue = revenue_q1 + revenue_q2 + revenue_q3 + revenue_q4\n    \n    return round(total_revenue, 2)",
    "image_id": "industry_18_18_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2435",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 4,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 16,
        "parentheses": 2
      }
    },
    "difficulty": 4.9126548857360515,
    "images": [
      "./MultiFinance/images/2183-1.png",
      "./MultiFinance/images/2183-2.png",
      "./MultiFinance/images/2183-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2183-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-234",
    "output": [
      "net_profit_2023 = 412\n    net_profit_2026 = 647\n    \n    # Calculate compound annual growth rate (CAGR)\n    CAGR = ((net_profit_2026 / net_profit_2023) ** (1/4)) - 1\n    \n    # Convert to percentage and round to two decimal places\n    CAGR_percentage = round(CAGR * 100, 2)\n    \n    # Return the calculated CAGR as a string with percentage sign\n    return f\"{CAGR_percentage}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 125,
      "prompt_tokens": 2609,
      "completion_tokens_details": {
        "text_tokens": 125
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 2356
      },
      "total_tokens": 2734
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2026年的净利润复合增长率，并保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2023 = 412\n    net_profit_2024 = 424\n    net_profit_2025 = 529\n    net_profit_2026 = 647\n\n    cagr = ((net_profit_2026 / net_profit_2023) ** (1/3)) - 1\n    return round(cagr, 2)",
    "image_id": "company_10_10_14_table_5",
    "source": "CRRQA",
    "source_id": "CRRQA-company-384",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 8
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2532-1.png",
      "./MultiFinance/images/2532-2.png",
      "./MultiFinance/images/2532-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2532-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-235",
    "output": [
      "two_month_buy_and_hold = 15 + 2\n    three_month_buy_and_hold = 28 + 4\n    \n    difference = two_month_buy_and_hold - three_month_buy_and_hold\n    \n    # return answer\n    return round(difference, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 59,
      "prompt_tokens": 1483,
      "completion_tokens_details": {
        "text_tokens": 59
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 1208
      },
      "total_tokens": 1542
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算二月内买入和增持的总和，并将其与三月内的买入和增持的总和进行比较，求出两者的差值；请保留一位小数。",
    "python_solution": "def solution():\n    buy_feb = 15\n    hold_feb = 2\n    buy_mar = 28\n    hold_mar = 4\n    sum_feb = buy_feb + hold_feb\n    sum_mar = buy_mar + hold_mar\n    difference = sum_feb - sum_mar\n    return round(difference, 1)",
    "image_id": "company_08_08_21_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-592",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2871-1.png",
      "./MultiFinance/images/2871-2.png",
      "./MultiFinance/images/2871-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2871-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-236",
    "output": [
      "year_1_sales = 98.7\n    year_4_sales = 179.5\n    \n    # Calculate CAGR formula\n    cagr = ((year_4_sales / year_1_sales) ** (1/3)) - 1\n    \n    # Convert to percentage and round to one decimal place\n    cagr_percentage = round(cagr * 100, 1)\n    \n    # return answer\n    return cagr_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 112,
      "prompt_tokens": 1937,
      "completion_tokens_details": {
        "text_tokens": 112
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 1670
      },
      "total_tokens": 2049
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2025年到2028年之间仙琚销售额的复合年增长率（CAGR），并返回一个百分比，保留一位小数。",
    "python_solution": "def solution():\n    start_value = 135.6\n    end_value = 231.0\n    years = 3\n    cagr = ((end_value / start_value) ** (1 / years)) - 1\n    return round(cagr * 100, 1)",
    "image_id": "company_39_39_12_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1185",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2470-1.png",
      "./MultiFinance/images/2470-2.png",
      "./MultiFinance/images/2470-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2470-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-237",
    "output": [
      "net_income_2023 = 102621\n    dividends_declared = 260000  # $0.65 per share * 400000 shares (assuming 400000 shares outstanding)\n    \n    # Calculate the change in cash and cash equivalents before dividends\n    change_in_cash_before_dividends = net_income_2023 + 8799 - 310388\n    \n    # Calculate the change in cash and cash equivalents after dividends\n    change_in_cash_after_dividends = change_in_cash_before_dividends - dividends_declared\n    \n    # Return the difference between the two changes\n    return change_in_cash_after_dividends - 18127\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 179,
      "prompt_tokens": 1622,
      "completion_tokens_details": {
        "text_tokens": 179
      },
      "prompt_tokens_details": {
        "text_tokens": 401,
        "image_tokens": 1221
      },
      "total_tokens": 1801
    },
    "model": "qwen-omni-turbo",
    "question": "If ONE Gas, Inc. continued to operate with the same financial performance as it did in the 1st quarter of 2023, how much would the estimated change of cash and cash equivalents be by the end of year 2023 compared to the beginning of 2023, considering the dividends that will be paid on June 2, 2023? (in thousands of dollars)",
    "python_solution": "def solution():\n    q1_change_in_cash = 8799  \n    beginning_cash = 18127 \n    dividends_paid = 36002 \n\n    #Do math calculation to get the answer\n    estimated_annual_change = q1_change_in_cash * 4  \n    estimated_end_cash = beginning_cash + estimated_annual_change - dividends_paid  \n    answer = estimated_end_cash\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-232",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2095-1.png"
    ],
    "context": "<image 1>\nDividends Declared - In May 2023, we declared a dividend of $ 0.65 per share ($ 2.60 per share on an annualized basis) for shareholders of record as of May 17, 2023 , payable on June 2, 2023 .",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 0
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-238",
    "output": [
      "dec_31_2020_total_liabilities_and_stockholders_equity = 226789721\n    jun_30_2021_total_liabilities_and_stockholders_equity = 226671136\n    \n    # Calculate the difference between the two values\n    difference = jun_30_2021_total_liabilities_and_stockholders_equity - dec_31_2020_total_liabilities_and_stockholders_equity\n    \n    # Calculate the percentage change\n    percentage_change = (difference / dec_31_2020_total_liabilities_and_stockholders_equity) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 172,
      "prompt_tokens": 1502,
      "completion_tokens_details": {
        "text_tokens": 172
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1222
      },
      "total_tokens": 1674
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in total liabilities and stockholders' equity from December 31, 2020 to June 30, 2021?",
    "python_solution": "def solution():\n     #Define variables name and value\n    total_liabilities_and_stock_equity_Dec_2020 = 226789721\n    total_liabilities_and_stock_equity_Jun_2021 = 226671136\n\n    #Do math calculation to get the answer\n    percentage_change = ((total_liabilities_and_stock_equity_Jun_2021 - total_liabilities_and_stock_equity_Dec_2020) / total_liabilities_and_stock_equity_Dec_2020) * 100\n    return percentage_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-66",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1982-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-239",
    "output": [
      "state_2_shanghai_s深300 = 2.83%\n    state_3_shanghai_s深300 = -1.13%\n    \n    # Do math calculation to get the answer\n    change_rate = (state_3_shanghai_s深300 - state_2_shanghai_s深300) / state_2_shanghai_s深300 * 100\n    \n    # return answer\n    return round(change_rate, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 110,
      "prompt_tokens": 1751,
      "completion_tokens_details": {
        "text_tokens": 110
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1492
      },
      "total_tokens": 1861
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算状态2和状态3之间沪深300指数的变化率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    value_state2 = 2.7\n    value_state3 = -1.3\n    change_rate = (value_state3 - value_state2) / value_state2 * 100\n    return round(change_rate, 2)",
    "image_id": "strategy_03_03_19_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2959",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3056-1.png",
      "./MultiFinance/images/3056-2.png",
      "./MultiFinance/images/3056-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3056-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-240",
    "output": [
      "model_3_sales_2021 = 143178\n    model_3_sales_2024 = 176793\n    difference = model_3_sales_2024 - model_3_sales_2021\n    percentage_increase = (difference / model_3_sales_2021) * 100\n    \n    # return answer\n    return round(percentage_increase, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 3292,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 3008
      },
      "total_tokens": 3405
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年中国Model 3的销量与2021年的差值，然后将该差值除以2021年的销量，最后将结果乘以100得到百分比。请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    model_3_2021 = 143178\n    model_3_2024 = 176793\n    # Multi-step logic\n    diff = model_3_2024 - model_3_2021\n    ratio = diff / model_3_2021\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_19_19_32_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1016",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2622-1.png",
      "./MultiFinance/images/2622-2.png",
      "./MultiFinance/images/2622-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2622-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-241",
    "output": [
      "algeria_2025_1_to_3 = 908\n    algeria_2025_4_to_9 = 959\n    algeria_quota = 1007\n    \n    # Do math calculation to get the answer\n    production_difference = algeria_2025_4_to_9 - algeria_2025_1_to_3\n    percentage_difference = (production_difference / algeria_quota) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 142,
      "prompt_tokens": 3068,
      "completion_tokens_details": {
        "text_tokens": 142
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 2787
      },
      "total_tokens": 3210
    },
    "model": "qwen-omni-turbo",
    "question": "请计算阿尔及利亚在2025年1-3月和4-9月的产量差值，并将该差值占2025年配额量的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    algeria_q1 = 908\n    algeria_q2 = 959\n    algeria_quota = 1007\n\n    diff = algeria_q2 - algeria_q1\n    ratio = diff / algeria_quota\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "industry_06_06_03_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2034",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2996-1.png",
      "./MultiFinance/images/2996-2.png",
      "./MultiFinance/images/2996-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2996-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-242",
    "output": [
      "sales_volume_2021 = 17589\n    sales_volume_2022 = 18762\n    sales_volume_2023 = 20061\n    sales_volume_2024 = 21301\n    \n    growth_rate_2021_to_2022 = (sales_volume_2022 - sales_volume_2021) / sales_volume_2021 * 100\n    growth_rate_2022_to_2023 = (sales_volume_2023 - sales_volume_2022) / sales_volume_2022 * 100\n    growth_rate_2023_to_2024 = (sales_volume_2024 - sales_volume_2023) / sales_volume_2023 * 100\n    \n    average_growth_rate = (growth_rate_2021_to_2022 + growth_rate_2022_to_2023 + growth_rate_2023_to_2024) / 3\n    \n    # Do math calculation to get the answer\n    average_growth_rate = round(average_growth_rate, 2)\n    \n    # return answer\n    return average_growth_rate\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 304,
      "prompt_tokens": 1648,
      "completion_tokens_details": {
        "text_tokens": 304
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1387
      },
      "total_tokens": 1952
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021冷年到2024冷年的平均增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    growth_rate_2021 = 10.8\n    growth_rate_2022 = -2.3\n    growth_rate_2023 = 5.3\n    growth_rate_2024 = 6.2\n    average_growth_rate = (growth_rate_2021 + growth_rate_2022 + growth_rate_2023 + growth_rate_2024) / 4\n    return round(average_growth_rate, 2)",
    "image_id": "company_11_11_27_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1368",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2572-1.png",
      "./MultiFinance/images/2572-2.png",
      "./MultiFinance/images/2572-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2572-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-243",
    "output": [
      "dec_31_2020_deficit = -145803\n    jun_30_2021_deficit = -166459\n    dec_31_2020_equity = -1979\n    percentage_change = ((jun_30_2021_deficit - dec_31_2020_deficit) / dec_31_2020_deficit) * 100\n    \n    # return answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 133,
      "prompt_tokens": 1341,
      "completion_tokens_details": {
        "text_tokens": 133
      },
      "prompt_tokens_details": {
        "text_tokens": 304,
        "image_tokens": 1037
      },
      "total_tokens": 1474
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the Accumulated Deficit from December 31, 2020, to June 30, 2021, relative to the Total Stockholders’ Equity (Deficit) as of December 31, 2020?",
    "python_solution": "def solution():\n    #Define variables name and value\n\n    accumulated_deficit_december_2020 = -145803 #in thousands\n    accumulated_deficit_june_2021 = -166459 #in thousands \n    total_stockholders_equity_december_2020 = -1979 #in thousands\n\n    #Do math calculation to get the answer\n    change_in_accumulated_deficit = accumulated_deficit_june_2021 - accumulated_deficit_december_2020\n    answer = (change_in_accumulated_deficit / abs(total_stockholders_equity_december_2020)) * 100\n    return round(answer, 2)\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-61",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1978-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.189654742026425,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-244",
    "output": [
      "alibaba_cloud_share = 8\n    tianyi_cloud_share = 17\n    mobile_cloud_share = 13\n    huawei_cloud_share = 9\n    Tencent_cloud_share = 7\n    \n    # Calculate the sum of shares for Alibaba Cloud, Tianyi Cloud, and Mobile Cloud\n    total_shares_Alibaba_Tianyi_Mobile = alibaba_cloud_share + tianyi_cloud_share + mobile_cloud_share\n    \n    # Calculate the sum of shares for Huawei Cloud and Tencent Cloud\n    total_shares_Huawei_Tencent = huawei_cloud_share + Tencent_cloud_share\n    \n    # Calculate the difference between the two sums\n    difference = abs(total_shares_Alibaba_Tianyi_Mobile - total_shares_Huawei_Tencent)\n    \n    # Return the result with one decimal place\n    return round(difference, 1)\n\n# Call the function and print the result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 199,
      "prompt_tokens": 2198,
      "completion_tokens_details": {
        "text_tokens": 199
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 1914
      },
      "total_tokens": 2397
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年中国公有云厂商中阿里云、天翼云和移动云的市场份额总和，并将其与华为云和腾讯云的市场份额总和进行比较，求出两者的差值；请保留一位小数。",
    "python_solution": "def solution():\n    alibaba_china = 21\n    tianyi_china = 17\n    mobile_china = 13\n    huawei_china = 9\n    tencent_china = 7\n\n    sum_alibaba_tianyi_mobile = alibaba_china + tianyi_china + mobile_china\n    sum_huawei_tencent = huawei_china + tencent_china\n    difference = sum_alibaba_tianyi_mobile - sum_huawei_tencent\n    return round(difference, 1)",
    "image_id": "strategy_05_05_13_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2995",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2561-1.png",
      "./MultiFinance/images/2561-2.png",
      "./MultiFinance/images/2561-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2561-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-245",
    "output": [
      "net_profit_2022 = 1416\n    net_profit_2023 = -71\n    revenue_2022 = 102289\n    \n    # Do math calculation to get the answer\n    difference = (net_profit_2022 - net_profit_2023) / 2\n    result = difference / revenue_2022 * 10000\n    \n    # return answer\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 124,
      "prompt_tokens": 2809,
      "completion_tokens_details": {
        "text_tokens": 124
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 2539
      },
      "total_tokens": 2933
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2022年和2023年的净利润差值，并将结果除以2022年的营业收入。请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    net_profit_2022 = 1416\n    net_profit_2023 = -71\n    revenue_2022 = 102289\n\n    # Multi-step logic\n    diff = net_profit_2023 - net_profit_2022\n    result = diff / revenue_2022\n    return round(result, 2)",
    "image_id": "company_05_05_37_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1514",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2632-1.png",
      "./MultiFinance/images/2632-2.png",
      "./MultiFinance/images/2632-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2632-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-246",
    "output": [
      "management_rate_2021_to_2026 = [2.2, 1.9, 2.5, 2.0, 1.9, 1.9]\n    \n    # Calculate average\n    average_management_rate = sum(management_rate_2021_to_2026) / len(management_rate_2021_to_2026)\n    \n    # Return result with one decimal place\n    return round(average_management_rate, 1)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 122,
      "prompt_tokens": 1899,
      "completion_tokens_details": {
        "text_tokens": 122
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1638
      },
      "total_tokens": 2021
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年到2026年管理费率的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    management_rate_2021 = 2.2\n    management_rate_2022 = 1.9\n    management_rate_2023 = 2.5\n    management_rate_2024E = 2.0\n    management_rate_2025E = 1.9\n    management_rate_2026E = 1.9\n\n    total_management_rate = management_rate_2021 + management_rate_2022 + management_rate_2023 + management_rate_2024E + management_rate_2025E + management_rate_2026E\n    average_management_rate = total_management_rate / 6\n    return round(average_management_rate, 1)",
    "image_id": "company_02_02_24_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-92",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2318-1.png",
      "./MultiFinance/images/2318-2.png",
      "./MultiFinance/images/2318-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2318-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-247",
    "output": [
      "q1_2024 = 2.81\n    q2_2024 = 4.12\n    q3_2024 = 5.26\n    q4_2024 = 3.41\n    q4_2023 = 3.68\n    \n    # Do math calculation to get the answer\n    total_q2024 = q1_2024 + q2_2024 + q3_2024 + q4_2024\n    growth_rate = (total_q2024 - q4_2023) / q4_2023 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 190,
      "prompt_tokens": 3183,
      "completion_tokens_details": {
        "text_tokens": 190
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 2902
      },
      "total_tokens": 3373
    },
    "model": "qwen-omni-turbo",
    "question": "请计算鹏华深圳能源 REIT 在2024年第一季度至第四季度的发电收入总和，并将其与2023年第四季度的发电收入进行比较，计算增长百分比；结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values from the table\n    q1_2024 = 2.81\n    q2_2024 = 4.12\n    q3_2024 = 5.26\n    q4_2024 = 3.41\n    q4_2023 = 3.68\n\n    total_2024 = q1_2024 + q2_2024 + q3_2024 + q4_2024\n    growth_percentage = ((total_2024 - q4_2023) / q4_2023) * 100\n    return round(growth_percentage, 2)",
    "image_id": "industry_18_18_18_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2457",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 6
      }
    },
    "difficulty": 4.276666119016055,
    "images": [
      "./MultiFinance/images/2283-1.png",
      "./MultiFinance/images/2283-2.png",
      "./MultiFinance/images/2283-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2283-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-248",
    "output": [
      "week_absolute_performance = -6.56\n    week_relative_performance = -7.56\n    shenzhen_300_week_performance = 1\n\n    # Calculate the difference between absolute performance and relative performance\n    difference = week_absolute_performance - week_relative_performance\n\n    # Divide the difference by the Shenzhen 300's 1-week performance\n    result = difference / shenzhen_300_week_performance\n\n    # Return the result rounded to two decimal places\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 124,
      "prompt_tokens": 1245,
      "completion_tokens_details": {
        "text_tokens": 124
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 977
      },
      "total_tokens": 1369
    },
    "model": "qwen-omni-turbo",
    "question": "请计算1周的绝对表现与相对表现之间的差值，并将该差值除以沪深300%的1周表现，得到的结果保留两位小数。",
    "python_solution": "def solution():\n    absolute_performance_1_week = -6.56\n    relative_performance_1_week = -7.56\n    hs300_1_week = 1\n\n    diff = absolute_performance_1_week - relative_performance_1_week\n    result = diff / hs300_1_week\n    return round(result, 2)",
    "image_id": "company_12_12_00_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1586",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2834-1.png",
      "./MultiFinance/images/2834-2.png",
      "./MultiFinance/images/2834-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2834-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-249",
    "output": [
      "principal = 700000 * (1 - 0.3)\n    interest_rate_A = 3.5 / 100 / 12\n    term_A = 15\n\n    # Calculate monthly payment using the formula for an amortizing loan\n    monthly_payment_A = (principal * interest_rate_A) / (1 - (1 + interest_rate_A) ** (-term_A))\n\n    # return answer\n    return round(monthly_payment_A, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 485,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 323,
        "image_tokens": 162
      },
      "total_tokens": 591
    },
    "model": "qwen-omni-turbo",
    "question": "Ricky is considering purchasing an apartment costing $700,000. He will pay a 30% down payment and take out a mortgage for the remainder. Since he just got married and wants to save some money for future use, he will choose the plan with the lowest monthly payment. After visiting several banks, he received the following mortgage offers: <image 1> What is the monthly payment for Bank A? Answer to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_96",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/202-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-250",
    "output": [
      "france = 8\n    germany = 5\n    canada = 4\n    uk = 4\n    israel = 4\n    singapore = 3\n    \n    total = france + germany + canada + uk + israel + singapore\n    average = total / 6\n    \n    # Do math calculation to get the answer\n    answer = round(average)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 90,
      "prompt_tokens": 2152,
      "completion_tokens_details": {
        "text_tokens": 90
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1888
      },
      "total_tokens": 2242
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中法国、德国、加拿大、英国、以色列和新加坡顶尖大模型数量的平均值，并将结果四舍五入到整数。",
    "python_solution": "def solution():\n    france_models = 8\n    germany_models = 5\n    canada_models = 4\n    uk_models = 4\n    israel_models = 4\n    singapore_models = 3\n    total_models = france_models + germany_models + canada_models + uk_models + israel_models + singapore_models\n    average_models = total_models / 6\n    return round(average_models)",
    "image_id": "strategy_05_05_08_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2976",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2335-1.png",
      "./MultiFinance/images/2335-2.png",
      "./MultiFinance/images/2335-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2335-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-251",
    "output": [
      "total_assets_2021 = 193866\n    total_liabilities_and_equity_2021 = 193866\n    \n    deferred_contract_costs_increase = (4049 * 1.1)\n    other_long_term_assets_increase = (1130 * 1.1)\n    \n    total_current_assets_2021 = ((total_assets_2021 - total_liabilities_and_equity_2021) + \n                               (deferred_contract_costs_increase + other_long_term_assets_increase))\n    \n    # return answer\n    return total_current_assets_2021\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 152,
      "prompt_tokens": 1565,
      "completion_tokens_details": {
        "text_tokens": 152
      },
      "prompt_tokens_details": {
        "text_tokens": 321,
        "image_tokens": 1244
      },
      "total_tokens": 1717
    },
    "model": "qwen-omni-turbo",
    "question": "If the company plans to maintain an equal distribution of total assets and total liabilities and stockholders' equity by the end of 2021, along with a 10% increase in \"Deferred contract costs, net of current portion\" and \"Other long-term assets\" from March 2021 levels, what should be the new total of current assets in dollars?",
    "python_solution": "def solution():\n    #Define variables name and value\n    total_assets_mar_2021 = 193866\n    deferred_contract_costs_net_mar_2021 = 2000\n    other_long_term_assets_mar_2021 = 1130\n    planned_assets_increase_percentage = 0.1\n\n    #Do math calculation to get the answer\n    increased_amount = (deferred_contract_costs_net_mar_2021 + other_long_term_assets_mar_2021) * planned_assets_increase_percentage\n    new_total_assets = total_assets_mar_2021 + increased_amount\n    total_current_assets_mar_2021 = total_assets_mar_2021 - (deferred_contract_costs_net_mar_2021 + other_long_term_assets_mar_2021)\n    new_total_current_assets = new_total_assets - (deferred_contract_costs_net_mar_2021 + other_long_term_assets_mar_2021 + increased_amount)\n    answer = new_total_current_assets\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-81",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1993-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 2,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 6
      }
    },
    "difficulty": 4.787491742782046,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-252",
    "output": [
      "FY24_Q1_to_Q4_inventory_turnover_days = [116, 126, 174, 158]\n    \n    # Calculate average inventory turnover days for FY24 Q1-Q4\n    average_inventory_turnover_days = sum(FY24_Q1_to_Q4_inventory_turnover_days) / len(FY24_Q1_to_Q4_inventory_turnover_days)\n    \n    # Return the result\n    return int(average_inventory_turnover_days)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 120,
      "prompt_tokens": 1222,
      "completion_tokens_details": {
        "text_tokens": 120
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 960
      },
      "total_tokens": 1342
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算FY24Q1至FY24Q4的季度平均存货周转天数；请保留整数。",
    "python_solution": "def solution():\n    inventory_turnover_q1 = 232\n    inventory_turnover_q2 = 174\n    inventory_turnover_q3 = 158\n    inventory_turnover_q4 = 146\n\n    avg_inventory_turnover = (inventory_turnover_q1 + inventory_turnover_q2 + inventory_turnover_q3 + inventory_turnover_q4) / 4\n    return int(avg_inventory_turnover)",
    "image_id": "company_37_37_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-566",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2706-1.png",
      "./MultiFinance/images/2706-2.png",
      "./MultiFinance/images/2706-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2706-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-253",
    "output": [
      "adjusted_ebitda_2023_q1 = -3977\n    adjusted_ebitda_2022_q1 = -16961\n    adjusted_ebitda_2023_h1 = -10407\n    adjusted_ebitda_2022_h1 = -35372\n    \n    q1_change = (adjusted_ebitda_2023_q1 - adjusted_ebitda_2022_q1) / abs(adjusted_ebitda_2022_q1)\n    h1_change = (adjusted_ebitda_2023_h1 - adjusted_ebitda_2022_h1) / abs(adjusted_ebitda_2022_h1)\n    \n    answer = f\"Q1 Adjusted EBITDA changed by {q1_change:.2%} from the previous period, while H1 Adjusted EBITDA changed by {h1_change:.2%}.\"\n    \n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 235,
      "prompt_tokens": 1041,
      "completion_tokens_details": {
        "text_tokens": 235
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 761
      },
      "total_tokens": 1276
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change for Adjusted EBITDA year on year for two consecutive periods ending June 30, 2023 and 2022?",
    "python_solution": "def solution():\n    #Define variables name and value\n\n    EBITDA_2023 = -3977   # in thousands\n    EBITDA_2022 = -16961  # in thousands\n\n    #Do math calculation to get the answer\n    EBITDA_change = ((EBITDA_2023 - EBITDA_2022) / abs(EBITDA_2022)) * 100\n    return EBITDA_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-71",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1986-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.8066624897703196,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-254",
    "output": [
      "growth_rate_1 = (4.75 - 3.95) / 3.95 * 100\n    growth_rate_2 = (4.84 - 4.75) / 4.75 * 100\n    growth_rate_3 = (2.65 - 4.84) / 4.84 * 100\n    growth_rate_4 = (0.69 - 2.65) / 2.65 * 100\n    growth_rate_5 = (-2.01 - 0.69) / 0.69 * 100\n    growth_rate_6 = (-2.47 - -2.01) / -2.01 * 100\n    growth_rate_7 = (-0.48 - -2.47) / -2.47 * 100\n    \n    # Calculate average growth rate\n    average_growth_rate = (growth_rate_1 + growth_rate_2 + growth_rate_3 + \n                           growth_rate_4 + growth_rate_5 + growth_rate_6 + \n                           growth_rate_7) / 7\n    \n    # Return result rounded to two decimal places\n    return round(average_growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 301,
      "prompt_tokens": 1378,
      "completion_tokens_details": {
        "text_tokens": 301
      },
      "prompt_tokens_details": {
        "text_tokens": 254,
        "image_tokens": 1124
      },
      "total_tokens": 1679
    },
    "model": "qwen-omni-turbo",
    "question": "请计算信息技术板块2024年第一季度至第三季度的平均增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    q1_growth = 4.75\n    q2_growth = 3.95\n    q3_growth = 1.76\n\n    # Multi-step logic\n    total_growth = q1_growth + q2_growth + q3_growth\n    average_growth = total_growth / 3\n    return round(average_growth, 2)",
    "image_id": "market_07_07_05_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2788",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2658-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2658-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-255",
    "output": [
      "flow_2023 = 1287\n    flow_2021 = 518\n    difference = flow_2023 - flow_2021\n    percentage = (difference / flow_2021) * 100\n    \n    # return answer\n    return round(percentage, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 82,
      "prompt_tokens": 1849,
      "completion_tokens_details": {
        "text_tokens": 82
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 1570
      },
      "total_tokens": 1931
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2021年的流动资产差值，并将该差值占2021年流动资产的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2021 = 518\n    current_assets_2023 = 1233\n\n    # Multi-step logic\n    diff = current_assets_2023 - current_assets_2021\n    ratio = diff / current_assets_2021\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_37_37_17_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-531",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2604-1.png",
      "./MultiFinance/images/2604-2.png",
      "./MultiFinance/images/2604-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2604-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-256",
    "output": [
      "year_2021 = 414.7\n    year_2027 = 18107.6\n    \n    # Calculate average annual growth rate\n    cagr = ((year_2027 / year_2021) ** (1/6)) - 1\n    \n    # Return the result as a percentage with two decimal places\n    return round(cagr * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 110,
      "prompt_tokens": 3228,
      "completion_tokens_details": {
        "text_tokens": 110
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2966
      },
      "total_tokens": 3338
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年到2027年中国休闲零食市场规模的平均年增长率，并保留两位小数。",
    "python_solution": "def solution():\n    values = [14604.2, 15359.7, 15556.3, 15840.0, 16422.9, 17209.4, 18107.6]\n    n_years = len(values) - 1\n    total_growth = (values[-1] / values[0]) ** (1 / n_years) - 1\n    average_growth_rate = total_growth * 100\n    return round(average_growth_rate, 2)",
    "image_id": "industry_16_16_11_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2233",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 8
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 4.143134726391533,
    "images": [
      "./MultiFinance/images/2314-1.png",
      "./MultiFinance/images/2314-2.png",
      "./MultiFinance/images/2314-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2314-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-257",
    "output": [
      "trade_price_1 = 41.5\n    prevailing_bid_1 = 41.45\n    prevailing_offer_1 = 41.5\n\n    trade_price_2 = 41.75\n    prevailing_bid_2 = 41.73\n    prevailing_offer_2 = 41.75\n\n    # Calculate the effective spread for each transaction\n    effective_spread_1 = prevailing_offer_1 - trade_price_1\n    effective_spread_2 = prevailing_offer_2 - trade_price_2\n\n    # Calculate the average effective spread\n    average_effective_spread = (effective_spread_1 + effective_spread_2) / 2\n\n    # Return the result rounded to three decimal places\n    return round(average_effective_spread, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 190,
      "prompt_tokens": 1583,
      "completion_tokens_details": {
        "text_tokens": 190
      },
      "prompt_tokens_details": {
        "text_tokens": 341,
        "image_tokens": 1242
      },
      "total_tokens": 1773
    },
    "model": "qwen-omni-turbo",
    "question": "Bloomfield informs Smith that he observed 500 shares of BYYP stock being traded every 20 minutes for a duration of an hour. He also tells Smith that he saw a similar trading pattern in the stock during the previous trading day. Bloomfield instructs Smith to place an order to buy BYYP stock, assuming that a trader is looking for liquidity and is executing a large purchase order by dividing it into smaller parts. Based on Exhibit 1, what is the average effective spread of the BYYP transactions? Answer to three decimal places.",
    "python_solution": "def solution():\n    trade1_price = 41.50\n    trade1_midpoint = 41.475\n    trade2_price = 41.75\n    trade2_midpoint = 41.74\n    \n    effective_spread_trade1 = 2 * (trade1_price - trade1_midpoint)\n    effective_spread_trade2 = 2 * (trade2_price - trade2_midpoint)\n    \n    average_effective_spread = (effective_spread_trade1 + effective_spread_trade2) / 2\n    \n    return average_effective_spread",
    "topic": "Portfolio Management & Strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 2,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.189654742026425,
    "source_id": "validation-148",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/347-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-258",
    "output": [
      "convexity_shares_daily_1_5x_spikes_futures_etf_short_term_investment_percentage = 31.60\n    convexity_shares_1x_spikes_futures_etf_short_term_investment_percentage = 52.15\n    \n    # Do math calculation to get the answer\n    average_proportion = (convexity_shares_daily_1_5x_spikes_futures_etf_short_term_investment_percentage + convexity_shares_1x_spikes_futures_etf_short_term_investment_percentage) / 2\n    \n    # return answer\n    return average_proportion\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 145,
      "prompt_tokens": 1966,
      "completion_tokens_details": {
        "text_tokens": 145
      },
      "prompt_tokens_details": {
        "text_tokens": 306,
        "image_tokens": 1660
      },
      "total_tokens": 2111
    },
    "model": "qwen-omni-turbo",
    "question": "What is the average proportion of short-term investments to net assets across the ConvexityShares Daily 1.5x SPIKES Futures ETF and ConvexityShares 1x SPIKES Futures ETF on December 31, 2022, in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n     short_term_investment_1 = 303154  # ConvexityShares Daily 1.5x SPIKES Futures ETF\n\n     net_assets_1 = 959275  # ConvexityShares Daily 1.5x SPIKES Futures ETF\n\n     short_term_investment_2 = 559661  # ConvexityShares 1x SPIKES Futures ETF\n\n     net_assets_2 = 1073138  # ConvexityShares 1x SPIKES Futures ETF\n\n     #Do math calculation to get the answer\n     proportion_1 = short_term_investment_1 / net_assets_1\n     proportion_2 = short_term_investment_2 / net_assets_2\n     average_proportion = (proportion_1 + proportion_2) / 2\n     average_proportion_percentage = average_proportion * 100  # Convert to percentage\n     return average_proportion_percentage\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-31",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1959-1.png",
      "./MultiFinance/images/1959-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 2
      }
    },
    "difficulty": 4.0943445622221,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-259",
    "output": [
      "current_risk_free_rate = 3.00\n    beta_of_the_t_REIT = 1.1\n    market_risk_premium = 5.00\n    expected_dividend_per_share_1_year_from_today = 1.13\n    expected_dividend_per_share_2_years_from_today = 1.22\n    long_term_growth_rate_in_dividends_starting_in_year_3 = 5.00\n    \n    # Do math calculation to get the answer\n    k_e = current_risk_free_rate + (beta_of_the_t_REIT * market_risk_premium)\n    D1 = expected_dividend_per_share_1_year_from_today\n    D2 = expected_dividend_per_share_2_years_from_today\n    growth_rate = long_term_growth_rate_in_dividends_starting_in_year_3\n    \n    P1 = D1 / (k_e - growth_rate)\n    P2 = D2 / (k_e - growth_rate)\n    \n    P0 = P1 + ((P2 - P1) / (1 + k_e))\n    \n    answer = P0\n    \n    # return answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 260,
      "prompt_tokens": 1513,
      "completion_tokens_details": {
        "text_tokens": 260
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 1242
      },
      "total_tokens": 1773
    },
    "model": "qwen-omni-turbo",
    "question": "An expert has compiled the major forecasts and assumptions for a J REIT. What is the inherent worth of the J REIT per share utilizing the two-step dividend discount model? Answer to three decimal places.",
    "python_solution": "def solution():\n    discount_rate = 0.085\n    dividend_y1 = 1.13\n    dividend_y2 = 1.22\n    growth_rate = 0.05\n\n    stock_price = (dividend_y1 / (1+discount_rate)) + (dividend_y2 / ((1+discount_rate)**2)) + ((dividend_y2*(1+growth_rate))/(discount_rate-growth_rate))/((1+discount_rate)**2)\n    return stock_price",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 1,
          "*": 1,
          "/": 4,
          "%": 0,
          "**": 2
        },
        "total_operators": 14
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 22
      }
    },
    "difficulty": 5.472270673671474,
    "source_id": "validation-178",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/357-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-260",
    "output": [
      "change_rate = (-1.17 - (-1.41)) / -1.41 * 100\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(change_rate, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 58,
      "prompt_tokens": 2401,
      "completion_tokens_details": {
        "text_tokens": 58
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 2134
      },
      "total_tokens": 2459
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2019年8月26日相对于2019年8月2日的沪指涨跌幅变化百分比。请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_20190802 = -1.41\n    value_20190826 = -1.17\n\n    # Multi-step logic\n    change = value_20190826 - value_20190802\n    percentage_change = (change / value_20190802) * 100\n    return round(percentage_change, 1)",
    "image_id": "macro_03_03_06_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2520",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2379-1.png",
      "./MultiFinance/images/2379-2.png",
      "./MultiFinance/images/2379-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2379-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-261",
    "output": [
      "server_energy_consumption = 15\n    storage_device_energy_consumption = 35\n    network_communication_device_energy_consumption = 50\n    \n    total_energy_consumption = server_energy_consumption + storage_device_energy_consumption + network_communication_device_energy_consumption\n    \n    percentage_of_total_energy_consumption = (total_energy_consumption / 100) * 100\n    \n    answer = round(percentage_of_total_energy_consumption, 1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 111,
      "prompt_tokens": 1013,
      "completion_tokens_details": {
        "text_tokens": 111
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 744
      },
      "total_tokens": 1124
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图（c）中的数据，计算服务器、存储设备和网络通信设备的能耗占比总和，并将其占总体能耗的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    server_energy = 50\n    storage_energy = 35\n    network_energy = 15\n    total_energy = server_energy + storage_energy + network_energy\n    percentage = (total_energy / 100) * 100\n    return round(percentage, 1)",
    "image_id": "industry_15_15_03_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2141",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2759-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2759-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-262",
    "output": [
      "sell_max = -10/100\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(sell_max,2)\n```"
    ],
    "usage": {
      "completion_tokens": 38,
      "prompt_tokens": 531,
      "completion_tokens_details": {
        "text_tokens": 38
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 266
      },
      "total_tokens": 569
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算卖出建议的个股相对同期证券市场代表性指数涨幅的最大值，并将其转换为小数形式；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    sell_suggestion = '<-10%'\n    # Multi-step logic\n    max_sell_value = float(sell_suggestion.strip('<%-')) / 100\n    return round(max_sell_value, 2)",
    "image_id": "industry_14_14_33_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-1984",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 2,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.8712010109078907,
    "images": [
      "./MultiFinance/images/2417-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2417-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-263",
    "output": [
      "cpe_melting_temperature = 75 + 105\n    tpv_melting_temperature = 165 + 230\n    difference = abs(cpe_melting_temperature - tpv_melting_temperature)\n    \n    # Do math calculation to get the answer\n    answer = difference // 10\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 84,
      "prompt_tokens": 3023,
      "completion_tokens_details": {
        "text_tokens": 84
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2760
      },
      "total_tokens": 3107
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算CPE和TPV的熔融温度范围之差，并将结果除以10；请保留整数。",
    "python_solution": "def solution():\n    melt_temp_CPE_start = 75\n    melt_temp_CPE_end = 105\n    melt_temp_TPV_start = 165\n    melt_temp_TPV_end = 165\n    \n    range_CPE = melt_temp_CPE_end - melt_temp_CPE_start\n    range_TPV = melt_temp_TPV_end - melt_temp_TPV_start\n    \n    diff = (range_CPE - range_TPV) / 10\n    return int(diff)",
    "image_id": "industry_04_04_10_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2178",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2553-1.png",
      "./MultiFinance/images/2553-2.png",
      "./MultiFinance/images/2553-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2553-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-264",
    "output": [
      "GDP_2015 = 7.0\n    GDP_2025E = 4.8\n    \n    # Calculate the total change in GDP from 2015 to 2025E\n    total_change_GDP = GDP_2025E - GDP_2015\n    \n    # Calculate the number of years between 2015 and 2025E\n    num_years = 2025 - 2015\n    \n    # Calculate the average annual growth rate (AAGR)\n    AAGR = (total_change_GDP / num_years) * 100\n    \n    # Round the result to two decimal places\n    AAGR_rounded = round(AAGR, 2)\n    \n    # Return the calculated AAGR\n    return AAGR_rounded\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 191,
      "prompt_tokens": 3964,
      "completion_tokens_details": {
        "text_tokens": 191
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 3704
      },
      "total_tokens": 4155
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2015年到2025年的GDP年均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    gdp_2015 = 7.0\n    gdp_2025 = 4.8\n    years = 2025 - 2015\n\n    avg_growth_rate = ((gdp_2025 / gdp_2015) ** (1/years) - 1) * 100\n    return round(avg_growth_rate, 2)",
    "image_id": "macro_09_09_08_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2619",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2380-1.png",
      "./MultiFinance/images/2380-2.png",
      "./MultiFinance/images/2380-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2380-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-265",
    "output": [
      "finance_cost_2022 = -5939\n    finance_cost_2023 = -8258\n    net_income_2022 = 302600\n    net_income_2023 = 96733\n    \n    # Calculate percentage increase in finance cost from 2022 to 2023\n    finance_cost_increase_percentage = ((finance_cost_2023 - finance_cost_2022) / abs(finance_cost_2022)) * 100\n    \n    # Calculate percentage change in net income from 2022 to 2023\n    net_income_change_percentage = ((net_income_2023 - net_income_2022) / abs(net_income_2022)) * 100\n    \n    # Return the result as a string with two decimal places\n    return f\"{finance_cost_increase_percentage:.2f}%, {net_income_change_percentage:.2f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 222,
      "prompt_tokens": 1490,
      "completion_tokens_details": {
        "text_tokens": 222
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 1212
      },
      "total_tokens": 1712
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage increase in finance cost from the year 2022 to 2023 in relation to the net income for each year in percentage?",
    "python_solution": "def solution():\n    # Define variables name and value\n    net_income_2022 = 302600  \n    net_income_2023 = 96733\n    finance_cost_2022 = 10264  \n    finance_cost_2023 = 16117\n\n    # Do math calculation to get the answer\n    finance_to_income_ratio_2022 = finance_cost_2022 / net_income_2022\n    finance_to_income_ratio_2023 = finance_cost_2023 / net_income_2023\n    percent_increase = ((finance_to_income_ratio_2023 - finance_to_income_ratio_2022) / finance_to_income_ratio_2022) * 100\n    answer = round(percent_increase, 2)\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-229",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2093-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 6
      }
    },
    "difficulty": 4.2484952420493585,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-266",
    "output": [
      "cagr_common_stock_authorized = ((300000 - 565000) / 565000) ** (1/3)\n    \n    # Do math calculation to get the answer\n    answer = cagr_common_stock_authorized * 100\n    \n    # return answer\n    return round(answer, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 83,
      "prompt_tokens": 1122,
      "completion_tokens_details": {
        "text_tokens": 83
      },
      "prompt_tokens_details": {
        "text_tokens": 292,
        "image_tokens": 830
      },
      "total_tokens": 1205
    },
    "model": "qwen-omni-turbo",
    "question": "What is the Compound Annual Growth Rate (CAGR) of the common stock authorized from December 31, 2021 to September 30, 2022, rounded to two decimal places, in percentage?",
    "python_solution": "def solution():\n    stock_authorized_2022 = 300000000 \n    stock_authorized_2021 = 56500000 \n    years = (9/12) \n    cagr = ((stock_authorized_2022 / stock_authorized_2021) ** (1 / years)) - 1\n    cagr = round(cagr * 100, 2) \n    return cagr\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-257",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2112-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 10
      }
    },
    "difficulty": 4.189654742026425,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-267",
    "output": [
      "short_term_investments = 36.9\n    cash_and_cash_equivalents = 25.9\n    restricted_cash = 2.1\n    revolver_credit_facility_availability = 9.0\n    net_cash_used_in_operating_activities_2019 = -24563\n    net_cash_provided_by_investing_activities_2019 = -38750\n    net_cash_provided_by_financing_activities_2019 = 1006\n    effect_of_foreign_exchange_fluctuations_2019 = -5\n    net_decrease_in_cash_cash_equivalents_and_restricted_cash_2019 = -67440\n    \n    # Calculate the total net cash flow for the year\n    total_net_cash_flow_2019 = net_cash_used_in_operating_activities_2019 + net_cash_provided_by_investing_activities_2019 + net_cash_provided_by_financing_activities_2019 + effect_of_foreign_exchange_fluctuations_2019 + net_decrease_in_cash_cash_equivalents_and_restricted_cash_2019\n    \n    # Calculate the estimated remaining liquidity\n    estimated_remaining_liquidity = short_term_investments + cash_and_cash_equivalents + restricted_cash + revolver_credit_facility_availability + total_net_cash_flow_2019\n    \n    # Return the estimated remaining liquidity in millions of dollars\n    return estimated_remaining_liquidity / 1000\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 343,
      "prompt_tokens": 1011,
      "completion_tokens_details": {
        "text_tokens": 343
      },
      "prompt_tokens_details": {
        "text_tokens": 388,
        "image_tokens": 623
      },
      "total_tokens": 1354
    },
    "model": "qwen-omni-turbo",
    "question": "What will be the estimated remaining liquidity of the company until December 31, 2019 (in million dollars), based on the current short-term investments, cash, cash equivalents, restricted cash, availability under the revolver credit facility, and the 9-month projected total net cash flows?",
    "python_solution": "def solution():\n    #Define variables name and value\n    current_liquidity = 25.9 + 36.9 + 2.1 + 9.0 \n    net_cash_used_in_operating_activities = 29.691 \n    net_cash_used_in_investing_activities = 38.750\n    net_cash_provided_by_financing_activities = 1.006\n\n    #Do math calculation to get the answer\n    total_net_cash_flows = net_cash_used_in_operating_activities + net_cash_used_in_investing_activities - net_cash_provided_by_financing_activities \n    remaining_liquidity = current_liquidity - total_net_cash_flows\n    return remaining_liquidity\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-212",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2081-1.png"
    ],
    "context": "As of September 30, 2019, our principal sources of liquidity consisted of $25.9 million of cash and cash equivalents and $36.9 million of short-term investments as well as $2.1 million of restricted cash and $9.0 million of availability under our Revolving Credit Facility. The following table presents our cash flow summary for each period presented (in thousands):\n<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.9889840465642745,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-268",
    "output": [
      "net_income_available_to_common_shareholders = 487900000\n    average_tangible_common_equity = 1000000000\n    attributable_changes_in_net_interest_income_due_to_volume_and_yield_rate = -100000000\n    \n    # Do math calculation to get the answer\n    roatce = (net_income_available_to_common_shareholders + attributable_changes_in_net_interest_income_due_to_volume_and_yield_rate) / average_tangible_common_equity * 100\n    \n    # return answer\n    return roatce\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 140,
      "prompt_tokens": 1077,
      "completion_tokens_details": {
        "text_tokens": 140
      },
      "prompt_tokens_details": {
        "text_tokens": 314,
        "image_tokens": 763
      },
      "total_tokens": 1217
    },
    "model": "qwen-omni-turbo",
    "question": "What is the adjusted Return on Average Tangible Common Equity (ROATCE) for the first half of the year 2021 in percent, considering net income available to common shareholders (U.S. GAAP), average tangible common equity, and attributable changes in net interest income due to volume and yield/rate?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    net_income_common_shareholders = 1348 # in million USD\n    average_tangible_common_equity = 16436 # in million USD\n\n    change_net_interest_income_volume = -64 # in million USD\n    change_net_interest_income_yield_rate = -224 # in million USD \n\n    #Add volume and yield/rate changes in net interest income to net income\n    adjusted_net_income_common_shareholders = net_income_common_shareholders + change_net_interest_income_volume + change_net_interest_income_yield_rate\n    #Calculate adjusted ROATCE\n    adjusted_ROATCE = (adjusted_net_income_common_shareholders / average_tangible_common_equity) * 100\n    return adjusted_ROATCE\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-16",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1948-1.png",
      "./MultiFinance/images/1948-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 4.343805421853684,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-269",
    "output": [
      "import numpy as np\n\n    data = [\n        [7.5, -9.1],\n        [12.8, -10.7],\n        [-3.7, -8.3],\n        [4.5, -0.1]\n    ]\n    \n    # Do math calculation to get the answer\n    median_value = np.median([item[1] for item in data])\n    \n    # return answer\n    return round(median_value, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 117,
      "prompt_tokens": 1925,
      "completion_tokens_details": {
        "text_tokens": 117
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 1656
      },
      "total_tokens": 2042
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年1月31日至2025年1月31日商品6月涨幅的中位数，并将结果保留一位小数。",
    "python_solution": "def solution():\n    commodity_june_returns = [4.5, 0.6, -3.7, 4.9, 5.5, 2.9, -3.7, -5.2, 0.1, -9.1, -10.7, -8.3, -0.1]\n    sorted_returns = sorted(commodity_june_returns)\n    median_index = len(sorted_returns) // 2\n    if len(sorted_returns) % 2 == 0:\n        median_return = (sorted_returns[median_index - 1] + sorted_returns[median_index]) / 2\n    else:\n        median_return = sorted_returns[median_index]\n    return round(median_return, 1)",
    "image_id": "strategy_03_03_23_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2965",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 8
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 8,
          "*": 0,
          "/": 3,
          "%": 1,
          "**": 0
        },
        "total_operators": 13
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 10
      }
    },
    "difficulty": 5.1298987149230735,
    "images": [
      "./MultiFinance/images/2168-1.png",
      "./MultiFinance/images/2168-2.png",
      "./MultiFinance/images/2168-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2168-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-270",
    "output": [
      "additional_paid_in_capital_before_zynga_acquisition = 2597.2 - 0.5\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return additional_paid_in_capital_before_zynga_acquisition\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 69,
      "prompt_tokens": 1174,
      "completion_tokens_details": {
        "text_tokens": 69
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 899
      },
      "total_tokens": 1243
    },
    "model": "qwen-omni-turbo",
    "question": "What was the amount of Additional Paid-in Capital balance before the Zynga Acquisition for the six months ended September 30, 2022?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    APIC_2022_end = 8760.5*10**6 # Additional Paid-in Capital at end of six months period (in $)\n    Zynga_share_issue = 5377.7*10**6 # Issuance of shares related to Zynga Acquisition (in $)\n    Zynga_stock_compensation = 143.6*10**6 # Stock-based compensation assumed in Zynga Acquisition (in $)\n\n    #Do math calculation to get the answer\n    # Subtract the amount related to Zynga acquisition to find the balance of Additional Paid-in Capital before the acquisition\n    APIC_pre_Zynga = APIC_2022_end - Zynga_share_issue - Zynga_stock_compensation\n    return APIC_pre_Zynga\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-211",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2080-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 5,
          "*": 3,
          "/": 0,
          "%": 0,
          "**": 3
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.795790545596741,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-271",
    "output": [
      "start_value_2020 = 87.4\n    end_value_2025 = 1215.3\n    \n    # Calculate CAGR using the formula: (end_value/start_value)^(1/n)-1\n    cagr = ((end_value_2025 / start_value_2020) ** (1/5)) - 1\n    \n    # Return the calculated CAGR as a percentage rounded to two decimal places\n    return round(cagr * 100, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 116,
      "prompt_tokens": 1496,
      "completion_tokens_details": {
        "text_tokens": 116
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1234
      },
      "total_tokens": 1612
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2020年到2025年的复合年增长率（CAGR）。请保留两位小数。",
    "python_solution": "def solution():\n    value_2020 = 87.4\n    value_2025 = 1652.1\n    years = 5  # 从2020年到2025年共5年\n\n    cagr = ((value_2025 / value_2020) ** (1 / years)) - 1\n    return round(cagr * 100, 2)\n",
    "image_id": "industry_16_16_10_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2246",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2501-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2501-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-272",
    "output": [
      "carrying_value_2017 = 526.9\n    carrying_value_2018 = 519.7\n    carrying_value_2019 = 527.9\n    \n    # Adjust carrying value for Food Care to $529.4 million\n    carrying_value_2019_adjusted = 529.4\n    \n    # Calculate the average annual growth rate using the formula:\n    # ((carrying_value_end - carrying_value_start) / carrying_value_start) * 100\n    # where carrying_value_end is the adjusted carrying value for 2019,\n    # and carrying_value_start is the carrying value for 2017.\n    \n    growth_rate = ((carrying_value_2019_adjusted - carrying_value_2017) / carrying_value_2017) * 100\n    \n    # Return the calculated growth rate\n    return growth_rate\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 220,
      "prompt_tokens": 1763,
      "completion_tokens_details": {
        "text_tokens": 220
      },
      "prompt_tokens_details": {
        "text_tokens": 521,
        "image_tokens": 1242
      },
      "total_tokens": 1983
    },
    "model": "qwen-omni-turbo",
    "question": "If the Carrying Value at December 31, 2019 for Food Care was adjusted to $529.4(in millions) instead, What is the average annual growth rate of Carrying value for Food Care for years 2017-2019? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    carrying_value_2017 = 526.9\n    carrying_value_2018 = 519.7\n    adjusted_carrying_value_2019 = 529.4\n\n    # Do math calculation to get the answer\n    growth_rate_2018 = (carrying_value_2018 - carrying_value_2017) / carrying_value_2017\n    growth_rate_2019 = (adjusted_carrying_value_2019 - carrying_value_2018) / carrying_value_2018\n    average_annual_growth_rate = (growth_rate_2018 + growth_rate_2019) / 2\n\n    return average_annual_growth_rate * 100",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-78",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Allocation of Goodwill to Reporting Segment The following table shows our goodwill balances by reportable segment: As noted above, it was determined under a quantitative assessment that there was no impairment of goodwill. However, if we become aware of indicators of impairment in future periods, we may be required to perform an interim assessment for some or all of our reporting units before the next annual assessment. Examples of such indicators may include a decrease in expected net earnings, adverse equity market conditions, a decline in current market multiples, a decline in our common stock price, a significant adverse change in legal factors or business climates, an adverse action or assessment by a regulator, unanticipated competition, strategic decisions made in response to economic or competitive conditions, or a more likely than not expectation that a reporting unit or a significant portion of a reporting unit will be sold or disposed of. In the event of significant adverse changes of the nature described above, we may have to recognize a non-cash impairment of goodwill, which could have a material adverse effect on our consolidated financial condition and results of operations.",
    "images": [
      "./MultiFinance/images/1817-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 6
      }
    },
    "difficulty": 4.430816798843313,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-273",
    "output": [
      "year_2022 = 8089\n    year_2021 = 5172\n    \n    # Calculate CAGR using the formula: ((end_value/start_value)**(1/n)) - 1\n    cagr = ((year_2022/year_2021)**(1/0.5)) - 1\n    \n    # Convert to percentage\n    cagr_percentage = cagr * 100\n    \n    # return answer\n    return cagr_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 124,
      "prompt_tokens": 992,
      "completion_tokens_details": {
        "text_tokens": 124
      },
      "prompt_tokens_details": {
        "text_tokens": 300,
        "image_tokens": 692
      },
      "total_tokens": 1116
    },
    "model": "qwen-omni-turbo",
    "question": "What is the compound annual growth rate (CAGR) of the total property and equipment, net from December 31, 2021, to June 30, 2022 (year to date in 2022) in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    total_property_equipment_start = 5172 # $ in thousands\n    total_property_equipment_end = 8089 # $ in thousands\n    years = 0.5 # year to date in 2022\n\n    #Do math calculation to get the answer\n    CAGR = ((total_property_equipment_end / total_property_equipment_start) ** (1/years) - 1) * 100\n    answer = round(CAGR, 2)\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-54",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1972-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 8
      }
    },
    "difficulty": 4.0943445622221,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-274",
    "output": [
      "net_loss_2013 = -4284\n    net_loss_2012 = -6111\n    depreciation_expense_2013 = 153\n    depreciation_expense_2012 = 65\n    provision_for_income_taxes_2013 = 6\n    provision_for_income_taxes_2012 = 0\n    \n    # Do math calculation to get the answer\n    ebitda_change = net_loss_2013 + depreciation_expense_2013 - provision_for_income_taxes_2013 - (net_loss_2012 + depreciation_expense_2012 - provision_for_income_taxes_2012)\n    \n    # return answer\n    return ebitda_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 189,
      "prompt_tokens": 2824,
      "completion_tokens_details": {
        "text_tokens": 189
      },
      "prompt_tokens_details": {
        "text_tokens": 324,
        "image_tokens": 2500
      },
      "total_tokens": 3013
    },
    "model": "qwen-omni-turbo",
    "question": "What's the net change in EBITDA (Earnings Before Interest, Taxes, Depreciation, and Amortization) based on the nine months financial data ended January 31, 2013 and 2012, taking into account the net loss, depreciation expense, and provision for income taxes for these two periods? (in thousands)",
    "python_solution": "def solution():\n    #Define variables name and value\n    net_loss_2013 = -4284\n    net_loss_2012 = -6111\n    depreciation_2013 = 153\n    depreciation_2012 = 65\n    provision_for_income_taxes_2013 = 6\n    provision_for_income_taxes_2012 = 0\n\n    #Do math calculation to get the answer\n    EBITDA_2013 = net_loss_2013 + depreciation_2013 + provision_for_income_taxes_2013\n    EBITDA_2012 = net_loss_2012 + depreciation_2012 + provision_for_income_taxes_2012\n    net_change_in_EBITDA = EBITDA_2013 - EBITDA_2012\n    return net_change_in_EBITDA\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-191",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2063-1.png",
      "./MultiFinance/images/2063-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 3,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 0
      }
    },
    "difficulty": 4.430816798843313,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-275",
    "output": [
      "total_growth_rate_2021_to_2026 = [21.64%, 12.80%, 19.47%, 7.20%, 11.54%, 9.04%]\n    \n    # Calculate the median\n    sorted_growth_rates = sorted(total_growth_rate_2021_to_2026)\n    if len(sorted_growth_rates) % 2 == 0:\n        median = (sorted_growth_rates[len(sorted_growth_rates)//2 - 1] + sorted_growth_rates[len(sorted_growth_rates)//2]) / 2\n    else:\n        median = sorted_growth_rates[len(sorted_growth_rates)//2]\n    \n    # Return the answer as a string with two decimal places\n    return f\"{median:.2f}%\"\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 185,
      "prompt_tokens": 2038,
      "completion_tokens_details": {
        "text_tokens": 185
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1774
      },
      "total_tokens": 2223
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年到2026年期间的总资产增长率的中位数。请保留两位小数。",
    "python_solution": "def median_total_asset_growth():\n    growth_rates = [21.64, 12.8, 19.47, 7.2, 11.54, 9.04]\n    growth_rates.sort()\n    n = len(growth_rates)\n    if n % 2 == 0:\n        median_growth = (growth_rates[n//2 - 1] + growth_rates[n//2]) / 2\n    else:\n        median_growth = growth_rates[n//2]\n    return round(median_growth, 2)",
    "image_id": "company_08_08_20_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-630",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 0,
          "/": 7,
          "%": 1,
          "**": 0
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 10
      }
    },
    "difficulty": 4.941642422609304,
    "images": [
      "./MultiFinance/images/2180-1.png",
      "./MultiFinance/images/2180-2.png",
      "./MultiFinance/images/2180-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2180-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-276",
    "output": [
      "investment_cash_flow_2025 = -185\n    investment_cash_flow_2024 = -77\n    capital_expenditure_2024 = 313\n    \n    # Calculate the difference between 2025 and 2024 investment activity cash flow\n    diff_investment_cash_flow = investment_cash_flow_2025 - investment_cash_flow_2024\n    \n    # Calculate the percentage of the difference relative to 2024's capital expenditure\n    percentage_difference = (diff_investment_cash_flow / capital_expenditure_2024) * 100\n    \n    # Return the result as a string with two decimal places\n    return f\"{percentage_difference:.2f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 164,
      "prompt_tokens": 2941,
      "completion_tokens_details": {
        "text_tokens": 164
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 2660
      },
      "total_tokens": 3105
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2025年与2024年投资活动现金流的差值，并将该差值占2024年资本支出的比例以百分比形式表示；请保留两位小数。",
    "python_solution": "def solution():\n    investment_cash_flow_2024 = -77\n    investment_cash_flow_2025 = -185\n    capital_expenditure_2024 = 313\n\n    diff = investment_cash_flow_2025 - investment_cash_flow_2024\n    ratio = diff / capital_expenditure_2024\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "company_38_38_27_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1163",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2569-1.png",
      "./MultiFinance/images/2569-2.png",
      "./MultiFinance/images/2569-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2569-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-277",
    "output": [
      "coal_subsidies = 1 - (19.69% + 8% + 8%)\n    coal_and_electricity_integrated_subsidies = 1 - (19.69% + 8% + 8% + 40% + 30% + 30%)\n    \n    # Do math calculation to get the answer\n    total_holding_ratio = coal_subsidies + coal_and_electricity_integrated_subsidies\n    \n    # return answer\n    return round(total_holding_ratio * 100, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 2841,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2582
      },
      "total_tokens": 2982
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算陕西能源的煤炭子公司和煤电一体子公司的总持股比例；请保留两位小数。",
    "python_solution": "def solution():\n    coal_subco_percentage = 53 + 63.6\n    coal_electricity_subco_percentage = 60 + 66\n    total_percentage = (coal_subco_percentage + coal_electricity_subco_percentage) / 100\n    return round(total_percentage, 2)",
    "image_id": "company_31_31_04_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1671",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2979-1.png",
      "./MultiFinance/images/2979-2.png",
      "./MultiFinance/images/2979-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2979-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-278",
    "output": [
      "境外_2018 = 49.10\n    境外_2019 = 58.52\n    \n    # Do math calculation to get the answer\n    difference = 境外_2018 - 境外_2019\n    domestic_percentage = round(difference * 100)\n    \n    # return answer\n    return domestic_percentage\n\n```"
    ],
    "usage": {
      "completion_tokens": 92,
      "prompt_tokens": 1596,
      "completion_tokens_details": {
        "text_tokens": 92
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1332
      },
      "total_tokens": 1688
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2018年和2019年的境外占比之差，并将结果作为境内占比的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    offshore_2018 = 57.98\n    offshore_2019 = 48.91\n    onshore_2018 = 41.25\n    onshore_2019 = 50.41\n\n    # Multi-step logic\n    diff_offshore = offshore_2018 - offshore_2019\n    ratio_onshore = diff_offshore / onshore_2018 * 100\n    return round(ratio_onshore, 1)",
    "image_id": "company_13_13_11_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-880",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2539-1.png",
      "./MultiFinance/images/2539-2.png",
      "./MultiFinance/images/2539-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2539-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-279",
    "output": [
      "S = 50\n    K = 50\n    T = 6/12\n    r = 0.03\n    sigma = 0.5\n\n    d1 = (log(S/K) + (r + sigma**2/2)*T)/(sigma*sqrt(T))\n    d2 = d1 - sigma*sqrt(T)\n    \n    N1 = norm.cdf(d1)\n    N2 = norm.cdf(d2)\n\n    C = S*N1 - K*exp(-r*T)*N2\n\n    # Do math calculation to get the answer\n    answer = round(C, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 147,
      "prompt_tokens": 353,
      "completion_tokens_details": {
        "text_tokens": 147
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 92
      },
      "total_tokens": 500
    },
    "model": "qwen-omni-turbo",
    "question": "Use the Black-Scholes formula to find the value of a call option on the following stock: <image 1> Answer to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Accounting",
    "source_id": "test_Accounting_38",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/260-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-280",
    "output": [
      "years = [2018, 2019, 2020, 2021, 2022, 2023]\n    overdue_loan_values = [24.7, 26.5, 24.5, 18.0, 17.5, 21.0]\n    \n    total_overdue_loan = sum(overdue_loan_values)\n    average_overdue_loan = round(total_overdue_loan / len(years), 1)\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return average_overdue_loan\n```"
    ],
    "usage": {
      "completion_tokens": 138,
      "prompt_tokens": 1731,
      "completion_tokens_details": {
        "text_tokens": 138
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1470
      },
      "total_tokens": 1869
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年至2023年期间逾期贷款的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    overdue_2018 = 24.5\n    overdue_2019 = 26.7\n    overdue_2020 = 24.3\n    overdue_2021 = 17.5\n    overdue_2022 = 17.0\n    overdue_2023 = 20.5\n\n    average_overdue = (overdue_2018 + overdue_2019 + overdue_2020 + overdue_2021 + overdue_2022 + overdue_2023) / 6\n    return round(average_overdue, 1)",
    "image_id": "company_04_04_17_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-711",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2323-1.png",
      "./MultiFinance/images/2323-2.png",
      "./MultiFinance/images/2323-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2323-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-281",
    "output": [
      "china_continent_companies = ['建滔', '生益', '南亚塑料', '台光', '联茂电子', '南亚新材', '金安国纪', '华正新材', '罗杰斯', '三菱瓦斯']\n    \n    # Do math calculation to get the answer\n    total_market_share_china_continent = sum(float(company.split('%')[0]) for company in china_continent_companies)\n    \n    # return answer\n    return round(total_market_share_china_continent, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 128,
      "prompt_tokens": 3311,
      "completion_tokens_details": {
        "text_tokens": 128
      },
      "prompt_tokens_details": {
        "text_tokens": 249,
        "image_tokens": 3062
      },
      "total_tokens": 3439
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中中国大陆公司的全球市场份额总和，并将结果保留两位小数。",
    "python_solution": "def solution():\n    share_jiantao = 15\n    share_shengyi = 13\n    share_nanya_xincai = 4\n    share_jingguoguoji = 3\n    share_huazheng_xincai = 2\n\n    total_china_share = (share_jiantao + share_shengyi + share_nanya_xincai + share_jingguoguoji + share_huazheng_xincai) / 100\n    return round(total_china_share, 2)",
    "image_id": "industry_19_19_36_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2405",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2505-1.png",
      "./MultiFinance/images/2505-2.png",
      "./MultiFinance/images/2505-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2505-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-282",
    "output": [
      "second_item_2021 = -13.00\n    third_item_2021 = 21.22\n    fourth_item_2021 = 79.03\n    \n    # Do math calculation to get the answer\n    result = (second_item_2021 + third_item_2021) / fourth_item_2021 * 100\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 119,
      "prompt_tokens": 1481,
      "completion_tokens_details": {
        "text_tokens": 119
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 1212
      },
      "total_tokens": 1600
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年第二项指标与第三项指标的和，然后除以第四项指标，最后将结果乘以100并保留一位小数。",
    "python_solution": "def solution():\n    value_2021_second = 38.28\n    value_2021_third = -2.77\n    value_2021_fourth = 33.22\n    sum_values = value_2021_second + value_2021_third\n    result = (sum_values / value_2021_fourth) * 100\n    return round(result, 1)",
    "image_id": "market_09_09_26_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2801",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2779-1.png",
      "./MultiFinance/images/2779-2.png",
      "./MultiFinance/images/2779-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2779-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-283",
    "output": [
      "association_sales_2025 = 400\n    center_sales_2025 = 410\n    \n    difference = abs(association_sales_2025 - center_sales_2025)\n    \n    percentage_difference = (difference / association_sales_2025) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 2611,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 2330
      },
      "total_tokens": 2702
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算中国汽车工业协会预测的2025年商用车销量与国家信息中心预测的差值，并将该差值占中国汽车工业协会预测销量的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    association_sales = 400\n    center_sales = 410\n\n    # Multi-step logic\n    diff = center_sales - association_sales\n    ratio = diff / association_sales\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_08_08_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-615",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2607-1.png",
      "./MultiFinance/images/2607-2.png",
      "./MultiFinance/images/2607-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2607-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-284",
    "output": [
      "fire_power_ratio = (127.09 / 214.31) * 100\n    hydro_power_ratio = (30.93 / 214.31) * 100\n    wind_power_ratio = (29.47 / 214.31) * 100\n    pv_power_ratio = (26.82 / 214.31) * 100\n    \n    total_ratio = fire_power_ratio + hydro_power_ratio + wind_power_ratio + pv_power_ratio\n    \n    # return answer\n    return round(total_ratio, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 155,
      "prompt_tokens": 2082,
      "completion_tokens_details": {
        "text_tokens": 155
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1819
      },
      "total_tokens": 2237
    },
    "model": "qwen-omni-turbo",
    "question": "请计算华电集团总计的火电、水电、风电和光伏装机量的比例，并将这些比例加总；请保留两位小数。",
    "python_solution": "def solution():\n    total_fire = 127.09\n    total_hydro = 30.93\n    total_wind = 29.47\n    total_solar = 26.82\n    total_capacity = 214.31\n\n    ratio_fire = total_fire / total_capacity * 100\n    ratio_hydro = total_hydro / total_capacity * 100\n    ratio_wind = total_wind / total_capacity * 100\n    ratio_solar = total_solar / total_capacity * 100\n\n    total_ratio = ratio_fire + ratio_hydro + ratio_wind + ratio_solar\n    return round(total_ratio, 2)",
    "image_id": "industry_17_17_14_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2312",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 4,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 2
      }
    },
    "difficulty": 4.882801922586371,
    "images": [
      "./MultiFinance/images/2184-1.png",
      "./MultiFinance/images/2184-2.png",
      "./MultiFinance/images/2184-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2184-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-285",
    "output": [
      "year_2018_revenue = 24.48\n    year_2019_revenue = 25.95\n    year_2020_revenue = 25.37\n    year_2021_revenue = 28.10\n    year_2022_revenue = 27.91\n    year_2023_revenue = 29.74\n    year_2024_q1q3_revenue = 22.52\n    \n    total_revenue = (year_2018_revenue + year_2019_revenue + year_2020_revenue \n                    + year_2021_revenue + year_2022_revenue + year_2023_revenue \n                    + year_2024_q1q3_revenue) / 7\n    \n    # Do math calculation to get the answer\n    average_revenue = round(total_revenue, 1)\n    \n    # return answer\n    return average_revenue\n```"
    ],
    "usage": {
      "completion_tokens": 241,
      "prompt_tokens": 1614,
      "completion_tokens_details": {
        "text_tokens": 241
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1349
      },
      "total_tokens": 1855
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年到2024年（Q1-Q3）的平均营收；请保留一位小数。",
    "python_solution": "def solution():\n    revenue_2018 = 24.48\n    revenue_2019 = 25.95\n    revenue_2020 = 25.37\n    revenue_2021 = 28.10\n    revenue_2022 = 27.91\n    revenue_2023 = 29.74\n    revenue_2024_Q1_Q3 = 22.52\n\n    total_revenue = revenue_2018 + revenue_2019 + revenue_2020 + revenue_2021 + revenue_2022 + revenue_2023 + revenue_2024_Q1_Q3\n    average_revenue = round(total_revenue / 7, 1)\n    return average_revenue",
    "image_id": "company_13_13_16_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-869",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 8
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2262-1.png",
      "./MultiFinance/images/2262-2.png",
      "./MultiFinance/images/2262-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2262-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-286",
    "output": [
      "stage2_top10_stock_returns = [119.7, 89.3, 77.5, 68.7, 67.3, 65.6, 65.3, 60.1, 59.3, 57.4]\n    \n    # Calculate average returns for stage2 top 10 stocks\n    average_return_stage2 = sum(stage2_top10_stock_returns) / len(stage2_top10_stock_returns)\n    \n    # Return the result rounded to two decimal places\n    return round(average_return_stage2, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 148,
      "prompt_tokens": 3641,
      "completion_tokens_details": {
        "text_tokens": 148
      },
      "prompt_tokens_details": {
        "text_tokens": 251,
        "image_tokens": 3390
      },
      "total_tokens": 3789
    },
    "model": "qwen-omni-turbo",
    "question": "请计算阶段二涨幅排名前十大个股的平均涨幅，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_1 = 110.2\n    value_2 = 91.2\n    value_3 = 90.1\n    value_4 = 76.6\n    value_5 = 70.3\n    value_6 = 70.2\n    value_7 = 67.4\n    value_8 = 63.9\n    value_9 = 61.6\n    value_10 = 60.3\n\n    # Multi-step logic\n    sum_values = value_1 + value_2 + value_3 + value_4 + value_5 + value_6 + value_7 + value_8 + value_9 + value_10\n    average = sum_values / 10\n    return round(average, 2)",
    "image_id": "strategy_08_08_35_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3020",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 9,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 15,
        "parentheses": 2
      }
    },
    "difficulty": 5.170483995038152,
    "images": [
      "./MultiFinance/images/2167-1.png",
      "./MultiFinance/images/2167-2.png",
      "./MultiFinance/images/2167-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2167-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-287",
    "output": [
      "# Calculate percentage change in total deferred tax liability\n    deftl_2021 = -59165\n    deftl_2022 = -27791\n    deftl_change_percent = ((deftl_2022 - deftl_2021) / deftl_2021) * 100\n    \n    # Calculate percentage change in income before taxes for INF segment\n    inf_2021 = 54583\n    inf_2022 = 71838\n    inf_change_percent = ((inf_2022 - inf_2021) / inf_2021) * 100\n    \n    # Calculate average of percentage changes\n    average_percentage_change = (deftl_change_percent + inf_change_percent) / 2\n    \n    # return answer\n    return average_percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 212,
      "prompt_tokens": 2384,
      "completion_tokens_details": {
        "text_tokens": 212
      },
      "prompt_tokens_details": {
        "text_tokens": 310,
        "image_tokens": 2074
      },
      "total_tokens": 2596
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in total deferred tax liability from fiscal years January 2, 2021, to January 1, 2022, and the percentage change in income before taxes from the INF segment for the same period? Can you compute the average of these percentage changes?",
    "python_solution": "def solution():\n    #Define variables name and value\n    total_deferred_tax_liability_2022 = -56152\n    total_deferred_tax_liability_2021 = -59165\n    income_before_taxes_INF_2022 = 71838\n    income_before_taxes_INF_2021 = 62574\n\n    #Do math calculation to get the answer\n    percent_change_tax = ((total_deferred_tax_liability_2022 - total_deferred_tax_liability_2021)/abs(total_deferred_tax_liability_2021))*100\n    percent_change_income_INF = ((income_before_taxes_INF_2022 - income_before_taxes_INF_2021)/income_before_taxes_INF_2021)*100\n    answer = (percent_change_tax + percent_change_income_INF)/2\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-19",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1951-1.png",
      "./MultiFinance/images/1951-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 4,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 12
      }
    },
    "difficulty": 5.075173815233827,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-288",
    "output": [
      "year1_profit = 169.56\n    year3_profit = 203.44\n    \n    # Do math calculation to get the answer\n    growth_rate = ((year3_profit - year1_profit) / year1_profit) * 100\n    \n    # return answer\n    return round(growth_rate, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 81,
      "prompt_tokens": 3157,
      "completion_tokens_details": {
        "text_tokens": 81
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 2892
      },
      "total_tokens": 3238
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算泌尿外科在第三年的毛利润，并将其与第一年进行比较，计算增长百分比；请保留一位小数。",
    "python_solution": "def solution():\n    revenue_year1 = 169.56\n    margin_year1 = 80.35 / 100\n    profit_year1 = revenue_year1 * margin_year1\n\n    revenue_year3 = 203.44\n    margin_year3 = 75.90 / 100\n    profit_year3 = revenue_year3 * margin_year3\n\n    growth_percentage = ((profit_year3 - profit_year1) / profit_year1) * 100\n    return round(growth_percentage, 1)",
    "image_id": "company_13_13_28_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-901",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 3,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2264-1.png",
      "./MultiFinance/images/2264-2.png",
      "./MultiFinance/images/2264-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2264-2.png",
      "./MultiFinance/images/2264-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-289",
    "output": [
      "year_2020_product_num = 21\n    year_2023_product_num = 39\n    total_growth = year_2023_product_num - year_2020_product_num\n    growth_rate = round(total_growth / year_2020_product_num * 100, 2)\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return growth_rate\n```"
    ],
    "usage": {
      "completion_tokens": 98,
      "prompt_tokens": 1620,
      "completion_tokens_details": {
        "text_tokens": 98
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1343
      },
      "total_tokens": 1718
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2020年到2023年的品种数总增长量，并将其与2020年的品种数进行比较，得出增长比例；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2020 = 21\n    value_2023 = 39\n\n    # Multi-step logic\n    total_growth = value_2023 - value_2020\n    growth_ratio = total_growth / value_2020 * 100\n    return round(growth_ratio, 2)",
    "image_id": "company_12_12_20_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1620",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2742-1.png",
      "./MultiFinance/images/2742-2.png",
      "./MultiFinance/images/2742-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2742-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-290",
    "output": [
      "total_non_financial_deposits = 156.51 + 66.15\n    non_bank_institution_deposits = 303.79\n    \n    # Calculate the ratio\n    ratio = (total_non_financial_deposits / non_bank_institution_deposits) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(ratio, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 694,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 427
      },
      "total_tokens": 801
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中新增非金融企业存款与新增住户存款的总和，然后求该总和占新增非银行业金融机构存款的比例；请保留一位小数。",
    "python_solution": "def solution():\n    non_financial_enterprise_deposits = 303.79\n    household_deposits = 156.51\n    non_banking_institution_deposits = 136.18\n\n    total_deposits = non_financial_enterprise_deposits + household_deposits\n    ratio = total_deposits / non_banking_institution_deposits\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "macro_07_07_06_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2489",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3017-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3017-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-291",
    "output": [
      "A_class_stock_PengYongdong = 79.07\n    B_class_stock_PengYongdong = 102.87\n    total_stock_PengYongdong = A_class_stock_PengYongdong + B_class_stock_PengYongdong\n    total_stock = 3677.06\n    percentage_PengYongdong = (total_stock_PengYongdong / total_stock) * 100\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(percentage_PengYongdong, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 132,
      "prompt_tokens": 1853,
      "completion_tokens_details": {
        "text_tokens": 132
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1589
      },
      "total_tokens": 1985
    },
    "model": "qwen-omni-turbo",
    "question": "请计算彭永东的A类普通股与B类普通股总数，并将其占总股本的比例以百分比形式表示；保留一位小数。",
    "python_solution": "def solution():\n    a_class_shares_peng = 79.07\n    b_class_shares_peng = 102.87\n    total_shares_peng = a_class_shares_peng + b_class_shares_peng\n    total_shares = 3677.06\n    percentage = (total_shares_peng / total_shares) * 100\n    return round(percentage, 1)",
    "image_id": "company_06_06_06_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1449",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2971-1.png",
      "./MultiFinance/images/2971-2.png",
      "./MultiFinance/images/2971-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2971-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-292",
    "output": [
      "china_2023 = 178\n    india_2023 = 19\n    china_2024 = 178\n    india_2024 = 19\n    \n    total_2023 = 178 + 19\n    total_2024 = 178 + 19\n    \n    difference = (china_2024 - china_2023) - (india_2024 - india_2023)\n    \n    percentage_difference = (difference / total_2023) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 169,
      "prompt_tokens": 2649,
      "completion_tokens_details": {
        "text_tokens": 169
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 2371
      },
      "total_tokens": 2818
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年和2024年中国与印度的石油消费量之差，并将该差值占2023年总消费量的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    china_2023 = 2.6\n    india_2023 = 1.5\n    china_2024 = 1.4\n    india_2024 = 1.4\n    total_2023 = china_2023 + india_2023\n\n    diff = (china_2024 - china_2023) - (india_2024 - india_2023)\n    ratio = diff / total_2023\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "industry_06_06_06_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2050",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 6
      }
    },
    "difficulty": 4.276666119016055,
    "images": [
      "./MultiFinance/images/2282-1.png",
      "./MultiFinance/images/2282-2.png",
      "./MultiFinance/images/2282-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2282-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-293",
    "output": [
      "us_small_cap_equity = 0\n    non_us_large_cap_equity = 0\n    emerging_markets_equity = 0\n    \n    # Do math calculation to get the answer\n    if 44 > 1:\n        us_small_cap_equity += 44\n    if 47 > 1:\n        non_us_large_cap_equity += 47\n    if 33 > 1:\n        emerging_markets_equity += 33\n    \n    answer = us_small_cap_equity + non_us_large_cap_equity + emerging_markets_equity\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 135,
      "prompt_tokens": 1800,
      "completion_tokens_details": {
        "text_tokens": 135
      },
      "prompt_tokens_details": {
        "text_tokens": 551,
        "image_tokens": 1249
      },
      "total_tokens": 1935
    },
    "model": "qwen-omni-turbo",
    "question": "What's the sum of the equity the securities in the level where U.S. small cap stocks is greater than 1? (in million)",
    "python_solution": "def solution():\n    # Define variables name and value\n    us_large_cap_stocks = 97\n    us_small_cap_stocks = 55\n    non_us_large_cap_stocks = 21\n    non_us_small_cap_stocks = 21\n    emerging_markets = 14\n    \n    # Do math calculation to get the answer\n    answer = us_large_cap_stocks + us_small_cap_stocks + non_us_large_cap_stocks + non_us_small_cap_stocks + emerging_markets\n    \n    return answer",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-88",
    "img_type": "['Tables']",
    "context": "The following tables present the Company’s pension plan assets measured at fair value on a recurring basis:\n<image 1>\n||December 31, 2012|\n|Asset Category|Level 1|Level 2|Level 3|Total|\n||(in millions)|\n|Equity securities:|||||\n|U.S. large cap stocks|$89|$14|$—|$103|\n|U.S. small cap stocks|43|1|—|44|\n|Non-U.S. large cap stocks|17|30|—|47|\n|Emerging markets|13|20|—|33|\n|Debt securities:|||||\n|U.S. investment grade bonds|20|12|—|32|\n|U.S. high yield bonds|—|20|—|20|\n|Non-U.S. investment grade bonds|—|15|—|15|\n|Real estate investment trusts|—|—|12|12|\n|Hedge funds|—|—|18|18|\n|Pooled pension funds|—|104|—|104|\n|Cash equivalents|9|—|—|9|\n|Total|$191|$216|$30|$437|\n",
    "images": [
      "./MultiFinance/images/1728-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.58351893845611,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-294",
    "output": [
      "year_2021_interest_income = 78.4\n    year_2022_interest_income = 80.9\n    year_2023_interest_income = 84.3\n    \n    growth_rate_2021_to_2022 = (year_2022_interest_income - year_2021_interest_income) / year_2021_interest_income * 100\n    interest_income_change_2022_to_2023_percentage = ((year_2023_interest_income - year_2022_interest_income) / year_2022_interest_income) * 100\n    \n    # Do math calculation to get the answer\n    answer = interest_income_change_2022_to_2023_percentage + growth_rate_2021_to_2022\n    \n    # return answer\n    return round(answer, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 219,
      "prompt_tokens": 2327,
      "completion_tokens_details": {
        "text_tokens": 219
      },
      "prompt_tokens_details": {
        "text_tokens": 298,
        "image_tokens": 2029
      },
      "total_tokens": 2546
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中2021年和2022年的利息净收入，计算这两年的增长率；然后用2023年的利息净收入减去2022年的利息净收入，并将结果表示为2022年利息净收入的百分比。请保留两位小数。",
    "python_solution": "def solution():\n    net_interest_income_2021 = 75.0\n    net_interest_income_2022 = 82.0\n    net_interest_income_2023 = 84.0\n\n    growth_2021_2022 = ((net_interest_income_2022 - net_interest_income_2021) / net_interest_income_2021) * 100\n    difference_2022_2023 = net_interest_income_2023 - net_interest_income_2022\n    percentage_2022 = (difference_2022_2023 / net_interest_income_2022) * 100\n    return round(percentage_2022, 2)",
    "image_id": "company_04_04_11_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-704",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.189654742026425,
    "images": [
      "./MultiFinance/images/2301-1.png",
      "./MultiFinance/images/2301-2.png",
      "./MultiFinance/images/2301-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2301-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-295",
    "output": [
      "year_2018_free_cash_flow = 853\n    year_2019_free_cash_flow = 912\n    year_2020_free_cash_flow = 1246\n    \n    # Calculate the average annual growth rate (AAGR)\n    AAGR = ((year_2020_free_cash_flow - year_2018_free_cash_flow) / year_2018_free_cash_flow) * 100 + \\\n           ((year_2019_free_cash_flow - year_2018_free_cash_flow) / year_2018_free_cash_flow) * 100 + \\\n           ((year_2020_free_cash_flow - year_2019_free_cash_flow) / year_2019_free_cash_flow) * 100\n    \n    # Return the calculated AAGR as a percentage\n    return AAGR / 3\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 216,
      "prompt_tokens": 1031,
      "completion_tokens_details": {
        "text_tokens": 216
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 761
      },
      "total_tokens": 1247
    },
    "model": "qwen-omni-turbo",
    "question": "What is the average annual growth rate of free cash flow from 2018 to 2020 in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    FCF_2018 = 853 # free cash flow in 2018\n    FCF_2020 = 1246 # free cash flow in 2020\n    n = 2020 - 2018 # number of years\n\n    #Do math calculation to get the answer\n    CAGR = ((FCF_2020 / FCF_2018) ** (1/n) - 1) * 100\n    answer = round(CAGR, 2)\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-197",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2069-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 8
      }
    },
    "difficulty": 4.276666119016055,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-296",
    "output": [
      "loss_2019 = -700\n    loss_2018 = -882\n    \n    # Calculate the percentage change\n    percentage_change = ((loss_2019 - loss_2018) / abs(loss_2018)) * 100\n    \n    # Return the answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 92,
      "prompt_tokens": 2459,
      "completion_tokens_details": {
        "text_tokens": 92
      },
      "prompt_tokens_details": {
        "text_tokens": 1203,
        "image_tokens": 1256
      },
      "total_tokens": 2551
    },
    "model": "qwen-omni-turbo",
    "question": "What would the percentage change in the loss before income taxes and equity in net income/(loss) of affiliates from 2018 to 2019 be if the amount in 2019 was (700) million instead? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    loss_2019 = -700\n    loss_2018 = -882\n    \n    # Do math calculation to get the answer\n    answer = (loss_2019 - loss_2018) / loss_2018 * 100\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-37",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n 15. Income Taxes Nielsen provides for income taxes utilizing the asset and liability method of accounting for income taxes. Under this method, deferred income taxes are recorded to reflect the tax consequences in future years of differences between the tax basis of assets and liabilities and their financial reporting amounts at each balance sheet date, based on enacted tax laws and statutory tax rates applicable to the periods in which the differences are expected to affect taxable income. If it is determined that it is more likely than not that future tax benefits associated with a deferred tax asset will not be realized, a valuation allowance is provided. The effect on deferred tax assets and liabilities of a change in the tax rates is recognized in the consolidated statements of operations as an adjustment to income tax expense in the period that includes the enactment date. The Company records a liability for unrecognized tax benefits resulting from uncertain tax positions taken or expected to be taken in a tax return. Such tax positions are, based solely on their technical merits, more likely than not to be sustained upon examination by taxing authorities and reflect the largest amount of benefit, determined on a cumulative probability basis that is more likely than not to be realized upon settlement with the applicable taxing authority with full knowledge of all relevant information. The Company recognizes interest and penalties, if any, related to unrecognized tax benefits in income tax expense. On December 22, 2017, the TCJA was signed into law and significantly changed the way the U.S. taxes corporations. The TCJA reduced the U.S. federal corporate income tax rate from 35 percent to 21 percent and created a territorial-style taxing system. The TCJA required companies to pay a one-time transition tax on earnings of certain foreign subsidiaries that were previously deferred and also created new taxes on certain types of foreign earnings. As of December 31, 2017, we made a reasonable estimate of the (a) effects on our existing deferred tax balances, and (b) the one-time transition tax. Consequently, our fourth quarter of 2017 and full year 2017 results of operations reflected a non-cash provisional net expense of $104 million. We finalized our accounting for the TCJA in December of 2018 and our results for the fourth quarter of 2018 and full year 2018 results of operations reflect, in accordance with SAB 118, a reduction in tax expense of $252 million as an adjustment to the 2017 provisional expense. This was primarily comprised of a net tax benefit of $57 million relating to finalizing the calculation of the transition tax (including withholding taxes) together with a net tax benefit of $195 million associated with the re-measurement of our deferred taxes. The TCJA imposed a U.S. tax on global intangible low taxed income (“GILTI”) that is earned by certain foreign affiliates owned by a U.S. shareholder and was intended to tax earnings of a foreign corporation that are deemed to be in excess of certain threshold return. As of December 31, 2018, Nielsen made a policy decision and elected to treat taxes on GILTI as a current period expense and have reflected as such within the financial statements as of December 31, 2019 as well. As part of an intercompany restructuring during the year ended December 31, 2018, we transferred certain intellectual property assets between wholly- owned legal entities in non-U.S. tax jurisdictions. As the impact of the transfer was the result of an intra-entity transaction, the resulting gain on the transfer was eliminated for purposes of the consolidated financial statements. The transferring entity recognized a gain on the transfer of assets that was not subject to income tax in its local jurisdiction. In accordance with ASU 2016-16, which the Company adopted in the first quarter of 2018, and as further described in Note 1. “Significant Accounting Policies”, Nielsen recorded an income tax benefit of approximately $193 million. Throughout 2019, ongoing federal and international audits were effectively settled in certain tax jurisdictions and the impact was recorded accordingly the financial statements. The components of income/(loss) before income taxes and equity in net income of affiliates, were: The above amounts for UK and non-UK activities were determined based on the location of the taxing authorities.",
    "images": [
      "./MultiFinance/images/1776-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-297",
    "output": [
      "prices = [99579.21, 39921.46, 38741.87, 38820.19]\n    \n    # Calculate average price\n    total_price = sum(prices)\n    average_price = total_price / len(prices)\n    \n    # Return result rounded to two decimal places\n    return round(average_price, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 3420,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 248,
        "image_tokens": 3172
      },
      "total_tokens": 3524
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中四种药品的平均单价，并将结果保留两位小数。",
    "python_solution": "def solution():\n    price1 = 99579.21\n    price2 = 39921.46\n    price3 = 38741.87\n    price4 = 38820.19\n\n    average_price = (price1 + price2 + price3 + price4) / 4\n    return round(average_price, 2)",
    "image_id": "company_38_38_14_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1151",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2726-1.png",
      "./MultiFinance/images/2726-2.png",
      "./MultiFinance/images/2726-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2726-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-298",
    "output": [
      "absolute_performance_3m = -10.4\n    relative_performance_3m = -10.13\n    shenzhen_300_3m = -0.27\n    \n    # Do math calculation to get the answer\n    difference = absolute_performance_3m - relative_performance_3m\n    result = difference / shenzhen_300_3m\n    \n    # return answer\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 111,
      "prompt_tokens": 1244,
      "completion_tokens_details": {
        "text_tokens": 111
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 977
      },
      "total_tokens": 1355
    },
    "model": "qwen-omni-turbo",
    "question": "请计算3月的绝对表现与相对表现之间的差值，并将该差值除以沪深300的3月表现，得到的结果保留两位小数。",
    "python_solution": "def solution():\n    absolute_performance_3_months = -10.4\n    relative_performance_3_months = -10.13\n    hs300_3_months = -0.27\n\n    diff = absolute_performance_3_months - relative_performance_3_months\n    result = diff / hs300_3_months\n    return round(result, 2)",
    "image_id": "company_12_12_00_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1588",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2679-1.png",
      "./MultiFinance/images/2679-2.png",
      "./MultiFinance/images/2679-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2679-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-299",
    "output": [
      "packaging_water_capacity = 195 + 25 + 197 + 73 + 106 + 90 + 10\n    \n    # Do math calculation to get the answer\n    total_capacity = round(packaging_water_capacity)\n    \n    # return answer\n    return total_capacity\n```"
    ],
    "usage": {
      "completion_tokens": 69,
      "prompt_tokens": 2122,
      "completion_tokens_details": {
        "text_tokens": 69
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 1865
      },
      "total_tokens": 2191
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有工厂包装饮用水的预计标准年产能总和，并将结果四舍五入到整数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    packaged_water_capacity_yixing = 195\n    packaged_water_capacity_wanlvhu = 197\n    packaged_water_capacity_wuyishan = 73\n    packaged_water_capacity_zhejiang = 106\n    packaged_water_capacity_chengdu = 90\n\n    # Multi-step logic\n    total_packaged_water_capacity = packaged_water_capacity_yixing + packaged_water_capacity_wanlvhu + packaged_water_capacity_wuyishan + packaged_water_capacity_zhejiang + packaged_water_capacity_chengdu\n    return round(total_packaged_water_capacity)",
    "image_id": "company_23_23_25_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-950",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2393-1.png",
      "./MultiFinance/images/2393-2.png",
      "./MultiFinance/images/2393-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2393-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-300",
    "output": [
      "min_share = 2%\n    other_share = 100% - (24% + 21% + 9% + 7% + 6% + 6% + 4%)\n    \n    # Calculate the difference between the smallest share and all others combined\n    diff = abs(min_share - other_share)\n    \n    # Calculate the percentage of this difference relative to total market\n    percentage_diff = (diff / 100) * 100\n    \n    # Return the calculated percentage difference rounded to two decimal places\n    return round(percentage_diff, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 1646,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1384
      },
      "total_tokens": 1787
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中最小市场份额的公司与其他所有公司的市场份额之差，并将该差值占总市场的百分比；请保留两位小数。",
    "python_solution": "def solution():\n    smallest_share = 4\n    total_market = 100\n    other_companies_sum = total_market - smallest_share\n    difference = other_companies_sum - smallest_share\n    percentage = difference / total_market * 100\n    return round(percentage, 2)",
    "image_id": "industry_04_04_14_figure_7",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2182",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2842-1.png",
      "./MultiFinance/images/2842-2.png",
      "./MultiFinance/images/2842-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2842-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-301",
    "output": [
      "x_values = [1, 2, 3, 4]\n    probabilities = [0.15, 0.35, 0.40, 0.10]\n    \n    expected_value = sum(x * p for x, p in zip(x_values, probabilities))\n    \n    # Return the result rounded to two decimal places\n    return round(expected_value, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 86,
      "prompt_tokens": 791,
      "completion_tokens_details": {
        "text_tokens": 86
      },
      "prompt_tokens_details": {
        "text_tokens": 294,
        "image_tokens": 497
      },
      "total_tokens": 877
    },
    "model": "qwen-omni-turbo",
    "question": "<image 1> A baker is deciding how many batches of muffins to make to sell in his bakery. He wants to make enough to sell every one and no fewer. Through observation, the baker has established a probability distribution. On average, how many batches should the baker make? Answer to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Marketing",
    "source_id": "test_Marketing_164",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/181-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-302",
    "output": [
      "koweit_2025_1_to_3 = 2413\n    koweit_2025_4_to_9 = 2548\n    koweit_difference = koweit_2025_4_to_9 - koweit_2025_1_to_3\n    koweit_quota = 2676\n    \n    # Calculate the difference in percentage\n    koweit_percentage = (koweit_difference / koweit_quota) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(koweit_percentage, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 155,
      "prompt_tokens": 3068,
      "completion_tokens_details": {
        "text_tokens": 155
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 2787
      },
      "total_tokens": 3223
    },
    "model": "qwen-omni-turbo",
    "question": "请计算科威特在2025年1-3月和4-9月的产量差值，并将该差值占2025年配额量的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    kuwait_q1 = 2413\n    kuwait_q2 = 2548\n    kuwait_quota = 2676\n\n    diff = kuwait_q2 - kuwait_q1\n    ratio = diff / kuwait_quota\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "industry_06_06_03_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2036",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2998-1.png",
      "./MultiFinance/images/2998-2.png",
      "./MultiFinance/images/2998-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2998-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-303",
    "output": [
      "flow_asset_2022 = 4054\n    flow_asset_2023 = 2397\n    \n    # Calculate difference between 2023 and 2022\n    diff_flow_asset = flow_asset_2023 - flow_asset_2022\n    \n    # Calculate percentage change\n    percent_change = (diff_flow_asset / flow_asset_2022) * 100\n    \n    # Return result as a string with one decimal place\n    return f\"{percent_change:.1f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 122,
      "prompt_tokens": 3074,
      "completion_tokens_details": {
        "text_tokens": 122
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 2795
      },
      "total_tokens": 3196
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2022年的流动资产差值，并将该差值占2022年流动资产的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values from the image\n    current_assets_2022 = 4054\n    current_assets_2023 = 2397\n\n    # Multi-step logic\n    diff = current_assets_2023 - current_assets_2022\n    ratio = diff / current_assets_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_30_30_19_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-997",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2620-1.png",
      "./MultiFinance/images/2620-2.png",
      "./MultiFinance/images/2620-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2620-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-304",
    "output": [
      "pre_pay_earnings_ratio = 44 / (100 + 44)\n    \n    traditional_commission_ratio = 56 / (100 + 56)\n    \n    ratio = pre_pay_earnings_ratio / traditional_commission_ratio\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(ratio, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 83,
      "prompt_tokens": 1635,
      "completion_tokens_details": {
        "text_tokens": 83
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 1364
      },
      "total_tokens": 1718
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据计算“预付佣”模式占总比例的百分比，然后计算该百分比与传统佣金模式百分比的比值；请保留两位小数。",
    "python_solution": "def solution():\n    prepay_percentage = 56\n    traditional_percentage = 44\n    total_percentage = 100\n    prepay_ratio = prepay_percentage / total_percentage\n    traditional_ratio = traditional_percentage / total_percentage\n    ratio_difference = prepay_ratio / traditional_ratio\n    return round(ratio_difference, 2)",
    "image_id": "company_06_06_24_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1480",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 0,
          "*": 0,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2975-1.png",
      "./MultiFinance/images/2975-2.png",
      "./MultiFinance/images/2975-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2975-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-305",
    "output": [
      "营利润2023A=646\n    营利润2024E=734\n    \n    # Do math calculation to get the answer\n   营利润增长率=(营利润2024E-营利润2023A)/营利润2023A*100%\n    \n    # return answer\n    return round(营利润增长率,2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 103,
      "prompt_tokens": 3121,
      "completion_tokens_details": {
        "text_tokens": 103
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 2866
      },
      "total_tokens": 3224
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年和2024年的营业利润增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    operating_profit_2023 = 646\n    operating_profit_2024 = 734\n    # Multi-step logic\n    growth_rate = (operating_profit_2024 - operating_profit_2023) / operating_profit_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_39_39_23_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1199",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2729-1.png",
      "./MultiFinance/images/2729-2.png",
      "./MultiFinance/images/2729-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2729-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-306",
    "output": [
      "flow_asset_2023 = 4771\n    flow_asset_2022 = 4296\n    total_asset_2022 = 10284\n    \n    # Calculate the difference between 2023 and 2022's flow asset\n    diff_flow_asset = flow_asset_2023 - flow_asset_2022\n    \n    # Calculate the ratio of the difference to 2022's total assets\n    ratio = (diff_flow_asset / total_asset_2022) * 100\n    \n    # Return the result with one decimal place\n    return round(ratio, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 161,
      "prompt_tokens": 2659,
      "completion_tokens_details": {
        "text_tokens": 161
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 2386
      },
      "total_tokens": 2820
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年的流动资产差值，并将该差值占2022年总资产的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2022 = 4296\n    current_assets_2023 = 4771\n    total_assets_2022 = 10284\n\n    # Multi-step logic\n    diff = current_assets_2023 - current_assets_2022\n    ratio = diff / total_assets_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_18_18_02_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-770",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2537-1.png",
      "./MultiFinance/images/2537-2.png",
      "./MultiFinance/images/2537-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2537-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-307",
    "output": [
      "tian_shen_zhi_yan_A = 508\n    tian_shen_zhi_yan_B = 254\n    \n    # Do math calculation to get the answer\n    total_power = (tian_shen_zhi_yan_A + tian_shen_zhi_yan_B) / 2\n    rounded_result = round(total_power)\n    \n    # return answer\n    return rounded_result\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 4048,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 3776
      },
      "total_tokens": 4152
    },
    "model": "qwen-omni-turbo",
    "question": "请计算天神之眼A和天神之眼B的算力总和，并将结果除以2，然后将结果四舍五入到整数。请提供最终结果。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    power_A = 508\n    power_B = 254\n\n    # Multi-step logic\n    total_power = power_A + power_B\n    average_power = total_power / 2\n    final_result = round(average_power)\n\n    return final_result",
    "image_id": "industry_09_09_27_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2098",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2888-1.png",
      "./MultiFinance/images/2888-2.png",
      "./MultiFinance/images/2888-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2888-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-308",
    "output": [
      "total_shares = 100 + 28.53 + 17.29 + 17.51 + 3.69 + 3.64 + 3.61 + 1.7 + 1.7 + 1.2 + 1.08\n    \n    # Do math calculation to get the answer\n    total_shares_percentage = (total_shares / 100) * 100\n    \n    # return answer\n    return round(total_shares_percentage, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 134,
      "prompt_tokens": 2735,
      "completion_tokens_details": {
        "text_tokens": 134
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 2480
      },
      "total_tokens": 2869
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算上海昊海生物科技有限公司的总持股比例，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share1 = 28.53\n    share2 = 17.29\n    share3 = 17.51\n    share4 = 3.69\n    share5 = 3.64\n    share6 = 3.61\n    share7 = 1.7\n    share8 = 1.7\n    share9 = 1.2\n    share10 = 1.08\n\n    # Multi-step logic\n    total_share = share1 + share2 + share3 + share4 + share5 + share6 + share7 + share8 + share9 + share10\n    return round(total_share, 2)",
    "image_id": "company_10_10_03_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-397",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 10
      },
      "operator_statistics": {
        "operators": {
          "+": 9,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 14,
        "parentheses": 2
      }
    },
    "difficulty": 5.0106352940962555,
    "images": [
      "./MultiFinance/images/2178-1.png",
      "./MultiFinance/images/2178-2.png",
      "./MultiFinance/images/2178-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2178-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-309",
    "output": [
      "unrealized_gains_2019 = 487000\n    unrealized_gains_2020 = 1000000\n    \n    # Calculate the percentage change\n    percentage_change = ((unrealized_gains_2020 - unrealized_gains_2019) / unrealized_gains_2019) * 100\n    \n    # Return the answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 114,
      "prompt_tokens": 1474,
      "completion_tokens_details": {
        "text_tokens": 114
      },
      "prompt_tokens_details": {
        "text_tokens": 299,
        "image_tokens": 1175
      },
      "total_tokens": 1588
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the unrealized gains on marketable securities from 2019 to 2020 for the first six months of the year, if the unrealized gains for 2020 reflect the company's ability to generate revenue?",
    "python_solution": "def solution():\n     #Define variables name and value\n    unrealized_gains_2020 = 7\n    unrealized_gains_2019 = 111\n\n    #Do math calculation to get the answer\n    change = unrealized_gains_2020 - unrealized_gains_2019\n    percentage_change = (change / unrealized_gains_2019) * 100\n    return percentage_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-127",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2033-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-310",
    "output": [
      "net_sales_2023 = 43300\n    cost_of_goods_sold_2023 = 23195\n    gross_profit_2023 = 20105\n    operating_expenses_2023 = 23356\n    loss_from_operations_2023 = -3251\n    other_income_net_2023 = 340\n    total_current_liabilities_2023 = 30137\n    operating_lease_liabilities_net_of_current_portion_2023 = -1808\n    total_liabilities_2023 = 31945\n    total_assets_2023 = 113222\n    total_equity_2023 = 109539\n    noncontrolling_interests_2023 = -2826\n    total_liabilities_and_equity_2023 = 81277\n    weighted_average_common_shares_outstanding_basic_2023 = 49372874\n    weighted_average_common_shares_outstanding_diluted_2023 = 72250338\n\n    # Calculate the percentage of net sales that will remain after covering the 40% cost of the project\n    remaining_percentage = (net_sales_2023 * 0.4) / (gross_profit_2023 + operating_expenses_2023)\n\n    # Return the answer\n    return remaining_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 366,
      "prompt_tokens": 2807,
      "completion_tokens_details": {
        "text_tokens": 366
      },
      "prompt_tokens_details": {
        "text_tokens": 310,
        "image_tokens": 2497
      },
      "total_tokens": 3173
    },
    "model": "qwen-omni-turbo",
    "question": "How much percentage of net sales is expected to remain after covering the 40% cost of the project if the company's financing plan for a $60,000 project is to use 60% of the increase in cash and cash equivalents and 40% of net sales?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    cash_and_cash_equivalent_in_q2 = 55957 # in thousands\n    cash_and_cash_equivalent_in_q1 = 47399 # in thousands\n\n    net_sales_in_q2 = 43300 # in thousands\n    #Calculate total project cost \n    project_cost = 60000 # in thousands\n\n    #Do math calculation to get the answer\n    cash_and_cash_equivalent_increase = cash_and_cash_equivalent_in_q2 - cash_and_cash_equivalent_in_q1\n    cash_and_cash_equivalent_part_of_project_cost = 0.6 * project_cost \n    net_sales_part_of_project_cost = 0.4 * project_cost\n\n    #Calculate how much percentage of net sales will be remaining after covering the project cost part\n    remaining_net_sales = net_sales_in_q2 - net_sales_part_of_project_cost \n    remaining_net_sales_in_percentage = (remaining_net_sales / net_sales_in_q2) * 100\n    return remaining_net_sales_in_percentage\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-264",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2119-1.png",
      "./MultiFinance/images/2119-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 3,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 14,
        "parentheses": 2
      }
    },
    "difficulty": 4.499809670330265,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-311",
    "output": [
      "wet_chemicals_percentage = 20\n    sputtering_target_percentage = 13\n    other_percentage = 7 + 4 + 3 + 6 + 5\n    gas_percentage = 65\n    \n    total_other_percentage = wet_chemicals_percentage + sputtering_target_percentage + other_percentage\n    \n    difference = gas_percentage - total_other_percentage\n    \n    # return answer\n    return int(difference)\n```"
    ],
    "usage": {
      "completion_tokens": 92,
      "prompt_tokens": 2586,
      "completion_tokens_details": {
        "text_tokens": 92
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 2321
      },
      "total_tokens": 2678
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算湿电子化学品、溅射靶材和其他类别的总占比，并将其与气体的占比相减；请保留整数。",
    "python_solution": "def solution():\n    wet_electronic_chemicals = 4\n    sputtering_target_materials = 6\n    others = 3\n    gas = 14\n\n    total_percentage = wet_electronic_chemicals + sputtering_target_materials + others\n    result = total_percentage - gas\n    return int(result)",
    "image_id": "industry_19_19_23_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2430",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3014-1.png",
      "./MultiFinance/images/3014-2.png",
      "./MultiFinance/images/3014-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3014-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-312",
    "output": [
      "net_income_2022 = 4307.1\n    cash_provided_by_operating_activities_2022 = 5504.7\n    net_income_percentage_2022 = (net_income_2022 / cash_provided_by_operating_activities_2022) * 100\n    \n    net_income_2021 = 3855.6\n    cash_provided_by_operating_activities_2021 = 5104.2\n    net_income_percentage_2021 = (net_income_2021 / cash_provided_by_operating_activities_2021) * 100\n    \n    # Calculate the difference in percentages\n    difference_in_percentages = abs(net_income_percentage_2022 - net_income_percentage_2021)\n    \n    # return answer\n    return difference_in_percentages\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 214,
      "prompt_tokens": 1511,
      "completion_tokens_details": {
        "text_tokens": 214
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1234
      },
      "total_tokens": 1725
    },
    "model": "qwen-omni-turbo",
    "question": "What is the difference in net income as a percentage of cash provided by operating activities between the years 2022 and 2021 in percentages?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    net_income_2021 = 3855.6  # in million\n    net_income_2022 = 4307.1  # in million\n    cash_from_operations_2021 = 5104.2  # in million\n    cash_from_operations_2022 = 5504.7  # in million\n\n    #Do math calculation to get the answer\n    net_income_percent_2021 = (net_income_2021 / cash_from_operations_2021) * 100\n    net_income_percent_2022 = (net_income_2022 / cash_from_operations_2022) * 100\n    answer = net_income_percent_2022 - net_income_percent_2021\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-49",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1967-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 4.0943445622221,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-313",
    "output": [
      "Price_FFO_multiple = 13\n    Net_income = 92\n    \n    # Do math calculation to get the answer\n    share_price = Price_FFO_multiple * Net_income\n    \n    # return answer\n    return share_price\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 64,
      "prompt_tokens": 1508,
      "completion_tokens_details": {
        "text_tokens": 64
      },
      "prompt_tokens_details": {
        "text_tokens": 282,
        "image_tokens": 1226
      },
      "total_tokens": 1572
    },
    "model": "qwen-omni-turbo",
    "question": "A specialist compiled the financial information for a Real Estate Investment Trust. Using the income statement, what was the Real Estate Investment Trust's share price at the end of 2017 according to the Price / FFO multiple? Answer to three decimal places.",
    "python_solution": "def solution():\n    multiple = 13\n    net_income = 92\n    depreciation_and_amortization = 45\n    loss_from_property_disposal = 22\n    shares_outstanding = 118\n    FFO = net_income + depreciation_and_amortization + loss_from_property_disposal\n    FFO_per_share = FFO / shares_outstanding\n    stock_price = multiple * FFO_per_share\n    return stock_price",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.58351893845611,
    "source_id": "validation-63",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/312-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-314",
    "output": [
      "year_2021 = 48\n    year_2026 = 199\n    \n    # Do math calculation to get the answer\n    CAGR = ((year_2026 / year_2021) ** (1/5)) - 1\n    \n    # return answer\n    return round(CAGR * 100, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 89,
      "prompt_tokens": 3514,
      "completion_tokens_details": {
        "text_tokens": 89
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 3257
      },
      "total_tokens": 3603
    },
    "model": "qwen-omni-turbo",
    "question": "请计算企业通讯市场板2021年到2026年的复合年增长率，并保留两位小数。",
    "python_solution": "def solution():\n    revenue_2021 = 48\n    revenue_2026 = 199\n    years = 5\n    cagr = ((revenue_2026 / revenue_2021) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_20_20_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-175",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2596-1.png",
      "./MultiFinance/images/2596-2.png",
      "./MultiFinance/images/2596-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2596-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-315",
    "output": [
      "other_assets_april_1 = 47.7\n    other_assets_adjustment = 24.1\n    \n    # Calculate the percentage change\n    percentage_change = (other_assets_adjustment / other_assets_april_1) * 100\n    \n    # Return the answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 81,
      "prompt_tokens": 1763,
      "completion_tokens_details": {
        "text_tokens": 81
      },
      "prompt_tokens_details": {
        "text_tokens": 507,
        "image_tokens": 1256
      },
      "total_tokens": 1844
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the percentage change in Other assets  due to the adjustments if the balance on April 1 was $90 million instead? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    initial_balance = 71.8\n    adjusted_balance = 90\n\n    # Do math calculation to get the answer\n    answer = ((adjusted_balance - initial_balance) / initial_balance) * 100\n\n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-191",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n During the three months ended June 30, 2018, the Company adopted ASU 2016-18-Statement of Cash Flows: Restricted Cash. This standard requires that the statement of cash flows explain the change during the period in total cash, cash equivalents, and amounts generally described as restricted cash or restricted cash equivalents. Therefore, amounts generally described as restricted cash and restricted cash equivalents should be included with cash and cash equivalents when reconciling the beginning-of-period and end-of-period total amounts shown on the statement of cash flows. The standard has been applied using a retrospective transition method to each period presented. The adoption of this standard did not have a material impact on the Company's financial statements. The following table summarizes the opening balance sheet adjustments related to the adoption of the New Revenue Standard, ASU 2016-01-Financial Instruments - Overall (Subtopic 825-10): Recognition and Measurement of Financial Assets and Financial Liabilities, and ASU 2016-16-Intra-Entity Transfers of Assets Other Than Inventory (in millions):",
    "images": [
      "./MultiFinance/images/1930-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-316",
    "output": [
      "portfolio_weights = [30, 30, 20, 10, 10]\n    benchmark_weights = [24, 20, 20, 18, 18]\n    portfolio_returns = [14, 15, 12, 8, 10]\n    \n    active_returns = []\n    \n    for i in range(len(portfolio_weights)):\n        active_return = portfolio_returns[i] - (benchmark_weights[i] * (portfolio_weights[i] / sum(portfolio_weights)))\n        active_returns.append(active_return)\n    \n    total_active_return = sum(active_returns)\n    \n    # Calculate the value added (active return) for the Kurok Fund\n    value_added = total_active_return / sum(portfolio_weights) * 100\n    \n    # return answer\n    return round(value_added, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 184,
      "prompt_tokens": 1546,
      "completion_tokens_details": {
        "text_tokens": 184
      },
      "prompt_tokens_details": {
        "text_tokens": 304,
        "image_tokens": 1242
      },
      "total_tokens": 1730
    },
    "model": "qwen-omni-turbo",
    "question": "The reference weights and yields for each of the five stocks in the Olympia index are presented below. The Kurok Fund employs the Olympia Index as its benchmark, and the fund's portfolio weights are also outlined in the chart. What is the value added (active return) for the Kurok Fund (expressed as a percentage)? Answer to a single decimal place.",
    "python_solution": "def solution():\n    portfolio_weights = [0.30, 0.30, 0.20, 0.10, 0.10]\n    portfolio_returns = [14, 15, 12, 8, 10]\n    benchmark_weights = [0.24, 0.20, 0.20, 0.18, 0.18]\n    benchmark_returns = [14, 15, 12, 8, 10]\n\n    portfolio_return = sum([weight * return_val for weight, return_val in zip(portfolio_weights, portfolio_returns)])\n    benchmark_return = sum([weight * return_val for weight, return_val in zip(benchmark_weights, benchmark_returns)])\n\n    active_return = portfolio_return - benchmark_return\n    \n    return active_return",
    "topic": "Portfolio Management & Strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 8
      }
    },
    "difficulty": 3.58351893845611,
    "source_id": "validation-116",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/337-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-317",
    "output": [
      "first_item_2020 = 32.71\n    second_item_2020 = 31.34\n    third_item_2020 = 45.62\n    \n    # Do math calculation to get the answer\n    difference = first_item_2020 - second_item_2020\n    result = (difference / third_item_2020) * 100\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 124,
      "prompt_tokens": 1752,
      "completion_tokens_details": {
        "text_tokens": 124
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1475
      },
      "total_tokens": 1876
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年第一项指标与第二项指标的差值，并将该差值除以第三项指标，然后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_2020_first = 16.98\n    value_2020_second = 85.90\n    value_2020_third = -6.69\n\n    diff = value_2020_second - value_2020_first\n    ratio = diff / value_2020_third\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2878",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2788-1.png",
      "./MultiFinance/images/2788-2.png",
      "./MultiFinance/images/2788-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2788-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-318",
    "output": [
      "cost_2018 = 123\n    cost_2019 = 139\n    cost_2020 = 159\n    cost_2021 = 232\n    cost_2022 = 183\n    cost_2023 = 259\n    \n    total_cost = cost_2018 + cost_2019 + cost_2020 + cost_2021 + cost_2022 + cost_2023\n    average_cost = total_cost / 6\n    \n    # return answer\n    return round(average_cost, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 151,
      "prompt_tokens": 1964,
      "completion_tokens_details": {
        "text_tokens": 151
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1705
      },
      "total_tokens": 2115
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2018年到2023年内销煤吨成本的平均值，并将结果保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2018 = 300\n    value_2019 = 140\n    value_2020 = 130\n    value_2021 = 232\n    value_2022 = 200\n    value_2023 = 200\n\n    # Multi-step logic\n    total_value = value_2018 + value_2019 + value_2020 + value_2021 + value_2022 + value_2023\n    average_value = total_value / 6\n    return round(average_value, 1)",
    "image_id": "company_31_31_10_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1732",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 2
      }
    },
    "difficulty": 4.430816798843313,
    "images": [
      "./MultiFinance/images/2247-1.png",
      "./MultiFinance/images/2247-2.png",
      "./MultiFinance/images/2247-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2247-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-319",
    "output": [
      "current_liabilities_feb_2021 = 1376.3\n    total_assets_feb_2021 = 9093.0\n    current_liabilities_may_2021 = 5763.0\n    total_assets_may_2021 = 13723.0\n    \n    ratio_feb_2021 = current_liabilities_feb_2021 / total_assets_feb_2021\n    ratio_may_2021 = current_liabilities_may_2021 / total_assets_may_2021\n    \n    change_in_ratio = (ratio_may_2021 - ratio_feb_2021) * 100\n    \n    # return answer\n    return round(change_in_ratio, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 200,
      "prompt_tokens": 1535,
      "completion_tokens_details": {
        "text_tokens": 200
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 1250
      },
      "total_tokens": 1735
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in the ratio of the Current Liabilities to Total Assets from February 28, 2021 to May 31, 2021 in percentage points?",
    "python_solution": "def solution():\n     #Define variables name and value\n    total_assets_May = 13723\n    total_assets_Feb = 9093\n    current_liabilities_May = 2206\n    current_liabilities_Feb = 1383\n\n    #Do math calculation to get the answer\n    ratio_May = current_liabilities_May / total_assets_May\n    ratio_Feb = current_liabilities_Feb / total_assets_Feb\n    # Calculate the percentage difference\n    answer = (ratio_May - ratio_Feb) * 100\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-99",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2008-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 2
      }
    },
    "difficulty": 3.8712010109078907,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-320",
    "output": [
      "year_1 = 744.08\n    year_2 = 606.49\n    year_3 = 753.44\n    year_4 = 188.26\n    year_5 = 150.75\n    year_6 = 217.85\n    year_7 = 209.67\n    year_8 = 168.42\n    year_9 = 135.93\n    year_10 = 193.33\n    \n    total_years = 10\n    sum_growth_rate = (year_2 - year_1) / year_1 + (year_3 - year_2) / year_2 + (year_4 - year_3) / year_3 + \\\n                      (year_5 - year_4) / year_4 + (year_6 - year_5) / year_5 + (year_7 - year_6) / year_6 + \\\n                      (year_8 - year_7) / year_7 + (year_9 - year_8) / year_8 + (year_10 - year_9) / year_9\n    \n    average_growth_rate = sum_growth_rate / total_years * 100\n    \n    return round(average_growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 319,
      "prompt_tokens": 1220,
      "completion_tokens_details": {
        "text_tokens": 319
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 960
      },
      "total_tokens": 1539
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算从FY20到FY25Q2的年均营收增长率；请保留两位小数。",
    "python_solution": "def solution():\n    revenue_fy20 = 744.08\n    revenue_fy25q2 = 193.33\n    years = 5.25\n\n    avg_growth_rate = ((revenue_fy25q2 / revenue_fy20) ** (1/years) - 1) * 100\n    return round(avg_growth_rate, 2)",
    "image_id": "company_37_37_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-565",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2442-1.png",
      "./MultiFinance/images/2442-2.png",
      "./MultiFinance/images/2442-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2442-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-321",
    "output": [
      "factory_purchase_price_2020 = 161\n    factory_internal_purchase_price_2020 = 138\n    factory_internal_purchase_cost_2020 = 128\n    \n    price_difference_2020 = factory_purchase_price_2020 - factory_internal_purchase_price_2020\n    percentage_difference_2020 = (price_difference_2020 / factory_internal_purchase_cost_2020) * 100\n    \n    # return answer\n    return round(percentage_difference_2020, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 131,
      "prompt_tokens": 1800,
      "completion_tokens_details": {
        "text_tokens": 131
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1520
      },
      "total_tokens": 1931
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2020年电厂外购煤价与电厂内购煤价的差值，并将该差值占电厂内购煤成本的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    external_coal_price_2020 = 345\n    internal_coal_price_2020 = 161\n    internal_coal_cost_2020 = 128\n\n    diff = external_coal_price_2020 - internal_coal_price_2020\n    ratio = diff / internal_coal_cost_2020\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_31_31_19_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1712",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2982-1.png",
      "./MultiFinance/images/2982-2.png",
      "./MultiFinance/images/2982-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2982-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-322",
    "output": [
      "roe_2023A = 2.1%\n    roe_2024E = -2.0%\n    roe_2025E = -0.5%\n    roe_2026E = 7.3%\n    \n    # Do math calculation to get the answer\n    average_roe = (roe_2023A + roe_2024E + roe_2025E + roe_2026E) / 4\n    \n    # return answer\n    return round(average_roe, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 146,
      "prompt_tokens": 2708,
      "completion_tokens_details": {
        "text_tokens": 146
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2446
      },
      "total_tokens": 2854
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2026年期间，净资产收益率（ROE）的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    roe_2023 = 2.1\n    roe_2024 = -2.0\n    roe_2025 = -0.5\n    roe_2026 = 7.3\n\n    average_roe = (roe_2023 + roe_2024 + roe_2025 + roe_2026) / 4\n    return round(average_roe, 1)",
    "image_id": "company_35_35_18_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-665",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 2,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.8712010109078907,
    "images": [
      "./MultiFinance/images/2412-1.png",
      "./MultiFinance/images/2412-2.png",
      "./MultiFinance/images/2412-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2412-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-323",
    "output": [
      "week_absolute_performance = -1.99\n    hsi_percentage = 3.79\n    \n    # Do math calculation to get the answer\n    difference = week_absolute_performance - hsi_percentage\n    result = difference / hsi_percentage * 100\n    \n    # return answer\n    return round(result, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 75,
      "prompt_tokens": 1163,
      "completion_tokens_details": {
        "text_tokens": 75
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 893
      },
      "total_tokens": 1238
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算1周的绝对表现与恒生指数之间的差值，并将该差值除以恒生指数的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    absolute_performance_1_week = -1.99\n    hang_seng_index_1_week = 3.79\n    diff = absolute_performance_1_week - hang_seng_index_1_week\n    ratio = diff / hang_seng_index_1_week * 100\n    return round(ratio, 1)",
    "image_id": "company_06_06_00_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1457",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2973-1.png",
      "./MultiFinance/images/2973-2.png",
      "./MultiFinance/images/2973-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2973-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-324",
    "output": [
      "year_1 = 29.6\n    year_2 = 29.2\n    year_3 = 28.5\n    year_4 = 26.6\n    year_5 = 23.2\n    year_6 = 18.9\n    year_7 = 17.8\n    year_8 = 18.6\n    \n    # Do math calculation to get the answer\n    average_margin_rate = (year_1 + year_2 + year_3 + year_4 + year_5 + year_6 + year_7 + year_8) / 8\n    \n    # return answer\n    return round(average_margin_rate, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 158,
      "prompt_tokens": 1809,
      "completion_tokens_details": {
        "text_tokens": 158
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 1549
      },
      "total_tokens": 1967
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2017年到2023年间毛利率的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    gross_margin_2017 = 29.6\n    gross_margin_2018 = 29.2\n    gross_margin_2019 = 28.5\n    gross_margin_2020 = 26.6\n    gross_margin_2021 = 23.2\n    gross_margin_2022 = 18.9\n    gross_margin_2023 = 17.8\n\n    total_gross_margin = gross_margin_2017 + gross_margin_2018 + gross_margin_2019 + gross_margin_2020 + gross_margin_2021 + gross_margin_2022 + gross_margin_2023\n    average_gross_margin = total_gross_margin / 7\n    return round(average_gross_margin, 1)",
    "image_id": "company_16_16_08_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1904",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2272-1.png",
      "./MultiFinance/images/2272-2.png",
      "./MultiFinance/images/2272-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2272-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-325",
    "output": [
      "balance_2013 = 16050\n    balance_2014 = 8678\n    \n    # Do math calculation to get the answer\n    increase_in_exercise_value = balance_2014 - balance_2013\n    \n    # return answer\n    return increase_in_exercise_value\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 1061,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 300,
        "image_tokens": 761
      },
      "total_tokens": 1148
    },
    "model": "qwen-omni-turbo",
    "question": "What is the increase in the overall exercise value of the options from December 31, 2013 to June 30, 2014, considering the balances at these dates and their respective weighted average exercise price per share (in thousands of dollars)?",
    "python_solution": "def solution():\n    #Define variables name and value\n    options_outstanding_2013 = 1162829 \n    exercise_price_per_share_2013 = 1.03\n    options_outstanding_2014 = 1132074 \n    exercise_price_per_share_2014 = 1.79\n\n    #Do math calculation to get the answer\n    overall_exercise_value_2013 = options_outstanding_2013 * exercise_price_per_share_2013\n    overall_exercise_value_2014 = options_outstanding_2014 * exercise_price_per_share_2014\n    increase_in_overall_exercise_value = overall_exercise_value_2014 - overall_exercise_value_2013\n    # Convert from cents to dollars (in thousands)\n    increase_in_overall_exercise_value = increase_in_overall_exercise_value / 1000\n    return increase_in_overall_exercise_value\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-112",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2019-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 2
      }
    },
    "difficulty": 3.951243718581427,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-326",
    "output": [
      "dec_2020_assets_liabilities_ratio = (408197 / 455129) * 100\n    sep_2021_assets_liabilities_ratio = (288630359 / 20951966) * 100\n    \n    # Calculate the difference in percentages\n    change_in_percentage_points = dec_2020_assets_liabilities_ratio - sep_2021_assets_liabilities_ratio\n    \n    # Return the result\n    return round(change_in_percentage_points, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 140,
      "prompt_tokens": 1544,
      "completion_tokens_details": {
        "text_tokens": 140
      },
      "prompt_tokens_details": {
        "text_tokens": 282,
        "image_tokens": 1262
      },
      "total_tokens": 1684
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in the percentage of assets to liabilities from December 31, 2020, to September 30, 2021 in percentage points?",
    "python_solution": "def solution():\n     #Define variables name and value\n    assets_sep_2021 = 288630359\n    liabilities_sep_2021 = 20951966\n    assets_dec_2020 = 408197\n    liabilities_dec_2020 = 455129\n\n    #Do math calculation to get the answer\n    ratio_sep_2021 = (assets_sep_2021/liabilities_sep_2021)*100\n    ratio_dec_2020 = (assets_dec_2020/liabilities_dec_2020)*100\n    ratio_change = ratio_sep_2021 - ratio_dec_2020\n    return ratio_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-230",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2094-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 4.0943445622221,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-327",
    "output": [
      "second_sharp_ratio = -9.76% + (-0.14)\n    excess_annual_volatility = 28.87%\n    \n    # Do math calculation to get the answer\n    result = (second_sharp_ratio * excess_annual_volatility) * 100\n    \n    # return answer\n    return int(result)\n\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 79,
      "prompt_tokens": 1482,
      "completion_tokens_details": {
        "text_tokens": 79
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1221
      },
      "total_tokens": 1561
    },
    "model": "qwen-omni-turbo",
    "question": "请计算第二项的夏普比与卡尔玛之和，并将该和乘以超额的年化波动，结果保留整数。",
    "python_solution": "def solution():\n    sharpe_ratio_second = -0.25\n    calmar_ratio_second = -0.14\n    excess_volatility = 22.30\n\n    sum_ratios = sharpe_ratio_second + calmar_ratio_second\n    result = int(sum_ratios * excess_volatility)\n    return result",
    "image_id": "market_09_09_39_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2855",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2850-1.png",
      "./MultiFinance/images/2850-2.png",
      "./MultiFinance/images/2850-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2850-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-328",
    "output": [
      "machine_equipment_percentage = 41.2\n    electronic_and_other_equipment_percentage = 14.2\n    \n    percentage_difference = abs(machine_equipment_percentage - electronic_and_other_equipment_percentage)\n    \n    # Convert difference to percentage of total\n    total_percentage = 100\n    result_percentage = (percentage_difference / total_percentage) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(result_percentage, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 1680,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1418
      },
      "total_tokens": 1793
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中机器设备与电子及其他设备的百分比差值，并将结果转换为占总量的百分比，保留两位小数。",
    "python_solution": "def solution():\n    machine_equipment_percentage = 43.6\n    electronic_other_percentage = 0.1\n    difference = machine_equipment_percentage - electronic_other_percentage\n    total_percentage = 100\n    result_percentage = (difference / total_percentage) * 100\n    return round(result_percentage, 2)",
    "image_id": "industry_17_17_27_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2289",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3004-1.png",
      "./MultiFinance/images/3004-2.png",
      "./MultiFinance/images/3004-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3004-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-329",
    "output": [
      "year_1_operating_cash_flow = -1655\n    year_4_operating_cash_flow = -829\n    growth_rate = ((year_4_operating_cash_flow - year_1_operating_cash_flow) / abs(year_1_operating_cash_flow)) ** (1/3) - 1\n    answer = round(growth_rate * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 98,
      "prompt_tokens": 2448,
      "completion_tokens_details": {
        "text_tokens": 98
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2186
      },
      "total_tokens": 2546
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年到2026年经营活动现金流的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    cash_flow_2023 = -596\n    cash_flow_2024 = -1655\n    cash_flow_2025 = -1514\n    cash_flow_2026 = -829\n\n    growth_rate_2024 = (cash_flow_2024 / cash_flow_2023 - 1) * 100\n    growth_rate_2025 = (cash_flow_2025 / cash_flow_2024 - 1) * 100\n    growth_rate_2026 = (cash_flow_2026 / cash_flow_2025 - 1) * 100\n\n    average_growth_rate = (growth_rate_2024 + growth_rate_2025 + growth_rate_2026) / 3\n    return round(average_growth_rate, 2)",
    "image_id": "company_33_33_15_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-120",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 7,
          "*": 3,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 16
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 10
      }
    },
    "difficulty": 5.4116460518550396,
    "images": [
      "./MultiFinance/images/2157-1.png",
      "./MultiFinance/images/2157-2.png",
      "./MultiFinance/images/2157-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2157-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-330",
    "output": [
      "operating_cash_flow_2022A = 1325\n    operating_cash_flow_2023A = 831\n    net_profit_2022A = 4631\n    \n    # Calculate the difference in operating cash flow between 2023A and 2022A\n    diff_operating_cash_flow = operating_cash_flow_2023A - operating_cash_flow_2022A\n    \n    # Calculate the percentage change in operating cash flow relative to 2022A's net profit\n    percentage_change_operating_cash_flow = (diff_operating_cash_flow / net_profit_2022A) * 100\n    \n    # Round the result to one decimal place\n    answer = round(percentage_change_operating_cash_flow, 1)\n    \n    # Return the calculated answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 203,
      "prompt_tokens": 2935,
      "completion_tokens_details": {
        "text_tokens": 203
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 2660
      },
      "total_tokens": 3138
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2022年的经营现金流差值，并将该差值占2022年净利润的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    cash_flow_2022 = 1325\n    cash_flow_2023 = 831\n    net_profit_2022 = 4631\n\n    diff = cash_flow_2023 - cash_flow_2022\n    ratio = diff / net_profit_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_32_32_25_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1131",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2964-1.png",
      "./MultiFinance/images/2964-2.png",
      "./MultiFinance/images/2964-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2964-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-331",
    "output": [
      "pre_tax_income_2018 = 1781\n    pre_tax_income_2019 = pre_tax_income_2018 * 1.10\n    \n    # Do math calculation to get the answer\n    increase_rate = ((pre_tax_income_2019 - pre_tax_income_2018) / pre_tax_income_2018) * 100\n    \n    # return answer\n    return increase_rate\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 114,
      "prompt_tokens": 1669,
      "completion_tokens_details": {
        "text_tokens": 114
      },
      "prompt_tokens_details": {
        "text_tokens": 435,
        "image_tokens": 1234
      },
      "total_tokens": 1783
    },
    "model": "qwen-omni-turbo",
    "question": "If the Pre-tax income increased by 10% in 2019, what is the revised increase / decrease rate? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    pre_tax_income_2019 = 1645\n    pre_tax_income_2018 = 1781\n    increase_rate = 0.1\n    \n    # Do math calculation to get the answer\n    revised_pre_tax_income_2019 = pre_tax_income_2019 * (1 + increase_rate)\n    answer = (revised_pre_tax_income_2019 / pre_tax_income_2018 - 1) * 100\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-41",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n * Recast to reflect segment changes. The GTS gross profit margin increased 0.3 points year to year to 34.8 percent, due to the benefits of workforce actions and the continued scale out of our public cloud. We continued to take structural actions to improve our cost competitiveness and are accelerating the use of AI and automation in delivery operations, including leveraging Red Hat’s Ansible platform. Pre-tax income of $1,645 million decreased 7.6 percent, driven primarily by the decline in revenue and gross profit, and a higher level of workforce rebalancing charges in the current year. Pre-tax margin of 5.8 percent was essentially flat year to year, with the 2019 pre-tax margin reflecting benefits from structural and workforce actions.",
    "images": [
      "./MultiFinance/images/1780-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 2,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.9120230054281464,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-332",
    "output": [
      "import numpy as np\n    \n    data = [10, -10, 0]\n    \n    # Calculate standard deviation\n    std_deviation = np.std(data)\n    \n    # Return the result rounded to two decimal places\n    return round(std_deviation, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 72,
      "prompt_tokens": 966,
      "completion_tokens_details": {
        "text_tokens": 72
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 710
      },
      "total_tokens": 1038
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算行业指数相对同期证券市场代表性指数涨幅的标准差；请保留两位小数。",
    "python_solution": "import math\ndef solution():\n    values = [10.5, -5.3, -12.8]\n    mean = sum(values) / len(values)\n    variance = sum((x - mean) ** 2 for x in values) / len(values)\n    std_dev = math.sqrt(variance)\n    return round(std_dev, 2)",
    "image_id": "industry_14_14_33_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-1983",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 14
      }
    },
    "difficulty": 4.356708826689592,
    "images": [
      "./MultiFinance/images/2259-1.png",
      "./MultiFinance/images/2259-2.png",
      "./MultiFinance/images/2259-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2259-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-333",
    "output": [
      "cash_flow_2024 = -1211\n    cash_flow_2023 = 829\n    difference = cash_flow_2024 - cash_flow_2023\n    percentage_change = (difference / abs(cash_flow_2023)) * 100\n    \n    # return answer\n    return round(percentage_change, 2)\n\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 90,
      "prompt_tokens": 2821,
      "completion_tokens_details": {
        "text_tokens": 90
      },
      "prompt_tokens_details": {
        "text_tokens": 282,
        "image_tokens": 2539
      },
      "total_tokens": 2911
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年与2023年的经营活动现金流的差值，并将该差值除以2023年的经营活动现金流，然后将结果乘以100得到百分比；请保留两位小数。",
    "python_solution": "def solution():\n    operating_cash_flow_2023 = -1211\n    operating_cash_flow_2024 = 829\n    diff = operating_cash_flow_2024 - operating_cash_flow_2023\n    ratio = diff / abs(operating_cash_flow_2023)\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "company_05_05_37_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1554",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2740-1.png",
      "./MultiFinance/images/2740-2.png",
      "./MultiFinance/images/2740-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2740-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-334",
    "output": [
      "jianyao_4 = 17.06 + 28.63\n    jianyao_4 = jianyao_4 / 2\n    jianyao_5 = 33.28 + 39.53\n    jianyao_5 = jianyao_5 / 2\n    jianyao_6 = 38.37 + 38.32\n    jianyao_6 = jianyao_6 / 2\n    \n    # Do math calculation to get the answer\n    difference = jianyao_6 - jianyao_4\n    answer = round(difference, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 169,
      "prompt_tokens": 1690,
      "completion_tokens_details": {
        "text_tokens": 169
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 1414
      },
      "total_tokens": 1859
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算4月和5月工业炸药产量的平均值，并将该平均值与6月的产量进行比较，求出它们之间的差值；请保留两位小数。",
    "python_solution": "def solution():\n    april_production = 40.82\n    may_production = 39.53\n    june_production = 39.19\n    average_april_may = (april_production + may_production) / 2\n    difference = average_april_may - june_production\n    return round(difference, 2)",
    "image_id": "company_15_15_16_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1915",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2988-1.png",
      "./MultiFinance/images/2988-2.png",
      "./MultiFinance/images/2988-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2988-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-335",
    "output": [
      "sales_expenses_2020_to_2023 = [7.54, 9.45, 10.31, 10.98]\n    \n    # Calculate average sales expenses from 2020 to 2023\n    average_sales_expenses = sum(sales_expenses_2020_to_2023) / len(sales_expenses_2020_to_2023)\n    \n    # Return the result rounded to one decimal place\n    return round(average_sales_expenses, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 2176,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 1916
      },
      "total_tokens": 2317
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2020年到2023年的平均销售费用，并将结果保留一位小数。",
    "python_solution": "def solution():\n    sales_expense_2020 = 7.54\n    sales_expense_2021 = 9.45\n    sales_expense_2022 = 10.31\n    sales_expense_2023 = 10.98\n    average_sales_expense = (sales_expense_2020 + sales_expense_2021 + sales_expense_2022 + sales_expense_2023) / 4\n    return round(average_sales_expense, 1)",
    "image_id": "company_34_34_24_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-463",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2704-1.png",
      "./MultiFinance/images/2704-2.png",
      "./MultiFinance/images/2704-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2704-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-336",
    "output": [
      "q423_1 = 98.26% - 97.48%\n    q423_2 = 99.16% - 99.79%\n    q423_3 = 98.33% - 100%\n    q423_4 = 98.40% - 99.97%\n    \n    q124_1 = 98.30% - 98.26%\n    q124_2 = 99.04% - 99.16%\n    q124_3 = 98.13% - 98.33%\n    q124_4 = 98.98% - 99.43%\n    \n    q224_1 = 98.03% - 98.30%\n    q224_2 = 99.30% - 99.04%\n    q224_3 = 96.69% - 98.13%\n    q224_4 = 95.56% - 98.40%\n    \n    q324_1 = 98.73% - 98.03%\n    q324_2 = 99.00% - 99.30%\n    q324_3 = 96.43% - 96.69%\n    q324_4 = 95.56% - 98.98%\n    \n    q424_1 = 98.71% - 98.73%\n    q424_2 = 99.00% - 99.00%\n    q424_3 = 96.43% - 96.43%\n    q424_4 = 99.17% - 95.56%\n    \n    average_change = (q423_1 + q423_2 + q423_3 + q423_4 +\n                      q124_1 + q124_2 + q124_3 + q124_4 +\n                      q224_1 + q224_2 + q224_3 + q224_4 +\n                      q324_1 + q324_2 + q324_3 + q324_4 +\n                      q424_1 + q424_2 + q424_3 + q424_4) / 20\n    \n    # return answer\n    return round(average_change * 100, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 639,
      "prompt_tokens": 2741,
      "completion_tokens_details": {
        "text_tokens": 639
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2478
      },
      "total_tokens": 3380
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算某项目在不同时间点的出租率变化，并求这些变化的平均值；结果请保留两位小数。",
    "python_solution": "def solution():\n    occupancy_rate_t1 = 97.48\n    occupancy_rate_t2 = 99.43\n    occupancy_rate_t3 = 99.06\n    occupancy_rate_t4 = 99.40\n\n    changes = [occupancy_rate_t2 - occupancy_rate_t1, occupancy_rate_t3 - occupancy_rate_t2, occupancy_rate_t4 - occupancy_rate_t3]\n    average_change = sum(changes) / len(changes)\n    return round(average_change, 2)",
    "image_id": "industry_18_18_26_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2441",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2555-1.png",
      "./MultiFinance/images/2555-2.png",
      "./MultiFinance/images/2555-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2555-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-337",
    "output": [
      "operating_activities_2020 = 9822 * 1.20\n    investing_activities_2020 = -7535\n    financing_activities_2020 = -1752 * 0.85\n    net_increase_cash_2020 = operating_activities_2020 + investing_activities_2020 + financing_activities_2020\n    \n    net_change_in_cash_and_restricted_cash = net_increase_cash_2020 - 535\n    \n    # return answer\n    return net_change_in_cash_and_restricted_cash\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 145,
      "prompt_tokens": 1006,
      "completion_tokens_details": {
        "text_tokens": 145
      },
      "prompt_tokens_details": {
        "text_tokens": 314,
        "image_tokens": 692
      },
      "total_tokens": 1151
    },
    "model": "qwen-omni-turbo",
    "question": "What will be the net change in cash and restricted cash at the end of the year compared to the end of June 2020 if the company can increase cash flow from operations by 20% and cut down the cash used in financing activities by 15% for the second half of 2020 (in thousands)?",
    "python_solution": "def solution():\n    #Define variables name and value\n    cash_from_operations_H1_2020 = 9822\n    cash_used_in_investing_H1_2020 = 7535\n    cash_used_in_financing_H1_2020 = 1752 \n\n    #Do math calculation to get the answer\n    # Apply the 20% increase in cash from operations\n    cash_from_operations_H2_2020 = cash_from_operations_H1_2020 * 1.20\n    # Apply the 15% decrease in cash used in financing activities\n    cash_used_in_financing_H2_2020 = cash_used_in_financing_H1_2020 * 0.85\n\n    # Cash used in investing activities remains the same\n    cash_used_in_investing_H2_2020 = cash_used_in_investing_H1_2020 \n\n    # Calculate net change in cash and restricted cash for H2 2020\n    net_change_H2_2020 = cash_from_operations_H2_2020 - cash_used_in_investing_H2_2020 - cash_used_in_financing_H2_2020\n    return net_change_H2_2020\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-261",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2116-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 2,
          "/": 0,
          "%": 2,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 14,
        "parentheses": 0
      }
    },
    "difficulty": 4.430816798843313,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-338",
    "output": [
      "hjt_2023 = 0.9\n    p_type_2023 = 58.5\n    topcon_2024 = 85.9\n    \n    # Calculate total percentage of HJT and P type in 2023\n    total_hjt_p_2023 = hjt_2023 + (p_type_2023 / 100)\n    \n    # Calculate difference between total HJT/P type and TOPCon in 2024\n    diff = topcon_2024 - total_hjt_p_2023\n    \n    # Calculate percentage of difference relative to TOPCon in 2024\n    percentage_diff = (diff / topcon_2024) * 100\n    \n    # Round the result to one decimal place\n    rounded_percentage_diff = round(percentage_diff, 1)\n    \n    # Return the calculated percentage difference\n    return rounded_percentage_diff\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 227,
      "prompt_tokens": 2788,
      "completion_tokens_details": {
        "text_tokens": 227
      },
      "prompt_tokens_details": {
        "text_tokens": 289,
        "image_tokens": 2499
      },
      "total_tokens": 3015
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年HJT和P型技术路线占比的总和，并将其与2024年TOPCon技术路线占比进行比较，计算差值占2024年TOPCon技术路线占比的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    hjt_2023 = 0.9\n    p_type_2023 = 58.5\n    topcon_2024 = 85.9\n    sum_2023 = hjt_2023 + p_type_2023\n    diff = topcon_2024 - sum_2023\n    percentage = diff / topcon_2024 * 100\n    return round(percentage, 1)",
    "image_id": "company_21_21_16_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-809",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2716-1.png",
      "./MultiFinance/images/2716-2.png",
      "./MultiFinance/images/2716-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2716-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-339",
    "output": [
      "total_unpaid_principal_balance = 435435.8\n    ginnie_mae_unpaid_principal_balance = 109946.4\n    total_servicing_revenue_net_2021 = 984201\n    \n    # Calculate the ratio\n    ratio = (total_unpaid_principal_balance + ginnie_mae_unpaid_principal_balance) / total_servicing_revenue_net_2021 * 100\n    \n    # Return the answer\n    return ratio\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 125,
      "prompt_tokens": 1618,
      "completion_tokens_details": {
        "text_tokens": 125
      },
      "prompt_tokens_details": {
        "text_tokens": 303,
        "image_tokens": 1315
      },
      "total_tokens": 1743
    },
    "model": "qwen-omni-turbo",
    "question": "What is the ratio (in percentage) between the total unpaid principal balance of MSRs and MSR Financing Receivables with the Ginnie Mae at the end of 2021, and the total servicing revenue, net for the year 2021?",
    "python_solution": "def solution():\n    #Define variables name and value\n\n    unpaid_principal_balance_Ginnie_Mae_2021 = 109946.4 # in millions\n\n    servicing_revenue_net_2021 = 984201 # in thousands\n\n    #Convert millions to thousands for the calculation\n    unpaid_principal_balance_Ginnie_Mae_2021_in_thousands = unpaid_principal_balance_Ginnie_Mae_2021 * 1000\n\n    #Do math calculation to get the answer\n    ratio = (servicing_revenue_net_2021/unpaid_principal_balance_Ginnie_Mae_2021_in_thousands) * 100\n    return ratio\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-266",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2120-1.png",
      "./MultiFinance/images/2120-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 0,
          "*": 2,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-340",
    "output": [
      "contribution_profit_2018 = 77.3\n    contribution_profit_2019 = 95.5\n    contribution_profit_2020 = 125.0\n    contribution_profit_2021 = 118.2\n    contribution_profit_2022 = 96.1\n    contribution_profit_2023 = 131.9\n    contribution_profit_2024_q1_q3 = 85.8\n    \n    total_contribution_profit = (contribution_profit_2018 + contribution_profit_2019 +\n                                 contribution_profit_2020 + contribution_profit_2021 +\n                                 contribution_profit_2022 + contribution_profit_2023 +\n                                 contribution_profit_2024_q1_q3)\n    \n    # return answer\n    return int(total_contribution_profit)\n\n```"
    ],
    "usage": {
      "completion_tokens": 199,
      "prompt_tokens": 2058,
      "completion_tokens_details": {
        "text_tokens": 199
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1792
      },
      "total_tokens": 2257
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年至2024年Q1-Q3期间贡献利润的总和；请提供结果为整数。",
    "python_solution": "def solution():\n    profit_2018 = 77.3\n    profit_2019 = 95.5\n    profit_2020 = 125.0\n    profit_2021 = 118.2\n    profit_2022 = 96.1\n    profit_2023 = 131.9\n    profit_2024_Q1_Q3 = 85.8\n\n    total_profit = int(profit_2018 + profit_2019 + profit_2020 + profit_2021 + profit_2022 + profit_2023 + profit_2024_Q1_Q3)\n    return total_profit",
    "image_id": "company_06_06_20_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1475",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2331-1.png",
      "./MultiFinance/images/2331-2.png",
      "./MultiFinance/images/2331-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2331-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-341",
    "output": [
      "interest_rate_derivatives_2015 = 26363\n    total_net_derivatives_2015 = 59677\n    \n    # Do math calculation to get the answer\n    percentage_interest_rate_derivatives = (interest_rate_derivatives_2015 / total_net_derivatives_2015) * 100\n    \n    # return answer\n    return round(percentage_interest_rate_derivatives, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 112,
      "prompt_tokens": 2522,
      "completion_tokens_details": {
        "text_tokens": 112
      },
      "prompt_tokens_details": {
        "text_tokens": 1290,
        "image_tokens": 1232
      },
      "total_tokens": 2634
    },
    "model": "qwen-omni-turbo",
    "question": "interest rate derivatives made up how much of the net total derivatives for 2015? Answer to three decimal places.",
    "answer": "44.176",
    "context": "jpmorgan chase & co./2015 annual report 127 receivables from customers receivables from customers primarily represent margin loans to prime and retail brokerage clients that are collateralized through a pledge of assets maintained in clients 2019 brokerage accounts which are subject to daily minimum collateral requirements . in the event that the collateral value decreases , a maintenance margin call is made to the client to provide additional collateral into the account . if additional collateral is not provided by the client , the client 2019s position may be liquidated by the firm to meet the minimum collateral requirements . lending-related commitments the firm uses lending-related financial instruments , such as commitments ( including revolving credit facilities ) and guarantees , to meet the financing needs of its customers . the contractual amounts of these financial instruments represent the maximum possible credit risk should the counterparties draw down on these commitments or the firm fulfills its obligations under these guarantees , and the counterparties subsequently fail to perform according to the terms of these contracts . in the firm 2019s view , the total contractual amount of these wholesale lending-related commitments is not representative of the firm 2019s likely actual future credit exposure or funding requirements . in determining the amount of credit risk exposure the firm has to wholesale lending-related commitments , which is used as the basis for allocating credit risk capital to these commitments , the firm has established a 201cloan-equivalent 201d amount for each commitment ; this amount represents the portion of the unused commitment or other contingent exposure that is expected , based on average portfolio historical experience , to become drawn upon in an event of a default by an obligor . the loan-equivalent amount of the firm 2019s lending- related commitments was $ 212.4 billion and $ 216.5 billion as of december 31 , 2015 and 2014 , respectively . clearing services the firm provides clearing services for clients entering into securities and derivative transactions . through the provision of these services the firm is exposed to the risk of non-performance by its clients and may be required to share in losses incurred by central counterparties ( 201cccps 201d ) . where possible , the firm seeks to mitigate its credit risk to its clients through the collection of adequate margin at inception and throughout the life of the transactions and can also cease provision of clearing services if clients do not adhere to their obligations under the clearing agreement . for further discussion of clearing services , see note 29 . derivative contracts in the normal course of business , the firm uses derivative instruments predominantly for market-making activities . derivatives enable customers to manage exposures to fluctuations in interest rates , currencies and other markets . the firm also uses derivative instruments to manage its own credit and other market risk exposure . the nature of the counterparty and the settlement mechanism of the derivative affect the credit risk to which the firm is exposed . for otc derivatives the firm is exposed to the credit risk of the derivative counterparty . for exchange- traded derivatives ( 201cetd 201d ) , such as futures and options and 201ccleared 201d over-the-counter ( 201cotc-cleared 201d ) derivatives , the firm is generally exposed to the credit risk of the relevant ccp . where possible , the firm seeks to mitigate its credit risk exposures arising from derivative transactions through the use of legally enforceable master netting arrangements and collateral agreements . for further discussion of derivative contracts , counterparties and settlement types , see note 6 . the following table summarizes the net derivative receivables for the periods presented . derivative receivables .\n\n<image 1>\n\nderivative receivables reported on the consolidated balance sheets were $ 59.7 billion and $ 79.0 billion at december 31 , 2015 and 2014 , respectively . these amounts represent the fair value of the derivative contracts , after giving effect to legally enforceable master netting agreements and cash collateral held by the firm . however , in management 2019s view , the appropriate measure of current credit risk should also take into consideration additional liquid securities ( primarily u.s . government and agency securities and other group of seven nations ( 201cg7 201d ) government bonds ) and other cash collateral held by the firm aggregating $ 16.6 billion and $ 19.6 billion at december 31 , 2015 and 2014 , respectively , that may be used as security when the fair value of the client 2019s exposure is in the firm 2019s favor . the decrease in derivative receivables was predominantly driven by declines in interest rate derivatives , commodity derivatives , foreign exchange derivatives and equity derivatives due to market movements , maturities and settlements related to client- driven market-making activities in cib. .\n",
    "program": "interest_rate_derivatives = 26363\ncredit_derivatives = 1423\nforeign_exchange_derivatives = 17177\nequity_derivatives = 5529\ncommodity_derivatives = 9185\ntotal_derivatives = interest_rate_derivatives + credit_derivatives + foreign_exchange_derivatives + equity_derivatives + commodity_derivatives\ncash_collateral = 43097\nliquid_securities_and_other_cash_collateral = 16580\ntotal_collateral = cash_collateral + liquid_securities_and_other_cash_collateral\ntotal_derivative_receivables = 59677\nanswer = interest_rate_derivatives / total_derivative_receivables * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 1,
        "context_numbers": 75,
        "total_numbers": 76
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 0
      }
    },
    "difficulty": 4.343805421853684,
    "source_id": "test-712",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1364-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-342",
    "output": [
      "price_A = [2.8, 1.4]\n    price_B = [2.4, 1.2]\n    price_C = [2.3, 1.2]\n    \n    # Calculate average price for each store\n    avg_price_A = sum(price_A) / len(price_A)\n    avg_price_B = sum(price_B) / len(price_B)\n    avg_price_C = sum(price_C) / len(price_C)\n    \n    # Calculate total price and percentage decrease\n    total_price = avg_price_A + avg_price_B + avg_price_C\n    percentage_decrease = (total_price - 3.5) / 3.5 * 100\n    \n    # Return result as a string with two decimal places\n    return f\"{percentage_decrease:.2f}\"\n```"
    ],
    "usage": {
      "completion_tokens": 170,
      "prompt_tokens": 2456,
      "completion_tokens_details": {
        "text_tokens": 170
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 2189
      },
      "total_tokens": 2626
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中可乐在量贩式零食店A、B、C的价格，计算这三家店的平均降价百分比，并将结果保留两位小数。",
    "python_solution": "def solution():\n    discount_A = -20\n    discount_B = -31\n    discount_C = -34\n    average_discount = (discount_A + discount_B + discount_C) / 3\n    return round(average_discount, 2)",
    "image_id": "industry_16_16_21_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2261",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.737669618283368,
    "images": [
      "./MultiFinance/images/2525-1.png",
      "./MultiFinance/images/2525-2.png",
      "./MultiFinance/images/2525-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2525-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-343",
    "output": [
      "shares_dec_31_2015 = 13820434\n    shares_sep_30_2016 = 13881901\n    total_equity_dec_31_2015 = 111831\n    total_equity_sep_30_2016 = 108470\n    \n    # Calculate the change in net asset value per share\n    change_in_net_asset_value_per_share = (total_equity_sep_30_2016 - total_equity_dec_31_2015) / (shares_sep_30_2016 - shares_dec_31_2015)\n    \n    # Return the answer\n    return change_in_net_asset_value_per_share\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 191,
      "prompt_tokens": 1551,
      "completion_tokens_details": {
        "text_tokens": 191
      },
      "prompt_tokens_details": {
        "text_tokens": 317,
        "image_tokens": 1234
      },
      "total_tokens": 1742
    },
    "model": "qwen-omni-turbo",
    "question": "What was the change in the net asset value per share from December 31, 2015 to September 30, 2016, if the share count increased from 13,820,434 to 13,881,901 during that period, expressed in $ per share?",
    "python_solution": "def solution():\n    #Define variables name and value\n    total_assets_2016 = 488835 \n    total_liabilities_2016 = 380365 \n    total_assets_2015 = 465709 \n    total_liabilities_2015 = 353878 \n    outstanding_shares_2016 = 13881901\n    outstanding_shares_2015 = 13820434\n\n    #Calculate net asset value at two points in time\n    net_assets_2016 = total_assets_2016 - total_liabilities_2016\n    net_assets_2015 = total_assets_2015 - total_liabilities_2015\n\n    # calculate net asset value per share at two points in time\n    nav_per_share_2016 = net_assets_2016 / outstanding_shares_2016\n    nav_per_share_2015 = net_assets_2015 / outstanding_shares_2015\n\n    # Calculate the change in net asset value per share\n    change_in_nav_per_share = nav_per_share_2016 - nav_per_share_2015\n    return change_in_nav_per_share\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-274",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2127-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 16,
        "parentheses": 0
      }
    },
    "difficulty": 4.382026634673881,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-344",
    "output": [
      "present_value = 625\n    future_value = 1284\n    interest_rate = 7\n    \n    # Do math calculation to get the answer\n    years = (np.log(future_value/present_value)) / ((interest_rate/100) * np.log(1 + (interest_rate/100)))\n    \n    # return answer\n    return years\n```"
    ],
    "usage": {
      "completion_tokens": 84,
      "prompt_tokens": 338,
      "completion_tokens_details": {
        "text_tokens": 84
      },
      "prompt_tokens_details": {
        "text_tokens": 246,
        "image_tokens": 92
      },
      "total_tokens": 422
    },
    "model": "qwen-omni-turbo",
    "question": "Solve for the unknown number of years in Row 1:<image 1>",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Financial Accounting",
    "source_id": "dev_Accounting_5",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/6-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-345",
    "output": [
      "sales_2014 = 2125\n    end_of_year_inventories_lifo_2014 = 312\n    lifo_reserve_2014 = 82\n    net_profit_margin_2014 = 4.9\n    \n    # Calculate the difference in inventory cost between LIFO and FIFO\n    inventory_cost_difference = end_of_year_inventories_lifo_2014 - lifo_reserve_2014\n    \n    # Calculate the additional profit margin due to the switch from LIFO to FIFO\n    additional_profit_margin = inventory_cost_difference * net_profit_margin_2014\n    \n    # Calculate the additional net income after accounting for taxes\n    additional_net_income = additional_profit_margin * (1 - 0.3)\n    \n    # Return the additional net income rounded to one decimal place\n    return round(additional_net_income, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 208,
      "prompt_tokens": 1552,
      "completion_tokens_details": {
        "text_tokens": 208
      },
      "prompt_tokens_details": {
        "text_tokens": 310,
        "image_tokens": 1242
      },
      "total_tokens": 1760
    },
    "model": "qwen-omni-turbo",
    "question": "If a corporation switches from last-in, first-out (LIFO) to first-in, first-out (FIFO), how much higher would the net income (in $ thousands) for 2014 be, considering that the corporate tax rate for the current and all previous years has been 30% according to the data collected by a data analyst? Answer to a single decimal place.",
    "python_solution": "def solution():\n    net_profit_margin = 0.049\n    sales = 2125\n    tax_rate = 0.3\n    lifo_reserve_2014 = 82\n    lifo_reserve_2013 = 64\n\n    net_income_lifo = net_profit_margin * sales\n    change_in_lifo_reserve = lifo_reserve_2014 - lifo_reserve_2013\n    net_income_fifo = net_income_lifo + change_in_lifo_reserve * (1 - tax_rate)\n\n    increase_in_net_income = net_income_fifo - net_income_lifo\n\n    return increase_in_net_income",
    "topic": "Accounting",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 2,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 4.189654742026425,
    "source_id": "validation-112",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/335-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-346",
    "output": [
      "op_home_pe_2023 = 13\n    op_home_pe_2024 = 14\n    op_home_price_2025 = 63.02\n    \n    # Calculate average PE ratio for 2023 and 2024\n    pe_ratio_avg = (op_home_pe_2023 + op_home_pe_2024) / 2\n    \n    # Calculate the result by dividing the price in 2025 by the average PE ratio\n    result = op_home_price_2025 / pe_ratio_avg\n    \n    # Return the calculated result\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 158,
      "prompt_tokens": 3040,
      "completion_tokens_details": {
        "text_tokens": 158
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 2764
      },
      "total_tokens": 3198
    },
    "model": "qwen-omni-turbo",
    "question": "请计算欧派家居在2023年和2024年的市盈率的平均值，然后用2025年的最新价格除以该平均值；请保留两位小数。",
    "python_solution": "def solution():\n    pe_ratio_2023 = 13\n    pe_ratio_2024 = 14\n    price_2025 = 63.02\n\n    avg_pe_ratio = (pe_ratio_2023 + pe_ratio_2024) / 2\n    result = price_2025 / avg_pe_ratio\n    return round(result, 2)",
    "image_id": "company_06_06_38_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1471",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2974-1.png",
      "./MultiFinance/images/2974-2.png",
      "./MultiFinance/images/2974-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2974-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-347",
    "output": [
      "r_f = 6\n    r_m = 14\n    beta_B = 2\n    sigma_e_B = 19.1\n    \n    # Do math calculation to get the answer\n    alpha_B = 2 + .8 * (r_m - r_f) - (beta_B * (1 + .2 * (r_m - r_f)))\n    IR_B = alpha_B / sigma_e_B\n    \n    # return answer\n    return IR_B\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 408,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 301,
        "image_tokens": 107
      },
      "total_tokens": 521
    },
    "model": "qwen-omni-turbo",
    "question": "Consider the two (excess return) index-model regression results for stocks A and B. The risk-free rate over the period was 6%, and the market's average return was 14%. Performance is measured using an index model regression on excess returns. <image 1> Calculate the information ratio of Stock B. Answer to five decimal places.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Investment",
    "source_id": "validation_Accounting_24",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/34-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-348",
    "output": [
      "year1 = 13256\n    year2 = 14923\n    year3 = 15102\n    year4 = 19535\n    year5 = 26492\n    \n    # Do math calculation to get the answer\n    sum = (year1 + year2 + year3 + year4 + year5)\n    average = sum / 5\n    growth_rate = ((average - year1) / year1) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 133,
      "prompt_tokens": 2221,
      "completion_tokens_details": {
        "text_tokens": 133
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 1965
      },
      "total_tokens": 2354
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2027年经营活动现金流的年均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    cash_flow_2023 = 13256\n    cash_flow_2027 = 26492\n    years = 4\n    growth_rate = ((cash_flow_2027 / cash_flow_2023) ** (1/years) - 1) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_19_19_01_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1038",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2465-1.png",
      "./MultiFinance/images/2465-2.png",
      "./MultiFinance/images/2465-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2465-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-349",
    "output": [
      "huawei_market_share = 4 + 36\n    realme_market_share = 4\n    oppo_market_share = 8\n    total_market_share = huawei_market_share + realme_market_share\n    growth_percentage = (total_market_share - oppo_market_share) / oppo_market_share * 100\n    \n    # return answer\n    return round(growth_percentage, 2)\n\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 90,
      "prompt_tokens": 1817,
      "completion_tokens_details": {
        "text_tokens": 90
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1540
      },
      "total_tokens": 1907
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中的数据，计算华为（Huawei）和realme两家公司的市场份额之和，并将该和与OPPO的市场份额进行比较，求出它们之间的百分比增长；请保留两位小数。",
    "python_solution": "def solution():\n    huawei = 4\n    realme = 4\n    oppo = 8\n\n    # Calculate the sum of Huawei and realme's market shares\n    combined_share = huawei + realme\n    # Calculate the percentage growth compared to OPPO\n    growth_percentage = ((combined_share - oppo) / oppo) * 100\n    return round(growth_percentage, 2)",
    "image_id": "company_18_18_12_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-791",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 3.7841896339182615,
    "images": [
      "./MultiFinance/images/2512-1.png",
      "./MultiFinance/images/2512-2.png",
      "./MultiFinance/images/2512-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2512-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-350",
    "output": [
      "year_1 = 81.93\n    year_4 = 140.92\n    growth_rate = ((year_4 - year_1) / year_1)**(1/3) - 1\n    answer = round(growth_rate * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 80,
      "prompt_tokens": 2998,
      "completion_tokens_details": {
        "text_tokens": 80
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 2740
      },
      "total_tokens": 3078
    },
    "model": "qwen-omni-turbo",
    "question": "请计算东方财富2023年到2026年的归母净利润的年均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2023 = 81.93\n    net_profit_2026 = 140.92\n    years = 3\n    growth_rate = ((net_profit_2026 / net_profit_2023) ** (1/years) - 1) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_29_29_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1270",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2473-1.png",
      "./MultiFinance/images/2473-2.png",
      "./MultiFinance/images/2473-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2473-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-351",
    "output": [
      "T1_profit = 1340\n    T2_profit = 3615\n    T3_profit = 5949\n    T4_profit = 6018\n    T5_profit = 5974\n    \n    total_profit = round(T1_profit + T2_profit + T3_profit + T4_profit + T5_profit)\n    \n    # return answer\n    return total_profit\n\n# Call function and print result\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 102,
      "prompt_tokens": 2252,
      "completion_tokens_details": {
        "text_tokens": 102
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 1995
      },
      "total_tokens": 2354
    },
    "model": "qwen-omni-turbo",
    "question": "请计算T+1年度至T+5年度的净利润总和，并将结果四舍五入到整数。",
    "python_solution": "def solution():\n    net_profit_t1 = 1340\n    net_profit_t2 = 3615\n    net_profit_t3 = 5949\n    net_profit_t4 = 6018\n    net_profit_t5 = 5974\n\n    total_net_profit = net_profit_t1 + net_profit_t2 + net_profit_t3 + net_profit_t4 + net_profit_t5\n    return round(total_net_profit)",
    "image_id": "industry_07_07_29_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2335",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2764-1.png",
      "./MultiFinance/images/2764-2.png",
      "./MultiFinance/images/2764-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2764-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-352",
    "output": [
      "domestic_operating_cost_boe_1q25 = 9.35\n    domestic_transportation_cost_boe_1q25 = 3.70\n    domestic_operating_cost_boe_fy2025 = 9.00\n    domestic_transportation_cost_boe_fy2025 = 3.45\n    \n    # Do math calculation to get the answer\n    total_cost_1q25 = (domestic_operating_cost_boe_1q25 + domestic_transportation_cost_boe_1q25)\n    total_cost_fy2025 = (domestic_operating_cost_boe_fy2025 + domestic_transportation_cost_boe_fy2025)\n    \n    sum_cost = total_cost_1q25 + total_cost_fy2025\n    \n    # return answer\n    return round(sum_cost, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 211,
      "prompt_tokens": 1541,
      "completion_tokens_details": {
        "text_tokens": 211
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1276
      },
      "total_tokens": 1752
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2025年第一季度和全年预估的国内运营成本与运输成本之和，并将结果保留两位小数。",
    "python_solution": "def solution():\n    q1_operating_cost = -9.35\n    q1_transportation_cost = -3.70\n    fy_operating_cost = -9.00\n    fy_transportation_cost = -3.45\n\n    total_q1 = q1_operating_cost + q1_transportation_cost\n    total_fy = fy_operating_cost + fy_transportation_cost\n    return round(total_q1 + total_fy, 2)",
    "image_id": "industry_12_12_06_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-1992",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 4,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 4.025351690735149,
    "images": [
      "./MultiFinance/images/2341-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2341-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-353",
    "output": [
      "net_asset_per_share = 13.98\n    total_liability_ratio = 8.64\n    \n    # Calculate total share capital\n    total_share_capital = (1 - total_liability_ratio) * net_asset_per_share\n    \n    # Calculate total equity value\n    total_equity_value = total_share_capital * 92.26\n    \n    # Return the result rounded to two decimal places\n    return round(total_equity_value, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 1374,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 1119
      },
      "total_tokens": 1487
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中的每股净资产和总资产负债率，计算该公司的总股本价值；请保留两位小数。",
    "python_solution": "def solution():\n    net_asset_per_share = 13.98\n    total_shares = 92.26\n    debt_ratio = 8.64 / 100\n\n    total_value = net_asset_per_share * total_shares * (1 - debt_ratio)\n    return round(total_value, 2)",
    "image_id": "company_03_03_00_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-17",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2814-1.png",
      "./MultiFinance/images/2814-2.png",
      "./MultiFinance/images/2814-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2814-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-354",
    "output": [
      "infrastructure_1998_04 = 7.7\n    infrastructure_1998_11 = 8.1\n    infrastructure_1999_11 = 6.8\n    \n    total_investment_1998 = infrastructure_1998_04 + infrastructure_1998_11\n    growth_percentage = ((total_investment_1998 - infrastructure_1999_11) / infrastructure_1999_11) * 100\n    \n    # return answer\n    return round(growth_percentage, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 136,
      "prompt_tokens": 1560,
      "completion_tokens_details": {
        "text_tokens": 136
      },
      "prompt_tokens_details": {
        "text_tokens": 286,
        "image_tokens": 1274
      },
      "total_tokens": 1696
    },
    "model": "qwen-omni-turbo",
    "question": "请计算1998年4月和1998年11月基础设施（公共工程）的总投入，并将其与1999年11月的基础设施投入进行比较，求出增长百分比；结果保留一位小数。",
    "python_solution": "def solution():\n    infrastructure_1998_04 = 7.7\n    infrastructure_1998_11 = 8.1\n    infrastructure_1999_11 = 6.8\n\n    total_infrastructure_1998 = infrastructure_1998_04 + infrastructure_1998_11\n    growth_percentage = ((infrastructure_1999_11 - total_infrastructure_1998) / total_infrastructure_1998) * 100\n    return round(growth_percentage, 1)",
    "image_id": "strategy_08_08_14_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3011",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2665-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2665-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-355",
    "output": [
      "year_1 = 8185\n    year_2 = 9092\n    year_3 = 1120\n    year_4 = 12516\n    \n    # Do math calculation to get the answer\n    growth_rate_year_1 = (year_2 - year_1) / year_1 * 100\n    growth_rate_year_2 = (year_3 - year_2) / year_2 * 100\n    \n    # return answer\n    return round(growth_rate_year_1, 2), round(growth_rate_year_2, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 138,
      "prompt_tokens": 1459,
      "completion_tokens_details": {
        "text_tokens": 138
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1200
      },
      "total_tokens": 1597
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年和2024年的营业收入增长率，并将结果保留两位小数。",
    "python_solution": "def calculate_growth_rate():\n    revenue_2023 = 8185\n    revenue_2024 = 9092\n    growth_rate_2024 = (revenue_2024 - revenue_2023) / revenue_2023 * 100\n    return round(growth_rate_2024, 2)",
    "image_id": "company_36_36_00_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-316",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2915-1.png",
      "./MultiFinance/images/2915-2.png",
      "./MultiFinance/images/2915-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2915-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-356",
    "output": [
      "year_2016 = 48\n    year_2017 = 42\n    year_2018 = 39\n    year_2019 = 37\n    year_2020 = 36\n    year_2021 = 42\n    year_2022 = 49\n    \n    # Do math calculation to get the answer\n    average_margin_rate = (year_2016 + year_2017 + year_2018 + year_2019 + year_2020 + year_2021 + year_2022) / 7\n    \n    # return answer\n    return round(average_margin_rate, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 171,
      "prompt_tokens": 1650,
      "completion_tokens_details": {
        "text_tokens": 171
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1391
      },
      "total_tokens": 1821
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2016年至2022年毛利率的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    gross_margin_2016 = 42\n    gross_margin_2017 = 37\n    gross_margin_2018 = 32\n    gross_margin_2019 = 27\n    gross_margin_2020 = 31\n    gross_margin_2021 = 35\n    gross_margin_2022 = 45\n\n    average_gross_margin = (gross_margin_2016 + gross_margin_2017 + gross_margin_2018 + gross_margin_2019 + gross_margin_2020 + gross_margin_2021 + gross_margin_2022) / 7\n    return round(average_gross_margin, 1)",
    "image_id": "company_32_32_05_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1102",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 4
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2265-1.png",
      "./MultiFinance/images/2265-2.png",
      "./MultiFinance/images/2265-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2265-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-357",
    "output": [
      "price_list = [51.00, 22.00, 20.00, 46.00, 24.00, 30.00, 18.00, 30.00, 10.00, 18.00, 0.67, 1.09]\n    gain_list = [47.34, -2.14, -92.25, 5.93, 95.21, -21.77, -58.56, -7.40, 5.00, -4.33, 27.81, 3.02]\n    \n    result = []\n    for i in range(len(price_list)):\n        product = round(price_list[i] * gain_list[i], 0)\n        result.append(product)\n        \n    return result\n\n# Call function and print results\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 220,
      "prompt_tokens": 3538,
      "completion_tokens_details": {
        "text_tokens": 220
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 3275
      },
      "total_tokens": 3758
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中某公司的上市至今涨幅与发行价格的乘积，并将结果四舍五入到整数。请提供Python代码实现。",
    "python_solution": "def calculate_product_and_round():\n    issue_price = 51.00\n    price_change_percentage = 47.34\n    product = issue_price * (1 + price_change_percentage / 100)\n    return round(product)\n",
    "image_id": "market_02_02_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2700",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3035-1.png",
      "./MultiFinance/images/3035-2.png",
      "./MultiFinance/images/3035-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3035-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-358",
    "output": [
      "existing_capacity_RL_HPBC2_0 = 18\n    in_construction_capacity_RL_HPBC2_0 = 4.72\n    \n    # Do math calculation to get the answer\n    difference = existing_capacity_RL_HPBC2_0 - in_construction_capacity_RL_HPBC2_0\n    \n    # return answer\n    return round(difference, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 97,
      "prompt_tokens": 3123,
      "completion_tokens_details": {
        "text_tokens": 97
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 2845
      },
      "total_tokens": 3220
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中现有产能中隆基HPBC2.0的占比，并将其与在建产能中隆基HPBC2.0的占比进行比较，求出两者之差；请保留两位小数。",
    "python_solution": "def solution():\n    existing_hpbc2_0 = 33\n    total_existing = 54.5 + 18 + 2\n    under_construction_hpbc2_0 = 12.5\n    total_under_construction = 12.5 + 17 + 4.72 + 6 + 2\n    existing_percentage = (existing_hpbc2_0 / total_existing) * 100\n    under_construction_percentage = (under_construction_hpbc2_0 / total_under_construction) * 100\n    difference = existing_percentage - under_construction_percentage\n    return round(difference, 2)",
    "image_id": "company_21_21_15_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-828",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 1,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.795790545596741,
    "images": [
      "./MultiFinance/images/2192-1.png",
      "./MultiFinance/images/2192-2.png",
      "./MultiFinance/images/2192-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2192-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-359",
    "output": [
      "modern_mastery_2024_pe = -6.79\n    modern_mastery_2025_pe = 21.29\n    change = (modern_mastery_2025_pe - modern_mastery_2024_pe) / modern_mastery_2024_pe * 100\n    \n    # return answer\n    return round(change, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 99,
      "prompt_tokens": 2631,
      "completion_tokens_details": {
        "text_tokens": 99
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 2352
      },
      "total_tokens": 2730
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算现代牧业2024年到2025年的PE变化量，并将其与2024年的PE值进行比较，得出变化百分比；请保留两位小数。",
    "python_solution": "def solution():\n    pe_2024 = -6.79\n    pe_2025 = 21.29\n    change_amount = pe_2025 - pe_2024\n    percentage_change = (change_amount / pe_2024) * 100\n    return round(percentage_change, 2)",
    "image_id": "company_35_35_16_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-668",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2819-1.png",
      "./MultiFinance/images/2819-2.png",
      "./MultiFinance/images/2819-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2819-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-360",
    "output": [
      "total_value = 1610 + 2162 + 30.5\n    all_values = [1610, 2162, 30.5, 2.5, 0.2, 0.2, 0.1, 0.0, 0.1]\n    \n    # Calculate the sum of all values\n    all_sum = sum(all_values)\n    \n    # Calculate the percentage\n    percentage = (total_value / all_sum) * 100\n    \n    # Round to two decimal places\n    rounded_percentage = round(percentage, 2)\n    \n    # Return the result\n    return rounded_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 160,
      "prompt_tokens": 1885,
      "completion_tokens_details": {
        "text_tokens": 160
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 1614
      },
      "total_tokens": 2045
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中离心鼓风机、多芯鼓风机和离心通风机的产值总和，然后求该总和占所有风机产值的比例；请保留两位小数。",
    "python_solution": "def solution():\n    value_centrifugal_blower = 1610\n    value_multicore_blower = 30.5\n    value_centrifugal_fan = 2.5\n    total_value = 1132 + 2162 + 1610 + 30.5 + 2.5 + 0.2 + 0.2 + 0.1 + 0.0 + 0.1\n    sum_value = value_centrifugal_blower + value_multicore_blower + value_centrifugal_fan\n    ratio = sum_value / total_value * 100\n    return round(ratio, 2)",
    "image_id": "company_09_09_04_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-37",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 11,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 13
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 4.6443908991413725,
    "images": [
      "./MultiFinance/images/2209-1.png",
      "./MultiFinance/images/2209-2.png",
      "./MultiFinance/images/2209-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2209-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-361",
    "output": [
      "total_shares = 100 + 70 + 65 + 60 + 54.82 + 31.25 + 20 + 13.45\n    \n    # Do math calculation to get the answer\n    total_shares_percentage = round(total_shares * 100 / sum([100] + [70] + [65] + [60] + [54.82] + [31.25] + [20] + [13.45]), 2)\n    \n    # return answer\n    return total_shares_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 153,
      "prompt_tokens": 2801,
      "completion_tokens_details": {
        "text_tokens": 153
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 2540
      },
      "total_tokens": 2954
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算广州维力医疗器械股份有限公司的总持股比例，并将其四舍五入到小数点后两位。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share1 = 31.39\n    share2 = 13.33\n    share3 = 5.35\n    share4 = 1.19\n    share5 = 1.84\n    share6 = 1.49\n    share7 = 1.19\n    share8 = 1.02\n    share9 = 0.76\n    share10 = 0.74\n\n    total_share = share1 + share2 + share3 + share4 + share5 + share6 + share7 + share8 + share9 + share10\n    return round(total_share, 2)",
    "image_id": "company_13_13_08_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-886",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 10
      },
      "operator_statistics": {
        "operators": {
          "+": 9,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 13,
        "parentheses": 2
      }
    },
    "difficulty": 4.836281906951478,
    "images": [
      "./MultiFinance/images/2189-1.png",
      "./MultiFinance/images/2189-2.png",
      "./MultiFinance/images/2189-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2189-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-362",
    "output": [
      "year_2014 = 11.5\n    year_2015 = 15.0\n    year_2016 = 22.4\n    year_2017 = 39.7\n    year_2018 = 47.9\n    \n    total_growth = (year_2018 - year_2014) + (year_2017 - year_2015) + (year_2016 - year_2014)\n    \n    average_growth_rate = total_growth / 3\n    \n    answer = round(average_growth_rate * 100, 2)\n    \n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 169,
      "prompt_tokens": 1871,
      "completion_tokens_details": {
        "text_tokens": 169
      },
      "prompt_tokens_details": {
        "text_tokens": 254,
        "image_tokens": 1617
      },
      "total_tokens": 2040
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2014年到2018年的平均增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    growth_2014 = 11.5\n    growth_2015 = 15.0\n    growth_2016 = 22.4\n    growth_2017 = 39.7\n    growth_2018 = 47.9\n\n    average_growth = (growth_2014 + growth_2015 + growth_2016 + growth_2017 + growth_2018) / 5\n    return round(average_growth, 2)",
    "image_id": "company_27_27_07_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-444",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2434-1.png",
      "./MultiFinance/images/2434-2.png",
      "./MultiFinance/images/2434-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2434-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-363",
    "output": [
      "sales_2009 = 3060\n    sales_2008 = 3195\n    sales_2007 = 3015\n    \n    total_sales = sales_2009 + sales_2008 + sales_2007\n    num_years = 3\n    \n    # Do math calculation to get the answer\n    average_sales = total_sales / num_years\n    \n    # return answer\n    return average_sales\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 2745,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 1483,
        "image_tokens": 1262
      },
      "total_tokens": 2863
    },
    "model": "qwen-omni-turbo",
    "question": "what is the average value for sales? (in million)",
    "python_solution": "def solution():\n    # Define variables name and value\n    sales_2009 = 3060\n    sales_2008 = 3195\n    sales_2007 = 3015\n\n    # Do math calculation to get the answer (average sales value)\n    answer = (sales_2009 + sales_2008 + sales_2007) / 3\n    \n    return answer",
    "source": "FinQA",
    "source_id": "simpshort-testmini-134",
    "img_type": "['Tables']",
    "context": "for uncoated freesheet paper and market pulp announced at the end of 2009 become effective . input costs are expected to be higher due to wood supply constraints at the kwidzyn mill and annual tariff increases on energy in russia . planned main- tenance outage costs are expected to be about flat , while operating costs should be favorable . asian printing papers net sales were approx- imately $ 50 million in 2009 compared with approx- imately $ 20 million in both 2008 and 2007 . operating earnings increased slightly in 2009 compared with 2008 , but were less than $ 1 million in all periods . u.s . market pulp net sales in 2009 totaled $ 575 million compared with $ 750 million in 2008 and $ 655 million in 2007 . operating earnings in 2009 were $ 140 million ( a loss of $ 71 million excluding alter- native fuel mixture credits and plant closure costs ) compared with a loss of $ 156 million ( a loss of $ 33 million excluding costs associated with the perma- nent shutdown of the bastrop mill ) in 2008 and earn- ings of $ 78 million in 2007 . sales volumes in 2009 decreased from 2008 levels due to weaker global demand . average sales price realizations were significantly lower as the decline in demand resulted in significant price declines for market pulp and smaller declines in fluff pulp . input costs for wood , energy and chemicals decreased , and freight costs were significantly lower . mill operating costs were favorable across all mills , and planned maintenance downtime costs were lower . lack-of-order downtime in 2009 increased to approx- imately 540000 tons , including 480000 tons related to the permanent shutdown of our bastrop mill in the fourth quarter of 2008 , compared with 135000 tons in 2008 . in the first quarter of 2010 , sales volumes are expected to increase slightly , reflecting improving customer demand for fluff pulp , offset by slightly seasonally weaker demand for softwood and hard- wood pulp in china . average sales price realizations are expected to improve , reflecting the realization of previously announced sales price increases for fluff pulp , hardwood pulp and softwood pulp . input costs are expected to increase for wood , energy and chemicals , and freight costs may also increase . planned maintenance downtime costs will be higher , but operating costs should be about flat . consumer packaging demand and pricing for consumer packaging prod- ucts correlate closely with consumer spending and general economic activity . in addition to prices and volumes , major factors affecting the profitability of consumer packaging are raw material and energy costs , freight costs , manufacturing efficiency and product mix . consumer packaging net sales in 2009 decreased 4% ( 4 % ) compared with 2008 and increased 1% ( 1 % ) compared with 2007 . operating profits increased significantly compared with both 2008 and 2007 . excluding alternative fuel mixture credits and facility closure costs , 2009 operating profits were sig- nificantly higher than 2008 and 57% ( 57 % ) higher than 2007 . benefits from higher average sales price realizations ( $ 114 million ) , lower raw material and energy costs ( $ 114 million ) , lower freight costs ( $ 21 million ) , lower costs associated with the reorganiza- tion of the shorewood business ( $ 23 million ) , favor- able foreign exchange effects ( $ 14 million ) and other items ( $ 12 million ) were partially offset by lower sales volumes and increased lack-of-order downtime ( $ 145 million ) and costs associated with the perma- nent shutdown of the franklin mill ( $ 67 million ) . additionally , operating profits in 2009 included $ 330 million of alternative fuel mixture credits . consumer packaging in millions 2009 2008 2007 . \n<image 1>\n north american consumer packaging net sales were $ 2.2 billion compared with $ 2.5 billion in 2008 and $ 2.4 billion in 2007 . operating earnings in 2009 were $ 343 million ( $ 87 million excluding alter- native fuel mixture credits and facility closure costs ) compared with $ 8 million ( $ 38 million excluding facility closure costs ) in 2008 and $ 70 million in 2007 . coated paperboard sales volumes were lower in 2009 compared with 2008 reflecting weaker market conditions . average sales price realizations were significantly higher , reflecting the full-year realization of price increases implemented in the second half of 2008 . raw material costs for wood , energy and chemicals were significantly lower in 2009 , while freight costs were also favorable . operating costs , however , were unfavorable and planned main- tenance downtime costs were higher . lack-of-order downtime increased to 300000 tons in 2009 from 15000 tons in 2008 due to weak demand . operating results in 2009 include income of $ 330 million for alternative fuel mixture credits and $ 67 million of expenses for shutdown costs for the franklin mill . foodservice sales volumes were lower in 2009 than in 2008 due to generally weak world-wide economic conditions . average sales price realizations were .",
    "images": [
      "./MultiFinance/images/1581-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-364",
    "output": [
      "share_price_2011 = 11.5\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return share_price_2011\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 46,
      "prompt_tokens": 1537,
      "completion_tokens_details": {
        "text_tokens": 46
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1278
      },
      "total_tokens": 1583
    },
    "model": "qwen-omni-turbo",
    "question": "According to Exhibit 1, what was the share price of Baldwin at the end of 2011? Answer to three decimal places.",
    "python_solution": "def solution():\n    accounting_net_income = 142187\n    depreciation_charges = 90409\n    gains_on_sale = 2162\n    shares_outstanding = 121944\n    price_FFO = 11.5\n    FFO_per_share = (accounting_net_income + depreciation_charges - gains_on_sale) / shares_outstanding\n    share_price = FFO_per_share * price_FFO\n    return share_price",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "source_id": "validation-46",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/307-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-365",
    "output": [
      "fourth_item_2022 = -29.31\n    fifth_item_2022 = -23.63\n    sixth_item_2022 = 28.38\n    \n    # Do math calculation to get the answer\n    difference = fourth_item_2022 - fifth_item_2022\n    result = (difference / sixth_item_2022) * 100\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 124,
      "prompt_tokens": 1265,
      "completion_tokens_details": {
        "text_tokens": 124
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 988
      },
      "total_tokens": 1389
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2022年第四项指标与第五项指标的差值，并将该差值除以第六项指标，然后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_2022_fourth = -26.30\n    value_2022_fifth = -30.21\n    value_2022_sixth = -30.14\n\n    diff = value_2022_fifth - value_2022_fourth\n    ratio = diff / value_2022_sixth\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_23_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2819",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.8712010109078907,
    "images": [
      "./MultiFinance/images/2420-1.png",
      "./MultiFinance/images/2420-2.png",
      "./MultiFinance/images/2420-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2420-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-366",
    "output": [
      "add_value1 = 200 + 100\n    add_value2 = 120 + 80\n    add_value3 = 720 + 160 + 80 + 100 + 200 + 200\n    add_value4 = 200 + 100 + 150 + 100 + 50 + 100\n    add_value5 = 1200 + 800\n    add_value
    ],
    "usage": {
      "completion_tokens": 2048,
      "prompt_tokens": 2471,
      "completion_tokens_details": {
        "text_tokens": 2048
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 2192
      },
      "total_tokens": 4519
    },
    "model": "qwen-omni-turbo",
    "question": "请计算空调回路中新增低压电压加热器和气液分离器的总价，并将其与减少的A-PTC和电子风扇的总价进行比较，求出两者之间的差值；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    added_heater = 1000\n    added_separator = 200\n    reduced_A_PTC = 1150\n    reduced_fan = 600\n\n    # Multi-step logic\n    added_total = added_heater + added_separator\n    reduced_total = reduced_A_PTC + reduced_fan\n    difference = added_total - reduced_total\n    return round(difference, 1)",
    "image_id": "company_11_11_20_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1343",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 3.7841896339182615,
    "images": [
      "./MultiFinance/images/2514-1.png",
      "./MultiFinance/images/2514-2.png",
      "./MultiFinance/images/2514-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2514-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-367",
    "output": [
      "lower_than_expected = 74 + 21 + 32\n    higher_than_expected = 82 + 94 + 69\n    \n    total = lower_than_expected + higher_than_expected\n    \n    # Do math calculation to get the answer\n    result = round((lower_than_expected + higher_than_expected) / 100, 2)\n    \n    # return answer\n    return result\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 99,
      "prompt_tokens": 2976,
      "completion_tokens_details": {
        "text_tokens": 99
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2717
      },
      "total_tokens": 3075
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算低于预期的百分比与高于预期的百分比之和，并将结果保留两位小数。",
    "python_solution": "def solution():\n    below_expectation = 0.06 + 0.04 + 0.09 + 0.07 + 0.16 + 0.14 + 0.13 + 0.19 + 0.2 + 0.13 + 0.21 + 0.32\n    above_expectation = 0.94 + 0.94 + 0.88 + 0.85 + 0.82 + 0.82 + 0.77 + 0.77 + 0.76 + 0.74 + 0.69 + 0.68\n    result = round(below_expectation + above_expectation, 2)\n    return result",
    "image_id": "market_00_00_12_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2761",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 21
      },
      "operator_statistics": {
        "operators": {
          "+": 23,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 23
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 2
      }
    },
    "difficulty": 4.74493212836325,
    "images": [
      "./MultiFinance/images/2196-1.png",
      "./MultiFinance/images/2196-2.png",
      "./MultiFinance/images/2196-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2196-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-368",
    "output": [
      "asset_2020 = 860529\n    asset_2019 = 67337\n    \n    # Calculate CAGR\n    cagr = ((asset_2020 / asset_2019) ** (1/2)) - 1\n    \n    # Convert to percentage\n    cagr_percentage = cagr * 100\n    \n    # return answer\n    return cagr_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 110,
      "prompt_tokens": 1556,
      "completion_tokens_details": {
        "text_tokens": 110
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 1278
      },
      "total_tokens": 1666
    },
    "model": "qwen-omni-turbo",
    "question": "What is the compound annual growth rate (CAGR) of the Company's total assets for the year 2019 and 2020 in percentages?",
    "python_solution": "def solution():\n    #Define variables name and value\n    total_assets_2020 = 860529 \n    total_assets_2019 = 67337 \n    #No of periods\n    n = 2020-2019\n    #Do math calculation to get the answer\n    import math\n    CAGR = (total_assets_2020/total_assets_2019)**(1/n) - 1\n    CAGR = round(CAGR*100, 2)\n    return CAGR\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-87",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1998-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 6
      }
    },
    "difficulty": 4.356708826689592,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-369",
    "output": [
      "market_share_terumo = 14.5\n    market_share_ted = 85.5\n    \n    # Calculate the difference in percentage form\n    difference_percentage = (market_share_terumo - market_share_ted) * 100\n    \n    # Return the result as a string with one decimal place\n    return f\"{difference_percentage:.1f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 80,
      "prompt_tokens": 1542,
      "completion_tokens_details": {
        "text_tokens": 80
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 1273
      },
      "total_tokens": 1622
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中的数据，计算东丽株式会社的市场份额与泰德制药的市场份额之差，并将结果表示为百分比形式；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share_toyota = 14.5\n    share_takeda = 85.5\n\n    # Multi-step logic\n    difference = share_takeda - share_toyota\n    percentage_difference = difference / share_takeda * 100\n    return round(percentage_difference, 1)",
    "image_id": "company_39_39_09_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1241",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2730-1.png",
      "./MultiFinance/images/2730-2.png",
      "./MultiFinance/images/2730-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2730-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-370",
    "output": [
      "q24_net_profit = -1501.27\n    q34_net_profit = 2041.26\n    net_profit_diff = q34_net_profit - q24_net_profit\n    percentage = (net_profit_diff / q34_net_profit) * 100\n    \n    # return answer\n    return round(percentage, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 88,
      "prompt_tokens": 3168,
      "completion_tokens_details": {
        "text_tokens": 88
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 2896
      },
      "total_tokens": 3256
    },
    "model": "qwen-omni-turbo",
    "question": "请计算华夏华润商业 REIT 在2024年第四季度和第三季度的净利润差值，并将该差值占第三季度净利润的比例以百分比形式表示；保留两位小数。",
    "python_solution": "def solution():\n    net_profit_q3 = 2041.26\n    net_profit_q4 = -1501.27\n    diff = net_profit_q4 - net_profit_q3\n    ratio = diff / net_profit_q3 * 100\n    return round(ratio, 2)",
    "image_id": "industry_18_18_24_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2456",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3016-1.png",
      "./MultiFinance/images/3016-2.png",
      "./MultiFinance/images/3016-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3016-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-371",
    "output": [
      "sales_growth_1 = 4.29\n    sales_growth_2 = -10.15\n    sales_growth_3 = -9.30\n    sales_growth_4 = 13.91\n    sales_growth_5 = -25.60\n    \n    average_sales_growth = (sales_growth_1 + sales_growth_2 + sales_growth_3 + sales_growth_4 + sales_growth_5) / 5\n    \n    # return answer\n    return round(average_sales_growth, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 116,
      "prompt_tokens": 1434,
      "completion_tokens_details": {
        "text_tokens": 116
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 1181
      },
      "total_tokens": 1550
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中排名前五的集团销售增长额的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    growth_1 = 4.29\n    growth_2 = -10.15\n    growth_3 = -9.30\n    growth_4 = 13.91\n    growth_5 = -25.60\n\n    average_growth = (growth_1 + growth_2 + growth_3 + growth_4 + growth_5) / 5\n    return round(average_growth, 1)",
    "image_id": "company_12_12_13_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1640",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 4.276666119016055,
    "images": [
      "./MultiFinance/images/2279-1.png",
      "./MultiFinance/images/2279-2.png",
      "./MultiFinance/images/2279-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2279-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-372",
    "output": [
      "shanghai_bank_2024_first_stage_pred_growth_rate = 16.90 - 13.4%\n    shanghai_bank_2023_actual_growth_rate = 13.4% - 10.8%\n    \n    # Calculate the difference between predicted and actual growth rates\n    diff = shanghai_bank_2024_first_stage_pred_growth_rate - shanghai_bank_2023_actual_growth_rate\n    \n    # Convert the difference to percentage form and round it to one decimal place\n    diff_percentage = round(diff * 100, 1)\n    \n    # Return the result as a string with the percentage symbol\n    return f\"{diff_percentage}%\"\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 163,
      "prompt_tokens": 3771,
      "completion_tokens_details": {
        "text_tokens": 163
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 3496
      },
      "total_tokens": 3934
    },
    "model": "qwen-omni-turbo",
    "question": "请计算上海银行在2024年第一阶段的预测增长率，并将其与2023年的实际增长率进行比较，最后将差值转换为百分比形式；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    growth_2023 = 1.34\n    forecast_growth_2024 = 16.90\n    \n    # Multi-step logic\n    difference = forecast_growth_2024 - growth_2023\n    percentage_difference = (difference / growth_2023) * 100\n    \n    return round(percentage_difference, 1)",
    "image_id": "company_07_07_20_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1824",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2644-1.png",
      "./MultiFinance/images/2644-2.png",
      "./MultiFinance/images/2644-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2644-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-373",
    "output": [
      "profit_2024 = -2266\n    profit_2023 = -264\n    difference = profit_2024 - profit_2023\n    percentage_difference = (difference / abs(profit_2023)) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 86,
      "prompt_tokens": 1834,
      "completion_tokens_details": {
        "text_tokens": 86
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 1563
      },
      "total_tokens": 1920
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年与2023年的营业利润差值，并将该差值占2023年营业利润的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    profit_2023 = -264\n    profit_2024 = -2266\n    diff = profit_2024 - profit_2023\n    percentage = (diff / profit_2023) * 100\n    return round(percentage, 1)",
    "image_id": "company_05_05_00_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1522",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2676-1.png",
      "./MultiFinance/images/2676-2.png",
      "./MultiFinance/images/2676-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2676-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-374",
    "output": [
      "pv_predict = 3294\n    hydropower_predict = 547\n    total_predict = pv_predict + hydropower_predict\n    total_plan = 6110\n    \n    # Do math calculation to get the answer\n    percentage = (total_predict / total_plan) * 100\n    \n    # return answer\n    return round(percentage, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 88,
      "prompt_tokens": 1714,
      "completion_tokens_details": {
        "text_tokens": 88
      },
      "prompt_tokens_details": {
        "text_tokens": 282,
        "image_tokens": 1432
      },
      "total_tokens": 1802
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算光伏和水电在2024-2025年的预测值总和，并将其与“十四五”总量进行比较，求出预测值占总量的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    pv_prediction = 3294\n    hydro_prediction = 547\n    total_prediction = pv_prediction + hydro_prediction\n    total_quantity = 6110\n    percentage = (total_prediction / total_quantity) * 100\n    return round(percentage, 1)",
    "image_id": "company_01_01_12_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1412",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2970-1.png",
      "./MultiFinance/images/2970-2.png",
      "./MultiFinance/images/2970-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2970-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-375",
    "output": [
      "price_uk = 100 - 150\n    price_eu = 100 - 150\n    price_us = 1670\n    difference = abs(price_uk - price_eu)\n    percentage_difference = (difference / price_us) * 100\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(percentage_difference, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 98,
      "prompt_tokens": 2422,
      "completion_tokens_details": {
        "text_tokens": 98
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 2153
      },
      "total_tokens": 2520
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中注射用紫杉醇（白蛋白结合型）在英国和欧盟的价格差，并将结果表示为占美国价格的百分比，保留两位小数。",
    "python_solution": "def solution():\n    price_uk = 100\n    price_eu = 150\n    price_us = 1670\n    price_diff = price_eu - price_uk\n    percentage = (price_diff / price_us) * 100\n    return round(percentage, 2)",
    "image_id": "company_38_38_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1168",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2966-1.png",
      "./MultiFinance/images/2966-2.png",
      "./MultiFinance/images/2966-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2966-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-376",
    "output": [
      "total_market_value = 21478.95\n    electronic_market_value = 2516.85\n    \n    # Do math calculation to get the answer\n    proportion = (electronic_market_value / total_market_value) * 100\n    \n    # return answer\n    return round(proportion, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 88,
      "prompt_tokens": 2653,
      "completion_tokens_details": {
        "text_tokens": 88
      },
      "prompt_tokens_details": {
        "text_tokens": 251,
        "image_tokens": 2402
      },
      "total_tokens": 2741
    },
    "model": "qwen-omni-turbo",
    "question": "请计算电子行业的市值占中信一级行业总市值的比例，并将结果保留两位小数。",
    "python_solution": "def solution():\n    electronic_market_value = 2516.85\n    total_market_value = 2516.85 + 1583.75 + 1389.10 + 1162.18 + 765.96 + 750.59 + 713.93 + 641.81 + 626.70 + 539.57 + 472.72 + 416.04 + 354.64 + 272.45 + 227.60 + 199.70 + 168.84 + 143.40 + 130.05 + 124.90 + 116.38 + 110.02 + 84.48 + 72.17 + 70.04 + 65.82 + 62.06 + 53.24 + 0.13 + 0.10\n    ratio = (electronic_market_value / total_market_value) * 100\n    return round(ratio, 2)",
    "image_id": "market_09_09_13_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2884",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 28
      },
      "operator_statistics": {
        "operators": {
          "+": 29,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 31
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 5.225746673713202,
    "images": [
      "./MultiFinance/images/2164-1.png",
      "./MultiFinance/images/2164-2.png",
      "./MultiFinance/images/2164-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2164-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-377",
    "output": [
      "full_year_2018_profit_before_taxes = 7822\n    full_year_2017_profit_before_taxes = 4082\n    \n    full_year_2018_adjusted_profit = 8703\n    full_year_2017_adjusted_profit = 5554\n    \n    # Do math calculation to get the answer\n    if full_year_2018_profit_before_taxes > 5000 or full_year_2017_profit_before_taxes > 5000:\n        total_adjusted_profit = full_year_2018_adjusted_profit + full_year_2017_adjusted_profit\n    else:\n        total_adjusted_profit = 0\n    \n    # return answer\n    return total_adjusted_profit\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 188,
      "prompt_tokens": 1557,
      "completion_tokens_details": {
        "text_tokens": 188
      },
      "prompt_tokens_details": {
        "text_tokens": 340,
        "image_tokens": 1217
      },
      "total_tokens": 1745
    },
    "model": "qwen-omni-turbo",
    "question": "What was the total amount of the adjusted profit in the years / sections where profit of profit before taxes is greater than 5000? (in million)",
    "python_solution": "def solution():\n    # Define variables name and value\n    profit_before_taxes_2018 = 7822\n    profit_before_taxes_2017 = 0\n    restructuring_costs_2018 = 386\n    mark_to_market_losses_2018 = 495\n    \n    # Do math calculation to get the answer\n    answer = (profit_before_taxes_2018 + restructuring_costs_2018) + (profit_before_taxes_2017 + mark_to_market_losses_2018)\n    \n    return answer\n\nprint(solution())",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-60",
    "img_type": "['Tables']",
    "context": "For 2017 profit was $1.26 per share, and excluding the items in the table below, adjusted profit per share was $6.88.  z In order for our results to be more meaningful to our readers, we have separately quantified the impact of several significant items:\n<image 1>",
    "images": [
      "./MultiFinance/images/1703-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 8
      }
    },
    "difficulty": 3.6635616461296463,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-378",
    "output": [
      "op_income_2014 = 9331\n    op_income_2013 = 5698\n    \n    sales_2014 = 116505\n    sales_2013 = 78527\n    \n    op_income_ratio_2014 = op_income_2014 / sales_2014 * 100\n    op_income_ratio_2013 = op_income_2013 / sales_2013 * 100\n    \n    percentage_change = (op_income_ratio_2014 - op_income_ratio_2013) / op_income_ratio_2013 * 100\n    \n    # return answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 183,
      "prompt_tokens": 1317,
      "completion_tokens_details": {
        "text_tokens": 183
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1037
      },
      "total_tokens": 1500
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the company's operating income to sales ratio from the three months ended in September 2013 to those of September 2014?",
    "python_solution": "def solution():\n     #Define variables name and value\n    operation_income_2014 = 9331 \n    net_sales_2014 = 116505\n    operation_income_2013 = 5698\n    net_sales_2013 = 78527\n\n    #Do math calculation to get the answer\n    ratio_change = (operation_income_2014 / net_sales_2014) - (operation_income_2013 / net_sales_2013)\n    answer = ratio_change * 100\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-282",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2134-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 4
      }
    },
    "difficulty": 3.7841896339182615,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-379",
    "output": [
      "total_sales_value = 160000 + 140000 + 25000\n    m_sales_value = 160000\n    m_allocation = (m_sales_value / total_sales_value) * 120000\n    \n    # return answer\n    return int(m_allocation)\n```"
    ],
    "usage": {
      "completion_tokens": 76,
      "prompt_tokens": 533,
      "completion_tokens_details": {
        "text_tokens": 76
      },
      "prompt_tokens_details": {
        "text_tokens": 300,
        "image_tokens": 233
      },
      "total_tokens": 609
    },
    "model": "qwen-omni-turbo",
    "question": "Tango Company produces joint products M, N, and T from a joint process. This information concerns a batch produced in April at a joint cost of $120,000: <image 1> How much of the joint cost should be allocated to joint product M using the net realizable value method? Answer to the nearest integer.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Cost Management",
    "source_id": "validation_Manage_13",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/93-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-380",
    "output": [
      "year_2020 = 151\n    year_2025 = 600\n    years = 2025 - 2020 + 1\n    \n    # Do math calculation to get the answer\n    cagr = ((year_2025 / year_2020) ** (1/years)) - 1\n    \n    # return answer\n    return round(cagr * 100, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 108,
      "prompt_tokens": 3550,
      "completion_tokens_details": {
        "text_tokens": 108
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 3279
      },
      "total_tokens": 3658
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中脸书2020年和2025年的收入数据，计算脸书在这五年间的年均复合增长率（CAGR）。请保留两位小数。",
    "python_solution": "def solution():\n    value_2020 = 151\n    value_2025 = 600\n    years = 5\n\n    cagr = ((value_2025 / value_2020) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "strategy_05_05_10_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2980",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2664-1.png",
      "./MultiFinance/images/2664-2.png",
      "./MultiFinance/images/2664-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2664-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-381",
    "output": [
      "google_2020_income = 223\n    google_2025_income = 750\n    \n    # Calculate CAGR\n    cagr = ((google_2025_income / google_2020_income) ** (1/5)) - 1\n    \n    # Return the result as a percentage rounded to two decimal places\n    return round(cagr * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 3548,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 3279
      },
      "total_tokens": 3655
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中谷歌2020年和2025年的收入数据，计算谷歌在这五年间的年均复合增长率（CAGR）。请保留两位小数。",
    "python_solution": "def solution():\n    value_2020 = 223\n    value_2025 = 750\n    years = 5\n\n    cagr = ((value_2025 / value_2020) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "strategy_05_05_10_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2978",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2662-1.png",
      "./MultiFinance/images/2662-2.png",
      "./MultiFinance/images/2662-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2662-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-382",
    "output": [
      "electronic_ignition_proportion = 93.59\n    industrial_electric_ignition_proportion = 2.88\n    detonating_cord_ignition_proportion = 3.53\n    \n    # Calculate the sum of the two proportions\n    total_ignition_proportions = (industrial_electric_ignition_proportion + \n                                  detonating_cord_ignition_proportion)\n    \n    # Calculate the ratio between the electronic ignition proportion and the sum of the other two proportions\n    ratio = electronic_ignition_proportion / total_ignition_proportions\n    \n    # Return the result rounded to two decimal places\n    return round(ratio, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 162,
      "prompt_tokens": 1642,
      "completion_tokens_details": {
        "text_tokens": 162
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1376
      },
      "total_tokens": 1804
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算电子雷管的市场份额与导爆管雷管和工业电雷管市场份额之和的比例，并将结果保留两位小数。",
    "python_solution": "def solution():\n    electronic_percentage = 93.59\n    detonating_percentage = 3.53\n    industrial_percentage = 2.88\n\n    total_other_percentage = detonating_percentage + industrial_percentage\n    ratio = (electronic_percentage / total_other_percentage) * 100\n    return round(ratio, 2)",
    "image_id": "company_32_32_09_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1063",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2957-1.png",
      "./MultiFinance/images/2957-2.png",
      "./MultiFinance/images/2957-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2957-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-383",
    "output": [
      "total_margin_rate_2019_to_2023 = [20.90, 21.27, 21.21, 27.38, 32.50]\n    \n    # Calculate average margin rate\n    average_margin_rate = sum(total_margin_rate_2019_to_2023) / len(total_margin_rate_2019_to_2023)\n    \n    # Round result to two decimal places\n    rounded_average_margin_rate = round(average_margin_rate, 2)\n    \n    # Return the result\n    return rounded_average_margin_rate\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 150,
      "prompt_tokens": 1370,
      "completion_tokens_details": {
        "text_tokens": 150
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 1113
      },
      "total_tokens": 1520
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2019年到2023年总毛利率的平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    gross_margin_2019 = 20.90\n    gross_margin_2020 = 21.27\n    gross_margin_2021 = 21.21\n    gross_margin_2022 = 27.38\n    gross_margin_2023 = 32.50\n\n    average_gross_margin = (gross_margin_2019 + gross_margin_2020 + gross_margin_2021 + gross_margin_2022 + gross_margin_2023) / 5\n    return round(average_gross_margin, 2)",
    "image_id": "company_37_37_05_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-579",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2443-1.png",
      "./MultiFinance/images/2443-2.png",
      "./MultiFinance/images/2443-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2443-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-384",
    "output": [
      "year_list = [2021, 2022, 2023, 2024, 2025, 2026]\n    cash_flow_list = [1250, 911, 1352, 1310, 2140, 2378]\n    \n    # Do math calculation to get the answer\n    average_cash_flow = sum(cash_flow_list) / len(year_list)\n    \n    # return answer\n    return round(average_cash_flow, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 126,
      "prompt_tokens": 1436,
      "completion_tokens_details": {
        "text_tokens": 126
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1172
      },
      "total_tokens": 1562
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年到2026年经营活动现金净流的平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    operating_cash_flow_2021 = 1250\n    operating_cash_flow_2022 = 911\n    operating_cash_flow_2023 = 1352\n    operating_cash_flow_2024E = 1310\n    operating_cash_flow_2025E = 2140\n    operating_cash_flow_2026E = 2378\n    total_operating_cash_flow = operating_cash_flow_2021 + operating_cash_flow_2022 + operating_cash_flow_2023 + operating_cash_flow_2024E + operating_cash_flow_2025E + operating_cash_flow_2026E\n    average_operating_cash_flow = total_operating_cash_flow / 6\n    return round(average_operating_cash_flow, 2)",
    "image_id": "company_09_09_20_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-33",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2317-1.png",
      "./MultiFinance/images/2317-2.png",
      "./MultiFinance/images/2317-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2317-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-385",
    "output": [
      "total_installed_capacity = sum([300, 350, 300, 60, 3060])\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(total_installed_capacity)\n```"
    ],
    "usage": {
      "completion_tokens": 56,
      "prompt_tokens": 2430,
      "completion_tokens_details": {
        "text_tokens": 56
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 2174
      },
      "total_tokens": 2486
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有项目的装机量总和，并将结果四舍五入到最接近的整数。",
    "python_solution": "def solution():\n    mw_1 = 300\n    mw_2 = 350\n    mw_3 = 300\n    mw_4 = 60\n    mw_5 = 3060\n    total_mw = mw_1 + mw_2 + mw_3 + mw_4 + mw_5\n    return round(total_mw)",
    "image_id": "company_09_09_17_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-34",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2694-1.png",
      "./MultiFinance/images/2694-2.png",
      "./MultiFinance/images/2694-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2694-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-386",
    "output": [
      "year1_growth_rate = (49 - 33.7) / 33.7\n    year2_growth_rate = (47 - 49) / 49\n    year3_growth_rate = (35 - 47) / 47\n    year4_growth_rate = (29 - 35) / 35\n    \n    # Calculate average growth rate\n    average_growth_rate = (year1_growth_rate + year2_growth_rate + year3_growth_rate + year4_growth_rate) / 4\n    \n    # Return result rounded to two decimal places\n    return round(average_growth_rate * 100, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 155,
      "prompt_tokens": 2273,
      "completion_tokens_details": {
        "text_tokens": 155
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 2020
      },
      "total_tokens": 2428
    },
    "model": "qwen-omni-turbo",
    "question": "请计算饮料业务的毛利率从第一年到第四年的平均增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    gross_margin_y1 = 33.7\n    gross_margin_y4 = 36.1\n    average_growth_rate = ((gross_margin_y4 - gross_margin_y1) / gross_margin_y1) * 100 / 3\n    return round(average_growth_rate, 2)",
    "image_id": "company_23_23_26_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-921",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 6
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2821-1.png",
      "./MultiFinance/images/2821-2.png",
      "./MultiFinance/images/2821-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2821-3.png",
      "./MultiFinance/images/2821-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-387",
    "output": [
      "new_jersey_chrome_2018 = 151\n    new_jersey_chrome_2017 = 136\n    \n    # Do math calculation to get the answer\n    percentage_increase = ((new_jersey_chrome_2018 - new_jersey_chrome_2017) / new_jersey_chrome_2017) * 100\n    \n    # return answer\n    return round(percentage_increase)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 120,
      "prompt_tokens": 2565,
      "completion_tokens_details": {
        "text_tokens": 120
      },
      "prompt_tokens_details": {
        "text_tokens": 1321,
        "image_tokens": 1244
      },
      "total_tokens": 2685
    },
    "model": "qwen-omni-turbo",
    "question": "what was the percentage increase in the new jersey chrome environmental reserve in 2018? Answer to the nearest integer.",
    "answer": "11",
    "context": "2018 ppg annual report and form 10-k 83 current open and active claims post-pittsburgh corning bankruptcy the company is aware of approximately 460 open and active asbestos-related claims pending against the company and certain of its subsidiaries . these claims consist primarily of non-pc relationship claims and claims against a subsidiary of ppg . the company is defending the remaining open and active claims vigorously . since april 1 , 2013 , a subsidiary of ppg has been implicated in claims alleging death or injury caused by asbestos-containing products manufactured , distributed or sold by a north american architectural coatings business or its predecessors which was acquired by ppg . all such claims have been either served upon or tendered to the seller for defense and indemnity pursuant to obligations undertaken by the seller in connection with the company 2019s purchase of the north american architectural coatings business . the seller has accepted the defense of these claims subject to the terms of various agreements between the company and the seller . the seller 2019s defense and indemnity obligations in connection with newly filed claims ceased with respect to claims filed after april 1 , 2018 . ppg has established reserves totaling approximately $ 180 million for asbestos-related claims that would not be channeled to the trust which , based on presently available information , we believe will be sufficient to encompass all of ppg 2019s current and potential future asbestos liabilities . these reserves include a $ 162 million reserve established in 2009 in connection with an amendment to the pc plan of reorganization . these reserves , which are included within other liabilities on the accompanying consolidated balance sheets , represent ppg 2019s best estimate of its liability for these claims . ppg does not have sufficient current claim information or settlement history on which to base a better estimate of this liability in light of the fact that the bankruptcy court 2019s injunction staying most asbestos claims against the company was in effect from april 2000 through may 2016 . ppg will monitor the activity associated with its remaining asbestos claims and evaluate , on a periodic basis , its estimated liability for such claims , its insurance assets then available , and all underlying assumptions to determine whether any adjustment to the reserves for these claims is required . the amount reserved for asbestos-related claims by its nature is subject to many uncertainties that may change over time , including ( i ) the ultimate number of claims filed ; ( ii ) the amounts required to resolve both currently known and future unknown claims ; ( iii ) the amount of insurance , if any , available to cover such claims ; ( iv ) the unpredictable aspects of the litigation process , including a changing trial docket and the jurisdictions in which trials are scheduled ; ( v ) the outcome of any trials , including potential judgments or jury verdicts ; ( vi ) the lack of specific information in many cases concerning exposure for which ppg is allegedly responsible , and the claimants 2019 alleged diseases resulting from such exposure ; and ( vii ) potential changes in applicable federal and/or state tort liability law . all of these factors may have a material effect upon future asbestos- related liability estimates . as a potential offset to any future asbestos financial exposure , under the pc plan of reorganization ppg retained , for its own account , the right to pursue insurance coverage from certain of its historical insurers that did not participate in the pc plan of reorganization . while the ultimate outcome of ppg 2019s asbestos litigation cannot be predicted with certainty , ppg believes that any financial exposure resulting from its asbestos-related claims will not have a material adverse effect on ppg 2019s consolidated financial position , liquidity or results of operations . environmental matters it is ppg 2019s policy to accrue expenses for environmental contingencies when it is probable that a liability has been incurred and the amount of loss can be reasonably estimated . reserves for environmental contingencies are exclusive of claims against third parties and are generally not discounted . in management 2019s opinion , the company operates in an environmentally sound manner and the outcome of the company 2019s environmental contingencies will not have a material effect on ppg 2019s financial position or liquidity ; however , any such outcome may be material to the results of operations of any particular period in which costs , if any , are recognized . management anticipates that the resolution of the company 2019s environmental contingencies will occur over an extended period of time . as of december 31 , 2018 and 2017 , ppg had reserves for environmental contingencies associated with ppg 2019s former chromium manufacturing plant in jersey city , n.j . ( 201cnew jersey chrome 201d ) and for other environmental contingencies , including national priority list sites and legacy glass and chemical manufacturing sites . these reserves are reported as accounts payable and accrued liabilities and other liabilities in the accompanying consolidated balance sheet . environmental reserves .\n\n<image 1>\n\nnotes to the consolidated financial statements .\n",
    "program": "increase = 151 - 136\ndecrease = 136 - 90\npercent_increase = increase / 136\npercent_decrease = decrease / 90\nanswer = percent_increase * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 1,
        "context_numbers": 44,
        "total_numbers": 45
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 0
      }
    },
    "difficulty": 3.2188758248682006,
    "source_id": "test-535",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1187-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-388",
    "output": [
      "year_1 = 21.0\n    year_2 = 22.0\n    year_3 = 22.0\n    year_4 = 22.0\n    year_5 = 22.0\n    \n    # Do math calculation to get the answer\n    average_margin_rate = (year_1 + year_2 + year_3 + year_4 + year_5) / 5\n    \n    # return answer\n    return round(average_margin_rate, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 127,
      "prompt_tokens": 3296,
      "completion_tokens_details": {
        "text_tokens": 127
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 3034
      },
      "total_tokens": 3423
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2025年到2030年机器人业务的平均毛利率，并将结果保留一位小数。",
    "python_solution": "def solution():\n    gross_margin_2025 = 21.0\n    gross_margin_2026 = 22.0\n    gross_margin_2027 = 22.0\n    gross_margin_2028 = 22.0\n    gross_margin_2029 = 22.0\n    gross_margin_2030 = 22.0\n\n    average_gross_margin = (gross_margin_2025 + gross_margin_2026 + gross_margin_2027 + gross_margin_2028 + gross_margin_2029 + gross_margin_2030) / 6\n    return round(average_gross_margin, 1)",
    "image_id": "company_11_11_18_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1360",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2329-1.png",
      "./MultiFinance/images/2329-2.png",
      "./MultiFinance/images/2329-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2329-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-389",
    "output": [
      "year_2021_fixed_assets = 2696\n    year_2022_fixed_assets = 3040\n    year_2023_fixed_assets = 3192\n    \n    # Do math calculation to get the answer\n    growth_rate_year_2021_to_2022 = ((year_2022_fixed_assets - year_2021_fixed_assets) / year_2021_fixed_assets) * 100\n    growth_rate_year_2022_to_2023 = ((year_2023_fixed_assets - year_2022_fixed_assets) / year_2022_fixed_assets) * 100\n    average_growth_rate = (growth_rate_year_2021_to_2022 + growth_rate_year_2022_to_2023) / 2\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 228,
      "prompt_tokens": 2445,
      "completion_tokens_details": {
        "text_tokens": 228
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2183
      },
      "total_tokens": 2673
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2023年固定资产的年均增长率，并将结果表示为百分比，保留两位小数。",
    "python_solution": "def solution():\n    fixed_assets_2021 = 2696\n    fixed_assets_2022 = 3040\n    fixed_assets_2023 = 3192\n    growth_rate = ((fixed_assets_2023 / fixed_assets_2021) ** (1/2) - 1) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_09_09_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-43",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2429-1.png",
      "./MultiFinance/images/2429-2.png",
      "./MultiFinance/images/2429-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2429-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-390",
    "output": [
      "dec_31_2019_carrying_amount = 9617491\n    sep_30_2020_carrying_amount = 9681595\n    \n    # Calculate the change in percentage\n    change_percentage = ((sep_30_2020_carrying_amount - dec_31_2019_carrying_amount) / dec_31_2019_carrying_amount) * 100\n    \n    # Return the answer\n    return change_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 130,
      "prompt_tokens": 770,
      "completion_tokens_details": {
        "text_tokens": 130
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 485
      },
      "total_tokens": 900
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in percentage of the company's debt instruments carrying amount excluding finance lease obligations from December 31, 2019 to September 30, 2020?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    carrying_amount_2019 = 9_617_491  # in thousands\n\n    carrying_amount_2020 = 9_681_595  # in thousands\n\n    #Do math calculation to get the answer\n    answer = ((carrying_amount_2020 - carrying_amount_2019) / carrying_amount_2019) * 100\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-105",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2014-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-391",
    "output": [
      "rental_expense_2002 = 31\n    rental_expense_2001 = 32\n    rental_expense_2000 = 13\n    \n    # Calculate average rental expense\n    average_rental_expense = (rental_expense_2002 + rental_expense_2001 + rental_expense_2000) / 3\n    \n    # Return the result rounded to three decimal places\n    return round(average_rental_expense, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 127,
      "prompt_tokens": 2188,
      "completion_tokens_details": {
        "text_tokens": 127
      },
      "prompt_tokens_details": {
        "text_tokens": 946,
        "image_tokens": 1242
      },
      "total_tokens": 2315
    },
    "model": "qwen-omni-turbo",
    "question": "What was the average rental expense in millions for 2000 through 2002? Answer to three decimal places.",
    "answer": 80.667,
    "context": "the contracts were valued as of april 1 , 2002 , and an asset and a corresponding gain of $ 127 million , net of income taxes , was recorded as a cumulative effect of a change in accounting principle in the second quarter of 2002 . the majority of the gain recorded relates to the warrior run contract , as the asset value of the deepwater contract on april 1 , 2002 , was less than $ 1 million . the warrior run contract qualifies and was designated as a cash flow hedge as defined by sfas no . 133 and hedge accounting is applied for this contract subsequent to april 1 , 2002 . the contract valuations were performed using current forward electricity and gas price quotes and current market data for other contract variables . the forward curves used to value the contracts include certain assumptions , including projections of future electricity and gas prices in periods where future prices are not quoted . fluctuations in market prices and their impact on the assumptions will cause the value of these contracts to change . such fluctuations will increase the volatility of the company 2019s reported results of operations . 11 . commitments , contingencies and risks operating leases 2014as of december 31 , 2002 , the company was obligated under long-term non-cancelable operating leases , primarily for office rental and site leases . rental expense for operating leases , excluding amounts related to the sale/leaseback discussed below , was $ 31 million $ 32 million and $ 13 million in the years ended december 31 , 2002 , 2001and 2000 , respectively , including commitments of businesses classified as discontinued amounting to $ 6 million in 2002 , $ 16 million in 2001 and $ 6 million in 2000 . the future minimum lease commitments under these leases are as follows ( in millions ) : discontinued total operations .\n\n<image 1>\n\nsale/leaseback 2014in may 1999 , a subsidiary of the company acquired six electric generating stations from new york state electric and gas ( 2018 2018nyseg 2019 2019 ) . concurrently , the subsidiary sold two of the plants to an unrelated third party for $ 666 million and simultaneously entered into a leasing arrangement with the unrelated party . this transaction has been accounted for as a sale/leaseback with operating lease treatment . rental expense was $ 54 million , $ 58 million and $ 54 million in 2002 , 2001 and 2000 , respectively . future minimum lease commitments are as follows ( in millions ) : in connection with the lease of the two power plants , the subsidiary is required to maintain a rent reserve account equal to the maximum semi-annual payment with respect to the sum of the basic rent ( other then deferrable basic rent ) and fixed charges expected to become due in the immediately succeeding three-year period . at december 31 , 2002 , 2001 and 2000 , the amount deposited in the rent reserve account approximated .\n",
    "program": "sale_leaseback_2000 = 54\nsale_leaseback_2001 = 58\nsale_leaseback_2002 = 54\noperating_lease_2000 = 13\noperating_lease_2001 = 32\noperating_lease_2002 = 31\n\ntotal_rent_2000 = sale_leaseback_2000 + operating_lease_2000\ntotal_rent_2001 = sale_leaseback_2001 + operating_lease_2001\ntotal_rent_2002 = sale_leaseback_2002 + operating_lease_2002\n\ntotal_rent = total_rent_2000 + total_rent_2001 + total_rent_2002\naverage_rent = total_rent / 3\nanswer = round(average_rent, 3)",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 64,
        "total_numbers": 66
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 2
      }
    },
    "difficulty": 4.356708826689592,
    "source_id": "test-91",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/743-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-392",
    "output": [
      "investment_d_beginning_value = 36600\n    investment_d_end_value = 46500\n    cash_flow_during_period = 3580\n    \n    # Calculate the rate of return for Investment D\n    rate_of_return_d = (investment_d_end_value - investment_d_beginning_value) / cash_flow_during_period * 100\n    \n    # Return the rate of return as a percentage rounded to two decimal places\n    return round(rate_of_return_d, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 122,
      "prompt_tokens": 519,
      "completion_tokens_details": {
        "text_tokens": 122
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 242
      },
      "total_tokens": 641
    },
    "model": "qwen-omni-turbo",
    "question": "For each of the investments shown in the following table, calculate the rate of return earned over the unspecified time period. <image 1> What is the rate of return for Investment D? Answer as a percentage to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_163",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/168-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-393",
    "output": [
      "average_borrowings_2017 = 779\n    average_borrowings_2016 = 850\n    \n    # Do math calculation to get the answer\n    percentage_decrease = ((average_borrowings_2016 - average_borrowings_2017) / average_borrowings_2016) * 100\n    \n    # return answer\n    return round(percentage_decrease, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 115,
      "prompt_tokens": 2284,
      "completion_tokens_details": {
        "text_tokens": 115
      },
      "prompt_tokens_details": {
        "text_tokens": 1057,
        "image_tokens": 1227
      },
      "total_tokens": 2399
    },
    "model": "qwen-omni-turbo",
    "question": "By what percentage did average borrowings decrease from 2016 to 2017? Provide your answer as a negative percentage to three decimal places.",
    "answer": -8.353,
    "context": "the following table summarizes the short-term borrowing activity for awcc for the years ended december 31: .\n\n<image 1>\n\nthe credit facility requires the company to maintain a ratio of consolidated debt to consolidated capitalization of not more than 0.70 to 1.00 . the ratio as of december 31 , 2017 was 0.59 to 1.00 . none of the company 2019s borrowings are subject to default or prepayment as a result of a downgrading of securities , although such a downgrading could increase fees and interest charges under the company 2019s credit facility . as part of the normal course of business , the company routinely enters contracts for the purchase and sale of water , energy , fuels and other services . these contracts either contain express provisions or otherwise permit the company and its counterparties to demand adequate assurance of future performance when there are reasonable grounds for doing so . in accordance with the contracts and applicable contract law , if the company is downgraded by a credit rating agency , especially if such downgrade is to a level below investment grade , it is possible that a counterparty would attempt to rely on such a downgrade as a basis for making a demand for adequate assurance of future performance . depending on the company 2019s net position with the counterparty , the demand could be for the posting of collateral . in the absence of expressly agreed provisions that specify the collateral that must be provided , the obligation to supply the collateral requested will be a function of the facts and circumstances of the company 2019s situation at the time of the demand . if the company can reasonably claim that it is willing and financially able to perform its obligations , it may be possible that no collateral would need to be posted or that only an amount equal to two or three months of future payments should be sufficient . the company does not expect to post any collateral which will have a material adverse impact on the company 2019s results of operations , financial position or cash flows . note 12 : general taxes the following table summarizes the components of general tax expense for the years ended december 31 : 2017 2016 2015 gross receipts and franchise . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . $ 110 $ 106 $ 99 property and capital stock . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105 106 98 payroll . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31 32 31 other general . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13 14 15 total general taxes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . $ 259 $ 258 $ 243 .\n",
    "program": "# Average borrowings for 2016 and 2017\naverage_borrowings_2016 = 850  \naverage_borrowings_2017 = 779  \n\n# Compute percentage decrease (negative value)\nchange = average_borrowings_2017 - average_borrowings_2016  \npercent_change = (change / average_borrowings_2016) * 100  \n\n# Ensure negative percentage format and round to three decimal places\nanswer = round(percent_change, 3)",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 45,
        "total_numbers": 47
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 3.4965075614664807,
    "source_id": "test-39",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/691-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-394",
    "output": [
      "growth_2018_to_2019 = 661.5 - 587.7\n    growth_2017_to_2018 = 587.7 - 462.1\n    \n    difference = growth_2018_to_2019 - growth_2017_to_2018\n    \n    # return answer\n    return difference\n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 1886,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 1608
      },
      "total_tokens": 1982
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年到2019年的市场规模增长量，并将其与2017年到2018年的增长量进行比较；请提供结果的差值。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2017 = 535\n    value_2018 = 641\n    value_2019 = 770\n\n    # Multi-step logic\n    growth_2017_to_2018 = value_2018 - value_2017\n    growth_2018_to_2019 = value_2019 - value_2018\n    difference = growth_2018_to_2019 - growth_2017_to_2018\n    return difference",
    "image_id": "company_13_13_13_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-890",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2611-1.png",
      "./MultiFinance/images/2611-2.png",
      "./MultiFinance/images/2611-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2611-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-395",
    "output": [
      "brazil_export_rate = 11.1%\n    thailand_export_rate = 9.7%\n    brazil_import_rate = 1.2%\n    thailand_import_rate = 1.5%\n\n    # Do math calculation to get the answer\n    result = (brazil_export_rate + thailand_export_rate) / (brazil_import_rate + thailand_import_rate)\n\n    # return answer\n    return round(result, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 94,
      "prompt_tokens": 3997,
      "completion_tokens_details": {
        "text_tokens": 94
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 3732
      },
      "total_tokens": 4091
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算巴西和泰国的美国出口税率之和，然后除以它们的美国进口税率之和；请保留两位小数。",
    "python_solution": "def solution():\n    brazil_export_tax = 11.1\n    thailand_export_tax = 9.7\n    brazil_import_tax = 1.2\n    thailand_import_tax = 1.5\n\n    export_sum = brazil_export_tax + thailand_export_tax\n    import_sum = brazil_import_tax + thailand_import_tax\n    result = export_sum / import_sum\n    return round(result, 2)",
    "image_id": "macro_05_05_10_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2599",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2893-1.png",
      "./MultiFinance/images/2893-2.png",
      "./MultiFinance/images/2893-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2893-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-396",
    "output": [
      "old_exchange_stimulate = 1370\n    sales_without_old_exchange_policy = 8937\n    \n    # Do math calculation to get the answer\n    old_exchange_stimulate_multiple = old_exchange_stimulate / sales_without_old_exchange_policy * 100\n    \n    # return answer\n    return round(old_exchange_stimulate_multiple, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 85,
      "prompt_tokens": 2302,
      "completion_tokens_details": {
        "text_tokens": 85
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 2046
      },
      "total_tokens": 2387
    },
    "model": "qwen-omni-turbo",
    "question": "请计算家电类别的以旧换新拉动倍数，并将其四舍五入到小数点后一位。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    old_sales = 8937\n    new_sales = 10307\n    \n    # Multi-step logic\n    growth = (new_sales - old_sales) / old_sales\n    multiplier = growth * 100 + 100\n    return round(multiplier, 1)",
    "image_id": "macro_06_06_06_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2531",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2508-1.png",
      "./MultiFinance/images/2508-2.png",
      "./MultiFinance/images/2508-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2508-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-397",
    "output": [
      "profit_2023 = -58.6\n    profit_2024 = 14.6\n    \n    # Do math calculation to get the answer\n    growth_rate = (profit_2024 - profit_2023) / abs(profit_2023)\n    \n    # return answer\n    return round(growth_rate * 100, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 94,
      "prompt_tokens": 2460,
      "completion_tokens_details": {
        "text_tokens": 94
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 2205
      },
      "total_tokens": 2554
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年与2023年的营业利润增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    operating_profit_2023 = -58.6\n    operating_profit_2024 = 14.6\n    growth_rate = (operating_profit_2024 - operating_profit_2023) / abs(operating_profit_2023) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_36_36_01_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-334",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 6
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2818-1.png",
      "./MultiFinance/images/2818-2.png",
      "./MultiFinance/images/2818-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2818-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-398",
    "output": [
      "diesel_truck_value_2024_to_2027 = sum([1000, 1000, 1000, 1000])\n    \n    # Do math calculation to get the answer\n    total_diesel_truck_value = int(diesel_truck_value_2024_to_2027)\n    \n    # return answer\n    return total_diesel_truck_value\n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 2010,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1752
      },
      "total_tokens": 2106
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年到2027年柴油重卡单车价值量的总和，并保留整数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2024 = 1000\n    value_2025 = 1000\n    value_2026 = 1000\n    value_2027 = 1000\n\n    # Multi-step logic\n    total_value = value_2024 + value_2025 + value_2026 + value_2027\n    return int(total_value)",
    "image_id": "company_16_16_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1880",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2647-1.png",
      "./MultiFinance/images/2647-2.png",
      "./MultiFinance/images/2647-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2647-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-399",
    "output": [
      "year_2024 = 27.98\n    year_2028 = 289.92\n    \n    # Do math calculation to get the answer\n    growth_rate = ((year_2028 - year_2024) / year_2024) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 95,
      "prompt_tokens": 1855,
      "completion_tokens_details": {
        "text_tokens": 95
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1593
      },
      "total_tokens": 1950
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年到2028年BBU市场空间的增长率。请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    bbu_market_2024 = 27.98\n    bbu_market_2028 = 289.92\n\n    # Multi-step logic\n    growth_rate = (bbu_market_2028 - bbu_market_2024) / bbu_market_2024 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_02_02_16_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-109",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2695-1.png",
      "./MultiFinance/images/2695-2.png",
      "./MultiFinance/images/2695-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2695-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-400",
    "output": [
      "year_1 = 11.9\n    year_2 = 14.8\n    year_3 = 20.9\n    year_4 = 36.2\n    year_5 = 59.7\n    \n    # Do math calculation to get the answer\n    total_growth = (year_5 - year_1) + (year_2 - year_1) + (year_3 - year_2) + (year_4 - year_3)\n    average_growth_rate = total_growth / 4\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 137,
      "prompt_tokens": 1513,
      "completion_tokens_details": {
        "text_tokens": 137
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1254
      },
      "total_tokens": 1650
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2014年到2018年期间，该指标的平均年增长率。请保留两位小数。",
    "python_solution": "def solution():\n    values = [11.9, 14.8, 20.9, 36.2, 59.7]\n    total_growth = (values[-1] / values[0]) ** (1 / (len(values) - 1)) - 1\n    return round(total_growth * 100, 2)",
    "image_id": "company_27_27_06_figure_5",
    "source": "CRRQA",
    "source_id": "CRRQA-company-434",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 10
      }
    },
    "difficulty": 4.025351690735149,
    "images": [
      "./MultiFinance/images/2339-1.png",
      "./MultiFinance/images/2339-2.png",
      "./MultiFinance/images/2339-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2339-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-401",
    "output": [
      "principal = 700000 * (1 - 0.3)\n    interest_rate = 4 / 12 / 100\n    term_years = 25\n    term_months = term_years * 12\n    \n    # Calculate monthly payment using the formula for an amortizing loan\n    monthly_payment = (principal * interest_rate) / (1 - (1 + interest_rate) ** (-term_months))\n    \n    # return answer\n    return round(monthly_payment, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 123,
      "prompt_tokens": 485,
      "completion_tokens_details": {
        "text_tokens": 123
      },
      "prompt_tokens_details": {
        "text_tokens": 323,
        "image_tokens": 162
      },
      "total_tokens": 608
    },
    "model": "qwen-omni-turbo",
    "question": "Ricky is considering purchasing an apartment costing $700,000. He will pay a 30% down payment and take out a mortgage for the remainder. Since he just got married and wants to save some money for future use, he will choose the plan with the lowest monthly payment. After visiting several banks, he received the following mortgage offers: <image 1> What is the monthly payment for Bank C? Answer to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_96",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/204-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-402",
    "output": [
      "fund1_name = \"招商安和\"\n    fund2_name = \"华夏稳享增利6个月滚动\"\n    \n    fund1_return_rate = 1.52% \n    fund2_return_rate = 1.46%\n    \n    difference = abs(fund1_return_rate - fund2_return_rate)\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return difference\n\n# Call function and print result\nresult = solution()\nprint(result)"
    ],
    "usage": {
      "completion_tokens": 102,
      "prompt_tokens": 3505,
      "completion_tokens_details": {
        "text_tokens": 102
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 3232
      },
      "total_tokens": 3607
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中某基金的年化收益率，并将其与另一基金进行比较。首先，计算两个基金的年化收益率，然后求出它们之间的差值；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    fund_a_return = 0.1234\n    fund_b_return = 0.0987\n\n    # Multi-step logic\n    annualized_return_a = (1 + fund_a_return) ** (1 / 5) - 1\n    annualized_return_b = (1 + fund_b_return) ** (1 / 5) - 1\n    difference = annualized_return_a - annualized_return_b\n\n    return round(difference, 2)",
    "image_id": "macro_00_00_09_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2579",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 4,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 2
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 10
      }
    },
    "difficulty": 4.867534450455583,
    "images": [
      "./MultiFinance/images/2186-1.png",
      "./MultiFinance/images/2186-2.png",
      "./MultiFinance/images/2186-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2186-2.png",
      "./MultiFinance/images/2186-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-403",
    "output": [
      "loan_growth_rate = (17.5 - 13.84) / 13.84 * 100\n    \n    # Do math calculation to get the answer\n    average_loan_growth_rate = sum(loan_growth_rate) / len(loan_growth_rate)\n    \n    # return answer\n    return round(average_loan_growth_rate, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 83,
      "prompt_tokens": 3974,
      "completion_tokens_details": {
        "text_tokens": 83
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 3717
      },
      "total_tokens": 4057
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2017年至2025年新增人民币贷款的平均增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    loans = [13.84, 15.67, 16.88, 20, 20, 20.9, 22.2, 17.05, 17.5]\n    total_growth = 0\n    for i in range(1, len(loans)):\n        growth = (loans[i] - loans[i-1]) / loans[i-1] * 100\n        total_growth += growth\n    average_growth = total_growth / (len(loans) - 1)\n    return round(average_growth, 2)",
    "image_id": "macro_09_09_33_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2639",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 8
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 4,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 12
      }
    },
    "difficulty": 4.6443908991413725,
    "images": [
      "./MultiFinance/images/2214-1.png",
      "./MultiFinance/images/2214-2.png",
      "./MultiFinance/images/2214-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2214-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-404",
    "output": [
      "non_interest_expense_2019 = 61866\n    non_interest_expense_2020 = 60360\n    \n    # Calculate the difference\n    difference = non_interest_expense_2019 - non_interest_expense_2020\n    \n    # Calculate the percentage change\n    percentage_change = (difference / non_interest_expense_2019) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 120,
      "prompt_tokens": 1508,
      "completion_tokens_details": {
        "text_tokens": 120
      },
      "prompt_tokens_details": {
        "text_tokens": 287,
        "image_tokens": 1221
      },
      "total_tokens": 1628
    },
    "model": "qwen-omni-turbo",
    "question": "What is the decrease in percentage terms of Non-Interest Expense between the Nine Months ended September 30, 2019 and the Nine Months ended September 30, 2020?",
    "python_solution": "def solution():\n    #Define variables name and value\n    Non_Interest_Expense_2019 = 61866 \n    Non_Interest_Expense_2020 = 60360 \n\n    #Do math calculation to get the answer\n    decrease = Non_Interest_Expense_2019 - Non_Interest_Expense_2020\n    answer = (decrease / Non_Interest_Expense_2019) * 100\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-95",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2005-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-405",
    "output": [
      "S = 76\n    K = 70\n    r = 0.05\n    T = 9/12\n    sigma = 0.49\n    \n    d1 = (log(S/K) + (r + sigma**2/2)*T)/(sigma*sqrt(T))\n    d2 = d1 - sigma*sqrt(T)\n    \n    # Calculate the delta for a put option using Black-Scholes formula\n    delta_put = exp(-r*T)*(norm.cdf(-d2))\n    \n    # Return the calculated delta rounded to four decimal places\n    return round(delta_put, 4)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 148,
      "prompt_tokens": 340,
      "completion_tokens_details": {
        "text_tokens": 148
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 87
      },
      "total_tokens": 488
    },
    "model": "qwen-omni-turbo",
    "question": "What are the deltas of a put option with the following characteristics?<image 1> Answer to four decimal places.",
    "explanation": "?",
    "img_type": "['Other']",
    "subject": "Accounting",
    "source_id": "test_Accounting_256",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/144-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-406",
    "output": [
      "year_1 = 3724\n    year_2 = 9367\n    year_3 = 3187\n    year_4 = 6273\n    \n    # Do math calculation to get the answer\n    total = (year_2 - year_1) + (year_3 - year_2) + (year_4 - year_3)\n    average_growth_rate = ((total / (year_1 * 3)) ** (1/3)) - 1\n    \n    answer = round(average_growth_rate * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 2654,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 2398
      },
      "total_tokens": 2795
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2026年经营活动现金流的年均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    cash_flow_2023 = 3724\n    cash_flow_2026 = 6273\n    years = 3\n    growth_rate = ((cash_flow_2026 / cash_flow_2023) ** (1/years) - 1) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_11_11_31_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1313",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2479-1.png",
      "./MultiFinance/images/2479-2.png",
      "./MultiFinance/images/2479-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2479-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-407",
    "output": [
      "net_loss_2020 = -7373\n    stock_based_compensation_expense = 90\n    preferred_stock_dividends = -707\n    \n    # Do math calculation to get the answer\n    net_equity_change = net_loss_2020 + stock_based_compensation_expense + preferred_stock_dividends\n    \n    # return answer\n    return net_equity_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 102,
      "prompt_tokens": 837,
      "completion_tokens_details": {
        "text_tokens": 102
      },
      "prompt_tokens_details": {
        "text_tokens": 283,
        "image_tokens": 554
      },
      "total_tokens": 939
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in the company's net equity from 2020 to 2021 after adjusting for the stock-based compensation expenses and preferred stock dividends in thousands of dollars?",
    "python_solution": "def solution():\n     #Define variables name and value\n    equity_2021 = 81720 \n    equity_2020 = 41119 \n    compensation_expense_2021 = 2898\n    compensation_expense_2020 = 1788 \n    dividends_2021 = 707\n\n    #Do math calculation to get the answer\n    adjusted_equity_2021 = equity_2021 + compensation_expense_2021 + dividends_2021\n    adjusted_equity_2020 = equity_2020 + compensation_expense_2020\n    equity_change = adjusted_equity_2021 - adjusted_equity_2020\n    return equity_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-238",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2099-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 0
      }
    },
    "difficulty": 3.7841896339182615,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-408",
    "output": [
      "year_1 = 2238\n    year_2 = 2803\n    year_3 = 3365\n    \n    # Do math calculation to get the answer\n    growth_rate_year_1 = (year_2 - year_1) / year_1 * 100\n    growth_rate_year_2 = (year_3 - year_2) / year_2 * 100\n    \n    average_growth_rate = (growth_rate_year_1 + growth_rate_year_2) / 2\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 145,
      "prompt_tokens": 2752,
      "completion_tokens_details": {
        "text_tokens": 145
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 2491
      },
      "total_tokens": 2897
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2025年到2027年营业收入的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    revenue_2025 = 2238\n    revenue_2027 = 3365\n    growth_rate = ((revenue_2027 / revenue_2025) ** (1/2) - 1) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_29_29_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1312",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 8
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2571-1.png",
      "./MultiFinance/images/2571-2.png",
      "./MultiFinance/images/2571-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2571-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-409",
    "output": [
      "january_1_total_equity = 5383\n    march_31_total_equity = 3477\n    \n    # Calculate the percentage change\n    percentage_change = ((march_31_total_equity - january_1_total_equity) / january_1_total_equity) * 100\n    \n    # Return the answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 99,
      "prompt_tokens": 974,
      "completion_tokens_details": {
        "text_tokens": 99
      },
      "prompt_tokens_details": {
        "text_tokens": 282,
        "image_tokens": 692
      },
      "total_tokens": 1073
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the total equity of InspireMD, Inc. from January 1, 2020 to March 31, 2020?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    initial_equity = 5383 # Total equity at the start of the period \n\n    final_equity = 3477 # Total equity at the end of the period\n\n    #Do math calculation to get the answer\n    change_in_equity = ((final_equity - initial_equity ) / initial_equity ) * 100\n    answer = change_in_equity\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-69",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1984-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-410",
    "output": [
      "year_list = [2017, 2018, 2019, 2020, 2021, 2022, 2023]\n    commission_rate_list = [2.54, 2.66, 2.71, 2.74, 2.89, 3.05, 3.05, 3.35]\n    \n    total_growth = 0\n    for i in range(1, len(year_list)):\n        growth = (commission_rate_list[i] - commission_rate_list[i-1]) / commission_rate_list[i-1]\n        total_growth += growth\n    \n    average_growth = total_growth / (len(year_list) - 1)\n    answer = round(average_growth * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 204,
      "prompt_tokens": 1867,
      "completion_tokens_details": {
        "text_tokens": 204
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 1597
      },
      "total_tokens": 2071
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算公司新房业务佣金率在2017年到2024年Q1-Q3期间的平均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    commission_rate_2017 = 2.54\n    commission_rate_2024Q1Q3 = 3.35\n\n    # Multi-step logic\n    growth_rate = ((commission_rate_2024Q1Q3 / commission_rate_2017) ** (1/7) - 1) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_06_06_23_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1477",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 8
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2332-1.png",
      "./MultiFinance/images/2332-2.png",
      "./MultiFinance/images/2332-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2332-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-411",
    "output": [
      "jan_2024_sales = 52.19\n    dec_2023_sales = 29.14\n    \n    growth_rate = (jan_2024_sales - dec_2023_sales) / dec_2023_sales * 100\n    \n    # Return the calculated growth rate as a percentage rounded to two decimal places\n    return round(growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 2114,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 1854
      },
      "total_tokens": 2221
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年1月和2023年1月插混车型销量的增长率，并保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    sales_2024_jan = 54.00\n    sales_2023_jan = 52.19\n\n    # Multi-step logic\n    growth_rate = (sales_2024_jan - sales_2023_jan) / sales_2023_jan * 100\n    return round(growth_rate, 2)",
    "image_id": "company_16_16_14_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1890",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2752-1.png",
      "./MultiFinance/images/2752-2.png",
      "./MultiFinance/images/2752-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2752-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-412",
    "output": [
      "other_share = 19.90 + 25.90 + 24.70 + 22.00 + 5.50 + 2.30\n    top_five_share = 10 + 8 + 7 + 5 + 5\n    answer = round(other_share - top_five_share, 1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 1617,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1356
      },
      "total_tokens": 1708
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算其他类别的市场份额占比，并将其与前五大公司的市场份额总和进行比较，结果保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    other = 38\n    top_five = 11 + 10 + 8 + 7 + 5\n\n    # Multi-step logic\n    difference = other - top_five\n    return round(difference, 1)",
    "image_id": "company_32_32_10_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1105",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.737669618283368,
    "images": [
      "./MultiFinance/images/2520-1.png",
      "./MultiFinance/images/2520-2.png",
      "./MultiFinance/images/2520-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2520-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-413",
    "output": [
      "num_2021 = 8\n    num_2022 = 5\n    num_2020 = 5\n    \n    # Do math calculation to get the answer\n    total_num = (num_2021 + num_2022) / 2 * num_2020\n    answer = round(total_num * 100)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 97,
      "prompt_tokens": 2842,
      "completion_tokens_details": {
        "text_tokens": 97
      },
      "prompt_tokens_details": {
        "text_tokens": 286,
        "image_tokens": 2556
      },
      "total_tokens": 2939
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年与2022年的发射次数之和，然后将该和除以2020年的发射次数，最后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    launch_2020 = 5\n    launch_2021 = 8\n    launch_2022 = 5\n    sum_launches = launch_2021 + launch_2022\n    ratio = sum_launches / launch_2020\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_22_22_17_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-303",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2914-1.png",
      "./MultiFinance/images/2914-2.png",
      "./MultiFinance/images/2914-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2914-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-414",
    "output": [
      "total_holding_ratio = 1 - 40.15% - 1.68% - 1.66% - 1.34% - 1.30% - 1.11% - 0.85% - 0.83% - 0.69% - 0.68%\n    \n    # Do math calculation to get the answer\n    answer = round(total_holding_ratio * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 133,
      "prompt_tokens": 1985,
      "completion_tokens_details": {
        "text_tokens": 133
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1726
      },
      "total_tokens": 2118
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中前十大股东中，除最大股东外其他股东的持股比例总和，并将结果保留两位小数。",
    "python_solution": "def solution():\n    share_others = 1.68 + 1.66 + 1.34 + 1.30 + 1.11 + 0.85 + 0.83 + 0.69 + 0.68\n    return round(share_others, 2)",
    "image_id": "company_29_29_03_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1294",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 9
      },
      "operator_statistics": {
        "operators": {
          "+": 8,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 2,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2967-1.png",
      "./MultiFinance/images/2967-2.png",
      "./MultiFinance/images/2967-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2967-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-415",
    "output": [
      "current_service_costs = 470\n    past_service_costs = 0\n    employer_contributions = 1200\n    benefit_obligation_beginning_year = 45000\n    benefit_obligation_end_year = 48395\n    plan_assets_beginning_year = 40800\n    plan_assets_end_year = 44300\n    actuarial_loss = 350\n    actual_return_on_plan_assets = 3100\n    discount_rate_on_plan_liabilities = 7.5\n    expected_rate_of_return_on_plan_assets = 8.2\n    \n    # Do math calculation to get the answer\n    payment_given_out_during_the_year = (current_service_costs + past_service_costs) - ((benefit_obligation_end_year - benefit_obligation_beginning_year) + (plan_assets_end_year - plan_assets_beginning_year) - actuarial_loss)\n    \n    # return answer\n    return round(payment_given_out_during_the_year, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 225,
      "prompt_tokens": 1498,
      "completion_tokens_details": {
        "text_tokens": 225
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 1226
      },
      "total_tokens": 1723
    },
    "model": "qwen-omni-turbo",
    "question": "XYZ NY, a home decor shopping enterprise, provides its employees with a defined benefit pension plan. The related data is as follows: The payment given out during the year is: Answer to a single decimal place.",
    "python_solution": "def solution():\n    plan_assets_end = 44300\n    plan_assets_begin = 40800\n    employer_contributions = 1200\n    actual_return_assets = 3100\n    benefit_paid = plan_assets_end - (plan_assets_begin + employer_contributions + actual_return_assets)\n    return -benefit_paid",
    "topic": "Accounting",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "source_id": "validation-51",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/309-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-416",
    "output": [
      "total_shares = 10000000000  # Assuming total shares as 1 billion for calculation\n    domestic_state_owned_entities_direct_holding_percentage = 35.89\n    \n    # Calculate the proportion of domestic state-owned entities' direct holdings in the total shares\n    proportion = (domestic_state_owned_entities_direct_holding_percentage / 100) * total_shares\n    \n    # Return the calculated proportion\n    return proportion\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 3637,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 3379
      },
      "total_tokens": 3750
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算境内国有法人合计直接持股比例占上海银行总股本的比例；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share_a = 8.30\n    share_b = 14.68\n    share_c = 1.94\n    share_d = 2.05\n    share_e = 4.84\n    share_f = 4.08\n    \n    total_share = share_a + share_b + share_c + share_d + share_e + share_f\n    percentage = total_share / 100 * 100\n    return round(percentage, 2)",
    "image_id": "company_07_07_08_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1831",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2271-1.png",
      "./MultiFinance/images/2271-2.png",
      "./MultiFinance/images/2271-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2271-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-417",
    "output": [
      "year_2017 = [3.5, -1.1, 3]\n    year_2018 = [9.2, 7, 10.8]\n    year_2019 = [13.5, 7, 10.8]\n    \n    # Calculate growth rate for each year\n    growth_rate_2018 = (year_2018[1] - year_2017[1]) / year_2017[1]\n    growth_rate_2019 = (year_2019[1] - year_2018[1]) / year_2018[1]\n    \n    # Calculate average growth rate over three years\n    avg_growth_rate = (growth_rate_2018 + growth_rate_2019) / 2\n    \n    # Compare with previous period's growth rate\n    prev_period_growth_rate = (year_2019[0] - year_2017[0]) / year_2017[0]\n    \n    # Return the result as a string\n    return f\"Average growth rate from 2018 to 2019: {avg_growth_rate:.2f}%, Previous period's growth rate: {prev_period_growth_rate:.2f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 294,
      "prompt_tokens": 2518,
      "completion_tokens_details": {
        "text_tokens": 294
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 2239
      },
      "total_tokens": 2812
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2020年到2022年间新能源零售渗透率的增长率，并将其与2018年到2020年的增长率进行比较；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2018 = 3.5\n    value_2020 = 3.0\n    value_2022 = 7.0\n    years_1 = 2\n    years_2 = 2\n\n    # Multi-step logic\n    growth_1 = (value_2020 - value_2018) / value_2018\n    growth_2 = (value_2022 - value_2020) / value_2020\n    comparison = growth_2 - growth_1\n    return round(comparison, 2)",
    "image_id": "company_16_16_09_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1889",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 6
      }
    },
    "difficulty": 4.430816798843313,
    "images": [
      "./MultiFinance/images/2248-1.png",
      "./MultiFinance/images/2248-2.png",
      "./MultiFinance/images/2248-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2248-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-418",
    "output": [
      "current_price = 41.61\n    high_price = 51.41\n    low_price = 35.45\n    \n    # Calculate price fluctuation range in percentage\n    price_fluctuation_range = ((high_price - low_price) / current_price) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(price_fluctuation_range, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 488,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 230
      },
      "total_tokens": 592
    },
    "model": "qwen-omni-turbo",
    "question": "请计算该股票的52周价格波动范围，并将其表示为当前股价的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    current_price = 41.61\n    high_52_week = 51.41\n    low_52_week = 35.45\n    range_52_week = high_52_week - low_52_week\n    percentage_of_current = (range_52_week / current_price) * 100\n    return round(percentage_of_current, 1)",
    "image_id": "company_12_12_00_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1573",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2976-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2976-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-419",
    "output": [
      "eps_2022A = 1.54\n    eps_2023A = 1.95\n    eps_2024E = 1.76\n    eps_2025E = 2.25\n    eps_2026E = 2.78\n    \n    # Do math calculation to get the answer\n    average_eps = (eps_2022A + eps_2023A + eps_2024E + eps_2025E + eps_2026E) / 5\n    \n    # return answer\n    return round(average_eps, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 163,
      "prompt_tokens": 3646,
      "completion_tokens_details": {
        "text_tokens": 163
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 3384
      },
      "total_tokens": 3809
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算拓普集团在2022年到2026年的平均EPS；请保留两位小数。",
    "python_solution": "def solution():\n    eps_2022 = 1.54\n    eps_2023 = 1.95\n    eps_2024 = 1.76\n    eps_2025 = 2.25\n    eps_2026 = 2.78\n    average_eps = (eps_2022 + eps_2023 + eps_2024 + eps_2025 + eps_2026) / 5\n    return round(average_eps, 2)",
    "image_id": "company_16_16_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1877",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2495-1.png",
      "./MultiFinance/images/2495-2.png",
      "./MultiFinance/images/2495-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2495-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-420",
    "output": [
      "state_1_SIZE_t = -3.0\n    state_1_EARNING_t = -2.92\n    state_1_MIDCAP_t = -0.06\n    \n    # Do math calculation to get the answer\n    diff = state_1_SIZE_t - state_1_EARNING_t\n    result = (diff / state_1_MIDCAP_t) * 100\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 114,
      "prompt_tokens": 1434,
      "completion_tokens_details": {
        "text_tokens": 114
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 1162
      },
      "total_tokens": 1548
    },
    "model": "qwen-omni-turbo",
    "question": "请计算状态1的SIZE_t与EARNING_t的差值，然后将该差值除以MIDCAP_t，并将结果乘以100；请保留一位小数。",
    "python_solution": "def solution():\n    size_t = -3.00\n    earning_t = -0.06\n    midcap_t = -2.92\n\n    diff = size_t - earning_t\n    ratio = diff / midcap_t\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "strategy_03_03_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2961",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.8712010109078907,
    "images": [
      "./MultiFinance/images/2424-1.png",
      "./MultiFinance/images/2424-2.png",
      "./MultiFinance/images/2424-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2424-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-421",
    "output": [
      "year_2025_marginal_profit = 7.57 - (-52.92)\n    year_2026_marginal_profit = 6.65 - 7.57\n    \n    growth_rate = (year_2026_marginal_profit - year_2025_marginal_profit) / year_2025_marginal_profit * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 120,
      "prompt_tokens": 3122,
      "completion_tokens_details": {
        "text_tokens": 120
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 2867
      },
      "total_tokens": 3242
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2025年和2026年毛利总额的增长率，并保留两位小数。",
    "python_solution": "def calculate_growth_rate_2025_2026():\n    profit_2025 = 287.19\n    profit_2026 = 622.96\n    growth_rate = (profit_2026 - profit_2025) / profit_2025 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_21_21_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-835",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2952-1.png",
      "./MultiFinance/images/2952-2.png",
      "./MultiFinance/images/2952-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2952-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-422",
    "output": [
      "fourth_item_2021 = -8.45\n    fifth_item_2021 = -9.84\n    sixth_item_2021 = -7.89\n    \n    # Do math calculation to get the answer\n    difference = fourth_item_2021 - fifth_item_2021\n    result = (difference / sixth_item_2021) * 100\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 121,
      "prompt_tokens": 1359,
      "completion_tokens_details": {
        "text_tokens": 121
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 1086
      },
      "total_tokens": 1480
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年第四项指标与第五项指标的差值，并将该差值除以第六项指标，最后将结果转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_4_2021 = 68.40\n    value_5_2021 = 3.56\n    value_6_2021 = -19.86\n\n    diff = value_4_2021 - value_5_2021\n    ratio = diff / value_6_2021\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_27_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2883",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2789-1.png",
      "./MultiFinance/images/2789-2.png",
      "./MultiFinance/images/2789-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2789-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-423",
    "output": [
      "dec_31_2019_total_equity = 20853235\n    sep_30_2020_total_equity = 1532832\n    \n    # Calculate the difference between the two dates\n    difference = sep_30_2020_total_equity - dec_31_2019_total_equity\n    \n    # Calculate the percentage change\n    percentage_change = (difference / dec_31_2019_total_equity) * 100\n    \n    # Return the result as a string with one decimal place\n    return f\"{percentage_change:.1f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 145,
      "prompt_tokens": 901,
      "completion_tokens_details": {
        "text_tokens": 145
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 623
      },
      "total_tokens": 1046
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage increase or decrease in the total equity from December 31, 2019 to September 30, 2020?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    initial_equity = 20853235  #Total Equity as of December 31, 2019\n\n    final_equity = 15532832  # Balance as of September 30, 2020\n\n    #Do math calculation to get the answer\n    change_in_equity = final_equity - initial_equity\n    percent_change_in_equity = (change_in_equity /initial_equity)*100 \n    answer = percent_change_in_equity\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-115",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2022-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-424",
    "output": [
      "current_market_value = 333.38\n    max_market_value = 333.38 * (12.63 - 8.46) / 8.46\n    \n    # Calculate the difference between current market value and max market value\n    diff = max_market_value - current_market_value\n    \n    # Divide the difference by current market value and multiply by 100 to convert it into percentage\n    result = (diff / current_market_value) * 100\n    \n    # Round the result to one decimal place\n    result = round(result, 1)\n    \n    # Return the final result\n    return result\n```"
    ],
    "usage": {
      "completion_tokens": 142,
      "prompt_tokens": 414,
      "completion_tokens_details": {
        "text_tokens": 142
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 137
      },
      "total_tokens": 556
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据计算该股票的当前市值与一年最高市值之间的差值，然后将这个差值除以当前市值，得到的结果乘以100转化为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    current_market_value = 333.38\n    highest_market_value = 12.63 * 37.50\n\n    diff = highest_market_value - current_market_value\n    ratio = diff / current_market_value\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_31_31_00_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1736",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2836-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2836-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-425",
    "output": [
      "A_class_stock = 57.01\n    B_class_stock = 44.63\n    total_stock = A_class_stock + B_class_stock\n    \n    percentage = (total_stock / 3677.06) * 100\n    \n    # return answer\n    return round(percentage, 1)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 84,
      "prompt_tokens": 1852,
      "completion_tokens_details": {
        "text_tokens": 84
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1589
      },
      "total_tokens": 1936
    },
    "model": "qwen-omni-turbo",
    "question": "请计算单一刚的A类普通股与B类普通股总数，并将其占总股本的比例以百分比形式表示；保留一位小数。",
    "python_solution": "def solution():\n    a_class_shares_dan = 57.01\n    b_class_shares_dan = 44.63\n    total_shares_dan = a_class_shares_dan + b_class_shares_dan\n    total_shares = 3677.06\n    percentage = (total_shares_dan / total_shares) * 100\n    return round(percentage, 1)",
    "image_id": "company_06_06_06_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1450",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2972-1.png",
      "./MultiFinance/images/2972-2.png",
      "./MultiFinance/images/2972-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2972-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-426",
    "output": [
      "wu_guangming_shares = 93.03\n    wu_group_shares = 6.97\n    total_shares = 100\n    \n    # Calculate the sum of shares held by Wu Guangming and Wu Group\n    total_held_by_wu = wu_guangming_shares + wu_group_shares\n    \n    # Calculate the percentage of total shares held by Wu Guangming and Wu Group\n    percentage_held_by_wu = (total_held_by_wu / total_shares) * 100\n    \n    # Return the calculated percentage as a string with one decimal place\n    return f\"{percentage_held_by_wu:.1f}%\"\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 163,
      "prompt_tokens": 2295,
      "completion_tokens_details": {
        "text_tokens": 163
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 2015
      },
      "total_tokens": 2458
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算江苏鱼跃医疗设备股份有限公司的股权结构中，实际控制人（吴光明和吴群）的持股比例占总股本的比例，并将其转换为百分比形式；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    total_shares = 100\n    wu_guangming_shares = 55.99\n    wu_qun_shares = 96.67 - 55.99\n\n    # Multi-step logic\n    total_controlled_shares = wu_guangming_shares + wu_qun_shares\n    percentage = (total_controlled_shares / total_shares) * 100\n    return round(percentage, 1)",
    "image_id": "company_34_34_07_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-483",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2390-1.png",
      "./MultiFinance/images/2390-2.png",
      "./MultiFinance/images/2390-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2390-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-427",
    "output": [
      "year_2023 = 21.99\n    year_2024 = 21.87\n    year_2025 = 18.67\n    year_2026 = 16.58\n    \n    # Do math calculation to get the answer\n    average_pe_ratio = (year_2023 + year_2024 + year_2025 + year_2026) / 4\n    \n    # return answer\n    return round(average_pe_ratio, 1)\n\n# Call function and print result\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 135,
      "prompt_tokens": 2465,
      "completion_tokens_details": {
        "text_tokens": 135
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 2201
      },
      "total_tokens": 2600
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算云南白药2023年到2026年的市盈率平均值；请保留一位小数。",
    "python_solution": "def solution():\n    pe_2023 = 24.39\n    pe_2024 = 21.99\n    pe_2025 = 19.89\n    pe_2026 = 18.14\n    average_pe = (pe_2023 + pe_2024 + pe_2025 + pe_2026) / 4\n    return round(average_pe, 1)",
    "image_id": "company_12_12_28_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1584",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2741-1.png",
      "./MultiFinance/images/2741-2.png",
      "./MultiFinance/images/2741-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2741-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-428",
    "output": [
      "years = [2018, 2019, 2020, 2021, 2022, 2023]\n    bad_loan_ratios = [75%, 77%, 86%, 84%, 82%, 80%]\n    \n    # Calculate average bad loan ratio\n    total_ratio = sum(bad_loan_ratios)\n    average_ratio = total_ratio / len(years)\n    \n    # Return the result rounded to one decimal place\n    return round(average_ratio, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 137,
      "prompt_tokens": 1731,
      "completion_tokens_details": {
        "text_tokens": 137
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1470
      },
      "total_tokens": 1868
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年至2023年期间不良贷款的平均比例；请保留一位小数。",
    "python_solution": "def solution():\n    ratio_2018 = 103\n    ratio_2019 = 109\n    ratio_2020 = 95\n    ratio_2021 = 75\n    ratio_2022 = 77\n    ratio_2023 = 86\n\n    average_ratio = (ratio_2018 + ratio_2019 + ratio_2020 + ratio_2021 + ratio_2022 + ratio_2023) / 6\n    return round(average_ratio, 1)",
    "image_id": "company_04_04_17_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-712",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2324-1.png",
      "./MultiFinance/images/2324-2.png",
      "./MultiFinance/images/2324-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2324-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-429",
    "output": [
      "year_1 = 27165 * 28.0 / 100\n    year_2 = 31755 * 27.8 / 100\n    \n    # Do math calculation to get the answer\n    profit = year_2 - year_1\n    \n    # return answer\n    return int(profit)\n```"
    ],
    "usage": {
      "completion_tokens": 80,
      "prompt_tokens": 2259,
      "completion_tokens_details": {
        "text_tokens": 80
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 2003
      },
      "total_tokens": 2339
    },
    "model": "qwen-omni-turbo",
    "question": "请计算合计业务单元2022年到2023年的毛利润，并将结果保留整数。",
    "python_solution": "def solution():\n    revenue_2022 = 21348\n    margin_2022 = 26.1\n    profit_2022 = revenue_2022 * margin_2022 / 100\n\n    revenue_2023 = 24558\n    margin_2023 = 27.9\n    profit_2023 = revenue_2023 * margin_2023 / 100\n\n    total_profit = profit_2022 + profit_2023\n    return int(total_profit)",
    "image_id": "company_11_11_29_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1341",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2483-1.png",
      "./MultiFinance/images/2483-2.png",
      "./MultiFinance/images/2483-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2483-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-430",
    "output": [
      "total_shareholders_deficit_2021_q1 = 363075\n    net_cash_flows_used_in_operating_activities_2021_q1 = -25952\n    \n    # Calculate the rate of increase in total shareholders' deficit\n    rate_increase_total_shareholders_deficit = (total_shareholders_deficit_2021_q1 - 325988) / 325988 * 100\n    \n    # Calculate the rate of increase in net cash flows used in operating activities\n    rate_increase_net_cash_flows_used_in_operating_activities = (-25952 - -14026) / -14026 * 100\n    \n    # Calculate the required rate\n    answer = rate_increase_total_shareholders_deficit / rate_increase_net_cash_flows_used_in_operating_activities\n    \n    # return answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 214,
      "prompt_tokens": 2797,
      "completion_tokens_details": {
        "text_tokens": 214
      },
      "prompt_tokens_details": {
        "text_tokens": 293,
        "image_tokens": 2504
      },
      "total_tokens": 3011
    },
    "model": "qwen-omni-turbo",
    "question": "What is the rate at which the total shareholders' deficit increased over the first quarter of 2021, expressed as a percentage of the increase in the net cash flows used in operating activities over the same period?",
    "python_solution": "def solution():\n    #Define variables name and value\n    TSD_2020_Dec = -325988\n    TSD_2021_Mar = -363075\n    NCOA_2020 = -14026\n    NCOA_2021 = -25952\n\n    #Do math calculation to get the answer\n    increase_in_TSD = TSD_2021_Mar - TSD_2020_Dec\n    increase_in_NCOA = NCOA_2021 - NCOA_2020\n    answer = (increase_in_TSD / increase_in_NCOA) * 100\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-250",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2106-1.png",
      "./MultiFinance/images/2106-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 6,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 4.477336814478207,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-431",
    "output": [
      "year_1 = 30.9\n    year_2 = 43.4\n    year_3 = 73.7\n    year_4 = 73.3\n    \n    # Do math calculation to get the answer\n    average = (year_1 + year_2 + year_3 + year_4) / 4\n    \n    # return answer\n    return round(average, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 94,
      "prompt_tokens": 1513,
      "completion_tokens_details": {
        "text_tokens": 94
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1254
      },
      "total_tokens": 1607
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2015年到2018年间个险渠道占比的平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    individual_insurance_2015 = 30.9\n    individual_insurance_2016 = 43.4\n    individual_insurance_2017 = 73.7\n    individual_insurance_2018 = 73.3\n\n    # Multi-step logic\n    total_individual_insurance = individual_insurance_2015 + individual_insurance_2016 + individual_insurance_2017 + individual_insurance_2018\n    average_individual_insurance = total_individual_insurance / 4\n    return round(average_individual_insurance, 2)",
    "image_id": "company_27_27_06_figure_8",
    "source": "CRRQA",
    "source_id": "CRRQA-company-442",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2387-1.png",
      "./MultiFinance/images/2387-2.png",
      "./MultiFinance/images/2387-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2387-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-432",
    "output": [
      "negative_changes = [2.9, -12.8, -13.0, -26.2]\n    \n    # Calculate the sum of absolute values of negative changes\n    total_negative_changes = sum(abs(change) for change in negative_changes)\n    \n    # Return the result rounded to the nearest integer\n    return round(total_negative_changes)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 88,
      "prompt_tokens": 1678,
      "completion_tokens_details": {
        "text_tokens": 88
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 1425
      },
      "total_tokens": 1766
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有负向涨跌幅度的绝对值总和，并将结果保留整数。",
    "python_solution": "def solution():\n    negative_performances = [-6.3, -7.0, -12.8, -13.0, -26.2]\n    total = sum(abs(x) for x in negative_performances)\n    return int(total)",
    "image_id": "market_06_06_15_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2657",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 5,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 6
      }
    },
    "difficulty": 3.401197381662155,
    "images": [
      "./MultiFinance/images/2809-1.png",
      "./MultiFinance/images/2809-2.png",
      "./MultiFinance/images/2809-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2809-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-433",
    "output": [
      "rating_2_month = [4, 0, 0]\n    rating_3_month = [5, 0, 0]\n    rating_6_month = [19, 0, 0]\n    \n    average_rating_2_month = sum(rating_2_month) / len(rating_2_month)\n    average_rating_3_month = sum(rating_3_month) / len(rating_3_month)\n    average_rating_6_month = sum(rating_6_month) / len(rating_6_month)\n    \n    # Do math calculation to get the answer\n    average_ratings = (average_rating_2_month + average_rating_3_month + average_rating_6_month) / 3\n    \n    # return answer\n    return round(average_ratings, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 180,
      "prompt_tokens": 1433,
      "completion_tokens_details": {
        "text_tokens": 180
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1172
      },
      "total_tokens": 1613
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算买入评级在二月内、三月内和六月内的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    buy_2_months = 4\n    buy_3_months = 5\n    buy_6_months = 19\n\n    # Multi-step logic\n    average_buy = (buy_2_months + buy_3_months + buy_6_months) / 3\n    return round(average_buy, 1)",
    "image_id": "company_09_09_21_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-25",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2585-1.png",
      "./MultiFinance/images/2585-2.png",
      "./MultiFinance/images/2585-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2585-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-434",
    "output": [
      "operating_leases_2018 = 118.8\n    operating_leases_2019 = 182.4\n    operating_leases_2021 = 110.4\n    \n    # Do math calculation to get the answer\n    average_operating_leases = (operating_leases_2018 + operating_leases_2019 + operating_leases_2021) / 3\n    \n    # return answer\n    return average_operating_leases\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 128,
      "prompt_tokens": 1546,
      "completion_tokens_details": {
        "text_tokens": 128
      },
      "prompt_tokens_details": {
        "text_tokens": 297,
        "image_tokens": 1249
      },
      "total_tokens": 1674
    },
    "model": "qwen-omni-turbo",
    "question": "What is the average value of Operating leases (b) in 2018 ,2019 and 2021? (in million)",
    "python_solution": "def solution():\n    # Define variables name and value\n    lease_2018 = 118.8\n    lease_2019 = 182.4\n    lease_2021 = 110.4\n    const_3 = 3\n\n    # Do math calculation to get the answer\n    total = lease_2018 + lease_2021 + lease_2019\n    answer = total / const_3\n    \n    return answer",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-90",
    "img_type": "['Tables']",
    "context": "The following table summarizes our future estimated cash payments under existing contractual obligations, including payments due by period:\n<image 1>",
    "images": [
      "./MultiFinance/images/1730-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-435",
    "output": [
      "fair_value_customer_relationships = 30000\n    total_intangible_assets_subject_to_amortization = 52900\n    \n    # Calculate the percentage constitution of customer relationships among the total intangible assets subject to amortization\n    percentage_constitution = (fair_value_customer_relationships / total_intangible_assets_subject_to_amortization) * 100\n    \n    # Return the calculated percentage\n    return percentage_constitution\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 1618,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 374,
        "image_tokens": 1244
      },
      "total_tokens": 1725
    },
    "model": "qwen-omni-turbo",
    "question": "For fair value, what would be the percentage constitution of customer relationships among the total intangible assets subject to amortization if the fair value of customer relationships was $30,000 thousand instead? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    customer_relationships = 30000\n    total_intangible_assets = 52900\n    original_customer_relationships = 16900\n    \n    # Do math calculation to get the answer\n    answer = (customer_relationships / (total_intangible_assets + (customer_relationships - original_customer_relationships))) * 100\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-115",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n The following table sets forth the components of identifiable intangible assets acquired and their estimated useful lives as of the date of acquisition. The amount recorded for developed technology represents the estimated fair value of AgileCraft’s enterprise agile planning technology. The amount recorded for customer relationships represents the fair value of the underlying relationships with AgileCraft’s customers. The amount recorded for backlog represents the fair value of AgileCraft’s backlog as of acquisition date.",
    "images": [
      "./MultiFinance/images/1854-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.6888794541139367,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-436",
    "output": [
      "T_5_net_profit = 8599\n    T_6_net_profit = 2150\n    T_4_net_profit = 8636\n    T_5_net_profit_growth_rate = (T_6_net_profit - T_5_net_profit) / T_5_net_profit * 100\n    T_4_net_profit_growth_rate = (T_5_net_profit - T_4_net_profit) / T_4_net_profit * 100\n    difference = T_4_net_profit_growth_rate - T_5_net_profit_growth_rate\n    \n    # return answer\n    return round(difference, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 156,
      "prompt_tokens": 3670,
      "completion_tokens_details": {
        "text_tokens": 156
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 3396
      },
      "total_tokens": 3826
    },
    "model": "qwen-omni-turbo",
    "question": "请计算T+5年度至T+6年度净利润的增长率，并将该增长率与T+4年度至T+5年度的增长率进行比较，计算差值；结果保留两位小数。",
    "python_solution": "def solution():\n    net_profit_t4 = 6477\n    net_profit_t5 = 6449\n    net_profit_t5_growth = (net_profit_t5 - net_profit_t4) / net_profit_t4 * 100\n\n    net_profit_t6 = 6420\n    net_profit_t6_growth = (net_profit_t6 - net_profit_t5) / net_profit_t5 * 100\n\n    difference = net_profit_t6_growth - net_profit_t5_growth\n    return round(difference, 2)",
    "image_id": "industry_07_07_28_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2356",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 4.248495242049359,
    "images": [
      "./MultiFinance/images/2289-1.png",
      "./MultiFinance/images/2289-2.png",
      "./MultiFinance/images/2289-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2289-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-437",
    "output": [
      "cme_group_return_2012_to_2017 = 370.32 - 100\n    annualized_return = ((cme_group_return_2012_to_2017 / 5) ** (1/5)) - 1\n    \n    # Return the answer rounded to the nearest integer\n    return round(annualized_return * 100)\n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 1861,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 599,
        "image_tokens": 1262
      },
      "total_tokens": 1952
    },
    "model": "qwen-omni-turbo",
    "question": "what is the anualized return for cme group from 2012 to 2017? Answer to the nearest integer.",
    "answer": "22",
    "context": "performance graph the following graph and table compares the cumulative five-year total return provided to shareholders on our class a common stock relative to the cumulative total returns of the s&p 500 index and our customized peer group . the peer group includes cboe holdings , inc. , intercontinentalexchange group , inc . and nasdaq , inc . an investment of $ 100 ( with reinvestment of all dividends ) is assumed to have been made in our class a common stock , in the peer group and the s&p 500 index on december 31 , 2012 , and its relative performance is tracked through december 31 , 2017 . comparison of 5 year cumulative total return* among cme group inc. , the s&p 500 index , and a peer group 12/12 12/13 12/14 12/15 12/16 cme group inc . s&p 500 peer group * $ 100 invested on 12/31/12 in stock or index , including reinvestment of dividends . fiscal year ending december 31 . copyright a9 2018 standard & poor 2019s , a division of s&p global . all rights reserved . the stock price performance included in this graph is not necessarily indicative of future stock price performance. .\n\n<image 1>\n\nunregistered sales of equity securities during the past three years there have not been any unregistered sales by the company of equity securities. .\n",
    "program": "cme_group_return = 370.32\nsnp_return = 100\npeer_group_return = 100\ncme_group_to_snp_return_difference = cme_group_return / snp_return\npeer_group_to_snp_return_difference = peer_group_return / snp_return\nannualized_return = (cme_group_to_snp_return_difference - peer_group_to_snp_return_difference) ** (1/5) - 1\nanswer = annualized_return * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 49,
        "total_numbers": 51
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 1
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 4.143134726391533,
    "source_id": "test-718",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1370-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-438",
    "output": [
      "year_1 = 7\n    year_2 = 8\n    year_3 = 15\n    year_4 = 26\n    year_5 = 41\n    year_6 = 67\n    year_7 = 109\n    year_8 = 175\n    year_9 = 281\n    year_10 = 452\n    \n    # Do math calculation to get the answer\n    total_years = year_1 + year_2 + year_3 + year_4 + year_5 + year_6 + year_7 + year_8 + year_9 + year_10\n    average_growth_rate = (total_years / len(years)) ** (1/len(years)) - 1\n    \n    # return answer\n    return round(average_growth_rate * 100, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 196,
      "prompt_tokens": 2316,
      "completion_tokens_details": {
        "text_tokens": 196
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2054
      },
      "total_tokens": 2512
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2019年到2024年管理费用的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    admin_expense_2019 = 47\n    admin_expense_2024 = 452\n    years = 5\n    growth_rate = ((admin_expense_2024 / admin_expense_2019) ** (1/years) - 1) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_29_29_06_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1301",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2477-1.png",
      "./MultiFinance/images/2477-2.png",
      "./MultiFinance/images/2477-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2477-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-439",
    "output": [
      "year_1_rate = 5/100\n    year_2_rate = 7/100\n    year_3_rate = 8/100\n    \n    year_1_value = (1 + year_1_rate)**-1\n    year_2_value = (1 + year_2_rate)**-2\n    year_3_value = (1 + year_3_rate)**-3\n    \n    total_value = year_1_value + year_2_value + year_3_value\n    \n    answer = ((total_value - 1) * 1000)/60\n    \n    # return answer\n    return round(answer, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 144,
      "prompt_tokens": 403,
      "completion_tokens_details": {
        "text_tokens": 144
      },
      "prompt_tokens_details": {
        "text_tokens": 310,
        "image_tokens": 93
      },
      "total_tokens": 547
    },
    "model": "qwen-omni-turbo",
    "question": "Prices of zero-coupon bonds reveal the following pattern of forward rates: <image 1> In addition to the zero-coupon bond, investors also may purchase a 3-year bond making annual payments of $60 with par value $1,000. Under the expectations hypothesis, what is the expected realized compound yield of the coupon bond? Answer as a percentage to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Accounting",
    "source_id": "test_Accounting_42",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/129-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-440",
    "output": [
      "total_units_sold = 90\n    total_cost_of_goods_sold = (20 * 5) + (70 * 5.2)\n    \n    units_purchased = 105\n    total_purchase_cost = (20 * 5) + (70 * 5.2) + (35 * 5.5)\n    \n    cost_per_unit = total_purchase_cost / units_purchased\n    \n    total_sales = (50 * 6) + (40 * 6.5)\n    \n    gross_profit = total_sales - total_cost_of_goods_sold\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(gross_profit, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 152,
      "prompt_tokens": 1507,
      "completion_tokens_details": {
        "text_tokens": 152
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1242
      },
      "total_tokens": 1659
    },
    "model": "qwen-omni-turbo",
    "question": "The inventory account of a company experienced the following transactions in June: Under the periodic FIFO inventory costing, what was the gross profit for June? Answer to a single decimal place.",
    "python_solution": "def solution():\n    sales = (50 * 6) + (40 * 6.5)\n    COGS = (20 * 5) + (70 * 5.2)\n    gross_profit = sales - COGS\n    return gross_profit",
    "topic": "Accounting",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 4,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 8
      }
    },
    "difficulty": 4.025351690735149,
    "source_id": "validation-36",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/304-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-441",
    "output": [
      "purchase_2010 = 5097\n    purchase_2011 = 15942\n    purchase_2012 = 85\n    growth_rate_purchase = (purchase_2011 - purchase_2010) / purchase_2010\n    purchase_2013 = purchase_2012 + (growth_rate_purchase * purchase_2012)\n    \n    # Do math calculation to get the answer\n    purchase_2014 = purchase_2013 + (growth_rate_purchase * purchase_2013)\n    \n    # return answer\n    return int(purchase_2014)\n```"
    ],
    "usage": {
      "completion_tokens": 153,
      "prompt_tokens": 1594,
      "completion_tokens_details": {
        "text_tokens": 153
      },
      "prompt_tokens_details": {
        "text_tokens": 332,
        "image_tokens": 1262
      },
      "total_tokens": 1747
    },
    "model": "qwen-omni-turbo",
    "question": "What will Purchase of minerals in-place reach in 2014 if it continues to grow at its current rate? (in thousand)",
    "python_solution": "def solution():\n    # Define variables name and value\n    growth_rate_2012_to_2013 = (85 - 15942) / 15942\n    constant_1 = 1\n    value_2014 = (1 + growth_rate_2012_to_2013)**2 * 85\n\n    return value_2014",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-68",
    "img_type": "['Tables']",
    "context": "The reserve data in the following tables only represent estimates and should not be construed as being exact.\n<image 1>\n(1) 2013 includes proved reserves of 45 MMbbls as of December 31, 2013 attributable to a noncontrolling interest in Egypt.",
    "images": [
      "./MultiFinance/images/1710-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.5553480614894135,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-442",
    "output": [
      "total = 0\n    elements = [12402, 4589, 2304, 767, 1481, 991, 405]\n    \n    # Do math calculation to get the answer\n    for element in elements:\n        if element > 10000:\n            total += element\n    \n    # return answer\n    return total\n\n```"
    ],
    "usage": {
      "completion_tokens": 93,
      "prompt_tokens": 1526,
      "completion_tokens_details": {
        "text_tokens": 93
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 1250
      },
      "total_tokens": 1619
    },
    "model": "qwen-omni-turbo",
    "question": "What's the sum of all element that are greater than 10000 in Mar 31, 2008 (in thousand)",
    "python_solution": "def solution():\n    # Define variables name and value\n    num1 = 12402\n    num2 = 19295\n    num3 = 22939\n    num4 = 11018\n    num5 = 19975\n\n    # Do math calculation to get the answer\n    answer = num1 + num2 + num3 + num4 + num5\n\n    return answer",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-67",
    "img_type": "['Tables']",
    "context": "<image 1>",
    "images": [
      "./MultiFinance/images/1709-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.58351893845611,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-443",
    "output": [
      "october_value = 15387\n    december_value = 10475\n    \n    # Calculate the percentage change\n    percentage_change = ((december_value - october_value) / october_value) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 79,
      "prompt_tokens": 1172,
      "completion_tokens_details": {
        "text_tokens": 79
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 899
      },
      "total_tokens": 1251
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change of the Approximate Dollar Value of Shares that May Yet Be Purchased Under the Plans or Programs from October to December?",
    "python_solution": "def solution():\n    #Define variables name and value\n    share_value_Oct = 15387 \n    share_value_Dec = 10475 \n\n    #Do math calculation to get the answer\n    percentage_change = ((share_value_Dec - share_value_Oct) / share_value_Oct) * 100\n    answer = percentage_change\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-96",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2006-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-444",
    "output": [
      "total_2022 = 1 - (0.4 + 0.71 + 0.85)\n    total_2023H1 = 1 - (0.8 + 0.91 + 0.85)\n    \n    difference = abs(total_2022 - total_2023H1)\n    \n    # return answer\n    return round(difference, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 1138,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 867
      },
      "total_tokens": 1234
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2022年和2023年上半年所有渠道的总占比，并求这两个时间点总占比之间的差值；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    direct_store_2022 = 21.5\n    brand_store_2022 = 5.7\n    corporate_client_2022 = 9.1\n\n    direct_store_2023H1 = 21.3\n    brand_store_2023H1 = 7.1\n    corporate_client_2023H1 = 8.5\n\n    # Multi-step logic\n    total_2022 = direct_store_2022 + brand_store_2022 + corporate_client_2022\n    total_2023H1 = direct_store_2023H1 + brand_store_2023H1 + corporate_client_2023H1\n\n    difference = abs(total_2023H1 - total_2022)\n\n    return round(difference, 1)",
    "image_id": "industry_16_16_29_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2277",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 4
      }
    },
    "difficulty": 4.430816798843313,
    "images": [
      "./MultiFinance/images/2251-1.png",
      "./MultiFinance/images/2251-2.png",
      "./MultiFinance/images/2251-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2251-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-445",
    "output": [
      "forward_points_1 = 4.40/100\n    forward_points_2 = 14.0/100\n    forward_points_3 = 29.0/100\n    \n    mid_point = (forward_points_1 + forward_points_2 + forward_points_3) / 3\n    \n    mark_to_market_gain = mid_point * 5000000\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(mark_to_market_gain, 3)\n\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 2861,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 377,
        "image_tokens": 2484
      },
      "total_tokens": 2979
    },
    "model": "qwen-omni-turbo",
    "question": "The chief financial officer of a manufacturing firm based in the UK, Susan Sullivan, gathers the exchange rates from Dealer B as given in Exhibit 1. The company will receive EUR 5,000,000 from a different client in three months. Half a year ago, the firm traded EUR 5,000,000 for GBP using a forward contract of nine months at an inclusive price of GBP/EUR 0.7400. Considering Exhibits 1 and 2, what would be the mark-to-market gain for Sullivan's forward position if the position is marked to the market by gathering the GBP/EUR forward rates displayed in Exhibit 2? Answer to three decimal places.",
    "python_solution": "def solution():\n    spot_rate = 0.7344\n    forward_points = 15/10000\n    three_month_forward_rate = spot_rate + forward_points\n    contract_rate = 0.7400\n    eur_amount = 5000000\n    libor_rate = 58/100\n\n    net_cash_flow = eur_amount * (contract_rate - three_month_forward_rate)\n    mark_to_market_gain = net_cash_flow / ((1 + libor_rate/100)**(3/12))\n\n    return mark_to_market_gain",
    "topic": "Market Analysis & Economics",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 1,
          "/": 5,
          "%": 0,
          "**": 1
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 8
      }
    },
    "difficulty": 4.867534450455583,
    "source_id": "validation-95",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/328-1.jpg",
      "./MultiFinance/images/328-2.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-446",
    "output": [
      "first_year_sales = 150000\n    second_year_sales = 200000\n    \n    # Do math calculation to get the answer\n    growth_rate = (second_year_sales - first_year_sales) / first_year_sales * 100\n    \n    # return answer\n    return round(growth_rate, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 80,
      "prompt_tokens": 2207,
      "completion_tokens_details": {
        "text_tokens": 80
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1945
      },
      "total_tokens": 2287
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2025年锂盐销量相对于2024年的增长百分比；请保留一位小数。",
    "python_solution": "def solution():\n    lithium_sales_2024 = 100  # 假设2024年锂盐销量为100\n    target_lithium_sales_2025 = 150  # 根据图中数据，2025年目标锂盐销量为2024年的150%\n    growth_percentage = (target_lithium_sales_2025 / lithium_sales_2024 - 1) * 100\n    return round(growth_percentage, 1)",
    "image_id": "company_32_32_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1118",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 1,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2961-1.png",
      "./MultiFinance/images/2961-2.png",
      "./MultiFinance/images/2961-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2961-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-447",
    "output": [
      "investment_advice_1 = 1\n    investment_advice_2 = -10\n    investment_advice_3 = 10\n    investment_advice_4 = -10\n    \n    # Do math calculation to get the answer\n    average_investment_advice = (investment_advice_1 + investment_advice_2 + investment_advice_3 + investment_advice_4) / 4\n    \n    # return answer\n    return round(average_investment_advice, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 109,
      "prompt_tokens": 967,
      "completion_tokens_details": {
        "text_tokens": 109
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 710
      },
      "total_tokens": 1076
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算行业指数相对同期证券市场代表性指数涨幅的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    value1 = 10.5\n    value2 = -5.3\n    value3 = -12.8\n\n    average = (value1 + value2 + value3) / 3\n    return round(average, 1)",
    "image_id": "industry_14_14_33_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-1982",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2683-1.png",
      "./MultiFinance/images/2683-2.png",
      "./MultiFinance/images/2683-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2683-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-448",
    "output": [
      "net_impairment_2012 = -16.9\n    net_impairment_2011 = -14.9\n    \n    # Calculate the change in net impairment from 2011 to 2012\n    change_in_net_impairment = net_impairment_2012 - net_impairment_2011\n    \n    # Return the change in net impairment as a percentage\n    return round((change_in_net_impairment / abs(net_impairment_2011)) * 100, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 140,
      "prompt_tokens": 2092,
      "completion_tokens_details": {
        "text_tokens": 140
      },
      "prompt_tokens_details": {
        "text_tokens": 860,
        "image_tokens": 1232
      },
      "total_tokens": 2232
    },
    "model": "qwen-omni-turbo",
    "question": "what was the change in the net impairment from 2011 to 2012? Answer as percentage to three decimal places.",
    "answer": "13.423",
    "context": "net impairment we recognized $ 16.9 million and $ 14.9 million of net impairment during the years ended december 31 , 2012 and 2011 , respectively , on certain securities in our non-agency cmo portfolio due to continued deterioration in the expected credit performance of the underlying loans in those specific securities . the gross other-than-temporary impairment ( 201cotti 201d ) and the noncredit portion of otti , which was or had been previously recorded through other comprehensive income ( loss ) , are shown in the table below ( dollars in millions ) : year ended december 31 , 2012 2011 .\n\n<image 1>\n\nprovision for loan losses provision for loan losses decreased 20% ( 20 % ) to $ 354.6 million for the year ended december 31 , 2012 compared to 2011 . the decrease in provision for loan losses was driven primarily by improving credit trends , as evidenced by the lower levels of delinquent loans in the one- to four-family and home equity loan portfolios , and loan portfolio run-off . the decrease was partially offset by $ 50 million in charge-offs associated with newly identified bankruptcy filings during the third quarter of 2012 , with approximately 80% ( 80 % ) related to prior years . we utilize third party loan servicers to obtain bankruptcy data on our borrowers and during the third quarter of 2012 , we identified an increase in bankruptcies reported by one specific servicer . in researching this increase , we discovered that the servicer had not been reporting historical bankruptcy data on a timely basis . as a result , we implemented an enhanced procedure around all servicer reporting to corroborate bankruptcy reporting with independent third party data . through this additional process , approximately $ 90 million of loans were identified in which servicers failed to report the bankruptcy filing to us , approximately 90% ( 90 % ) of which were current at the end of the third quarter of 2012 . as a result , these loans were written down to the estimated current value of the underlying property less estimated selling costs , or approximately $ 40 million , during the third quarter of 2012 . these charge-offs resulted in an increase to provision for loan losses of $ 50 million for the year ended december 31 , 2012 . the provision for loan losses has declined four consecutive years , down 78% ( 78 % ) from its peak of $ 1.6 billion for the year ended december 31 , 2008 . we expect provision for loan losses to continue to decline over the long term , although it is subject to variability in any given quarter. .\n",
    "program": "net_impairment_2012 = -16.9\nnet_impairment_2011 = -14.9\nchange = net_impairment_2012 - net_impairment_2011\npercent_change = change / net_impairment_2011\nanswer = percent_change * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 44,
        "total_numbers": 46
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 0
      }
    },
    "difficulty": 3.2188758248682006,
    "source_id": "test-601",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1253-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-449",
    "output": [
      "beta_1_A = .85\n    beta_1_B = 1.45\n    beta_2_A = 1.15\n    beta_2_B = -.25\n    E_R_A = 16\n    E_R_B = 12\n    R_f = 4\n    \n    # Do math calculation to get the answer\n    alpha_A = (E_R_A - R_f) - (beta_1_A * (E_R_A - R_f)) - (beta_2_A * (E_R_A - R_f))\n    alpha_B = (E_R_B - R_f) - (beta_1_B * (E_R_B - R_f)) - (beta_2_B * (E_R_B - R_f))\n    \n    beta_2_risk_premium = ((alpha_A + alpha_B) / 2) / beta_2_A\n    \n    answer = round(beta_2_risk_premium, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 217,
      "prompt_tokens": 350,
      "completion_tokens_details": {
        "text_tokens": 217
      },
      "prompt_tokens_details": {
        "text_tokens": 300,
        "image_tokens": 50
      },
      "total_tokens": 567
    },
    "model": "qwen-omni-turbo",
    "question": "Suppose stock returns can be explained by a two-factor model. The firm-specific risks for all stocks are independent. The following table shows the information for two diversified portfolios: <image 1> If the risk-free rate is 4 percent, what is the risk premium for factor F2 in this model? Answer as a percentage to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Accounting",
    "source_id": "test_Accounting_201",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/210-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-450",
    "output": [
      "hgh = 200 + 100 + 200\n    adr = 100\n    ans = hgh / adr\n    \n    # return answer\n    return round(ans, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 51,
      "prompt_tokens": 1721,
      "completion_tokens_details": {
        "text_tokens": 51
      },
      "prompt_tokens_details": {
        "text_tokens": 289,
        "image_tokens": 1432
      },
      "total_tokens": 1772
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算华友控股、南山铝业和力勤三家公司在远期规划中的总产能，并将该总产能与阿达罗能源在2025年的投产产能进行比较，求出两者的比例；请保留两位小数。",
    "python_solution": "def solution():\n    huayou_capacity = 200\n    nanshan_capacity = 100\n    liqin_capacity = 200\n    adaro_capacity_2025 = 50\n\n    total_future_capacity = huayou_capacity + nanshan_capacity + liqin_capacity\n    ratio = total_future_capacity / adaro_capacity_2025\n    return round(ratio, 2)",
    "image_id": "company_01_01_13_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1410",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2968-1.png",
      "./MultiFinance/images/2968-2.png",
      "./MultiFinance/images/2968-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2968-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-451",
    "output": [
      "values = [40, 20, 19, 18, 15, 7, 6, 6, 5, 5, 5, 5, 4, 4, 4]\n    \n    # Calculate average\n    average = sum(values) / len(values)\n    \n    # Find maximum value\n    max_value = max(values)\n    \n    # Calculate difference between max value and average\n    difference = max_value - average\n    \n    # Return the result rounded to one decimal place\n    return round(difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 136,
      "prompt_tokens": 1866,
      "completion_tokens_details": {
        "text_tokens": 136
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1602
      },
      "total_tokens": 2002
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有公司的平均值，并将该平均值与最高值进行比较，求出两者的差值；结果请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    companies = [6, 4, 3, 3, 2, 1, 1, 1, 1, 1]\n\n    # Multi-step logic\n    total = sum(companies)\n    average = total / len(companies)\n    highest_value = max(companies)\n    difference = highest_value - average\n    return round(difference, 1)\n",
    "image_id": "market_05_05_14_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2736",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 8
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2657-1.png",
      "./MultiFinance/images/2657-2.png",
      "./MultiFinance/images/2657-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2657-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-452",
    "output": [
      "GB300_NVL72_price_4 = [18, 21, 24, 27, 30]\n    \n    # Calculate average\n    total = sum(GB300_NVL72_price_4)\n    count = len(GB300_NVL72_price_4)\n    average = total / count\n    \n    # Return the result with one decimal place\n    return round(average, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 2401,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 2126
      },
      "total_tokens": 2514
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算GB300 NVL72等效在单w价格为4元时，市场规模从0.25到2的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_0p25 = 24\n    value_0p5 = 48\n    value_0p75 = 72\n    value_1 = 96\n    value_1p25 = 120\n    value_1p5 = 144\n    value_1p75 = 168\n    value_2 = 192\n\n    # Multi-step logic\n    total_sum = value_0p25 + value_0p5 + value_0p75 + value_1 + value_1p25 + value_1p5 + value_1p75 + value_2\n    average_value = total_sum / 8\n    return round(average_value, 1)",
    "image_id": "industry_15_15_12_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2153",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 7,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 13,
        "parentheses": 2
      }
    },
    "difficulty": 4.836281906951478,
    "images": [
      "./MultiFinance/images/2190-1.png",
      "./MultiFinance/images/2190-2.png",
      "./MultiFinance/images/2190-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2190-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-453",
    "output": [
      "derivatives_2008 = -3458\n    derivatives_2007 = -4402\n    derivatives_2006 = -3697\n    \n    # Calculate the increasing rate from 2007 to 2008\n    rate_2007_to_2008 = (derivatives_2008 - derivatives_2007) / derivatives_2007\n    \n    # Calculate the derivative balance in 2009 using the same rate\n    derivatives_2009 = derivatives_2008 * (1 + rate_2007_to_2008)\n    \n    # return answer\n    return derivatives_2009\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 176,
      "prompt_tokens": 1668,
      "completion_tokens_details": {
        "text_tokens": 176
      },
      "prompt_tokens_details": {
        "text_tokens": 436,
        "image_tokens": 1232
      },
      "total_tokens": 1844
    },
    "model": "qwen-omni-turbo",
    "question": "What will Balance of Derivatives be like in 2009 if it develops with the same increasing rate as current? (in dollars in millions)",
    "python_solution": "def solution():\n    # Define variables name and value\n    balance_2008 = -3458\n    balance_2007 = -4402\n    \n    # Do math calculation to get the answer\n    change = balance_2008 - balance_2007\n    growth_rate = change / balance_2007\n    balance_2009 = balance_2008 * (1 + growth_rate)\n    \n    return balance_2009",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-93",
    "img_type": "['Tables']",
    "context": "Accumulated OCI The following table presents the changes in accumulated OCI for 2008, 2007 and 2006, net-of-tax.\n<image 1>\n(1) In 2008, 2007 and 2006, the Corporation reclassified net realized losses into earnings on the sales and other-than-temporary impairments of AFS debt securities of $1.4 billion, $137 million and $279 million, net-of-tax, respectively, and net realized (gains) losses on the sales and other-than-temporary impairments of AFS marketable equity securities of $377 million, $(284) million, and $(499) million, net-of-tax, respectively.",
    "images": [
      "./MultiFinance/images/1733-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.9889840465642745,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-454",
    "output": [
      "growth_rate_2023_to_2024 = (55.77 - 41) / 41 * 100\n    \n    # return answer\n    return round(growth_rate_2023_to_2024, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 64,
      "prompt_tokens": 1399,
      "completion_tokens_details": {
        "text_tokens": 64
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1140
      },
      "total_tokens": 1463
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年到2024年的市场增长率，并将结果保留两位小数。",
    "python_solution": "def calculate_growth_rate_2023_to_2024():\n    market_size_2023 = 40.0\n    market_size_2024 = 45.0\n    growth_rate = (market_size_2024 - market_size_2023) / market_size_2023 * 100\n    return round(growth_rate, 2)\n",
    "image_id": "company_34_34_14_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-518",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2935-1.png",
      "./MultiFinance/images/2935-2.png",
      "./MultiFinance/images/2935-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2935-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-455",
    "output": [
      "change_in_cash_flow_operating_activities = -226.0\n    change_in_cash_flow_investing_activities = 330.7\n    change_in_cash_flow_financing_activities = -508.7\n    \n    # Do math calculation to get the answer\n    total_change_in_cash_flow = change_in_cash_flow_operating_activities + change_in_cash_flow_investing_activities + change_in_cash_flow_financing_activities\n    \n    # return answer\n    return total_change_in_cash_flow\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 981,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 289,
        "image_tokens": 692
      },
      "total_tokens": 1099
    },
    "model": "qwen-omni-turbo",
    "question": "What is the total change in cash flow from operating, investing and financing activities in the nine months ended September 30, 2022 compared to the same period in 2021 (in millions)?",
    "python_solution": "def solution():\n    #Define variables name and value\n    operating_2022 = 491.8 \n    operating_2021 = 717.8\n    investing_2022 = -744.6\n    investing_2021 = -1075.3\n    financing_2022 = 21.9\n    financing_2021 = 530.6\n\n    #Do math calculation to get the answer\n    change_operating = operating_2022 - operating_2021\n    change_investing = investing_2022 - investing_2021\n    change_financing = financing_2022 - financing_2021\n    total_change = change_operating + change_investing + change_financing \n    return total_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-103",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2012-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 5,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 13,
        "parentheses": 0
      }
    },
    "difficulty": 4.51085950651685,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-456",
    "output": [
      "investment_activity_cash_flow_2024 = -10180\n    investment_activity_cash_flow_2023 = -5453\n    \n    growth_rate = (investment_activity_cash_flow_2024 - investment_activity_cash_flow_2023) / investment_activity_cash_flow_2023 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 95,
      "prompt_tokens": 2754,
      "completion_tokens_details": {
        "text_tokens": 95
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 2490
      },
      "total_tokens": 2849
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年预计投资活动现金流出与2023年实际投资活动现金流出之间的增长率；结果请保留两位小数。",
    "python_solution": "def solution():\n    investment_cashflow_2023 = -5453\n    investment_cashflow_2024 = -10180\n    growth = (investment_cashflow_2024 - investment_cashflow_2023) / abs(investment_cashflow_2023) * 100\n    return round(growth, 2)",
    "image_id": "company_31_31_28_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1685",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 6
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2681-1.png",
      "./MultiFinance/images/2681-2.png",
      "./MultiFinance/images/2681-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2681-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-457",
    "output": [
      "import numpy as np\n    \n    total_assets_growth_rate_2021_to_2026 = [40.93, 37.93, 37.69, -7.37, 14.70, 8.04]\n    \n    # Do math calculation to get the answer\n    std_deviation = np.std(total_assets_growth_rate_2021_to_2026)\n    \n    # return answer\n    return round(std_deviation, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 2031,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 1774
      },
      "total_tokens": 2149
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2026年期间，总资产增长率的标准差；请保留两位小数。",
    "python_solution": "def solution():\n    total_assets_growth_rates = [40.93, 37.93, 37.69, -7.37, 14.7, 8.04]\n    mean_growth_rate = sum(total_assets_growth_rates) / len(total_assets_growth_rates)\n    variance = sum((x - mean_growth_rate) ** 2 for x in total_assets_growth_rates) / len(total_assets_growth_rates)\n    std_dev = variance ** 0.5\n    return round(std_dev, 2)",
    "image_id": "company_21_21_21_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-837",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 2
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 12
      }
    },
    "difficulty": 4.189654742026425,
    "images": [
      "./MultiFinance/images/2302-1.png",
      "./MultiFinance/images/2302-2.png",
      "./MultiFinance/images/2302-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2302-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-458",
    "output": [
      "infrared_filter_percentage = 3 + 6\n    voice_coil_motor_percentage = 19\n    optical_lens_percentage = 20\n    module_encapsulation_percentage = 52\n    \n    total_other_components_percentage = infrared_filter_percentage + voice_coil_motor_percentage + optical_lens_percentage + module_encapsulation_percentage\n    \n    cis_percentage = 50\n    \n    difference = abs(cis_percentage - total_other_components_percentage)\n    \n    # Do math calculation to get the answer\n    result = round(difference, 1)\n    \n    # return answer\n    return result\n```"
    ],
    "usage": {
      "completion_tokens": 120,
      "prompt_tokens": 1918,
      "completion_tokens_details": {
        "text_tokens": 120
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 1639
      },
      "total_tokens": 2038
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算红外滤光片、音圈马达、光学镜头和模组封装的总占比，并将其与CIS的占比进行比较；请提供结果作为百分比并保留一位小数。",
    "python_solution": "def solution():\n    ir_filter = 3\n    voice_coil_motor = 6\n    optical_lens = 19\n    module_packaging = 20\n\n    total_percentage = ir_filter + voice_coil_motor + optical_lens + module_packaging\n    cis_percentage = 52\n\n    comparison = (cis_percentage - total_percentage) / cis_percentage * 100\n    return round(comparison, 1)",
    "image_id": "industry_19_19_19_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2392",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2333-1.png",
      "./MultiFinance/images/2333-2.png",
      "./MultiFinance/images/2333-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2333-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-459",
    "output": [
      "flow_assets_2023 = 3400\n    flow_assets_2024 = 3591\n    \n    # Calculate the difference between 2023 and 2024\n    diff_flow_assets = flow_assets_2023 - flow_assets_2024\n    \n    # Calculate the percentage change from 2023 to 2024\n    percent_change = (diff_flow_assets / flow_assets_2023) * 100\n    \n    # Return the result as a string with one decimal place\n    return f\"{percent_change:.1f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 137,
      "prompt_tokens": 2466,
      "completion_tokens_details": {
        "text_tokens": 137
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 2190
      },
      "total_tokens": 2603
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年和2024年的流动资产合计的差值，并将该差值占2023年流动资产合计的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2023 = 3400\n    current_assets_2024 = 3591\n\n    # Multi-step logic\n    diff = current_assets_2024 - current_assets_2023\n    ratio = diff / current_assets_2023\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_39_39_23_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1257",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2626-1.png",
      "./MultiFinance/images/2626-2.png",
      "./MultiFinance/images/2626-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2626-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-460",
    "output": [
      "morgan_stanley_percentage = 9.9\n    small_company_percentage = 6.90\n    medium_company_percentage = 4.10\n    \n    # Do math calculation to get the answer\n    result = (morgan_stanley_percentage + small_company_percentage) - (medium_company_percentage * 2)\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 2418,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 2151
      },
      "total_tokens": 2514
    },
    "model": "qwen-omni-turbo",
    "question": "请计算摩根士丹利的百分比与小型公司百分比的和，然后减去中型公司百分比的两倍；请保留一位小数。",
    "python_solution": "def solution():\n    morgan_stanley = 9.90\n    small_company = 6.90\n    medium_company = 4.10\n\n    sum_values = morgan_stanley + small_company\n    double_medium = 2 * medium_company\n    result = sum_values - double_medium\n    return round(result, 1)",
    "image_id": "industry_00_00_18_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-1990",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2993-1.png",
      "./MultiFinance/images/2993-2.png",
      "./MultiFinance/images/2993-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2993-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-461",
    "output": [
      "prob_1 = 0.05\n    sales_1 = 70.0\n    prob_2 = 0.7\n    sales_2 = 40.0\n    prob_3 = 0.25\n    sales_3 = 25.0\n    \n    expected_sales = (prob_1 * sales_1) + (prob_2 * sales_2) + (prob_3 * sales_3)\n    \n    variance = ((sales_1 - expected_sales)**2 * prob_1) + \\\n               ((sales_2 - expected_sales)**2 * prob_2) + \\\n               ((sales_3 - expected_sales)**2 * prob_3)\n    \n    std_deviation = variance ** 0.5\n    \n    # return answer\n    return round(std_deviation, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 192,
      "prompt_tokens": 1494,
      "completion_tokens_details": {
        "text_tokens": 192
      },
      "prompt_tokens_details": {
        "text_tokens": 252,
        "image_tokens": 1242
      },
      "total_tokens": 1686
    },
    "model": "qwen-omni-turbo",
    "question": "What is the standard deviation of sales for an organization, given its probability distribution? Answer to three decimal places.",
    "python_solution": "def solution():\n    # defining probabilities and sales\n    prob = [0.05, 0.70, 0.25]\n    sales = [70, 40, 25]\n\n    # calculating expected sales\n    expected_sales = sum(p*s for p, s in zip(prob, sales))\n\n    # calculating variance\n    variance = sum(p*((s - expected_sales) ** 2) for p, s in zip(prob, sales))\n\n    # computing the standard deviation\n    std_dev = variance ** 0.5\n\n    return std_dev",
    "topic": "Quantitative Analysis & Valuation",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 0,
          "%": 0,
          "**": 2
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 12
      }
    },
    "difficulty": 4.382026634673881,
    "source_id": "validation-142",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/344-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-462",
    "output": [
      "global_robots_sales_2025 = 2.28\n    global_robots_sales_2030 = 481\n    \n    # Do math calculation to get the answer\n    growth_rate = ((global_robots_sales_2030 - global_robots_sales_2025) / global_robots_sales_2025) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 114,
      "prompt_tokens": 3115,
      "completion_tokens_details": {
        "text_tokens": 114
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2856
      },
      "total_tokens": 3229
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2025年到2030年间全球人形机器人销量的年均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    global_sales_2025 = 2.28\n    global_sales_2030 = 481\n    years = 5\n\n    annual_growth_rate = ((global_sales_2030 / global_sales_2025) ** (1/years) - 1) * 100\n    return round(annual_growth_rate, 2)",
    "image_id": "company_11_11_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1334",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2480-1.png",
      "./MultiFinance/images/2480-2.png",
      "./MultiFinance/images/2480-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2480-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-463",
    "output": [
      "net_marketable_securities_2021 = 32437424\n    net_marketable_securities_2020 = 22653760\n    \n    # Calculate the change in the company's Net Marketable Securities Position\n    change_in_net_marketable_securities_position = net_marketable_securities_2021 - net_marketable_securities_2020\n    \n    # Return the answer\n    return change_in_net_marketable_securities_position\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 121,
      "prompt_tokens": 2582,
      "completion_tokens_details": {
        "text_tokens": 121
      },
      "prompt_tokens_details": {
        "text_tokens": 297,
        "image_tokens": 2285
      },
      "total_tokens": 2703
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in the company's Net Marketable Securities Position from June 30, 2020, to June 30, 2021 in dollars?",
    "python_solution": "def solution():\n    #Define variables name and value\n    start_cash = 22653760\n    start_market_investments = 0\n    start_unrealized = 0\n    end_cash = 32437424\n    end_market_investments = 31923285\n    end_unrealized = -3770\n\n    #Do math calculation to get the answer\n    change_in_Net_Marketable_Securities_Position = ((end_cash + end_market_investments + end_unrealized) - (start_cash + start_market_investments + start_unrealized))\n    return change_in_Net_Marketable_Securities_Position\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-251",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2107-1.png",
      "./MultiFinance/images/2107-2.png",
      "./MultiFinance/images/2107-3.png",
      "./MultiFinance/images/2107-4.png"
    ],
    "context": "<image 1>\n<image 2>\n<image 3>\n<image 4>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 6
      }
    },
    "difficulty": 4.356708826689592,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-464",
    "output": [
      "T1_income = 12668\n    T2_income = 17735\n    T3_income = 22802\n    T4_income = 22802\n    T5_income = 22802\n    \n    # Do math calculation to get the answer\n    total_income = round(T1_income + T2_income + T3_income + T4_income + T5_income)\n    \n    # return answer\n    return total_income\n```"
    ],
    "usage": {
      "completion_tokens": 108,
      "prompt_tokens": 2252,
      "completion_tokens_details": {
        "text_tokens": 108
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 1995
      },
      "total_tokens": 2360
    },
    "model": "qwen-omni-turbo",
    "question": "请计算T+1年度至T+5年度的营业收入总和，并将结果四舍五入到整数。",
    "python_solution": "def solution():\n    revenue_t1 = 12668\n    revenue_t2 = 17735\n    revenue_t3 = 22802\n    revenue_t4 = 22802\n    revenue_t5 = 22802\n\n    total_revenue = revenue_t1 + revenue_t2 + revenue_t3 + revenue_t4 + revenue_t5\n    return round(total_revenue)",
    "image_id": "industry_07_07_29_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2333",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2763-1.png",
      "./MultiFinance/images/2763-2.png",
      "./MultiFinance/images/2763-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2763-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-465",
    "output": [
      "year_1 = 3478.9\n    year_2 = 3525.4\n    year_3 = 3984.4\n    year_4 = 4140.0\n    \n    # Calculate annual growth rate for each year\n    growth_rate_year_1 = (year_2 - year_1) / year_1 * 100\n    growth_rate_year_2 = (year_3 - year_2) / year_2 * 100\n    growth_rate_year_3 = (year_4 - year_3) / year_3 * 100\n    \n    # Calculate average annual growth rate\n    average_growth_rate = (growth_rate_year_1 + growth_rate_year_2 + growth_rate_year_3) / 3\n    \n    # Return the result rounded to two decimal places\n    return round(average_growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 212,
      "prompt_tokens": 1843,
      "completion_tokens_details": {
        "text_tokens": 212
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 1570
      },
      "total_tokens": 2055
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年到2023年健康生活消费品收入的年均增长率。首先计算每年的增长率，然后求这些增长率的平均值；请保留两位小数。",
    "python_solution": "def solution():\n    income_2020 = 3500\n    income_2021 = 4000\n    income_2022 = 4000\n    income_2023 = 4200\n\n    growth_2020_2021 = (income_2021 - income_2020) / income_2020 * 100\n    growth_2021_2022 = (income_2022 - income_2021) / income_2021 * 100\n    growth_2022_2023 = (income_2023 - income_2022) / income_2022 * 100\n\n    avg_growth = (growth_2020_2021 + growth_2021_2022 + growth_2022_2023) / 3\n    return round(avg_growth, 2)",
    "image_id": "company_36_36_08_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-339",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 3,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 10
      }
    },
    "difficulty": 5.123963979403259,
    "images": [
      "./MultiFinance/images/2169-1.png",
      "./MultiFinance/images/2169-2.png",
      "./MultiFinance/images/2169-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2169-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-466",
    "output": [
      "gpu_market_share = 74\n    cpu_market_share = 20\n    total_market_share = gpu_market_share + cpu_market_share\n    \n    difference = gpu_market_share - cpu_market_share\n    percentage_difference = (difference / total_market_share) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 76,
      "prompt_tokens": 2201,
      "completion_tokens_details": {
        "text_tokens": 76
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1938
      },
      "total_tokens": 2277
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据计算GPU市场份额与CPU市场份额的差值，并将该差值占总市场份额的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    gpu_share = 74\n    cpu_share = 20\n    total_share = 100\n\n    diff = gpu_share - cpu_share\n    percentage = (diff / total_share) * 100\n    return round(percentage, 1)",
    "image_id": "strategy_05_05_08_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2981",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3057-1.png",
      "./MultiFinance/images/3057-2.png",
      "./MultiFinance/images/3057-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3057-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-467",
    "output": [
      "growth_rate_2024 = (2.3 - 3.1) / 3.1 * 100\n    growth_rate_2023 = (1.6 - 3.2) / 3.2 * 100\n    \n    # Calculate the percentage change between 2024 and 2023\n    percentage_change = (growth_rate_2024 - growth_rate_2023) / growth_rate_2023 * 100\n    \n    # Return the result rounded to two decimal places\n    return round(percentage_change, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 149,
      "prompt_tokens": 3998,
      "completion_tokens_details": {
        "text_tokens": 149
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 3718
      },
      "total_tokens": 4147
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年6月至2024年12月实际GDP的年化环比增长率，并将其与2023年同期进行比较，求出增长百分比；结果保留两位小数。",
    "python_solution": "def solution():\n    gdp_2024_12 = 2.3\n    gdp_2024_6 = 3.0\n    gdp_2023_12 = 3.2\n    gdp_2023_6 = 4.4\n    \n    growth_2024 = (gdp_2024_12 - gdp_2024_6) / gdp_2024_6 * 100\n    growth_2023 = (gdp_2023_12 - gdp_2023_6) / gdp_2023_6 * 100\n    \n    comparison = (growth_2024 - growth_2023) / growth_2023 * 100\n    return round(comparison, 2)",
    "image_id": "macro_05_05_05_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2608",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 3,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 8
      }
    },
    "difficulty": 4.68213122712422,
    "images": [
      "./MultiFinance/images/2207-1.png",
      "./MultiFinance/images/2207-2.png",
      "./MultiFinance/images/2207-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2207-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-468",
    "output": [
      "total_amortization_expense_2017 = 75 + 77 + 93\n    amortization_expense_2019 = 54\n    \n    # Calculate the percentage\n    percentage_2019 = (amortization_expense_2019 / total_amortization_expense_2017) * 100\n    \n    # Return the result rounded to three decimal places\n    return round(percentage_2019, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 123,
      "prompt_tokens": 1582,
      "completion_tokens_details": {
        "text_tokens": 123
      },
      "prompt_tokens_details": {
        "text_tokens": 362,
        "image_tokens": 1220
      },
      "total_tokens": 1705
    },
    "model": "qwen-omni-turbo",
    "question": "in 2017 what was the percent of the total amortization expense that was due in 2019 Answer to three decimal places.",
    "answer": "26.341",
    "context": "humana inc . notes to consolidated financial statements 2014 ( continued ) amortization expense for other intangible assets was approximately $ 75 million in 2017 , $ 77 million in 2016 , and $ 93 million in 2015 . the following table presents our estimate of amortization expense for each of the five next succeeding fiscal years: .\n\n<image 1>\n\n.\n",
    "program": "amortization_expense_2018 = 64\namortization_expense_2019 = 54\namortization_expense_2020 = 52\namortization_expense_2021 = 19\namortization_expense_2022 = 16\ntotal_amortization_expense = amortization_expense_2018 + amortization_expense_2019 + amortization_expense_2020 + amortization_expense_2021 + amortization_expense_2022\namortization_expense_due_2019 = 54 / total_amortization_expense\nanswer = amortization_expense_due_2019 * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 18,
        "total_numbers": 20
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 0
      }
    },
    "difficulty": 3.8712010109078907,
    "source_id": "test-755",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1407-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-469",
    "output": [
      "packaging_water = 23.65\n    tea_drinks = 18.26\n    carbonated_drinks = 13.55\n    \n    total_packaging_and_tea = packaging_water + tea_drinks\n    difference = (total_packaging_and_tea - carbonated_drinks) / carbonated_drinks * 100\n    \n    # return answer\n    return round(difference, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 94,
      "prompt_tokens": 1466,
      "completion_tokens_details": {
        "text_tokens": 94
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 1195
      },
      "total_tokens": 1560
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中包装饮用水和茶饮料的市场份额总和，并将其与碳酸饮料的市场份额进行比较，求出前者比后者多出的百分比；结果保留两位小数。",
    "python_solution": "def solution():\n    packaged_water = 23.65\n    tea_drinks = 15.77\n    carbonated_drinks = 13.55\n\n    total_packaged_tea = packaged_water + tea_drinks\n    difference = total_packaged_tea - carbonated_drinks\n    percentage_difference = (difference / carbonated_drinks) * 100\n    return round(percentage_difference, 2)",
    "image_id": "company_23_23_20_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-918",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2612-1.png",
      "./MultiFinance/images/2612-2.png",
      "./MultiFinance/images/2612-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2612-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-470",
    "output": [
      "fixed_assets_2024 = 898\n    intangible_assets_2024 = 88\n    total_assets_2023 = 1403 + 1815\n    total_assets_2024 = 2065 + 2288\n    \n    # Do math calculation to get the answer\n    sum_2024 = fixed_assets_2024 + intangible_assets_2024\n    growth_rate = ((sum_2024 - total_assets_2023) / total_assets_2023) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 169,
      "prompt_tokens": 3072,
      "completion_tokens_details": {
        "text_tokens": 169
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 2795
      },
      "total_tokens": 3241
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年预计的固定资产与无形资产之和，并将其与2023年的相应总和进行比较，计算增长百分比；结果请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    fixed_assets_2023 = 638\n    intangible_assets_2023 = 78\n    fixed_assets_2024 = 898\n    intangible_assets_2024 = 88\n\n    # Multi-step logic\n    total_2023 = fixed_assets_2023 + intangible_assets_2023\n    total_2024 = fixed_assets_2024 + intangible_assets_2024\n    growth = (total_2024 - total_2023) / total_2023 * 100\n    return round(growth, 2)",
    "image_id": "company_38_38_27_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1148",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 4.276666119016055,
    "images": [
      "./MultiFinance/images/2277-1.png",
      "./MultiFinance/images/2277-2.png",
      "./MultiFinance/images/2277-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2277-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-471",
    "output": [
      "begining_period = 14412\n    end_of_period = 9240\n    \n    # Do math calculation to get the answer\n    change_rate = (end_of_period - begining_period) / begining_period * 100\n    \n    # return answer\n    return change_rate\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 82,
      "prompt_tokens": 895,
      "completion_tokens_details": {
        "text_tokens": 82
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 623
      },
      "total_tokens": 977
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change rate of the warranty liability provision from the beginning to the end of the year in 2020 in percentage?",
    "python_solution": "def solution():\n    #Define variables name and value\n    initial_balance_2020 = 10556 \n    provision_2020 = 7330\n    settlements_2020 = 8646\n    end_balance_2020 = 9240 \n\n    #Do math calculation to get the answer\n    begin_balance_plus_provision = initial_balance_2020 + provision_2020 # liability at the end of the year before settlements\n    change_rate = ((end_balance_2020 - begin_balance_plus_provision) / begin_balance_plus_provision) * 100 # calculate change rate in percentage\n    return change_rate\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-209",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2078-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 4
      }
    },
    "difficulty": 3.7841896339182615,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-472",
    "output": [
      "first_item_2023 = -11.12\n    second_item_2023 = -8.14\n    third_item_2023 = -17.78\n    fourth_item_2023 = -24.16\n    fifth_item_2023 = -20.38\n    sixth_item_2023 = 19.97\n    seventh_item_2023 = 36.20\n    eighth_item_2023 = -6.92\n    ninth_item_2023 = 11.59\n    tenth_item_2023 = 30.72\n    benchmark_2023 = -6.92\n    excess_2023 = 11.59\n    \n    # Do math calculation to get the answer\n    difference = (sixth_item_2023 - seventh_item_2023) / eighth_item_2023 * 100\n    \n    # return answer\n    return round(difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 260,
      "prompt_tokens": 1368,
      "completion_tokens_details": {
        "text_tokens": 260
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1102
      },
      "total_tokens": 1628
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年第六项指标与第七项指标的差值，并将结果转换为占第八项指标的百分比，保留一位小数。",
    "python_solution": "def solution():\n    value_sixth_2023 = -0.88\n    value_seventh_2023 = -8.14\n    value_eighth_2023 = 17.78\n    diff = value_seventh_2023 - value_sixth_2023\n    percentage = (diff / value_eighth_2023) * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_28_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2796",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2581-1.png",
      "./MultiFinance/images/2581-2.png",
      "./MultiFinance/images/2581-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2581-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-473",
    "output": [
      "Jan_1_2016_equity = 258490\n    Sep_30_2017_equity = 302727\n    \n    # Calculate the net increase of total shareholders' equity\n    net_increase = Sep_30_2017_equity - Jan_1_2016_equity\n    \n    # Calculate the percentage of the net increase\n    percentage_increase = (net_increase / Jan_1_2016_equity) * 100\n    \n    # Return the answer\n    return percentage_increase\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 140,
      "prompt_tokens": 1582,
      "completion_tokens_details": {
        "text_tokens": 140
      },
      "prompt_tokens_details": {
        "text_tokens": 407,
        "image_tokens": 1175
      },
      "total_tokens": 1722
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage of the net increase of total shareholders’ equity in Allegiance Bancshares during the period from January 1, 2016 to September 30, 2017?",
    "python_solution": "def solution():\n     #Define variables name and value\n    total_equity_initial = 258490\n    total_equity_final = 302727 \n\n    #Do math calculation to get the answer\n    percentage_increase = (total_equity_final - total_equity_initial) / total_equity_initial * 100\n    answer = percentage_increase\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-26",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1958-1.png"
    ],
    "context": "<image 1>\nGoodwill is recorded on the acquisition date of an entity. Management performs an evaluation annually, and more frequently if a triggering event occurs, of whether any impairment of the goodwill and other intangible assets has occurred. If any such impairment is determined, a write-down is recorded. As of September 30, 2017, there were no impairments recorded on goodwill and other intangible assets. During the first quarter 2016, the Bank completed the sale of the two Central Texas branch locations of Enterprise and wrote-down the core deposit intangible assets related to those locations.",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-474",
    "output": [
      "pev_tai_2023 = 0.42\n    pev_tai太平_2023 = 0.20\n    ev_xinhuaA_2023 = 2505\n    \n    # Do math calculation to get the answer\n    result = (pev_tai_2023 + pev_tai太平_2023) / ev_xinhuaA_2023 * 100\n    \n    # return answer\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 132,
      "prompt_tokens": 2950,
      "completion_tokens_details": {
        "text_tokens": 132
      },
      "prompt_tokens_details": {
        "text_tokens": 294,
        "image_tokens": 2656
      },
      "total_tokens": 3082
    },
    "model": "qwen-omni-turbo",
    "question": "请计算太保A的2023年PEV值与太平的2023年PEV值之和，然后用该和去除以新华A的2023年EV值，最后将结果乘以100得到百分比；请保留两位小数。",
    "python_solution": "def solution():\n    taibao_a_2023_pev = 0.59\n    taiping_2023_pev = 0.20\n    xinhua_a_2023_ev = 2505\n\n    sum_pev = taibao_a_2023_pev + taiping_2023_pev\n    ratio = sum_pev / xinhua_a_2023_ev\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "company_27_27_14_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-437",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2926-1.png",
      "./MultiFinance/images/2926-2.png",
      "./MultiFinance/images/2926-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2926-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-475",
    "output": [
      "year_2018 = -29.03 + -28.41\n    year_2019 = 32.16 + 33.35\n    year_2020 = -1.29\n    \n    # Do math calculation to get the answer\n    total_sum = year_2018 + year_2019\n    average_value = total_sum / year_2020\n    result = average_value * 100\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 137,
      "prompt_tokens": 1767,
      "completion_tokens_details": {
        "text_tokens": 137
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 1492
      },
      "total_tokens": 1904
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2018年和2019年的总和，然后将该总和除以2020年的值，最后将结果乘以100并保留一位小数。",
    "python_solution": "def solution():\n    value_2018 = 1.50\n    value_2019 = -1.95\n    value_2020 = -2.35\n    total = value_2018 + value_2019\n    ratio = total / value_2020\n    result = ratio * 100\n    return round(result, 1)",
    "image_id": "strategy_04_04_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3128",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2584-1.png",
      "./MultiFinance/images/2584-2.png",
      "./MultiFinance/images/2584-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2584-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-476",
    "output": [
      "gold_market_cap = 17.5\n    apple_market_cap = 3.775\n    microsoft_market_cap = 3.249\n    nvidia_market_cap = 3.2\n    amazon_market_cap = 2.347\n    \n    total_market_cap = gold_market_cap + apple_market_cap + microsoft_market_cap + nvidia_market_cap + amazon_market_cap\n    \n    # Convert to trillion USD\n    total_market_cap_trillion_usd = total_market_cap / 1e+12\n    \n    # Round to two decimal places\n    total_market_cap_rounded = round(total_market_cap_trillion_usd, 2)\n    \n    # Return the result in million USD\n    return total_market_cap_rounded * 1e+12\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 177,
      "prompt_tokens": 3388,
      "completion_tokens_details": {
        "text_tokens": 177
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 3127
      },
      "total_tokens": 3565
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中排名前五的资产总市值，并将结果以万亿美元为单位四舍五入到小数点后两位。",
    "python_solution": "def solution():\n    value_gold = 17.5\n    value_apple = 3.775\n    value_microsoft = 3.249\n    value_nvidia = 3.2\n    value_amazon = 2.347\n\n    total_value = value_gold + value_apple + value_microsoft + value_nvidia + value_amazon\n    return round(total_value, 2)",
    "image_id": "market_08_08_20_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2702",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2775-1.png",
      "./MultiFinance/images/2775-2.png",
      "./MultiFinance/images/2775-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2775-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-477",
    "output": [
      "beijing_chain_home_market_share = 43%\n    golden_hours_market_share = 3%\n    \n    # Calculate the difference between the two market shares\n    difference = beijing_chain_home_market_share - golden_hours_market_share\n    \n    # Divide the difference by the Beijing chain home market share\n    result = difference / beijing_chain_home_market_share\n    \n    # Convert the result to a percentage and round it to two decimal places\n    answer = round(result * 100, 2)\n    \n    # Return the answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 116,
      "prompt_tokens": 1885,
      "completion_tokens_details": {
        "text_tokens": 116
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 1610
      },
      "total_tokens": 2001
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中北京链家的市场份额与金色时光的市场份额之差，并将结果除以北京链家的市场份额，得到的结果乘以100转化为百分比；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_lianjia_beijing = 43\n    value_jinse_shiguang = 3\n\n    # Multi-step logic\n    difference = value_lianjia_beijing - value_jinse_shiguang\n    ratio = difference / value_lianjia_beijing\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "company_06_06_16_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1491",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2631-1.png",
      "./MultiFinance/images/2631-2.png",
      "./MultiFinance/images/2631-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2631-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-478",
    "output": [
      "two_four_kw = 15\n    four_six_kw = 45\n    greater_twenty_kw = 1\n    \n    # Do math calculation to get the answer\n    total_percentage = two_four_kw + four_six_kw + greater_twenty_kw\n    \n    # return answer\n    return round(total_percentage, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 76,
      "prompt_tokens": 1680,
      "completion_tokens_details": {
        "text_tokens": 76
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1417
      },
      "total_tokens": 1756
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2-4 kW、4-6 kW和>20 kW的总占比，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    percentage_2_to_4 = 1\n    percentage_4_to_6 = 3\n    percentage_greater_than_20 = 6\n    # Multi-step logic\n    total_percentage = percentage_2_to_4 + percentage_4_to_6 + percentage_greater_than_20\n    return round(total_percentage, 2)",
    "image_id": "industry_07_07_22_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2332",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3009-1.png",
      "./MultiFinance/images/3009-2.png",
      "./MultiFinance/images/3009-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3009-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-479",
    "output": [
      "year_2021 = 0.497\n    year_2022 = 0.560\n    year_2023 = 0.591\n    year_2024 = 0.594\n    year_2025 = 0.637\n    year_2026 = 0.699\n    \n    # Do math calculation to get the answer\n    CAGR = ((year_2026 / year_2021) ** (1/5)) - 1\n    answer = round(CAGR * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 168,
      "prompt_tokens": 2078,
      "completion_tokens_details": {
        "text_tokens": 168
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1820
      },
      "total_tokens": 2246
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2026年期间，每股收益的复合年增长率，并保留两位小数。",
    "python_solution": "def solution():\n    eps_2021 = 0.497\n    eps_2026 = 0.699\n    years = 5\n    cagr = ((eps_2026 / eps_2021) ** (1 / years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_09_09_20_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-27",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2586-1.png",
      "./MultiFinance/images/2586-2.png",
      "./MultiFinance/images/2586-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2586-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-480",
    "output": [
      "stock_changes = [2.24, -7.72, 26.92, -8.34, 26.72, -8.58, 25.33, -8.7, 21.73, -9.06]\n    \n    # Calculate average change\n    average_change = sum(stock_changes) / len(stock_changes)\n    \n    # Convert to percentage form and round to two decimal places\n    average_change_percentage = round(average_change * 100, 2)\n    \n    # return answer\n    return average_change_percentage\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 143,
      "prompt_tokens": 1293,
      "completion_tokens_details": {
        "text_tokens": 143
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 1036
      },
      "total_tokens": 1436
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有股票的平均涨跌幅度，并将结果表示为百分比形式；请保留两位小数。",
    "python_solution": "def solution():\n    values = [30.25, 26.92, 26.72, 25.33, 21.73, -7.72, -8.34, -8.58, -8.70, -9.06]\n    average = sum(values) / len(values)\n    percentage = average * 100\n    return round(percentage, 2)",
    "image_id": "industry_02_02_03_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2069",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 10
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 5,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 6
      }
    },
    "difficulty": 3.8918202981106265,
    "images": [
      "./MultiFinance/images/2410-1.png",
      "./MultiFinance/images/2410-2.png",
      "./MultiFinance/images/2410-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2410-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-481",
    "output": [
      "xpu_market_share = 2\n    self_research_chip_market_share = 4\n    total_market_share = 100\n    \n    # Do math calculation to get the answer\n    combined_market_share = xpu_market_share + self_research_chip_market_share\n    percentage_of_combined_market_share = (combined_market_share / total_market_share) * 100\n    \n    # return answer\n    return round(percentage_of_combined_market_share, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 102,
      "prompt_tokens": 2203,
      "completion_tokens_details": {
        "text_tokens": 102
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1938
      },
      "total_tokens": 2305
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据计算XPU和自研芯片市场份额的总和，并将该总和占总市场份额的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    xpu_share = 2\n    self_research_chip_share = 4\n    total_share = 100\n\n    sum_shares = xpu_share + self_research_chip_share\n    percentage = (sum_shares / total_share) * 100\n    return round(percentage, 1)",
    "image_id": "strategy_05_05_08_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2982",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3058-1.png",
      "./MultiFinance/images/3058-2.png",
      "./MultiFinance/images/3058-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3058-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-482",
    "output": [
      "first_wave_change_rate = -2.03\n    third_wave_change_rate = -0.76\n    \n    # Calculate the difference between the two change rates\n    difference = first_wave_change_rate - third_wave_change_rate\n    \n    # Calculate the percentage ratio of the difference to the first wave change rate\n    percentage_ratio = (difference / abs(first_wave_change_rate)) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(percentage_ratio, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 1770,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 1492
      },
      "total_tokens": 1888
    },
    "model": "qwen-omni-turbo",
    "question": "请计算第三波影响轮次的日均涨跌幅与第一波日均涨跌幅的差值，然后将该差值占第一波日均涨跌幅的比例以百分比形式表示；请保留两位小数。",
    "python_solution": "def solution():\n    third_wave = -0.76\n    first_wave = -2.03\n    diff = third_wave - first_wave\n    ratio = diff / first_wave\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "macro_03_03_09_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2522",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2687-1.png",
      "./MultiFinance/images/2687-2.png",
      "./MultiFinance/images/2687-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2687-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-483",
    "output": [
      "q1_2022_deficit = -182903\n    q1_2021_deficit = -67172\n    \n    # Do math calculation to get the answer\n    year_on_year_change = ((q1_2022_deficit - q1_2021_deficit) / abs(q1_2021_deficit)) * 100\n    \n    # return answer\n    return year_on_year_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 1807,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 1522
      },
      "total_tokens": 1925
    },
    "model": "qwen-omni-turbo",
    "question": "What is the year on year percentage change in the Accumulated Deficit for the first quarter of 2022 compared to the first quarter of 2021?",
    "python_solution": "def solution():\n    #Define variables name and value\n\n    accumulated_deficit_2022_Q1 = -201350 # in thousands\n\n    accumulated_deficit_2021_Q1 = -67172 # in thousands \n\n    #Do math calculation to get the answer\n    difference_in_accumulated_deficit = accumulated_deficit_2022_Q1 - accumulated_deficit_2021_Q1\n    percent_change = (difference_in_accumulated_deficit / abs(accumulated_deficit_2021_Q1)) * 100\n    answer = percent_change\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-194",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2066-1.png",
      "./MultiFinance/images/2066-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.9120230054281464,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-484",
    "output": [
      "sum_2018_2024 = -17.2 + (-19.6) + 2.9 + 5.4 + 42.2 + (-12.5) + 27.5 + 2.5 + 3.3 + 18.2 + 14.0 + (-3.0) + (-7.1) + (-13.7) + (-17.0) + 15.5\n    count = 15\n    average_return_rate = sum_2018_2024 / count\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(average_return_rate, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 163,
      "prompt_tokens": 1494,
      "completion_tokens_details": {
        "text_tokens": 163
      },
      "prompt_tokens_details": {
        "text_tokens": 250,
        "image_tokens": 1244
      },
      "total_tokens": 1657
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中状态6:衰退末期的平均收益率，并保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    returns = [-17.2, 2.9, -17.0]\n    # Multi-step logic\n    total_return = sum(returns)\n    average_return = total_return / len(returns)\n    return round(average_return, 1)",
    "image_id": "strategy_03_03_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2954",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2660-1.png",
      "./MultiFinance/images/2660-2.png",
      "./MultiFinance/images/2660-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2660-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-485",
    "output": [
      "total_revenue_2008 = 3323\n    cost_of_goods_sold_2008 = 1287\n    selling_general_and_administrative_expenses_2008 = 858\n    depreciation_expense_2008 = 270\n    interest_expense_2008 = 195\n    income_tax_2008 = 228\n    \n    # Calculate EBITDA\n    ebitda_2008 = total_revenue_2008 - cost_of_goods_sold_2008 - selling_general_and_administrative_expenses_2008 - depreciation_expense_2008\n    \n    # Calculate operating income\n    operating_income_2008 = ebitda_2008 - interest_expense_2008\n    \n    # Calculate pretax income\n    pretax_income_2008 = operating_income_2008 - income_tax_2008\n    \n    # Calculate free cash flow to equity holders (FCFE)\n    fcf_e_2008 = pretax_income_2008 + depreciation_expense_2008 - interest_expense_2008 - income_tax_2008\n    \n    # return answer\n    return fcf_e_2008\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 310,
      "prompt_tokens": 2839,
      "completion_tokens_details": {
        "text_tokens": 310
      },
      "prompt_tokens_details": {
        "text_tokens": 340,
        "image_tokens": 2499
      },
      "total_tokens": 3149
    },
    "model": "qwen-omni-turbo",
    "question": "Using the 2007 and 2008 financial reports for Holt Corporation, which are presented in Exhibits 1 and 2 and in line with US GAAP, what is Holt's 2008 FCFE (in millions) as Jake Thompson is preparing a presentation to analyze the valuation of this company and Emerald Corp's common stock using a FCFE model? Thompson also plans to do a value estimate for Emerald through a dividend discount model for potential recommendations to his firm. Answer to a single decimal place.",
    "python_solution": "def solution():\n    NI = 485\n    NCC = 270\n    FCInv = 4275 - 3752\n    WCInv = (1988 - 1806) - (1090 - 1007)\n    Net_borrowing = (465 - 450) + (1575 - 1515)\n    FCFE = NI + NCC - FCInv - WCInv + Net_borrowing\n    return FCFE",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 8,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.795790545596741,
    "source_id": "validation-31",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/301-1.jpg",
      "./MultiFinance/images/301-2.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-486",
    "output": [
      "# Calculate the percentage change in plan asset fair value allocated in Canada equity securities between 2018 and 2019\n    # If the percentage accorded in 2019 is doubled and then increased by 5%\n    \n    # Original percentage in 2019\n    original_percentage_2019 = 22.3\n    \n    # Double the percentage\n    doubled_percentage = original_percentage_2019 * 2\n    \n    # Increase by 5%\n    final_percentage = doubled_percentage + (doubled_percentage * 0.05)\n    \n    # Calculate the percentage change\n    percentage_change = ((final_percentage - original_percentage_2019) / original_percentage_2019) * 100\n    \n    # Return the answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 189,
      "prompt_tokens": 1617,
      "completion_tokens_details": {
        "text_tokens": 189
      },
      "prompt_tokens_details": {
        "text_tokens": 394,
        "image_tokens": 1223
      },
      "total_tokens": 1806
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the percentage change in plan asset fair value allocated in Canada equity securities between 2018 and 2019 if the percentage accorded in 2019 is doubled and then increased by 5%? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    canada_equity_securities_2019 = 22.3\n    canada_equity_securities_2018 = 20.8\n    multiplier = 2\n    percentage_increase = 5\n\n    # Do math calculation to get the answer\n    answer = (canada_equity_securities_2019 * multiplier + percentage_increase) - canada_equity_securities_2018\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-158",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n 30. EMPLOYEE BENEFIT PLANS (cont.) The fair value of the plan assets were allocated as follows between the various types of investments: Plan assets are valued at the measurement date of December 31 each year. The investments are made in accordance with the Statement of Investment Policies and Procedures. The Statement of Investment Policies and Procedures is reviewed on an annual basis by the Management Level Pension Fund Investment Committee with approval of the policy being provided by the Audit Committee.",
    "images": [
      "./MultiFinance/images/1897-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-487",
    "output": [
      "first_item_2024 = -7.28\n    second_item_2024 = 15.58\n    third_item_2024 = 15.58\n    \n    # Do math calculation to get the answer\n    difference = first_item_2024 - second_item_2024\n    result = (difference / third_item_2024) * 100\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 123,
      "prompt_tokens": 1395,
      "completion_tokens_details": {
        "text_tokens": 123
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1118
      },
      "total_tokens": 1518
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年第一项指标与第二项指标的差值，并将该差值除以第三项指标，然后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_1 = 8.00\n    value_2 = 8.55\n    value_3 = 12.34\n    diff = value_1 - value_2\n    ratio = diff / value_3\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_20_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2843",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3050-1.png",
      "./MultiFinance/images/3050-2.png",
      "./MultiFinance/images/3050-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3050-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-488",
    "output": [
      "ipo_pre_capacity = 110\n    post_capacity = 150\n    capacity_difference = post_capacity - ipo_pre_capacity\n    growth_rate = (capacity_difference / ipo_pre_capacity) * 100\n    \n    # Return the calculated growth rate rounded to two decimal places\n    return round(growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 88,
      "prompt_tokens": 1471,
      "completion_tokens_details": {
        "text_tokens": 88
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 1195
      },
      "total_tokens": 1559
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算背包在收购及达产后总产能与IPO前总产能的差值，并将该差值除以IPO前总产能，得到的增长率保留两位小数。",
    "python_solution": "def backpack_growth_rate():\n    pre_IPO_capacity = 110\n    post_acquisition_capacity = 150\n    difference = post_acquisition_capacity - pre_IPO_capacity\n    growth_rate = (difference / pre_IPO_capacity) * 100\n    return round(growth_rate, 2)\n",
    "image_id": "company_37_37_13_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-554",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2868-1.png",
      "./MultiFinance/images/2868-2.png",
      "./MultiFinance/images/2868-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2868-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-489",
    "output": [
      "year_2023_profit = 4797\n    year_2024_profit = 4898\n    year_2023_profit_growth_rate = (year_2024_profit - year_2023_profit) / year_2023_profit * 100\n    year_2024_profit_growth_rate = (year_2025_profit - year_2024_profit) / year_2024_profit * 100\n    \n    # Do math calculation to get the answer\n    profit_growth_rate_2023 = round(year_2023_profit_growth_rate, 2)\n    profit_growth_rate_2024 = round(year_2024_profit_growth_rate, 2)\n    \n    # return answer\n    return profit_growth_rate_2023, profit_growth_rate_2024\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 214,
      "prompt_tokens": 2780,
      "completion_tokens_details": {
        "text_tokens": 214
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 2520
      },
      "total_tokens": 2994
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年和2024年的营业利润增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    operating_profit_2023 = 4797\n    operating_profit_2024 = 4898\n\n    # Multi-step logic\n    growth_rate = (operating_profit_2024 - operating_profit_2023) / operating_profit_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_06_06_39_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1459",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2737-1.png",
      "./MultiFinance/images/2737-2.png",
      "./MultiFinance/images/2737-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2737-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-490",
    "output": [
      "year_21A = 2984.62\n    year_22A = 3176.25\n    year_23A = 3383.63\n    year_24E = 3173.61\n    year_25E = 3285.06\n    year_26E = 3527.01\n    \n    # Do math calculation to get the answer\n    total_growth = (year_26E - year_21A) / year_21A * 100\n    annual_growth_rate = ((total_growth ** (1/5)) - 1) * 100\n    \n    # return answer\n    return round(annual_growth_rate, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 177,
      "prompt_tokens": 1711,
      "completion_tokens_details": {
        "text_tokens": 177
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1452
      },
      "total_tokens": 1888
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算21A至26E期间主营业务收入的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    revenue_21A = 2984.62\n    revenue_26E = 3527.01\n    years = 5\n\n    # Multi-step logic\n    total_growth = (revenue_26E / revenue_21A) ** (1/years) - 1\n    annual_growth_rate = total_growth * 100\n    return round(annual_growth_rate, 2)",
    "image_id": "company_35_35_16_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-653",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.189654742026425,
    "images": [
      "./MultiFinance/images/2299-1.png",
      "./MultiFinance/images/2299-2.png",
      "./MultiFinance/images/2299-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2299-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-491",
    "output": [
      "unrealized_loss_2006 = -1000000000\n    foreign_currency_translation_offset = 1000000000\n    \n    # Do math calculation to get the answer\n    percentage_offset = (foreign_currency_translation_offset / abs(unrealized_loss_2006)) * 100\n    \n    # return answer\n    return round(percentage_offset, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 2195,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 961,
        "image_tokens": 1234
      },
      "total_tokens": 2301
    },
    "model": "qwen-omni-turbo",
    "question": "in 2006 , what percent of unrealized loss did foreign currency translation offset? Answer as percentage to three decimal places.",
    "answer": "94",
    "context": "american tower corporation and subsidiaries notes to consolidated financial statements brazil acquisition 2014on march 1 , 2011 , the company acquired 100% ( 100 % ) of the outstanding shares of a company that owned 627 communications sites in brazil for $ 553.2 million , which was subsequently increased to $ 585.4 million as a result of acquiring 39 additional communications sites during the year ended december 31 , 2011 . during the year ended december 31 , 2012 , the purchase price was reduced to $ 585.3 million after certain post- closing purchase price adjustments . the allocation of the purchase price was finalized during the year ended december 31 , 2012 . the following table summarizes the allocation of the aggregate purchase consideration paid and the amounts of assets acquired and liabilities assumed based upon their estimated fair value at the date of acquisition ( in thousands ) : final purchase price allocation ( 1 ) preliminary purchase price allocation ( 2 ) .\n\n<image 1>\n\n( 1 ) reflected in the consolidated balance sheets herein . ( 2 ) reflected in the consolidated balance sheets in the form 10-k for the year ended december 31 , 2011 . ( 3 ) includes approximately $ 7.7 million of accounts receivable , which approximates the value due to the company under certain contractual arrangements . ( 4 ) consists of customer-related intangibles of approximately $ 250.0 million and network location intangibles of approximately $ 118.0 million . the customer-related intangibles and network location intangibles are being amortized on a straight-line basis over periods of up to 20 years . ( 5 ) other long-term liabilities includes contingent amounts of approximately $ 30.0 million primarily related to uncertain tax positions related to the acquisition and non-current assets includes $ 24.0 million of the related indemnification asset . ( 6 ) the company expects that the goodwill recorded will be deductible for tax purposes . the goodwill was allocated to the company 2019s international rental and management segment . brazil 2014vivo acquisition 2014on march 30 , 2012 , the company entered into a definitive agreement to purchase up to 1500 towers from vivo s.a . ( 201cvivo 201d ) . pursuant to the agreement , on march 30 , 2012 , the company purchased 800 communications sites for an aggregate purchase price of $ 151.7 million . on june 30 , 2012 , the company purchased the remaining 700 communications sites for an aggregate purchase price of $ 126.3 million , subject to post-closing adjustments . in addition , the company and vivo amended the asset purchase agreement to allow for the acquisition of up to an additional 300 communications sites by the company , subject to regulatory approval . on august 31 , 2012 , the company purchased an additional 192 communications sites from vivo for an aggregate purchase price of $ 32.7 million , subject to post-closing adjustments. .\n",
    "program": "towers_purchased = 800 + 700\ntowers_allowed = 1500\ntowers_total = towers_purchased + towers_allowed\ntowers_purchased_final = towers_purchased + 192\ntowers_purchased_allowed = towers_purchased + 300\ntowers_purchased_ratio = towers_purchased_final / towers_purchased_allowed\nanswer = towers_purchased_ratio * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 0,
        "context_numbers": 92,
        "total_numbers": 92
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 0
      }
    },
    "difficulty": 3.737669618283368,
    "source_id": "test-736",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1388-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-492",
    "output": [
      "accounts_payable_2019 = -18668\n    accounts_payable_2018 = -9166\n    \n    # Do math calculation to get the answer\n    change_in_accounts_payable = ((accounts_payable_2019 - accounts_payable_2018) / abs(accounts_payable_2018)) * 100\n    \n    # return answer\n    return round(change_in_accounts_payable, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 1867,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 617,
        "image_tokens": 1250
      },
      "total_tokens": 1972
    },
    "model": "qwen-omni-turbo",
    "question": "What was the percentage change in accounts payables from 2018 to 2019 year end? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    accounts_payable_2019 = -18668\n    accounts_payable_2018 = -9166\n    \n    # Do math calculation to get the answer\n    answer = (accounts_payable_2019 - accounts_payable_2018) / accounts_payable_2018 * 100\n    \n    return answer",
    "source": "TAT-QA",
    "source_id": "simpshort-testmini-108",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n The following table sets forth, for the periods indicated, our working capital: Working Capital consists of current assets net of current liabilities. Working capital decreased $0.4 million to $12.3 million at December 31, 2019 compared with $12.7 million at December 31, 2018. The decrease was primarily a result of an increase of cash, accounts receivable, and inventory offset by an increase in accounts payable, accrued expenses and current operating lease liabilities. We normally carry three to four weeks of finished goods inventory. The average duration of our accounts receivable is approximately 25 days. For the year ended December 31, 2019 our capital resources consisted of primarily $9.5 million cash on hand and $33.0 million available under our credit facilities, net of $2.0 million reserved for two letters of credit. For the year ended December 31, 2018, our capital resources consisted primarily of $7.5 million cash on hand and $30.0 million available under our credit facilities. The Credit Facilities will mature in May 2024. We borrowed $72.3 million under our credit facilities during 2019, of which $18.5 million was repaid prior to the end of the year. As of December 31, 2019, we had $54.5 million of debt outstanding (including $0.7 million of debt issuance costs) under our credit facilities. There was no debt outstanding under the credit facilities as of December 31, 2018.",
    "images": [
      "./MultiFinance/images/1555-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-493",
    "output": [
      "aux_system_energy_consumption = 5\n    it_device_energy_consumption = 45\n    \n    # Calculate the difference in energy consumption between auxiliary systems and IT devices\n    diff_energy_consumption = abs(aux_system_energy_consumption - it_device_energy_consumption)\n    \n    # Calculate the percentage of total energy consumption that this difference represents\n    total_energy_consumption = aux_system_energy_consumption + it_device_energy_consumption\n    percentage_difference = (diff_energy_consumption / total_energy_consumption) * 100\n    \n    # Round the result to one decimal place\n    rounded_percentage_difference = round(percentage_difference, 1)\n    \n    # Return the calculated percentage difference as a string with two decimal places\n    return f\"{rounded_percentage_difference:.2f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 162,
      "prompt_tokens": 1621,
      "completion_tokens_details": {
        "text_tokens": 162
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1358
      },
      "total_tokens": 1783
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算辅助系统能耗与IT设备能耗的差值，并将其占总能耗的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    auxiliary_system_energy = 5\n    it_energy = 45\n    total_energy = 100\n\n    diff_energy = it_energy - auxiliary_system_energy\n    percentage = (diff_energy / total_energy) * 100\n    return round(percentage, 1)",
    "image_id": "company_08_08_11_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-650",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2940-1.png",
      "./MultiFinance/images/2940-2.png",
      "./MultiFinance/images/2940-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2940-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-494",
    "output": [
      "sales_2020 = 37.91\n    sales_2021 = 349.08\n    income_2020 = 25.37\n    income_2021 = 28.10\n    \n    total_sales = sales_2020 + sales_2021\n    average_income = (income_2020 + income_2021) / 2\n    \n    result = total_sales / average_income\n    \n    return round(result, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 121,
      "prompt_tokens": 1612,
      "completion_tokens_details": {
        "text_tokens": 121
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1349
      },
      "total_tokens": 1733
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年和2021年销量之和，并将结果除以这两年的平均收入。请保留一位小数。",
    "python_solution": "def solution():\n    volume_2020 = 37.91\n    volume_2021 = 33.38\n    income_2020 = 321.22\n    income_2021 = 349.08\n\n    total_volume = volume_2020 + volume_2021\n    average_income = (income_2020 + income_2021) / 2\n    result = total_volume / average_income\n    return round(result, 1)",
    "image_id": "company_13_13_17_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-872",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2538-1.png",
      "./MultiFinance/images/2538-2.png",
      "./MultiFinance/images/2538-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2538-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-495",
    "output": [
      "rate_2008 = 14\n    rate_2009 = -10\n    rate_2010 = -2\n    \n    # Do math calculation to get the answer\n    holding_period_return = ((1 + rate_2008/100) * (1 + rate_2009/100) * (1 + rate_2010/100)) - 1\n    \n    # return answer\n    return round(holding_period_return, 3)\n\n```"
    ],
    "usage": {
      "completion_tokens": 116,
      "prompt_tokens": 1513,
      "completion_tokens_details": {
        "text_tokens": 116
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 1242
      },
      "total_tokens": 1629
    },
    "model": "qwen-omni-turbo",
    "question": "What is the holding period return for the three-year timeframe, given the following annual rates of return for a mutual fund as reported by a researcher (expressed as a percentage)? Answer to three decimal places.",
    "python_solution": "def solution():\n    return ((1+0.14)*(1-0.10)*(1-0.02)-1)*100",
    "topic": "Portfolio Management & Strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 3,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 1,
        "parentheses": 8
      }
    },
    "difficulty": 3.5553480614894135,
    "source_id": "validation-68",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/314-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-496",
    "output": [
      "dividend_payment = 8\n    impairment_expense = 12\n    operating_cash_flow = -dividend_payment - impairment_expense\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return operating_cash_flow\n```"
    ],
    "usage": {
      "completion_tokens": 53,
      "prompt_tokens": 1538,
      "completion_tokens_details": {
        "text_tokens": 53
      },
      "prompt_tokens_details": {
        "text_tokens": 296,
        "image_tokens": 1242
      },
      "total_tokens": 1591
    },
    "model": "qwen-omni-turbo",
    "question": "Business B announced and distributed cash dividends worth $8 million and an impairment expense of $12 million in 2017. They categorized the dividend payment as a financing activity. What is the value of Business B's operating cash flow for 2017 (in $ millions)? Answer to a single decimal place.",
    "python_solution": "def solution():\n    REB = 0\n    NI = 23\n    Div = 0\n    REE = 0\n    impairment = 12\n    AR_change = (48-45)\n    Inv_change = (20-24)\n    AP_change = (33-30)\n    CFO = NI + impairment - AR_change - Inv_change + AP_change\n    return CFO",
    "topic": "Accounting",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 5,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 6
      }
    },
    "difficulty": 4.51085950651685,
    "source_id": "validation-157",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/351-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-497",
    "output": [
      "shareholders_deficit_2020 = 3767460\n    shareholders_deficit_2021 = 6219006\n    \n    # Calculate the growth rate\n    growth_rate = ((shareholders_deficit_2021 - shareholders_deficit_2020) / shareholders_deficit_2020) * 100\n    \n    # Return the answer as a string with two decimal places\n    return f\"{growth_rate:.2f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 111,
      "prompt_tokens": 1390,
      "completion_tokens_details": {
        "text_tokens": 111
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 1106
      },
      "total_tokens": 1501
    },
    "model": "qwen-omni-turbo",
    "question": "What is the growth rate of the shareholders' deficit from the period of three months ended March 31, 2020 to the same period in 2021 in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n    initial_deficit = -3851135 \n    final_deficit = -4284756 \n\n    #Do math calculation to get the answer\n    growth_rate = ((final_deficit - initial_deficit) / abs(initial_deficit)) * 100\n    answer = growth_rate\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-293",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2143-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.9120230054281464,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-498",
    "output": [
      "yoy_2026_to_2027 = (98.8 - 1) / 1 * 100\n    yoy_2027_to_2028 = (125.5 - 98.8) / 98.8 * 100\n    average_yoy = (yoy_2026_to_2027 + yoy_2027_to_2028) / 2\n    \n    # return answer\n    return round(average_yoy, 1)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 139,
      "prompt_tokens": 2359,
      "completion_tokens_details": {
        "text_tokens": 139
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 2102
      },
      "total_tokens": 2498
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2026年到2028年市场规模的平均年增长率，并将结果保留一位小数。",
    "python_solution": "def solution():\n    market_size_2026 = 73.3\n    market_size_2027 = 98.8\n    market_size_2028 = 125.5\n    growth_rate_2026_2027 = (market_size_2027 - market_size_2026) / market_size_2026 * 100\n    growth_rate_2027_2028 = (market_size_2028 - market_size_2027) / market_size_2027 * 100\n    average_growth_rate = (growth_rate_2026_2027 + growth_rate_2027_2028) / 2\n    return round(average_growth_rate, 1)",
    "image_id": "company_39_39_10_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1256",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.477336814478207,
    "images": [
      "./MultiFinance/images/2240-1.png",
      "./MultiFinance/images/2240-2.png",
      "./MultiFinance/images/2240-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2240-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-499",
    "output": [
      "ideal_sales = 446008\n    ask_sales = 333609\n    total_sales = ideal_sales + ask_sales\n    total_brands = 12\n    ratio = (total_sales / total_brands) * 100\n    \n    # return answer\n    return round(ratio, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 76,
      "prompt_tokens": 3682,
      "completion_tokens_details": {
        "text_tokens": 76
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 3417
      },
      "total_tokens": 3758
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算理想汽车和问界汽车的销量总和，并求该总和占所有品牌销量的比例；请保留一位小数。",
    "python_solution": "def solution():\n    lixiang_sales = 446008\n    wenjie_sales = 333609\n    total_sales = lixiang_sales + wenjie_sales\n    all_brands_total = 1725835\n    ratio = (total_sales / all_brands_total) * 100\n    return round(ratio, 1)",
    "image_id": "industry_13_13_20_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2015",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2994-1.png",
      "./MultiFinance/images/2994-2.png",
      "./MultiFinance/images/2994-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2994-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-500",
    "output": [
      "total_price = 198 + 236.8 + 297 + 166.9\n    count = 4\n    average_price = total_price / count\n    \n    # return answer\n    return round(average_price, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 64,
      "prompt_tokens": 2827,
      "completion_tokens_details": {
        "text_tokens": 64
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 2574
      },
      "total_tokens": 2891
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中四种奥沙利铂注射液的平均单价，并将结果保留两位小数。",
    "python_solution": "def solution():\n    price1 = 198\n    price2 = 236.8\n    price3 = 297\n    price4 = 166.9\n    average_price = (price1 + price2 + price3 + price4) / 4\n    return round(average_price, 2)",
    "image_id": "company_38_38_08_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1149",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2725-1.png",
      "./MultiFinance/images/2725-2.png",
      "./MultiFinance/images/2725-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2725-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-501",
    "output": [
      "cash_inflows = 5.1 * 12  # Assuming monthly cash inflows from financing activities\n    cash_outflows = 4.8 * 12  # Assuming monthly cash outflows for convertible debt obligations\n    \n    # Calculate number of months the company can continue to operate\n    months_operating = cash_inflows / cash_outflows\n    \n    # Return the answer\n    return months_operating\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 101,
      "prompt_tokens": 1594,
      "completion_tokens_details": {
        "text_tokens": 101
      },
      "prompt_tokens_details": {
        "text_tokens": 971,
        "image_tokens": 623
      },
      "total_tokens": 1695
    },
    "model": "qwen-omni-turbo",
    "question": "If the company can maintain its current cash inflows and outflows in the future, how many months can the company continue to operate while paying off its convertible debt obligations, excluding the cash requirements for current liabilities and long-term liabilities?",
    "python_solution": "def solution():\n    #Define variables name and value\n    cash_balance = 810139\n    cash_requirements_current_liabilities = 2000000 + 220000 + 332000 \n    cash_requirements_longterm_liabilities = 1200000 + 90000 + 82000\n    convertible_debt_obligations = 4800000\n    cash_outflows_operating = 4033000 \n    cash_outflows_investing = 489000 \n    cash_inflows_financing = 5100000 \n\n    #Do math calculation to get the answer\n    # Calculate the net cash inflows \n    net_cash_inflows = cash_inflows_financing - cash_outflows_operating - cash_outflows_investing\n\n    # Calculate the cash balance available for paying off the debt \n    cash_balance_for_debt = cash_balance - cash_requirements_current_liabilities - cash_requirements_longterm_liabilities\n\n    # Calculate the number of months required to pay off the debt \n    months_needed = convertible_debt_obligations / (net_cash_inflows / 6)\n\n    # Subtract the number of months where the cash balance can cover the debt\n    months_needed_after_using_balance = months_needed - (cash_balance_for_debt / (net_cash_inflows / 6))\n    return months_needed_after_using_balance\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-287",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2137-1.png"
    ],
    "context": "<image 1>\nCash requirements for our current liabilities include approximately $2.0 million for accounts payable and accrued expenses, approximately $220,000 for lease liabilities, and approximately $332,000 for loans payable and other current liabilities. We also have convertible debt obligations in the approximate amount of $4.8 million which, if not converted prior to maturity, are due on February 21, 2024. Cash requirements for our long-term liabilities include approximately $1.2 million for operating lease liabilities, approximately $90,000 in loans payable, and approximately $82,000 of long-term accrued expenses.\nNet cash used in operating activities for the six months ended June 30, 2023 and 2022 amounted to approximately $4,033,000 and $2,755,000, respectively. During the six months ended June 30, 2023, the net cash used in operating activities was primarily attributable to the net loss of approximately $7.7 million adjusted for approximately $4.1 million of net non-cash expenses, and approximately $0.5 million of cash used to fund changes in the levels of operating assets and liabilities. During the six months ended June 30, 2022, the net cash used in operating activities was primarily attributable to the net loss of approximately $7.6 million adjusted for approximately $4.1 million of net non-cash expenses, and approximately $0.7 million of cash used to fund changes in the levels of operating assets and liabilities.\nCash used in investing activities for the six months ended June 30, 2023 and 2022 amounted to approximately $489,000 and $1,720,000, respectively, resulting primarily from the purchase of property and equipment in the approximate amount of $438,000 and $1,677,000 million, respectively, and approximately $50,000 and $35,000 respectively, used to purchase certain intangible assets.\nNet cash provided by financing activities for the six months ended June 30, 2023 and 2022 amounted to approximately $5.1 million and $0.5 million, respectively. For the six months ended June 30, 2023, the net cash provided by financing activities resulted from approximately $4.7 million in net proceeds from the issuance of debt, $0.6 million in proceeds from the issuance of common stock in a private placement, approximately $0.7 million in proceeds from the issuance of stock under the New ELOC and $0.2 million in proceeds from the issuance of a note payable, partially offset by the repayment of convertible debt obligations and related redemption premiums in the approximate amount of $1.0 million, and repayment of loans payable of approximately $0.1 million. Net cash used in financing activities for the six months ended June 30, 2022 resulted from approximately $0.5 million of cash proceeds from the sale of commons stock, partially offset by approximately $0.1 million in repayments of loans payable.",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 5,
          "*": 0,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 13
      },
      "code_statistics": {
        "lines": 18,
        "parentheses": 6
      }
    },
    "difficulty": 5.60947179518496,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-502",
    "output": [
      "net_profit_2021_to_2026 = sum([950, 1053, 1098, 1137, 1229, 1372])\n    \n    # Do math calculation to get the answer\n    total_net_profit = round(net_profit_2021_to_2026)\n    \n    # return answer\n    return total_net_profit\n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 1438,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1172
      },
      "total_tokens": 1534
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年到2026年的净利润总和，并将结果四舍五入至最接近的整数。",
    "python_solution": "def solution():\n    net_profit_2021 = 950\n    net_profit_2022 = 1053\n    net_profit_2023 = 1098\n    net_profit_2024E = 1137\n    net_profit_2025E = 1229\n    net_profit_2026E = 1372\n    total_net_profit = net_profit_2021 + net_profit_2022 + net_profit_2023 + net_profit_2024E + net_profit_2025E + net_profit_2026E\n    return round(total_net_profit)",
    "image_id": "company_09_09_20_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-32",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2427-1.png",
      "./MultiFinance/images/2427-2.png",
      "./MultiFinance/images/2427-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2427-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-503",
    "output": [
      "seventh_item_2022 = -8.88\n    eighth_item_2022 = -6.33\n    ninth_item_2022 = 9.92\n    \n    # Do math calculation to get the answer\n    difference = (seventh_item_2022 - eighth_item_2022) / ninth_item_2022 * 100\n    \n    # return answer\n    return round(difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 1395,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1118
      },
      "total_tokens": 1513
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2022年第七项指标与第八项指标的差值，并将该差值除以第九项指标，然后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_7 = 26.63\n    value_8 = -5.19\n    value_9 = -48.05\n    diff = value_7 - value_8\n    ratio = diff / value_9\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_20_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2841",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2582-1.png",
      "./MultiFinance/images/2582-2.png",
      "./MultiFinance/images/2582-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2582-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-504",
    "output": [
      "year_1 = 827\n    year_2 = 937\n    year_3 = 1185\n    year_4 = 1187\n    \n    # Do math calculation to get the answer\n    sum = year_1 + year_2 + year_3 + year_4\n    average = int(sum / 4)\n    \n    # return answer\n    return average\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 2656,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 2398
      },
      "total_tokens": 2752
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2026年折旧和摊销的年均值，并保留整数。",
    "python_solution": "def solution():\n    depreciation_and_amortization_2023 = 827\n    depreciation_and_amortization_2024 = 937\n    depreciation_and_amortization_2025 = 1185\n    depreciation_and_amortization_2026 = 1187\n    average_depreciation_and_amortization = (depreciation_and_amortization_2023 + depreciation_and_amortization_2024 + depreciation_and_amortization_2025 + depreciation_and_amortization_2026) / 4\n    return int(average_depreciation_and_amortization)",
    "image_id": "company_11_11_31_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1317",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2733-1.png",
      "./MultiFinance/images/2733-2.png",
      "./MultiFinance/images/2733-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2733-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-505",
    "output": [
      "revenues = 6456\n    ebitda = 1349\n    depreciation_expense = 243\n    operating_income = 1106\n    interest_expense = 186\n    pretax_income = 920\n    income_tax = 294\n    net_income = 626\n    dividends_paid = 148\n    dividends_per_share = 0.36\n    fixed_capital_investment = 535\n    cost_of_equity = 12.0\n    weighted_average_cost_of_capital = 9.0\n    \n    # Do math calculation to get the answer\n    free_cash_flow = (revenues - depreciation_expense + fixed_capital_investment) * (1 - (cost_of_equity + weighted_average_cost_of_capital)) + net_income - dividends_paid - (pretax_income - interest_expense - income_tax)\n    \n    # return answer\n    return round(free_cash_flow, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 231,
      "prompt_tokens": 2786,
      "completion_tokens_details": {
        "text_tokens": 231
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 2511
      },
      "total_tokens": 3017
    },
    "model": "qwen-omni-turbo",
    "question": "According to Exhibits 1 and 2, what is the FCFF ($ millions) of the Johnson Company for the fiscal year ending on December 31, 2012? Answer to three decimal places.",
    "python_solution": "def solution():\n    NI = 626\n    NCC = 243\n    Int = 186\n    Tax_rate = 0.32\n    FCInv = 535\n    WCInvNet = (1290 - 1199) - (2783 - 2678)\n    FCFF = NI + NCC + Int*(1 - Tax_rate) - FCInv - WCInvNet\n    return FCFF",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 6,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.595119850134591,
    "source_id": "validation-13",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/293-1.jpg",
      "./MultiFinance/images/293-2.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-506",
    "output": [
      "dividend_declared = 0.4\n    months = 9\n    month_factor = 1/9\n    \n    # Calculate total available liquidity\n    total_available_liquidity = dividend_declared * months * month_factor\n    \n    # Return the answer\n    return total_available_liquidity\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 76,
      "prompt_tokens": 1714,
      "completion_tokens_details": {
        "text_tokens": 76
      },
      "prompt_tokens_details": {
        "text_tokens": 399,
        "image_tokens": 1315
      },
      "total_tokens": 1790
    },
    "model": "qwen-omni-turbo",
    "question": "Assuming that future dividends from GM Financial remain similar to the one declared and that the business and economic conditions, financial condition, earnings, liquidity requirements and leverage ratio remain reasonable, what would be the total available liquidity by the end of the month if we also consider the changes in Automotive and GM Cruise available liquidity for nine months extrapolated to a month factor? (in billions)",
    "python_solution": "def solution():\n    #Define variables name and value\n    dividend = 0.4 \n    available_liquidity_Sep = 33.9 \n    change_Automotive_nine_months = -1.5\n    change_GMCruise_nine_months = 1.8\n\n    #Do math calculation to get the answer\n    # convert the 9 month changes to 1 month changes and add one month of changes to the available liquidity plus the dividend\n    answer = available_liquidity_Sep + (dividend + (change_Automotive_nine_months/9) + (change_GMCruise_nine_months/9))\n    return round(answer, 2)\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-17",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1949-1.png",
      "./MultiFinance/images/1949-2.png"
    ],
    "context": "GM Financial’s Board of Directors declared a $0.4 billion dividend on its common stock on October 26, 2018, which we received on October 30, 2018. Future dividends from GM Financial will depend on a number of factors including business and economic conditions, its financial condition, earnings, liquidity requirements and leverage ratio.\n<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 8
      }
    },
    "difficulty": 4.356708826689592,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-507",
    "output": [
      "energy = 9.6\n    public_utility = 9.0\n    daily_consumption = 8.6\n    industry = -1.4\n    \n    # Do math calculation to get the answer\n    average_growth_rate = (energy + public_utility + daily_consumption) / 3\n    comparison_result = average_growth_rate - industry\n    \n    # return answer\n    return round(comparison_result, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 93,
      "prompt_tokens": 2150,
      "completion_tokens_details": {
        "text_tokens": 93
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1886
      },
      "total_tokens": 2243
    },
    "model": "qwen-omni-turbo",
    "question": "请计算能源、公用事业和日常消费三个行业的平均涨跌幅，并将该平均值与工业行业的涨跌幅进行比较，结果保留两位小数。",
    "python_solution": "def solution():\n    energy_growth = 9.3\n    utilities_growth = 9.0\n    consumer_staples_growth = 8.6\n    industrial_growth = 7.1\n\n    average_growth = (energy_growth + utilities_growth + consumer_staples_growth) / 3\n    difference = average_growth - industrial_growth\n    return round(difference, 2)",
    "image_id": "market_06_06_06_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2665",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2656-1.png",
      "./MultiFinance/images/2656-2.png",
      "./MultiFinance/images/2656-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2656-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-508",
    "output": [
      "change_rate_1 = (11.37 - 14.51) / 14.51 * 100\n    change_rate_2 = (-1.78 - 5.77) / 5.77 * 100\n    change_rate_3 = (16.64 - 11.37) / 11.37 * 100\n    \n    # return answer\n    return round(change_rate_3, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 1589,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1326
      },
      "total_tokens": 1707
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年与2023年相比，第三个指标的变化率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    value_2023 = -23.57\n    value_2024 = -1.78\n    change_rate = (value_2024 - value_2023) / value_2023 * 100\n    return round(change_rate, 2)",
    "image_id": "market_09_09_38_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2889",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.401197381662155,
    "images": [
      "./MultiFinance/images/2811-1.png",
      "./MultiFinance/images/2811-2.png",
      "./MultiFinance/images/2811-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2811-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-509",
    "output": [
      "securitization_notes_2018 = 226218\n    securitization_notes_2017 = 186533\n    securitization_notes_decrease = -30000\n    senior_notes_2025_2018 = 250000\n    senior_notes_2025_increase = 50000\n    \n    # Do math calculation to get the answer\n    new_securitization_notes = securitization_notes_2018 + securitization_notes_decrease\n    new_senior_notes_2025 = senior_notes_2025_2018 + senior_notes_2025_increase\n    subtotal = new_securitization_notes + new_senior_notes_2025\n    long_term_debt_2018 = 951091\n    long_term_debt_2017 = 765395\n    long_term_debt_difference = long_term_debt_2018 - long_term_debt_2017\n    total_long_term_debt = subtotal + long_term_debt_difference\n    \n    # return answer\n    return total_long_term_debt\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 294,
      "prompt_tokens": 990,
      "completion_tokens_details": {
        "text_tokens": 294
      },
      "prompt_tokens_details": {
        "text_tokens": 298,
        "image_tokens": 692
      },
      "total_tokens": 1284
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the new total long-term debt if the securitization notes decrease by $30,000 and 8.5% senior notes due 2025 increase by $50,000 (in thousands of dollars)?",
    "python_solution": "def solution():\n    #Define variables name and value\n    Securitization_notes_2018 = 226218\n    Securitization_notes_decrease = 30000\n    Senior_notes_2025 = 375000\n    Senior_notes_increase = 50000\n    Long_term_debt_2018 = 951091\n\n    #Do math calculation to get the answer\n    new_Securitization_notes = Securitization_notes_2018 - Securitization_notes_decrease\n    new_senior_notes_2025 = Senior_notes_2025 + Senior_notes_increase\n    new_Long_term_debt = (Long_term_debt_2018 - Securitization_notes_2018 - Senior_notes_2025 + new_Securitization_notes + new_senior_notes_2025)\n    answer = new_Long_term_debt\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-118",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2024-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 3,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 2
      }
    },
    "difficulty": 4.356708826689592,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-510",
    "output": [
      "us_holdings_2 = -18479\n    us_holdings_3 = -29105\n    overseas_holdings_6 = 10000\n    \n    # Do math calculation to get the answer\n    difference_us_holdings = us_holdings_2 - us_holdings_3\n    result = difference_us_holdings + overseas_holdings_6\n    \n    # return answer\n    return result\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 3413,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 3142
      },
      "total_tokens": 3520
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算美国本土持仓在2月和3月的差值，并将该差值与海外持仓在6月的数值相加；请提供最终结果。",
    "python_solution": "def solution():\n    us_position_feb = -30000\n    us_position_mar = -20000\n    overseas_position_jun = 5000\n\n    diff_us = us_position_feb - us_position_mar\n    final_result = diff_us + overseas_position_jun\n    return final_result",
    "image_id": "market_00_00_07_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2765",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 0
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3037-1.png",
      "./MultiFinance/images/3037-2.png",
      "./MultiFinance/images/3037-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3037-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-511",
    "output": [
      "yoy_2025_to_2027 = (14869 - 12141) / 12141 * 100\n    yoy_2027_to_2028 = (14869 - 13112) / 13112 * 100\n    yoy_2028_to_2029 = (14869 - 14161) / 14161 * 100\n    yoy_2029_to_2030 = (14869 - 14613) / 14613 * 100\n    \n    # Calculate average growth rate\n    total_growth_rate = (yoy_2025_to_2027 + yoy_2027_to_2028 + yoy_2028_to_2029 + yoy_2029_to_2030) / 4\n    \n    # Return the result rounded to two decimal places\n    return round(total_growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 276,
      "prompt_tokens": 2653,
      "completion_tokens_details": {
        "text_tokens": 276
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 2389
      },
      "total_tokens": 2929
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2025年到2030年全麻手术占比的平均增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    values = [62.7, 63.6, 64.5, 65.5, 66.4, 67.3]\n    total_growth = sum([(values[i] - values[i-1]) / values[i-1] * 100 for i in range(1, len(values))])\n    average_growth = total_growth / (len(values) - 1)\n    return round(average_growth, 2)",
    "image_id": "company_39_39_16_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1189",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 14
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2266-1.png",
      "./MultiFinance/images/2266-2.png",
      "./MultiFinance/images/2266-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2266-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-512",
    "output": [
      "year_1_operating_profit = 507\n    year_2_operating_profit = 484\n    \n    # Do math calculation to get the answer\n    operating_profit_growth_rate = (year_2_operating_profit - year_1_operating_profit) / year_1_operating_profit * 100\n    \n    # return answer\n    return round(operating_profit_growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 2796,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 2536
      },
      "total_tokens": 2900
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年和2024年的营业利润增长率，并将结果保留两位小数。",
    "python_solution": "def calculate_profit_growth():\n    profit_2023 = 507\n    profit_2024 = 484\n    growth_rate = (profit_2024 - profit_2023) / profit_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_10_10_14_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-369",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2920-1.png",
      "./MultiFinance/images/2920-2.png",
      "./MultiFinance/images/2920-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2920-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-513",
    "output": [
      "one_month = 7\n    three_months = 10\n    difference = three_months - one_month\n    percentage = (difference / one_month) * 100\n    \n    # return answer\n    return round(percentage, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 59,
      "prompt_tokens": 1431,
      "completion_tokens_details": {
        "text_tokens": 59
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 1158
      },
      "total_tokens": 1490
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算买入评级在三个月内与一个月内的差值，并将结果除以一个月内的数值，然后乘以100得到百分比。请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    buy_rating_1_month = 7\n    buy_rating_3_months = 10\n\n    # Multi-step logic\n    difference = buy_rating_3_months - buy_rating_1_month\n    ratio = difference / buy_rating_1_month if buy_rating_1_month != 0 else 0\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "company_02_02_26_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-103",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2590-1.png",
      "./MultiFinance/images/2590-2.png",
      "./MultiFinance/images/2590-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2590-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-514",
    "output": [
      "net_profit_2023A = 84.5\n    net_profit_2024E = 109.8\n    net_profit_2025E = 122.7\n    net_profit_2026E = 136.2\n    \n    # Do math calculation to get the answer\n    total_net_profit = net_profit_2023A + net_profit_2024E + net_profit_2025E + net_profit_2026E\n    \n    # return answer\n    return int(total_net_profit)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 144,
      "prompt_tokens": 2487,
      "completion_tokens_details": {
        "text_tokens": 144
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2224
      },
      "total_tokens": 2631
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算华能国际2023年到2026年的净利润总和，并将结果保留为整数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    net_profit_2023 = 84.5\n    net_profit_2024 = 109.8\n    net_profit_2025 = 122.7\n    net_profit_2026 = 136.2\n\n    total_net_profit = int(net_profit_2023 + net_profit_2024 + net_profit_2025 + net_profit_2026)\n    return total_net_profit",
    "image_id": "company_31_31_26_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1675",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2980-1.png",
      "./MultiFinance/images/2980-2.png",
      "./MultiFinance/images/2980-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2980-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-515",
    "output": [
      "first_year_sales = 150\n    second_year_sales = 200\n    \n    # Do math calculation to get the answer\n    growth_rate = (second_year_sales - first_year_sales) / first_year_sales * 100\n    \n    # return answer\n    return round(growth_rate, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 84,
      "prompt_tokens": 2207,
      "completion_tokens_details": {
        "text_tokens": 84
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1945
      },
      "total_tokens": 2291
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2026年锂盐销量相对于2024年的增长百分比；请保留一位小数。",
    "python_solution": "def solution():\n    lithium_sales_2024 = 100  # 假设2024年锂盐销量为100\n    target_lithium_sales_2026 = 200  # 根据图中数据，2026年目标锂盐销量为2024年的200%\n    growth_percentage = (target_lithium_sales_2026 / lithium_sales_2024 - 1) * 100\n    return round(growth_percentage, 1)",
    "image_id": "company_32_32_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1119",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 1,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2962-1.png",
      "./MultiFinance/images/2962-2.png",
      "./MultiFinance/images/2962-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2962-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-516",
    "output": [
      "total_sales_value = 140000 + 25000\n    n_sales_value = 140000\n    n_units_sold = 4000\n    \n    # Do math calculation to get the answer\n    joint_cost_allocation_n = (n_sales_value / total_sales_value) * 120000\n    \n    # return answer\n    return round(joint_cost_allocation_n)\n```"
    ],
    "usage": {
      "completion_tokens": 94,
      "prompt_tokens": 533,
      "completion_tokens_details": {
        "text_tokens": 94
      },
      "prompt_tokens_details": {
        "text_tokens": 300,
        "image_tokens": 233
      },
      "total_tokens": 627
    },
    "model": "qwen-omni-turbo",
    "question": "Tango Company produces joint products M, N, and T from a joint process. This information concerns a batch produced in April at a joint cost of $120,000: <image 1> How much of the joint cost should be allocated to joint product N using the net realizable value method? Answer to the nearest integer.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Cost Management",
    "source_id": "validation_Manage_13",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/94-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-517",
    "output": [
      "start_value = 189.9\n    end_value = 2172.9\n    years = 2027 - 2021 + 1\n    \n    # Calculate CAGR using the formula: (end_value/start_value)^(1/years) - 1\n    cagr = ((end_value / start_value) ** (1 / years)) - 1\n    \n    # Return the calculated CAGR as a percentage rounded to two decimal places\n    return round(cagr * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 130,
      "prompt_tokens": 1496,
      "completion_tokens_details": {
        "text_tokens": 130
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1234
      },
      "total_tokens": 1626
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年到2027年的复合年增长率（CAGR）。请保留两位小数。",
    "python_solution": "def solution():\n    value_2021 = 189.9\n    value_2027 = 2172.9\n    years = 6  # 从2021年到2027年共6年\n\n    cagr = ((value_2027 / value_2021) ** (1 / years)) - 1\n    return round(cagr * 100, 2)\n",
    "image_id": "industry_16_16_10_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2245",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2500-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2500-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-518",
    "output": [
      "year_2018 = 94.7\n    year_2023 = 120.4\n    difference = year_2023 - year_2018\n    percentage_difference = (difference / year_2018) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 86,
      "prompt_tokens": 3770,
      "completion_tokens_details": {
        "text_tokens": 86
      },
      "prompt_tokens_details": {
        "text_tokens": 283,
        "image_tokens": 3487
      },
      "total_tokens": 3856
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年和2023年对公不良余额的差值，并将该差值占2018年对公不良余额的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2018 = 80.2\n    value_2023 = 120.2\n\n    # Multi-step logic\n    diff = value_2023 - value_2018\n    ratio = diff / value_2018\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_07_07_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1836",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2646-1.png",
      "./MultiFinance/images/2646-2.png",
      "./MultiFinance/images/2646-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2646-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-519",
    "output": [
      "year_2025 = 1.01\n    year_2026 = 1.34\n    year_2027 = 1.7\n    year_2028 = 2.05\n    \n    # Do math calculation to get the answer\n    average = (year_2025 + year_2026 + year_2027 + year_2028) / 4\n    \n    # return answer\n    return round(average, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 117,
      "prompt_tokens": 832,
      "completion_tokens_details": {
        "text_tokens": 117
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 572
      },
      "total_tokens": 949
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2025年到2028年期间每年出货量的平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    shipment_2025 = 1.01\n    shipment_2026 = 1.34\n    shipment_2027 = 1.7\n    shipment_2028 = 2.05\n    average_shipment = (shipment_2025 + shipment_2026 + shipment_2027 + shipment_2028) / 4\n    return round(average_shipment, 2)",
    "image_id": "industry_19_19_06_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2416",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2767-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2767-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-520",
    "output": [
      "year_2016 = 48\n    year_2017 = 42\n    year_2018 = 39\n    year_2019 = 37\n    year_2020 = 36\n    year_2021 = 42\n    year_2022 = 49\n    year_2023 = 32\n\n    # Do math calculation to get the answer\n    average_margin = (year_2016 + year_2017 + year_2018 + year_2019 + year_2020 + year_2021 + year_2022 + year_2023) / 8\n\n    # return answer\n    return round(average_margin, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 200,
      "prompt_tokens": 1696,
      "completion_tokens_details": {
        "text_tokens": 200
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 1427
      },
      "total_tokens": 1896
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中锂行业毛利率和民爆业务毛利率的数据，计算2016年至2023年锂行业毛利率的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    lithium_margin_2016 = 21\n    lithium_margin_2017 = 25\n    lithium_margin_2018 = 16\n    lithium_margin_2019 = 1\n    lithium_margin_2020 = 13\n    lithium_margin_2021 = 42\n    lithium_margin_2022 = 49\n    lithium_margin_2023 = 6\n\n    total_margin = lithium_margin_2016 + lithium_margin_2017 + lithium_margin_2018 + lithium_margin_2019 + lithium_margin_2020 + lithium_margin_2021 + lithium_margin_2022 + lithium_margin_2023\n    average_margin = total_margin / 8\n    return round(average_margin, 1)",
    "image_id": "company_32_32_05_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1100",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 7,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 2
      }
    },
    "difficulty": 4.564348191467836,
    "images": [
      "./MultiFinance/images/2227-1.png",
      "./MultiFinance/images/2227-2.png",
      "./MultiFinance/images/2227-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2227-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-521",
    "output": [
      "dec_12 = 0.68\n    nov_11 = 0.78\n    growth_rate = (dec_12 - nov_11) / nov_11 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 67,
      "prompt_tokens": 1462,
      "completion_tokens_details": {
        "text_tokens": 67
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 1206
      },
      "total_tokens": 1529
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中12月与11月工业雷管产量的增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    production_nov = 0.65\n    production_dec = 0.68\n    \n    # Multi-step logic\n    growth_rate = (production_dec - production_nov) / production_nov * 100\n    return round(growth_rate, 2)",
    "image_id": "company_15_15_16_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1953",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2755-1.png",
      "./MultiFinance/images/2755-2.png",
      "./MultiFinance/images/2755-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2755-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-522",
    "output": [
      "car_production_2020 = 2517.1\n    car_production_2021 = 2605.7\n    car_sales_2020 = 2526.8\n    car_sales_2021 = 2624.9\n    \n    # Calculate the growth rate for each year\n    production_growth_rate_2021 = (car_production_2021 - car_production_2020) / car_production_2020 * 100\n    sales_growth_rate_2021 = (car_sales_2021 - car_sales_2020) / car_sales_2020 * 100\n    \n    # Compare with the previous year's growth rate\n    production_growth_rate_2020 = (car_production_2021 - car_production_2020) / car_production_2020 * 100\n    sales_growth_rate_2020 = (car_sales_2021 - car_sales_2020) / car_sales_2020 * 100\n    \n    # Return the results as strings with one decimal place\n    production_growth_rate_2021_str = f\"{production_growth_rate_2021:.1f}%\"\n    sales_growth_rate_2021_str = f\"{sales_growth_rate_2021:.1f}%\"\n    \n    return production_growth_rate_2021_str, sales_growth_rate_2021_str\n\n# Call the function and print the results\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 354,
      "prompt_tokens": 1218,
      "completion_tokens_details": {
        "text_tokens": 354
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 951
      },
      "total_tokens": 1572
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年汽车产量的同比增长率，并将其与2020年的同比增长率进行比较；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    production_2020 = 2517.1\n    production_2021 = 2605.7\n    growth_rate_2020 = -2.3\n\n    # Multi-step logic\n    diff_production = production_2021 - production_2020\n    growth_rate_2021 = (diff_production / production_2020) * 100\n    comparison = growth_rate_2021 - growth_rate_2020\n    return round(comparison, 1)",
    "image_id": "company_05_05_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1543",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 4
      }
    },
    "difficulty": 4.189654742026425,
    "images": [
      "./MultiFinance/images/2303-1.png",
      "./MultiFinance/images/2303-2.png",
      "./MultiFinance/images/2303-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2303-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-523",
    "output": [
      "total_return_on_assets = [15.92, 8.74, -27.65, 19.67, 15.39]\n    \n    # Calculate average\n    average_total_return_on_assets = sum(total_return_on_assets) / len(total_return_on_assets)\n    \n    # Return result\n    return round(average_total_return_on_assets, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 2031,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 1774
      },
      "total_tokens": 2118
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2026年期间，总资产收益率的平均值，并保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    roa_2021 = 15.23\n    roa_2022 = 25.93\n    roa_2023 = 13.09\n    roa_2024E = 8.56\n    roa_2025E = 9.14\n    roa_2026E = 9.59\n\n    # Multi-step logic\n    average_roa = (roa_2021 + roa_2022 + roa_2023 + roa_2024E + roa_2025E + roa_2026E) / 6\n    return round(average_roa, 2)",
    "image_id": "company_37_37_17_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-557",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 4.430816798843313,
    "images": [
      "./MultiFinance/images/2245-1.png",
      "./MultiFinance/images/2245-2.png",
      "./MultiFinance/images/2245-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2245-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-524",
    "output": [
      "shenzhen_design_capacity_G11 = 100 + 90\n    all_g6_design_capacity = 48 * 2 + 30 * 2 + 30 * 2 + 45\n    ratio = (shenzhen_design_capacity_G11 / all_g6_design_capacity) * 100\n    \n    # return answer\n    return round(ratio, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 93,
      "prompt_tokens": 3444,
      "completion_tokens_details": {
        "text_tokens": 93
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 3175
      },
      "total_tokens": 3537
    },
    "model": "qwen-omni-turbo",
    "question": "请计算华星光电在深圳的两个G11线的设计产能总和，并求该总和占所有G6线设计产能总和的比例；请保留两位小数。",
    "python_solution": "def solution():\n    capacity_g11_shenzhen_1 = 100\n    capacity_g11_shenzhen_2 = 90\n    total_g11 = capacity_g11_shenzhen_1 + capacity_g11_shenzhen_2\n\n    capacity_g6_total = 48 * 3 + 30 * 2 + 45 + 30 * 2\n    ratio = total_g11 / capacity_g6_total\n    return round(ratio, 2)",
    "image_id": "company_28_28_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-193",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 3,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 4.025351690735149,
    "images": [
      "./MultiFinance/images/2338-1.png",
      "./MultiFinance/images/2338-2.png",
      "./MultiFinance/images/2338-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2338-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-525",
    "output": [
      "year_2021 = 2.012\n    year_2022 = 4.765\n    year_2023 = 3.400\n    year_2024 = 2.275\n    year_2025 = 2.652\n    year_2026 = 3.060\n    \n    # Do math calculation to get the answer\n    CAGR = ((year_2026 / year_2021) ** (1/5)) - 1\n    answer = round(CAGR * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 156,
      "prompt_tokens": 2032,
      "completion_tokens_details": {
        "text_tokens": 156
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1774
      },
      "total_tokens": 2188
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2026年期间，每股收益的复合年增长率，并保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    eps_2021 = 2.012\n    eps_2026 = 3.060\n    years = 5\n\n    # Multi-step logic\n    cagr = ((eps_2026 / eps_2021) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_37_37_17_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-556",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2350-1.png",
      "./MultiFinance/images/2350-2.png",
      "./MultiFinance/images/2350-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2350-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-526",
    "output": [
      "group_intrinsic_value_growth_rate = [-1.25%, -1.98%, 14.57%, 10.57%, 9.12%]\n    \n    # Calculate median\n    sorted_group_intrinsic_value_growth_rate = sorted(group_intrinsic_value_growth_rate)\n    n = len(sorted_group_intrinsic_value_growth_rate)\n    if n % 2 == 1:\n        median = sorted_group_intrinsic_value_growth_rate[n // 2]\n    else:\n        median = (sorted_group_intrinsic_value_growth_rate[(n // 2) - 1] + sorted_group_intrinsic_value_growth_rate[n // 2]) / 2\n    \n    # Return the answer\n    return round(median * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 176,
      "prompt_tokens": 936,
      "completion_tokens_details": {
        "text_tokens": 176
      },
      "prompt_tokens_details": {
        "text_tokens": 254,
        "image_tokens": 682
      },
      "total_tokens": 1112
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算集团内含价值增长率的中位数；请保留两位小数。",
    "python_solution": "def solution():\n    growth_rates = [-1.25, -1.98, 14.57, 10.57, 9.12]\n    growth_rates.sort()\n    if len(growth_rates) % 2 == 0:\n        median_growth_rate = (growth_rates[len(growth_rates) // 2 - 1] + growth_rates[len(growth_rates) // 2]) / 2\n    else:\n        median_growth_rate = growth_rates[len(growth_rates) // 2]\n    return round(median_growth_rate, 2)",
    "image_id": "company_27_27_15_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-409",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 0,
          "/": 7,
          "%": 1,
          "**": 0
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 14
      }
    },
    "difficulty": 5.123963979403259,
    "images": [
      "./MultiFinance/images/2170-1.png",
      "./MultiFinance/images/2170-2.png",
      "./MultiFinance/images/2170-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2170-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-527",
    "output": [
      "net_profit_2023A = 86\n    net_profit_2024E = -80\n    net_profit_2025E = -20\n    net_profit_2026E = 291\n    \n    # Do math calculation to get the answer\n    total_net_profit = round(net_profit_2023A + net_profit_2024E + net_profit_2025E + net_profit_2026E)\n    \n    # return answer\n    return total_net_profit\n\n# Call the function and print the result\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 134,
      "prompt_tokens": 2708,
      "completion_tokens_details": {
        "text_tokens": 134
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2446
      },
      "total_tokens": 2842
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2026年净利润的总和，并将结果四舍五入至最接近的整数。",
    "python_solution": "def solution():\n    net_profit_2023 = 86\n    net_profit_2024 = -80\n    net_profit_2025 = -20\n    net_profit_2026 = 291\n\n    total_net_profit = net_profit_2023 + net_profit_2024 + net_profit_2025 + net_profit_2026\n    return round(total_net_profit)",
    "image_id": "company_35_35_18_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-662",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2671-1.png",
      "./MultiFinance/images/2671-2.png",
      "./MultiFinance/images/2671-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2671-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-528",
    "output": [
      "technology_gross_carrying_amount = 545.7\n    accumulated_amortization = -260.7\n    net_book_value = 285.0\n    \n    # Do math calculation to get the answer\n    remaining_life_years = 10.4\n    amortization_per_year = (accumulated_amortization / remaining_life_years)\n    amortization_for_2020 = amortization_per_year * 1\n    net_book_value_2020 = net_book_value + amortization_for_2020\n    \n    # return answer\n    return net_book_value_2020\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 149,
      "prompt_tokens": 1612,
      "completion_tokens_details": {
        "text_tokens": 149
      },
      "prompt_tokens_details": {
        "text_tokens": 297,
        "image_tokens": 1315
      },
      "total_tokens": 1761
    },
    "model": "qwen-omni-turbo",
    "question": "At the end of year 2020, if all other terms and conditions remain the same, what will be the net book value of identifiable intangible assets -- Technology, assuming a straight line amortization method? (in millions)",
    "python_solution": "def solution():\n    #Define variables name and value\n    gross_carrying_amount_dec_2018 = 545.7\n    accumulated_amortization_dec_2018 = 260.7 \n    amortization_2019 = 87.5\n    amortization_2020 = 113.5\n\n    #Do math calculation to get the answer\n    accumulated_amortization_2020 = accumulated_amortization_dec_2018 + amortization_2019 + amortization_2020\n    net_book_value_2020 = gross_carrying_amount_dec_2018 - accumulated_amortization_2020\n    return net_book_value_2020\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-152",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2045-1.png",
      "./MultiFinance/images/2045-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-529",
    "output": [
      "existing_capacity = 54.5 + 12.5\n    planned_capacity = 71\n    total_capacity = existing_capacity + planned_capacity\n    \n    percentage_planned_capacity = (planned_capacity / total_capacity) * 100\n    \n    # return answer\n    return round(percentage_planned_capacity, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 73,
      "prompt_tokens": 3119,
      "completion_tokens_details": {
        "text_tokens": 73
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 2845
      },
      "total_tokens": 3192
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中现有产能与在建产能的总和，并将其与规划待建产能进行比较，求出规划待建产能占两者总和的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    existing_capacity = 54.5 + 18 + 2\n    under_construction_capacity = 12.5 + 17 + 4.72 + 6 + 2\n    planned_capacity = 36 + 71 + 10 + 8 + 3 + 16\n    total_existing_and_under_construction = existing_capacity + under_construction_capacity\n    percentage = (planned_capacity / total_existing_and_under_construction) * 100\n    return round(percentage, 1)",
    "image_id": "company_21_21_15_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-827",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 12,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 14
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 4.718498871295094,
    "images": [
      "./MultiFinance/images/2198-1.png",
      "./MultiFinance/images/2198-2.png",
      "./MultiFinance/images/2198-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2198-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-530",
    "output": [
      "total_return_on_assets = [6.89, 3.34, 1.28, 3.99, 5.20, 6.19]\n    \n    # Calculate average\n    average_total_return_on_assets = sum(total_return_on_assets) / len(total_return_on_assets)\n    \n    # Return result\n    return round(average_total_return_on_assets, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 89,
      "prompt_tokens": 2031,
      "completion_tokens_details": {
        "text_tokens": 89
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 1774
      },
      "total_tokens": 2120
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2026年期间，总资产收益率的平均值，并保留两位小数。",
    "python_solution": "def solution():\n    roa_2021 = 6.89\n    roa_2022 = 3.34\n    roa_2023 = 1.28\n    roa_2024E = 3.99\n    roa_2025E = 5.2\n    roa_2026E = 6.19\n    average_roa = (roa_2021 + roa_2022 + roa_2023 + roa_2024E + roa_2025E + roa_2026E) / 6\n    return round(average_roa, 2)",
    "image_id": "company_02_02_25_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-107",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2319-1.png",
      "./MultiFinance/images/2319-2.png",
      "./MultiFinance/images/2319-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2319-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-531",
    "output": [
      "ebt_2022 = 131 - 1 - 40\n    ebt_2021 = 80 - 3 - 33\n    \n    # Calculate the difference\n    difference = ebt_2022 - ebt_2021\n    \n    # return answer\n    return difference\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 89,
      "prompt_tokens": 3152,
      "completion_tokens_details": {
        "text_tokens": 89
      },
      "prompt_tokens_details": {
        "text_tokens": 506,
        "image_tokens": 2646
      },
      "total_tokens": 3241
    },
    "model": "qwen-omni-turbo",
    "question": "What is the difference in the Earnings before Tax (EBT) for the first quarter of 2022 and 2021 considering the unrecognized net actuarial gains, the pension settlement charges, and the estimated income tax in million dollars?",
    "python_solution": "def solution():\n     #Define variables name and value\n    settlement_charge_2022 = 1 \n    settlement_charge_2021 = 3\n    pension_contributions_2022 = 13 \n    pension_contributions_2021 = 33\n    net_actuarial_gain_2022 = 1 \n    net_actuarial_gain_2021 = 37\n    provision_for_taxes_2022 = 40 \n    provision_for_taxes_2021 = 33\n    net_income_2022 = 130\n    net_income_2021 = 79\n\n    #Do math calculation to get the answer\n    EBT_2022 = net_income_2022 + provision_for_taxes_2022 - net_actuarial_gain_2022 + pension_contributions_2022 + settlement_charge_2022\n    EBT_2021 = net_income_2021 + provision_for_taxes_2021 - net_actuarial_gain_2021 + pension_contributions_2021 + settlement_charge_2021\n    EBT_difference = EBT_2022 - EBT_2021\n    return EBT_difference\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-256",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2111-1.png",
      "./MultiFinance/images/2111-2.png",
      "./MultiFinance/images/2111-3.png"
    ],
    "context": "For the first quarter of 2022 and 2021, the Company applied settlement accounting to certain U.S. pension plans due to lump sum payments made to participants, which resulted in settlement charges for the quarter of $ 1 and $ 3 , respectively, that were recorded in Restructuring and other charges in the Statement of Consolidated Operations.\nOn March 11, 2021, the American Rescue Plan Act of 2021 (“ARPA 2021”) was signed into law in the United States. ARPA 2021, in part, provides temporary relief for employers who sponsor defined benefit pension plans related to funding contributions under the Employee Retirement Income Security Act of 1974. For the first quarter of 2022 and 2021, Howmet’s pension contributions and other postretirement benefit payments were approximately $ 13 and $ 33 , respectively.\n<image 1>\n<image 2>\n<image 3>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 3,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 16,
        "parentheses": 0
      }
    },
    "difficulty": 4.969813299576001,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-532",
    "output": [
      "intrinsic_value_per_share_2020 = 47.85\n    intrinsic_value_per_share_2019 = 42.50\n    \n    # Calculate the change in intrinsic value per share\n    change_in_intrinsic_value_per_share = intrinsic_value_per_share_2020 - intrinsic_value_per_share_2019\n    \n    # Return the answer\n    return change_in_intrinsic_value_per_share\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 1558,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1278
      },
      "total_tokens": 1664
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in the company's intrinsic value per share from December 31, 2019, to September 30, 2020?",
    "python_solution": "def solution():\n    #Define variables name and value\n    cash_and_eq_2019 = 510_586\n    cash_and_eq_2020 = 52_032_640\n    prepaid_expenses_2019 = 1_228_585\n    prepaid_expenses_2020 = 932_408\n    tax_credits_2019 = 67_618\n    tax_credits_2020 = 129_269\n    liabilities_2019 = 2_087_525\n    liabilities_2020 = 3_224_556 \n    common_shares_2019 = 108_308_398\n    common_shares_2020 = 564_051_438\n    preferred_shares_2019 = 12 # as on 2019\n    preferred_shares_2020 = 12 # as on 2020 \n    total_shares_2019 = common_shares_2019 + preferred_shares_2019\n    total_shares_2020 = common_shares_2020 + preferred_shares_2020\n\n    #Do math calculation to get the answer\n    intrinsic_value_per_share_2019 = ( cash_and_eq_2019 + prepaid_expenses_2019 + tax_credits_2019 - liabilities_2019 ) / total_shares_2019\n    intrinsic_value_per_share_2020 = ( cash_and_eq_2020 + prepaid_expenses_2020 + tax_credits_2020 - liabilities_2020 ) / total_shares_2020\n    change_in_intrinsic_value_per_share = intrinsic_value_per_share_2020 - intrinsic_value_per_share_2019\n    return change_in_intrinsic_value_per_share\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-68",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1983-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 3,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 20,
        "parentheses": 4
      }
    },
    "difficulty": 5.488937726156687,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-533",
    "output": [
      "current_capacity_sum = 1.5 + 0 + 5.2 + 6.2 + 0 + 0 + 0 + 0 + 0 + 0 + 4 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 +"
    ],
    "usage": {
      "completion_tokens": 2048,
      "prompt_tokens": 2856,
      "completion_tokens_details": {
        "text_tokens": 2048
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 2588
      },
      "total_tokens": 4904
    },
    "model": "qwen-omni-turbo",
    "question": "请计算中芯国际所有工厂的当前产能总和，并将其与规划产能总和进行比较，求出当前产能占规划产能的比例；结果保留两位小数。",
    "python_solution": "def solution():\n    # 当前产能\n    current_capacity = 1.5 + 0 + 5.2 + 6.2 + 0 + 0 + 0\n    # 规划产能\n    planned_capacity = 3.5 + 3.5 + 6 + 10 + 5 + 5 + 5\n    # 当前产能占比\n    current_ratio = (current_capacity / planned_capacity) * 100\n    return round(current_ratio, 2)",
    "image_id": "company_28_28_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-214",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 12,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 14
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 4.836281906951478,
    "images": [
      "./MultiFinance/images/2188-1.png",
      "./MultiFinance/images/2188-2.png",
      "./MultiFinance/images/2188-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2188-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-534",
    "output": [
      "market_size_2020 = 40.89\n    market_size_2021 = 33.71\n    \n    # Calculate market growth rate\n    market_growth_rate = ((market_size_2021 - market_size_2020) / market_size_2020) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(market_growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 112,
      "prompt_tokens": 1399,
      "completion_tokens_details": {
        "text_tokens": 112
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1140
      },
      "total_tokens": 1511
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2020年到2021年的市场增长率，并将结果保留两位小数。",
    "python_solution": "def calculate_growth_rate_2020_to_2021():\n    market_size_2020 = 27.09\n    market_size_2021 = 30.0\n    growth_rate = (market_size_2021 - market_size_2020) / market_size_2020 * 100\n    return round(growth_rate, 2)\n",
    "image_id": "company_34_34_14_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-515",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2932-1.png",
      "./MultiFinance/images/2932-2.png",
      "./MultiFinance/images/2932-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2932-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-535",
    "output": [
      "cagr_2017_2023 = (42.6 - 1) ** (1/6) - 1\n    \n    # Do math calculation to get the answer\n    answer = round(cagr_2017_2023 * 100, 1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 80,
      "prompt_tokens": 2151,
      "completion_tokens_details": {
        "text_tokens": 80
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 1891
      },
      "total_tokens": 2231
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算电子商务渠道在2017-2023年的复合年增长率，并保留一位小数。",
    "python_solution": "def solution():\n    value_2017 = 25.8\n    cagr_2017_2020 = 18.8\n    cagr_2020_2023 = 3.4\n\n    # Calculate the compound annual growth rate for 2017-2023\n    cagr_2017_2023 = ((1 + cagr_2017_2020/100) * (1 + cagr_2020_2023/100))**(1/6) - 1\n    return round(cagr_2017_2023 * 100, 1)",
    "image_id": "company_36_36_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-319",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 1
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 10
      }
    },
    "difficulty": 4.700480365792417,
    "images": [
      "./MultiFinance/images/2203-1.png",
      "./MultiFinance/images/2203-2.png",
      "./MultiFinance/images/2203-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2203-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-536",
    "output": [
      "investment_income_2019 = 433\n    investment_income_2018 = 685\n    financing_costs_2019 = -2088\n    financing_costs_2018 = -1074\n    \n    # Calculate average investment income and average financing costs\n    average_investment_income = (investment_income_2019 + investment_income_2018) / 2\n    average_financing_costs = (financing_costs_2019 + financing_costs_2018) / 2\n    \n    # Calculate the difference\n    difference = average_investment_income - average_financing_costs\n    \n    # Return the answer\n    return difference\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 167,
      "prompt_tokens": 1627,
      "completion_tokens_details": {
        "text_tokens": 167
      },
      "prompt_tokens_details": {
        "text_tokens": 385,
        "image_tokens": 1242
      },
      "total_tokens": 1794
    },
    "model": "qwen-omni-turbo",
    "question": "What is the difference between the average investment income and average financing costs? (in million)",
    "python_solution": "def solution():\n    # Define variables name and value\n    investment_income_2019 = 433\n    investment_income_2018 = 685\n    financing_costs_2019 = -2088\n    financing_costs_2018 = -1074\n    \n    # Do math calculation to get the answer\n    average_investment_income = (investment_income_2019 + investment_income_2018) / 2\n    average_financing_costs = (financing_costs_2019 + financing_costs_2018) / 2\n    answer = average_investment_income - average_financing_costs\n    \n    return answer",
    "source": "TAT-QA",
    "source_id": "simpshort-testmini-17",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Note: 1 Primarily comprises foreign exchange differences reflected in the income statement in relation to sterling and US dollar balances. Net financing costs increased by €1.3 billion, primarily driven by mark-to-market losses (including hedges of the mandatory convertible bond) and adverse foreign exchange rate movements. Net financing costs before interest on settlement of tax issues includes increased interest costs as part of the financing for the Liberty Global transaction as well as adverse interest rate movements on borrowings in foreign operations. Excluding these, underlying financing costs remained stable, reflecting consistent average net debt balances and weighted average borrowing costs for both periods.",
    "images": [
      "./MultiFinance/images/1464-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 4.430816798843313,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-537",
    "output": [
      "huawen_electricity_wind_power = 25.60 + 1.79\n    total_huawen_group = 243.12\n    percentage = huawen_electricity_wind_power / total_huawen_group * 100\n    \n    # return answer\n    return round(percentage, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 93,
      "prompt_tokens": 2231,
      "completion_tokens_details": {
        "text_tokens": 93
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1966
      },
      "total_tokens": 2324
    },
    "model": "qwen-omni-turbo",
    "question": "请计算华能水电的风电和光伏装机量之和，并求该和占华能集团总计装机量的比例，结果保留两位小数。",
    "python_solution": "def solution():\n    wind_power_huadian = 0.14\n    solar_power_huadian = 1.79\n    total_huadian_wind_solar = wind_power_huadian + solar_power_huadian\n    total_capacity_group = 243.12\n    ratio = (total_huadian_wind_solar / total_capacity_group) * 100\n    return round(ratio, 2)",
    "image_id": "industry_17_17_14_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2320",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3005-1.png",
      "./MultiFinance/images/3005-2.png",
      "./MultiFinance/images/3005-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3005-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-538",
    "output": [
      "cic_effective_duration = 7.35\n    interest_rate_change = -0.50 / 100\n    \n    # Do math calculation to get the answer\n    price_change_forecasted_by_effective_duration = cic_effective_duration * interest_rate_change\n    \n    # return answer\n    return price_change_forecasted_by_effective_duration\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 81,
      "prompt_tokens": 543,
      "completion_tokens_details": {
        "text_tokens": 81
      },
      "prompt_tokens_details": {
        "text_tokens": 331,
        "image_tokens": 212
      },
      "total_tokens": 624
    },
    "model": "qwen-omni-turbo",
    "question": "Patrick Wall is considering the purchase of one of the two bonds described in the following table. Wall realizes his decision will depend primarily on effective duration, and he believes that interest rates will decline by 50 basis points at all maturities over the next 6 months. <image 1> Calculate the percentage price change forecasted by effective duration for the CIC bond if interest rates decline by 50 basis points over the next 6 months. Answer as a percentage to three decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_293",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/178-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-539",
    "output": [
      "investment_cash_flow_2023A = -1209\n    investment_cash_flow_2024E = -2708\n    investment_cash_flow_2025E = -2784\n    investment_cash_flow_2026E = -2824\n    \n    # Do math calculation to get the answer\n    total_investment_cash_flow = investment_cash_flow_2023A + investment_cash_flow_2024E + \\\n                                 investment_cash_flow_2025E + investment_cash_flow_2026E\n    \n    positive_total_investment_cash_flow = abs(total_investment_cash_flow)\n    \n    # return answer\n    return positive_total_investment_cash_flow\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 171,
      "prompt_tokens": 2656,
      "completion_tokens_details": {
        "text_tokens": 171
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 2398
      },
      "total_tokens": 2827
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2026年投资活动现金流的总和，并将结果转换为正数。",
    "python_solution": "def solution():\n    investment_cash_flow_2023 = -1209\n    investment_cash_flow_2024 = -2708\n    investment_cash_flow_2025 = -2784\n    investment_cash_flow_2026 = -2824\n    total_investment = investment_cash_flow_2023 + investment_cash_flow_2024 + investment_cash_flow_2025 + investment_cash_flow_2026\n    return abs(total_investment)",
    "image_id": "company_11_11_31_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1314",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 4,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.8918202981106265,
    "images": [
      "./MultiFinance/images/2409-1.png",
      "./MultiFinance/images/2409-2.png",
      "./MultiFinance/images/2409-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2409-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-540",
    "output": [
      "sum_2014_2024 = -11.61 + (-11.71) + (-14.48) + (-15.27) + (-17.84)\n    \n    # Do math calculation to get the answer\n    average_return = sum_2014_2024 / 11\n    \n    # return answer\n    return round(average_return, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 2613,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2350
      },
      "total_tokens": 2726
    },
    "model": "qwen-omni-turbo",
    "question": "请计算第1.0组在2014年到2024年的平均年化超额收益，并将结果保留两位小数。",
    "python_solution": "def solution():\n    values = [-11.61, 33.73, -18.41, -15.67, -9.28, -2.49, -13.29, 5.3, 28.83, 22.96, 2.06]\n    average = sum(values) / len(values)\n    return round(average, 2)",
    "image_id": "strategy_04_04_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3111",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 12
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 6,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 6
      }
    },
    "difficulty": 3.737669618283368,
    "images": [
      "./MultiFinance/images/2528-1.png",
      "./MultiFinance/images/2528-2.png",
      "./MultiFinance/images/2528-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2528-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-541",
    "output": [
      "total_LT_debt = 10556.6\n    LT_debt_5yrs_or_below = 2747.6 + 2287.0 + 5522.0\n    \n    # Do math calculation to get the answer\n    proportion = (LT_debt_5yrs_or_below / total_LT_debt) * 100\n    \n    # return answer\n    return proportion\n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 1505,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 1248
      },
      "total_tokens": 1601
    },
    "model": "qwen-omni-turbo",
    "question": "What is the proportion of long-term debt payments due in 5 years or below?  Answer as a percentage with two decimal places.",
    "answer": "47.69",
    "program": "longterm_debt_1_3_years = df[\"Long-term debt .\"][\"1-3 Years\"]\n\nlongterm_debt_3_5_years = df[\"Long-term debt .\"][\"3-5 Years\"]\n\nlongterm_debt_total = df[\"Long-term debt .\"][\"Total\"]\n\nanswer = round(( longterm_debt_1_3_years + longterm_debt_3_5_years ) / longterm_debt_total * 100, 2)",
    "statistics": {
      "number_statistics": {
        "question_numbers": 1,
        "context_numbers": 66,
        "total_numbers": 67
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 5,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.8712010109078907,
    "source_id": "test-31",
    "img_type": "['Tables']",
    "source": "CodeTAT-QA",
    "images": [
      "./MultiFinance/images/395-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-542",
    "output": [
      "coleman_tent_price_range = [27.99, 569.99]\n    north_face_tent_price_range = [150, 6000]\n    \n    coleman_tent_price_difference = max(coleman_tent_price_range) - min(coleman_tent_price_range)\n    north_face_tent_price_difference = max(north_face_tent_price_range) - min(north_face_tent_price_range)\n    \n    price_difference = abs(coleman_tent_price_difference - north_face_tent_price_difference)\n    \n    # return answer\n    return int(price_difference)\n\n```"
    ],
    "usage": {
      "completion_tokens": 132,
      "prompt_tokens": 2116,
      "completion_tokens_details": {
        "text_tokens": 132
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 1856
      },
      "total_tokens": 2248
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算美国品牌Coleman和The North Face的帐篷价格范围之差，并将结果保留为整数。",
    "python_solution": "def solution():\n    coleman_tent_min = 27.99\n    coleman_tent_max = 569.99\n    the_north_face_tent_min = 150\n    the_north_face_tent_max = 6000\n\n    coleman_tent_range = coleman_tent_max - coleman_tent_min\n    the_north_face_tent_range = the_north_face_tent_max - the_north_face_tent_min\n\n    difference = int(the_north_face_tent_range - coleman_tent_range)\n    return difference",
    "image_id": "company_37_37_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-529",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2864-1.png",
      "./MultiFinance/images/2864-2.png",
      "./MultiFinance/images/2864-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2864-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-543",
    "output": [
      "EPS_2023 = 2.79\n    EPS_2024 = 8.03\n    \n    # Do math calculation to get the answer\n    growth_rate = (EPS_2024 - EPS_2023) / EPS_2023 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 2115,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 1860
      },
      "total_tokens": 2206
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年和2024年的每股收益增长率，并将结果保留两位小数。",
    "python_solution": "def calculate_growth_rate():\n    eps_2023 = 2.79\n    eps_2024 = 8.03\n    growth_rate_2023_2024 = (eps_2024 - eps_2023) / eps_2023 * 100\n    return round(growth_rate_2023_2024, 2)",
    "image_id": "company_27_27_15_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-417",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2923-1.png",
      "./MultiFinance/images/2923-2.png",
      "./MultiFinance/images/2923-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2923-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-544",
    "output": [
      "effective_duration_ptr = 5.40\n    rate_change = -0.50 / 100\n    \n    # Do math calculation to get the answer\n    price_change = (effective_duration_ptr * rate_change) * 100\n    \n    # return answer\n    return price_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 78,
      "prompt_tokens": 542,
      "completion_tokens_details": {
        "text_tokens": 78
      },
      "prompt_tokens_details": {
        "text_tokens": 330,
        "image_tokens": 212
      },
      "total_tokens": 620
    },
    "model": "qwen-omni-turbo",
    "question": "Patrick Wall is considering the purchase of one of the two bonds described in the following table. Wall realizes his decision will depend primarily on effective duration, and he believes that interest rates will decline by 50 basis points at all maturities over the next 6 months. <image 1> Calculate the percentage price change forecasted by effective duration for the PTR bond if interest rates decline by 50 basis points over the next 6 months. Answer as a percentage to three decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_293",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/179-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-545",
    "output": [
      "huawei_market_share = 28.1\n    xesai_market_share = 23.1\n    total_market_share = huawei_market_share + xesai_market_share\n    \n    # Calculate percentage\n    percentage = (total_market_share / 100) * 100\n    \n    # Return the result\n    return round(percentage, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 94,
      "prompt_tokens": 2033,
      "completion_tokens_details": {
        "text_tokens": 94
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1774
      },
      "total_tokens": 2127
    },
    "model": "qwen-omni-turbo",
    "question": "请计算华为与禾赛科技的市场份额之和，然后求该和占整个市场的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    share_huawei = 28.1\n    share_heisai = 23.1\n\n    combined_share = share_huawei + share_heisai\n    total_market = 100\n\n    percentage_of_total = (combined_share / total_market) * 100\n    return round(percentage_of_total, 1)",
    "image_id": "company_18_18_35_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-773",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2948-1.png",
      "./MultiFinance/images/2948-2.png",
      "./MultiFinance/images/2948-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2948-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-546",
    "output": [
      "machine_equipment_rate = (3.03 + 20) / 2\n    \n    # Do math calculation to get the answer\n    average_machine_equipment_rate = round(machine_equipment_rate, 2)\n    \n    # return answer\n    return average_machine_equipment_rate\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 66,
      "prompt_tokens": 2456,
      "completion_tokens_details": {
        "text_tokens": 66
      },
      "prompt_tokens_details": {
        "text_tokens": 254,
        "image_tokens": 2202
      },
      "total_tokens": 2522
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算机器设备的平均年折旧率，并将其结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    depreciation_years_min = 5\n    depreciation_years_max = 32\n    depreciation_rate_min = 3.03\n    depreciation_rate_max = 20.00\n\n    # Multi-step logic\n    average_depreciation_years = (depreciation_years_min + depreciation_years_max) / 2\n    average_depreciation_rate = (depreciation_rate_min + depreciation_rate_max) / 2\n    return round(average_depreciation_rate, 2)",
    "image_id": "industry_17_17_27_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2292",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 6
      }
    },
    "difficulty": 4.0943445622221,
    "images": [
      "./MultiFinance/images/2336-1.png",
      "./MultiFinance/images/2336-2.png",
      "./MultiFinance/images/2336-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2336-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-547",
    "output": [
      "apac_percentage = 17.0\n    west_eu_percentage = 17.8\n    \n    # Calculate the difference in percentage points\n    difference_percentage_points = abs(apac_percentage - west_eu_percentage)\n    \n    # Convert the difference to a percentage of total market share\n    total_market_share = 100\n    difference_percentage_of_total = (difference_percentage_points / total_market_share) * 100\n    \n    # Round the result to two decimal places\n    difference_percentage_of_total_rounded = round(difference_percentage_of_total, 2)\n    \n    # Return the calculated difference as a percentage of total market share\n    return difference_percentage_of_total_rounded\n\n# Call the function and print the result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 162,
      "prompt_tokens": 3415,
      "completion_tokens_details": {
        "text_tokens": 162
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 3153
      },
      "total_tokens": 3577
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中亚太地区与西欧地区的市场份额之差，并将结果表示为占总市场份额的百分比；请保留两位小数。",
    "python_solution": "def solution():\n    asia_pacific = 17.0\n    western_europe = 17.8\n    difference = abs(asia_pacific - western_europe)\n    total_market = 100\n    percentage = (difference / total_market) * 100\n    return round(percentage, 2)",
    "image_id": "company_24_24_13_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-689",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2873-1.png",
      "./MultiFinance/images/2873-2.png",
      "./MultiFinance/images/2873-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2873-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-548",
    "output": [
      "piam = 28.9\n    zhongyuan = 11.0\n    ruihua_tai = 8.6\n    \n    # Do math calculation to get the answer\n    top_three_market_share = piam + zhongyuan + ruihua_tai\n    remaining_market_share = 100 - top_three_market_share\n    \n    # return answer\n    return round(remaining_market_share, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 97,
      "prompt_tokens": 1642,
      "completion_tokens_details": {
        "text_tokens": 97
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1384
      },
      "total_tokens": 1739
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中前三大公司的市场份额总和，并将其与剩余市场份额的百分比进行比较；请保留一位小数。",
    "python_solution": "def solution():\n    jilin_huaqian = 24\n    zhongfu_shenyi = 21\n    xinchuang_tangu = 9\n    other = 100 - (jilin_huaqian + zhongfu_shenyi + xinchuang_tangu)\n    \n    top_three_sum = jilin_huaqian + zhongfu_shenyi + xinchuang_tangu\n    comparison = other / top_three_sum * 100\n    return round(comparison, 1)",
    "image_id": "industry_04_04_14_figure_7",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2181",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 4.143134726391533,
    "images": [
      "./MultiFinance/images/2313-1.png",
      "./MultiFinance/images/2313-2.png",
      "./MultiFinance/images/2313-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2313-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-549",
    "output": [
      "year_1 = 77 + 5\n    year_2 = 80 + 12\n    growth_rate = ((year_2 - year_1) / year_1) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 70,
      "prompt_tokens": 2465,
      "completion_tokens_details": {
        "text_tokens": 70
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2202
      },
      "total_tokens": 2535
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2024年的折旧摊销与财务费用之和的增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    depreciation_and_interest_2023 = 77 + 7\n    depreciation_and_interest_2024 = 80 + 17\n    growth_rate = (depreciation_and_interest_2024 - depreciation_and_interest_2023) / depreciation_and_interest_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_13_13_30_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-847",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.401197381662155,
    "images": [
      "./MultiFinance/images/2803-1.png",
      "./MultiFinance/images/2803-2.png",
      "./MultiFinance/images/2803-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2803-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-550",
    "output": [
      "year_2023 = 13.6\n    year_2017 = 13.6 / (1 + 0.13)**6\n    \n    # Do math calculation to get the answer\n    cagr = ((year_2023 / year_2017) ** (1/6)) - 1\n    answer = round(cagr * 100, 1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 2152,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1891
      },
      "total_tokens": 2257
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算线下门店渠道在2017-2023年的复合年增长率，并保留一位小数。",
    "python_solution": "def solution():\n    value_2017 = 13.6\n    cagr_2017_2020 = 13.8\n    cagr_2020_2023 = 12.6\n\n    # Calculate the compound annual growth rate for 2017-2023\n    cagr_2017_2023 = ((1 + cagr_2017_2020/100) * (1 + cagr_2020_2023/100))**(1/6) - 1\n    return round(cagr_2017_2023 * 100, 1)",
    "image_id": "company_36_36_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-320",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 1
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 10
      }
    },
    "difficulty": 4.700480365792417,
    "images": [
      "./MultiFinance/images/2204-1.png",
      "./MultiFinance/images/2204-2.png",
      "./MultiFinance/images/2204-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2204-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-551",
    "output": [
      "total_locations = 57 + 26 + 22 + 19 + 9 + 8 + 7 + 63\n    \n    texas_locations = 19\n    \n    percentage_texas = (texas_locations / total_locations) * 100\n    \n    # return answer\n    return round(percentage_texas, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 90,
      "prompt_tokens": 2079,
      "completion_tokens_details": {
        "text_tokens": 90
      },
      "prompt_tokens_details": {
        "text_tokens": 856,
        "image_tokens": 1223
      },
      "total_tokens": 2169
    },
    "model": "qwen-omni-turbo",
    "question": "What percentage of the total leased locations are in Texas? Answer to three decimal places.",
    "answer": 6.507,
    "context": "we are not under any obligation ( and expressly disclaim any such obligation ) to update or alter our forward- looking statements , whether as a result of new information , future events or otherwise . you should carefully consider the possibility that actual results may differ materially from our forward-looking statements . item 1b . unresolved staff comments . item 2 . properties . our corporate headquarters are located in jacksonville , florida , in an owned facility . fnf occupies and pays us rent for approximately 121000 square feet in this facility . we lease office space as follows : number of locations ( 1 ) .\n\n<image 1>\n\n( 1 ) represents the number of locations in each state listed . we also lease approximately 81 locations outside the united states . we believe our properties are adequate for our business as presently conducted . item 3 . legal proceedings . in the ordinary course of business , we are involved in various pending and threatened litigation matters related to our operations , some of which include claims for punitive or exemplary damages . we believe that no actions , other than the matters listed below , depart from customary litigation incidental to our business . as background to the disclosure below , please note the following : 2022 these matters raise difficult and complicated factual and legal issues and are subject to many uncertainties and complexities . 2022 we review these matters on an on-going basis and follows the provisions of statement of financial accounting standards ( 201csfas 201d ) no . 5 , 201caccounting for contingencies , 201d when making accrual and disclosure decisions . when assessing reasonably possible and probable outcomes , we base our decision on our assessment of the ultimate outcome following all appeals . the company and certain of its employees were named on march 6 , 2006 as defendants in a civil lawsuit brought by grace & digital information technology co. , ltd . ( 201cgrace 201d ) , a chinese company that formerly acted as a sales agent for alltel information services ( 201cais 201d ) . grace originally filed suit in december 2004 in state court in monterey county , california , alleging that the company breached a sales agency agreement by failing to pay commissions associated with sales contracts signed in 2001 and 2003 . the 2001 contracts were never completed . the 2003 contracts , as to which grace provided no assistance , were for a different project and were executed one and one-half years after grace 2019s sales agency agreement was terminated . in addition to its breach of contract claim , grace also alleged that the company violated the foreign corrupt practices act ( fcpa ) in its dealings with a bank customer in china . the company denied grace 2019s allegations in this california lawsuit. .\n",
    "program": "# Number of leased locations in Texas\nleased_locations_texas = 19  \n\n# Total leased locations (sum of all states and international locations)\ntotal_leased_locations = 57 + 26 + 22 + 19 + 9 + 8 + 7 + 63 + 81  \n\n# Calculate percentage\npercent_texas = (leased_locations_texas / total_leased_locations) * 100  \n\n# Round to three decimal places\nanswer = round(percent_texas, 3)",
    "statistics": {
      "number_statistics": {
        "question_numbers": 0,
        "context_numbers": 36,
        "total_numbers": 36
      },
      "operator_statistics": {
        "operators": {
          "+": 8,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.700480365792417,
    "source_id": "test-37",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/689-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-552",
    "output": [
      "total_assets = 39457 + 37708 + 32233 + 30337 + 24828\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(total_assets, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 65,
      "prompt_tokens": 2213,
      "completion_tokens_details": {
        "text_tokens": 65
      },
      "prompt_tokens_details": {
        "text_tokens": 251,
        "image_tokens": 1962
      },
      "total_tokens": 2278
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中排名前五的银行总资产之和，并将结果保留两位小数。",
    "python_solution": "def solution():\n    bank1 = 39457\n    bank2 = 37708\n    bank3 = 32233\n    bank4 = 30337\n    bank5 = 24828\n\n    total_assets = bank1 + bank2 + bank3 + bank4 + bank5\n    return round(total_assets, 2)",
    "image_id": "company_04_04_08_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-725",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2712-1.png",
      "./MultiFinance/images/2712-2.png",
      "./MultiFinance/images/2712-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2712-1.png",
      "./MultiFinance/images/2712-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-553",
    "output": [
      "robot_profit_2025_to_2030 = (34 + 353 + 1999 + 3836 + 5149 + 6806) * 1000000\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(robot_profit_2025_to_2030, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 95,
      "prompt_tokens": 3296,
      "completion_tokens_details": {
        "text_tokens": 95
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 3034
      },
      "total_tokens": 3391
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2025年到2030年机器人业务的累计净利润，并将结果保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2025 = 34\n    net_profit_2026 = 353\n    net_profit_2027 = 1999\n    net_profit_2028 = 3836\n    net_profit_2029 = 5149\n    net_profit_2030 = 6806\n\n    total_net_profit = net_profit_2025 + net_profit_2026 + net_profit_2027 + net_profit_2028 + net_profit_2029 + net_profit_2030\n    return round(total_net_profit, 2)",
    "image_id": "company_11_11_18_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1359",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2484-1.png",
      "./MultiFinance/images/2484-2.png",
      "./MultiFinance/images/2484-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2484-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-554",
    "output": [
      "total_shares = 1 - (0.7 * 0.3 + 0.3)\n    \n    # Do math calculation to get the answer\n    total_shares_percentage = round(total_shares * 100, 2)\n    \n    # return answer\n    return total_shares_percentage\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 72,
      "prompt_tokens": 1863,
      "completion_tokens_details": {
        "text_tokens": 72
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 1608
      },
      "total_tokens": 1935
    },
    "model": "qwen-omni-turbo",
    "question": "请计算中非实业在JTD公司和BIB公司的总持股比例，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # 中非实业在SSC公司的持股比例\n    cnaf_ssc = 30 / 100\n    # SSC公司在JTD公司的持股比例\n    ssc_jtd = 100 / 100\n    # 中非实业在JTD公司的间接持股比例\n    cnaf_jtd = cnaf_ssc * ssc_jtd\n\n    # 中非实业在INDUSMIN公司的持股比例\n    cnaf_indusmin = 30 / 100\n    # INDUSMIN公司在BIB公司的持股比例\n    indusmin_bib = 100 / 100\n    # 中非实业在BIB公司的间接持股比例\n    cnaf_bib = cnaf_indusmin * indusmin_bib\n\n    # 中非实业在JTD公司和BIB公司的总持股比例\n    total_holding = cnaf_jtd + cnaf_bib\n    return round(total_holding, 2)",
    "image_id": "company_32_32_20_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1086",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 2,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 15,
        "parentheses": 2
      }
    },
    "difficulty": 4.718498871295094,
    "images": [
      "./MultiFinance/images/2201-1.png",
      "./MultiFinance/images/2201-2.png",
      "./MultiFinance/images/2201-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2201-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-555",
    "output": [
      "total_sales_value = 160000 + 140000 + 25000\n    t_sales_value = 25000\n    t_allocation = (t_sales_value / total_sales_value) * 120000\n    \n    # return answer\n    return round(t_allocation)\n```"
    ],
    "usage": {
      "completion_tokens": 75,
      "prompt_tokens": 533,
      "completion_tokens_details": {
        "text_tokens": 75
      },
      "prompt_tokens_details": {
        "text_tokens": 300,
        "image_tokens": 233
      },
      "total_tokens": 608
    },
    "model": "qwen-omni-turbo",
    "question": "Tango Company produces joint products M, N, and T from a joint process. This information concerns a batch produced in April at a joint cost of $120,000: <image 1> How much of the joint cost should be allocated to joint product T using the net realizable value method? Answer to the nearest integer.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Cost Management",
    "source_id": "validation_Manage_13",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/95-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-556",
    "output": [
      "total_stockholders_deficit_end_of_q3_2022 = -385092\n    total_stockholders_deficit_end_of_q2_2022 = -349775\n    total_stockholders_deficit_end_of_q1_2022 = -4265447\n    \n    # Calculate the change in deficit from Q1 to Q2 and Q2 to Q3\n    change_in_deficit_Q2_to_Q3 = total_stockholders_deficit_end_of_q2_2022 - total_stockholders_deficit_end_of_q1_2022\n    change_in_deficit_Q3_to_Q4 = total_stockholders_deficit_end_of_q3_2022 - total_stockholders_deficit_end_of_q2_2022\n    \n    # Calculate the average change in deficit per quarter\n    average_change_in_deficit_per_quarter = (change_in_deficit_Q2_to_Q3 + change_in_deficit_Q3_to_Q4) / 2\n    \n    # Estimate the deficit at the end of Q4 using the average change per quarter\n    estimated_deficit_end_of_q4 = total_stockholders_deficit_end_of_q3_2022 + average_change_in_deficit_per_quarter\n    \n    # Calculate the estimated worth of the company by subtracting the deficit from the total stockholders' equity\n    estimated_worth_end_of_q4 = 348 - estimated_deficit_end_of_q4\n    \n    # Return the estimated worth in millions of dollars\n    return estimated_worth_end_of_q4 / 1000000\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 360,
      "prompt_tokens": 1197,
      "completion_tokens_details": {
        "text_tokens": 360
      },
      "prompt_tokens_details": {
        "text_tokens": 298,
        "image_tokens": 899
      },
      "total_tokens": 1557
    },
    "model": "qwen-omni-turbo",
    "question": "What's the estimated worth of the company Better World Acquisition Corp. at the end of Q4 in 2022 if the company continues to follow the same trend as it did in the first three quarters of 2022, in millions of dollars?",
    "python_solution": "def solution():\n      net_income_q1 = 1647395\n      net_income_q2 = 915703\n      net_income_q3 = 844154\n      stockholders_deficit_start = -4650982\n      # Do math calculation to get the answer\n      avg_net_income_per_quarter = (net_income_q1 + net_income_q2 + net_income_q3) / 3\n      net_income_q4 = avg_net_income_per_quarter\n      estimated_worth_end_2022 = stockholders_deficit_start + net_income_q1 + net_income_q2 + net_income_q3 + net_income_q4\n      answer = estimated_worth_end_2022 / 1e6  # converting to millions\n      return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-258",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2113-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 4.595119850134591,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-557",
    "output": [
      "tesla_stock_holding = 12.89 + 7.21 + 5.92\n    total_stock_holding = tesla_stock_holding + 73.98\n    \n    # Convert result into percentage\n    total_stock_holding_percentage = (total_stock_holding / 100) * 100\n    \n    # return answer\n    return round(total_stock_holding_percentage, 1)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 1811,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 1543
      },
      "total_tokens": 1916
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据计算特斯拉的总持股比例，并将其与马斯克的持股比例相加，然后将结果转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    musk_percentage = 12.89\n    vanguard_percentage = 7.21\n    blackrock_percentage = 5.92\n    other_percentage = 73.98\n\n    tesla_total_percentage = 100 - (musk_percentage + vanguard_percentage + blackrock_percentage + other_percentage)\n    combined_percentage = musk_percentage + tesla_total_percentage\n    return round(combined_percentage, 1)",
    "image_id": "company_19_19_05_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1013",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2463-1.png",
      "./MultiFinance/images/2463-2.png",
      "./MultiFinance/images/2463-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2463-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-558",
    "output": [
      "total_production = 12.46 + 12.04 + 6.21 + 5.28 + 5.50\n    shenzhen_factory_production = 194.6 + 8.76\n    \n    # Do math calculation to get the answer\n    production_ratio = (shenzhen_factory_production / total_production) * 100\n    \n    # return answer\n    return round(production_ratio, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 3026,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 2761
      },
      "total_tokens": 3139
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中某工厂的包装水产量与饮料产量的总和，并求该总和占所有工厂总产量的比例；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    packaged_water_production = 521.3\n    beverage_production = 23.01\n    total_production = packaged_water_production + beverage_production\n    all_factories_total_production = 644.31\n    ratio = total_production / all_factories_total_production * 100\n    return round(ratio, 1)",
    "image_id": "company_23_23_16_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-939",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2954-1.png",
      "./MultiFinance/images/2954-2.png",
      "./MultiFinance/images/2954-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2954-1.png",
      "./MultiFinance/images/2954-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-559",
    "output": [
      "initial_deficit = -25293\n    additional_investment = 35000000\n    working_capital_deficit = -766960\n    \n    # Calculate new worth of the shareholders' deficit\n    new_deficit = initial_deficit + additional_investment + working_capital_deficit\n    \n    # return answer\n    return new_deficit\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 97,
      "prompt_tokens": 1146,
      "completion_tokens_details": {
        "text_tokens": 97
      },
      "prompt_tokens_details": {
        "text_tokens": 454,
        "image_tokens": 692
      },
      "total_tokens": 1243
    },
    "model": "qwen-omni-turbo",
    "question": "What will be the new worth of the shareholders' deficit if the company takes $35 million from the PIPE investment after paying off the working capital deficit?",
    "python_solution": "def solution():\n     #Define variables name and value\n    shareholders_deficit_sept_2021 = -25293\n    working_capital_deficit_sept_2022 = -766960\n    PIPE_investment = 35000000\n\n    #Do math calculation to get the answer\n    shareholders_deficit_updated = shareholders_deficit_sept_2021 - working_capital_deficit_sept_2022 + PIPE_investment\n    answer = shareholders_deficit_updated\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-260",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2115-1.png"
    ],
    "context": "<image 1>\nThe Business Combination Agreement provides that the Company will use its commercially reasonable efforts to enter into and consummate subscription agreements in form and substance mutually acceptable to the Company and Avanseus with investors mutually reasonably acceptable to the Company and Avanseus pursuant to which such investors will agree to purchase up to an aggregate of $ 35 million of (i) the Company’s Series A Convertible Preference Shares, which shares will be convertible into the Company’s Class A Ordinary Shares, and/or (ii) the Company’s Class A Ordinary Shares, with such purchases to be consummated prior to or substantially currently with the closing of the Share Exchange (the “PIPE Investment”).\nAs of September 30, 2022, the Company had $ 243,991 in its operating bank account and working capital deficit of $ 766,960 .",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 0
      }
    },
    "difficulty": 3.465735902799726,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-560",
    "output": [
      "q1_revenue_2023 = 1725 / 2\n    q1_operating_expenses_2023 = 4257995 / 2\n    q2_revenue_2023 = 1725\n    q2_operating_expenses_2023 = 841998\n    \n    q1_gross_margin_2023 = (q1_revenue_2023 - q1_operating_expenses_2023) / q1_revenue_2023 * 100\n    q2_gross_margin_2023 = (q2_revenue_2023 - q2_operating_expenses_2023) / q2_revenue_2023 * 100\n    \n    percentage_change_in_gross_margin = ((q2_gross_margin_2023 - q1_gross_margin_2023) / q1_gross_margin_2023) * 100\n    \n    # return answer\n    return percentage_change_in_gross_margin\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 262,
      "prompt_tokens": 1516,
      "completion_tokens_details": {
        "text_tokens": 262
      },
      "prompt_tokens_details": {
        "text_tokens": 304,
        "image_tokens": 1212
      },
      "total_tokens": 1778
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the company's gross margin from Q1 to Q2 in 2023 if Q1 revenue is half of six months revenue ending June 2023 and Q1 operating expenses are half of six months operating expenses ending June 2023?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    six_month_revenue_2023 = 1725 #in thousands\n    six_month_operating_expenses_2023 = 4257.995  #in thousands\n\n    #Calculate Q1 and Q2 revenues and operating expenses.\n    Q1_revenue_2023 = six_month_revenue_2023/2   \n    Q2_revenue_2023 = six_month_revenue_2023 - Q1_revenue_2023 \n    Q1_operating_expenses_2023 = six_month_operating_expenses_2023/2\n    Q2_operating_expenses_2023 = six_month_operating_expenses_2023 - Q1_operating_expenses_2023\n\n    #Calculate Gross margin = Revenue - Operating expenses for Q1 and Q2\n    Q1_gross_margin_2023 = Q1_revenue_2023 - Q1_operating_expenses_2023\n    Q2_gross_margin_2023 = Q2_revenue_2023 - Q2_operating_expenses_2023\n\n    # Calculate the percentage change in gross margin from Q1 to Q2\n    gross_margin_change_percentage = (Q2_gross_margin_2023 - Q1_gross_margin_2023) / abs(Q1_gross_margin_2023) * 100\n    return gross_margin_change_percentage\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-227",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2091-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 6,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 14,
        "parentheses": 4
      }
    },
    "difficulty": 5.075173815233827,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-561",
    "output": [
      "total_increase = sum([0.89, 1.73, 9.74, 5.30, 1.43, 1.14, 1.13, 0.58, 0.73, 0.66, 0.58, 0.34])\n    \n    # Do math calculation to get the answer\n    total_increase_percentage = round(total_increase * 100, 2)\n    \n    # return answer\n    return total_increase_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 131,
      "prompt_tokens": 3205,
      "completion_tokens_details": {
        "text_tokens": 131
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 2934
      },
      "total_tokens": 3336
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算从2018年6月到2024年10月期间，控股股东增持股份比例的总和；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_1 = 0.89\n    value_2 = 1.73\n    value_3 = 9.74\n    value_4 = 5.30\n    value_6 = 1.43\n    value_7 = 1.14\n    value_8 = 1.13\n    value_10 = 0.58\n    value_11 = 0.73\n    value_12 = 0.66\n    value_13 = 0.58\n    value_14 = 0.34\n\n    total_sum = value_1 + value_2 + value_3 + value_4 + value_6 + value_7 + value_8 + value_10 + value_11 + value_12 + value_13 + value_14\n    return round(total_sum, 2)",
    "image_id": "company_26_26_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1764",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 11
      },
      "operator_statistics": {
        "operators": {
          "+": 11,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 15,
        "parentheses": 2
      }
    },
    "difficulty": 5.170483995038152,
    "images": [
      "./MultiFinance/images/2165-1.png",
      "./MultiFinance/images/2165-2.png",
      "./MultiFinance/images/2165-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2165-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-562",
    "output": [
      "accounts_receivable_2015 = 1084\n    accounts_receivable_2014 = 1409\n    \n    inventories_2015 = 381\n    inventories_2014 = 345\n    \n    other_current_assets_2015 = 650\n    other_current_assets_2014 = 740\n    \n    # Calculate the change in total current assets\n    change_in_total_current_assets = (accounts_receivable_2015 + inventories_2015 + other_current_assets_2015) - (accounts_receivable_2014 + inventories_2014 + other_current_assets_2014)\n    \n    # Return the answer\n    return change_in_total_current_assets\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 195,
      "prompt_tokens": 2112,
      "completion_tokens_details": {
        "text_tokens": 195
      },
      "prompt_tokens_details": {
        "text_tokens": 312,
        "image_tokens": 1800
      },
      "total_tokens": 2307
    },
    "model": "qwen-omni-turbo",
    "question": "Could you calculate the change in total current assets from December 31, 2014 to April 4, 2015?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    accounts_receivable_2014 = 1409  # million USD, accounts receivable, net, at Dec 31, 2014\n    accounts_receivable_2015 = 1084  # million USD, accounts receivable, net, at Apr 4, 2015\n\n    inventories_2014 = 345  # million USD, inventories, net, at Dec 31, 2014\n    inventories_2015 = 381  # million USD, inventories, net, at Apr 4, 2015\n\n    other_current_assets_2014 = 740  # million USD, other current assets at Dec 31, 2014\n    other_current_assets_2015 = 650  # million USD, other current assets at Apr 4, 2015\n\n    #Do math calculation to get the answer\n    total_current_assets_2014 = accounts_receivable_2014 + inventories_2014 + other_current_assets_2014\n    total_current_assets_2015 = accounts_receivable_2015 + inventories_2015 + other_current_assets_2015\n    change_in_total_current_assets = total_current_assets_2015 - total_current_assets_2014\n    return change_in_total_current_assets  # million USD, change in total current assets\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-196",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2068-1.png",
      "./MultiFinance/images/2068-2.png",
      "./MultiFinance/images/2068-3.png"
    ],
    "context": "Accounts receivable, net, consists of the following:\n<image 1>\nInventories, net, consist of the following:\n<image 2>\nOther Current Assets\n<image 3>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 0
      }
    },
    "difficulty": 4.0943445622221,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-563",
    "output": [
      "cagr_2010_2023 = 7.53\n    \n    # Do math calculation to get the answer\n    answer = round(cagr_2010_2023 * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 67,
      "prompt_tokens": 2014,
      "completion_tokens_details": {
        "text_tokens": 67
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1748
      },
      "total_tokens": 2081
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算中国从2010年到2023年的复合年增长率（CAGR），并将其结果保留两位小数。",
    "python_solution": "def solution():\n    value_2010 = 15.19\n    value_2023 = 51.50\n    years = 2023 - 2010\n\n    cagr = ((value_2023 / value_2010) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_23_23_11_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-972",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2460-1.png",
      "./MultiFinance/images/2460-2.png",
      "./MultiFinance/images/2460-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2460-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-564",
    "output": [
      "basic_and_diluted_2022 = 11642550\n    basic_and_diluted_2021 = 10282669\n    \n    # Calculate the percentage change in earnings per share (EPS)\n    percentage_change_EPS = ((basic_and_diluted_2022 - basic_and_diluted_2021) / basic_and_diluted_2021) * 100\n    \n    # Return the calculated percentage change in EPS\n    return percentage_change_EPS\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 133,
      "prompt_tokens": 2727,
      "completion_tokens_details": {
        "text_tokens": 133
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 2462
      },
      "total_tokens": 2860
    },
    "model": "qwen-omni-turbo",
    "question": "What was the percentage change in earnings per share (EPS) year over year?",
    "python_solution": "def solution():\n    #Define variables name and value\n\n    net_loss_2022 = -1502260 # Net loss in 2022\n    net_loss_2021 = -635163 # Net loss in 2021\n\n    shares_outstanding_2022 = 11642550 # Weighted average number of common shares outstanding in 2022\n    shares_outstanding_2021 = 10282669 # Weighted average number of common shares outstanding in 2021\n\n    #Do math calculation to get the answer\n    eps_2022 = net_loss_2022 / shares_outstanding_2022\n    eps_2021 = net_loss_2021 / shares_outstanding_2021\n    eps_change = ((eps_2022 - eps_2021) / eps_2021) * 100\n    answer = eps_change\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-290",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2140-1.png",
      "./MultiFinance/images/2140-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 4
      }
    },
    "difficulty": 4.51085950651685,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-565",
    "output": [
      "first_item_2020 = 72.47\n    second_item_2020 = 42.89\n    third_item_2020 = -5.54\n    \n    # Do math calculation to get the answer\n    difference = first_item_2020 - second_item_2020\n    result = (difference / third_item_2020) * 100\n    \n    # return answer\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 123,
      "prompt_tokens": 1472,
      "completion_tokens_details": {
        "text_tokens": 123
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1195
      },
      "total_tokens": 1595
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年第一项指标与第二项指标的差值，并将该差值除以第三项指标，然后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_2020_first = 63.33\n    value_2020_second = -7.93\n    value_2020_third = 12.55\n\n    diff = value_2020_first - value_2020_second\n    ratio = diff / value_2020_third\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2864",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2787-1.png",
      "./MultiFinance/images/2787-2.png",
      "./MultiFinance/images/2787-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2787-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-566",
    "output": [
      "income_2024_2025 = 1121.28 * 10000000\n    income_2026_and_later = 1792.32 * 10000000\n    difference = income_2026_and_later - income_2024_2025\n    percentage_difference = (difference / income_2024_2025) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 143,
      "prompt_tokens": 3295,
      "completion_tokens_details": {
        "text_tokens": 143
      },
      "prompt_tokens_details": {
        "text_tokens": 289,
        "image_tokens": 3006
      },
      "total_tokens": 3438
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024-2025年与2026年及以后容量电价收入的差值，并将该差值占2024-2025年容量电价收入的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    capacity_revenue_2024_2025 = 1121.28\n    capacity_revenue_2026_onwards = 1792.32\n\n    # Multi-step logic\n    diff = capacity_revenue_2026_onwards - capacity_revenue_2024_2025\n    ratio = diff / capacity_revenue_2024_2025\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "industry_17_17_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2278",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2651-1.png",
      "./MultiFinance/images/2651-2.png",
      "./MultiFinance/images/2651-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2651-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-567",
    "output": [
      "fire_power = 82.65 + 50.89\n    water_power = 25.52 + 69.19\n    difference = abs(fire_power - water_power)\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return difference\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 83,
      "prompt_tokens": 2241,
      "completion_tokens_details": {
        "text_tokens": 83
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 1966
      },
      "total_tokens": 2324
    },
    "model": "qwen-omni-turbo",
    "question": "请计算国家电投集团总计装机量中，火电和风电的总和，并将其与水电和光伏的总和进行比较，求出两者的差值；请保留一位小数。",
    "python_solution": "def solution():\n    thermal_power = 82.65\n    wind_power = 50.89\n    hydro_power = 25.52\n    solar_power = 69.19\n\n    sum_thermal_wind = thermal_power + wind_power\n    sum_hydro_solar = hydro_power + solar_power\n    difference = sum_thermal_wind - sum_hydro_solar\n    return round(difference, 1)",
    "image_id": "industry_17_17_15_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2309",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2890-1.png",
      "./MultiFinance/images/2890-2.png",
      "./MultiFinance/images/2890-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2890-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-568",
    "output": [
      "industry_average = -19.55\n    shandong_lewu = -31.95\n    \n    # Do math calculation to get the answer\n    percentage_difference = (shandong_lewu - industry_average) / abs(industry_average) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 78,
      "prompt_tokens": 1902,
      "completion_tokens_details": {
        "text_tokens": 78
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 1646
      },
      "total_tokens": 1980
    },
    "model": "qwen-omni-turbo",
    "question": "请计算山钢莱芜的转炉工序能耗比行业平均值高多少百分比，并保留一位小数。",
    "python_solution": "def solution():\n    avg_energy = -19.55\n    shansteel_energy = -31.95\n    difference = shansteel_energy - avg_energy\n    percentage_increase = (difference / avg_energy) * 100\n    return round(percentage_increase, 1)",
    "image_id": "company_05_05_21_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1509",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2674-1.png",
      "./MultiFinance/images/2674-2.png",
      "./MultiFinance/images/2674-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2674-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-569",
    "output": [
      "year_2021 = 24.1\n    year_2022 = 60.1\n    year_2023 = 24.1\n    \n    # Do math calculation to get the answer\n    cagr = ((year_2023 / year_2021) ** (1/2)) - 1\n    answer = round(cagr * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 120,
      "prompt_tokens": 2288,
      "completion_tokens_details": {
        "text_tokens": 120
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 2033
      },
      "total_tokens": 2408
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年至2023年境内销售的复合年增长率，并保留两位小数。",
    "python_solution": "def solution():\n    value_2021 = 24.1\n    value_2022 = 60.1\n    value_2023 = 24.1\n    n = 2\n\n    cagr = ((value_2023 / value_2021) ** (1 / n) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_36_36_16_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-326",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 8
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2386-1.png",
      "./MultiFinance/images/2386-2.png",
      "./MultiFinance/images/2386-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2386-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-570",
    "output": [
      "car_board_profit_2021 = 17 * 26%\n    car_board_profit_2022 = 19 * 24%\n    car_board_profit_2023 = 22 * 25%\n    car_board_profit_2024 = 11 * 25%\n    car_board_profit_2025 = 22 * 25%\n    car_board_profit_2026 = 23 * 25%\n    \n    total_profit = car_board_profit_2021 + car_board_profit_2022 + car_board_profit_2023 + car_board_profit_2024 + car_board_profit_2025 + car_board_profit_2026\n    \n    # Do math calculation to get the answer\n    answer = round(total_profit)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 196,
      "prompt_tokens": 3511,
      "completion_tokens_details": {
        "text_tokens": 196
      },
      "prompt_tokens_details": {
        "text_tokens": 254,
        "image_tokens": 3257
      },
      "total_tokens": 3707
    },
    "model": "qwen-omni-turbo",
    "question": "请计算汽车板2021年到2026年的毛利润总额，并保留整数。",
    "python_solution": "def solution():\n    gross_profit_2021 = 17 * 0.26\n    gross_profit_2022 = 19 * 0.24\n    gross_profit_2023 = 22 * 0.26\n    gross_profit_2024H1 = 11 * 0.25\n    gross_profit_2024E = 22 * 0.25\n    gross_profit_2025E = 23 * 0.25\n    gross_profit_2026E = 24 * 0.25\n    total_gross_profit = int(gross_profit_2021 + gross_profit_2022 + gross_profit_2023 + gross_profit_2024H1 + gross_profit_2024E + gross_profit_2025E + gross_profit_2026E)\n    return total_gross_profit",
    "image_id": "company_20_20_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-176",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 7,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 13
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 4.867534450455583,
    "images": [
      "./MultiFinance/images/2185-1.png",
      "./MultiFinance/images/2185-2.png",
      "./MultiFinance/images/2185-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2185-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-571",
    "output": [
      "domestic_new_energy_vehicle_sales_2023 = 950\n    domestic_new_energy_vehicle_sales_2024 = 1303\n    \n    # Do math calculation to get the answer\n    growth_rate = ((domestic_new_energy_vehicle_sales_2024 - domestic_new_energy_vehicle_sales_2023) / domestic_new_energy_vehicle_sales_2023) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 3372,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 3114
      },
      "total_tokens": 3490
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2024年国内新能源车销量的增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    domestic_sales_2023 = 950\n    domestic_sales_2024 = 1303\n    # Multi-step logic\n    growth_rate = (domestic_sales_2024 - domestic_sales_2023) / domestic_sales_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_11_11_22_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1350",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2734-1.png",
      "./MultiFinance/images/2734-2.png",
      "./MultiFinance/images/2734-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2734-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-572",
    "output": [
      "increase_2019 = 420 * 1.10\n    difference = increase_2019 - 214\n    \n    # Do math calculation to get the answer\n    percentage_change = (difference / 214) * 100\n    \n    # return answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 86,
      "prompt_tokens": 1792,
      "completion_tokens_details": {
        "text_tokens": 86
      },
      "prompt_tokens_details": {
        "text_tokens": 550,
        "image_tokens": 1242
      },
      "total_tokens": 1878
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the percentage change in the stock options and warrants between 2018 and 2019 if the amount in 2019 is increased by 10%? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    stock_options_warrants_2019 = 420\n    stock_options_warrants_2018 = 214\n    increase_percentage = 0.1\n\n    # Do math calculation to get the answer\n    stock_options_warrants_2019_new = stock_options_warrants_2019 * (1 + increase_percentage)\n    change = stock_options_warrants_2019_new - stock_options_warrants_2018\n    percentage_change = (change / stock_options_warrants_2018) * 100\n\n    return percentage_change",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-16",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n NOTE 13. INCOME TAXES We calculate our provision for federal and state income taxes based on current tax law. U.S. federal tax reform (Tax Act) was enacted on December 22, 2017, and has several key provisions impacting the accounting for and reporting of income taxes. The most significant provision reduced the U.S. corporate statutory tax rate from 35% to 21% beginning on January 1, 2018. We remeasured the applicable deferred tax assets and liabilities based on the rates at which they are expected to reverse. As a result, the gross deferred tax assets and liabilities were adjusted which resulted in an expense for income taxes of $7.1 million which was fully offset by a corresponding change to our valuation allowance in 2017. The Tax Act contains several base broadening provisions that became effective on January 1, 2018, that did not have a material impact on 2018 and 2019 earnings. Deferred tax asset (liability) is comprised of the following (in thousands): We have determined it is more likely than not that our deferred tax assets will not be realized. Accordingly, we have provided a valuation allowance for deferred tax assets.",
    "images": [
      "./MultiFinance/images/1755-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 2,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 4
      }
    },
    "difficulty": 4.007333185232471,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-573",
    "output": [
      "pie_1 = 9 + 12 + 13\n    pie_2 = 45 + 25\n    pie_3 = 78\n    \n    # Do math calculation to get the answer\n    result_1 = pie_1 / pie_2 * 100\n    result_2 = pie_3 / pie_2 * 100\n    \n    answer = round(result_1) + round(result_2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 110,
      "prompt_tokens": 2158,
      "completion_tokens_details": {
        "text_tokens": 110
      },
      "prompt_tokens_details": {
        "text_tokens": 254,
        "image_tokens": 1904
      },
      "total_tokens": 2268
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中大于10%的部分占整个饼图的比例，并将结果表示为一个整数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_12_percent = 0.12\n    value_13_percent = 0.13\n    value_34_percent = 0.34\n\n    # Multi-step logic\n    total_large_parts = value_12_percent + value_13_percent + value_34_percent\n    percentage_of_total = total_large_parts * 100\n    return int(percentage_of_total)",
    "image_id": "industry_19_19_16_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2387",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2652-1.png",
      "./MultiFinance/images/2652-2.png",
      "./MultiFinance/images/2652-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2652-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-574",
    "output": [
      "total_capacity = 22000 + 20000 + 11000 + 3750 + 2000 + 4000 + 10000 + 6000 + 5000 + 6200\n    average_capacity = total_capacity / 10\n    \n    # return answer\n    return round(average_capacity, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 3211,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 249,
        "image_tokens": 2962
      },
      "total_tokens": 3307
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有企业产能的平均值，并将结果保留一位小数。",
    "python_solution": "def average_capacity():\n    total_capacity = 22000 + 20000 + 11000 + 3750 + 2000 + 4000 + 10000 + 6000 + 5000 + 6200\n    num_companies = 10\n    average = total_capacity / num_companies\n    return round(average, 1)",
    "image_id": "industry_04_04_09_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2194",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 9,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 4.248495242049359,
    "images": [
      "./MultiFinance/images/2288-1.png",
      "./MultiFinance/images/2288-2.png",
      "./MultiFinance/images/2288-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2288-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-575",
    "output": [
      "year_13_to_17 = [3, 3, 3, 5, 5, 5]\n    \n    # Calculate average\n    average = sum(year_13_to_17) / len(year_13_to_17)\n    \n    # Round result\n    rounded_average = round(average)\n    \n    # Return answer\n    return rounded_average\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 95,
      "prompt_tokens": 2227,
      "completion_tokens_details": {
        "text_tokens": 95
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1961
      },
      "total_tokens": 2322
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2013年到2017年保费收入排名的平均值，并将结果四舍五入到整数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    rank_2013 = 3\n    rank_2014 = 3\n    rank_2015 = 3\n    rank_2016 = 5\n    rank_2017 = 7\n\n    # Multi-step logic\n    total_rank = rank_2013 + rank_2014 + rank_2015 + rank_2016 + rank_2017\n    average_rank = total_rank / 5\n    return round(average_rank)",
    "image_id": "company_27_27_08_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-406",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 4.189654742026425,
    "images": [
      "./MultiFinance/images/2297-1.png",
      "./MultiFinance/images/2297-2.png",
      "./MultiFinance/images/2297-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2297-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-576",
    "output": [
      "amazon_market_share = 39\n    microsoft_market_share = 23\n    alibaba_cloud_market_share = 8\n    google_market_share = 8\n    \n    total_amazon_microsoft = amazon_market_share + microsoft_market_share\n    total_alibaba_google = alibaba_cloud_market_share + google_market_share\n    \n    difference = abs(total_amazon_microsoft - total_alibaba_google)\n    \n    # return answer\n    return round(difference, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 2192,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 1914
      },
      "total_tokens": 2305
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年全球公有云厂商中亚马逊和微软的市场份额总和，并将其与阿里云和谷歌的市场份额总和进行比较，求出两者的差值；请保留一位小数。",
    "python_solution": "def solution():\n    amazon_global = 39\n    microsoft_global = 23\n    alibaba_global = 8\n    google_global = 8\n\n    sum_amazon_microsoft = amazon_global + microsoft_global\n    sum_alibaba_google = alibaba_global + google_global\n    difference = sum_amazon_microsoft - sum_alibaba_google\n    return round(difference, 1)",
    "image_id": "strategy_05_05_13_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2994",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2895-1.png",
      "./MultiFinance/images/2895-2.png",
      "./MultiFinance/images/2895-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2895-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-577",
    "output": [
      "start_value = -0.24\n    end_value = -1.17\n    \n    # Do math calculation to get the answer\n    cumulative_change = (end_value - start_value) * 100\n    \n    # return answer\n    return round(cumulative_change, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 69,
      "prompt_tokens": 2402,
      "completion_tokens_details": {
        "text_tokens": 69
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 2134
      },
      "total_tokens": 2471
    },
    "model": "qwen-omni-turbo",
    "question": "请计算从2019年5月31日到2019年8月26日，沪指的累计涨跌幅。请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_20190531 = -0.24\n    value_20190802 = -1.41\n    value_20190816 = 0.29\n    value_20190826 = -1.17\n\n    # Multi-step logic\n    cumulative_change = value_20190531 + value_20190802 + value_20190816 + value_20190826\n    return round(cumulative_change, 2)",
    "image_id": "macro_03_03_06_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2519",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 4,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 4.143134726391533,
    "images": [
      "./MultiFinance/images/2315-1.png",
      "./MultiFinance/images/2315-2.png",
      "./MultiFinance/images/2315-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2315-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-578",
    "output": [
      "profit_2023 = 239\n    profit_2024 = 276\n    \n    # Do math calculation to get the answer\n    difference_profit = profit_2024 - profit_2023\n    percentage_difference = (difference_profit / profit_2023) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 2760,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 2490
      },
      "total_tokens": 2864
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年和2024年的营业利润差值，并将该差值占2023年营业收入的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    operating_profit_2023 = 239\n    operating_profit_2024 = 276\n    revenue_2023 = 1388\n\n    # Multi-step logic\n    diff = operating_profit_2024 - operating_profit_2023\n    ratio = diff / revenue_2023\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_13_13_30_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-884",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2540-1.png",
      "./MultiFinance/images/2540-2.png",
      "./MultiFinance/images/2540-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2540-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-579",
    "output": [
      "year_1 = 14\n    year_2 = 21\n    year_3 = 25\n    year_4 = 30\n    \n    # Do math calculation to get the answer\n    growth_rate_year_1 = (year_2 - year_1) / year_1 * 100\n    growth_rate_year_2 = (year_3 - year_2) / year_2 * 100\n    growth_rate_year_3 = (year_4 - year_3) / year_3 * 100\n    \n    average_growth_rate = (growth_rate_year_1 + growth_rate_year_2 + growth_rate_year_3) / 3\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 184,
      "prompt_tokens": 3020,
      "completion_tokens_details": {
        "text_tokens": 184
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 2755
      },
      "total_tokens": 3204
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算深南电路2023年到2026年的归母净利润的年均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    profit_2023 = 14\n    profit_2026 = 30\n    years = 2026 - 2023\n\n    # Multi-step logic\n    growth_rate = ((profit_2026 / profit_2023) ** (1/years)) - 1\n    return round(growth_rate, 2)",
    "image_id": "company_20_20_12_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-173",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.189654742026425,
    "images": [
      "./MultiFinance/images/2295-1.png",
      "./MultiFinance/images/2295-2.png",
      "./MultiFinance/images/2295-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2295-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-580",
    "output": [
      "denominator_2018 = 21017\n    net_income_2018 = 3654 * 2\n    \n    # Do math calculation to get the answer\n    denominator_2019 = (net_income_2018 + 1101) / 0.72\n    \n    percentage_change = ((denominator_2019 - denominator_2018) / denominator_2018) * 100\n    \n    # return answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 131,
      "prompt_tokens": 1632,
      "completion_tokens_details": {
        "text_tokens": 131
      },
      "prompt_tokens_details": {
        "text_tokens": 370,
        "image_tokens": 1262
      },
      "total_tokens": 1763
    },
    "model": "qwen-omni-turbo",
    "question": "How did the company's Denominator for diluted earnings per share change from 2018 to 2019 if the original earnings for 2018 was doubled? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    denominator_2018 = 21017\n    denominator_2019 = 18525\n\n    # Do math calculation to get the answer\n    answer = (denominator_2019 - (denominator_2018 * 2)) / (denominator_2018 * 2)\n\n    return answer * 100",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-97",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Earnings per share for the periods indicated were computed as follows (in thousands except per share amounts): Our weighted average shares outstanding has decreased due to the repurchase of our outstanding common stock through a modified Dutch auction tender offer (the “Tender Offer”) and the stock repurchase program announced on October 29, 2018. 11.     Earnings Per Share",
    "images": [
      "./MultiFinance/images/1836-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 3,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.8066624897703196,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-581",
    "output": [
      "year_2018 = 4079\n    year_2019 = 4567\n    year_2020 = 6725\n    year_2021 = 6725\n    year_2022 = 7256\n    year_2023 = 7971\n    \n    # Do math calculation to get the answer\n    total_revenue = round(year_2018 + year_2019 + year_2020 + year_2021 + year_2022 + year_2023)\n    \n    # return answer\n    return total_revenue\n```"
    ],
    "usage": {
      "completion_tokens": 156,
      "prompt_tokens": 2208,
      "completion_tokens_details": {
        "text_tokens": 156
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1947
      },
      "total_tokens": 2364
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2018年到2023年的营业收入总和，并将结果四舍五入至最接近的整数。",
    "python_solution": "def solution():\n    revenue_2018 = 4156\n    revenue_2019 = 4700\n    revenue_2020 = 6725.69\n    revenue_2021 = 6900\n    revenue_2022 = 7100\n    revenue_2023 = 7971.73\n    total_revenue = revenue_2018 + revenue_2019 + revenue_2020 + revenue_2021 + revenue_2022 + revenue_2023\n    return round(total_revenue)",
    "image_id": "company_34_34_08_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-493",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2435-1.png",
      "./MultiFinance/images/2435-2.png",
      "./MultiFinance/images/2435-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2435-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-582",
    "output": [
      "rank_icir_marginal_profit = 0.01\n    rank_icir_margin_rate = -0.16\n    \n    # Do math calculation to get the answer\n    sum_rank_icir = rank_icir_marginal_profit + rank_icir_margin_rate\n    \n    # return answer\n    return round(sum_rank_icir, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 79,
      "prompt_tokens": 2371,
      "completion_tokens_details": {
        "text_tokens": 79
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2112
      },
      "total_tokens": 2450
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算盈利能力下的毛利润和毛利润率的RankICIR之和，并将结果保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    gross_profit = 0.01\n    gross_margin_rate = -0.16\n    \n    # Multi-step logic\n    sum_icir = gross_profit + gross_margin_rate\n    result = round(sum_icir, 1)\n    \n    return result",
    "image_id": "market_09_09_31_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2805",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3044-1.png",
      "./MultiFinance/images/3044-2.png",
      "./MultiFinance/images/3044-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3044-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-583",
    "output": [
      "car_sales_2021 = 2624.9\n    car_sales_2022 = 2684.9\n    year_on_year_growth_rate_2021 = 3.9\n    year_on_year_growth_rate_2022 = (car_sales_2022 - car_sales_2021) / car_sales_2021 * 100\n    \n    # Do math calculation to get the answer\n    year_on_year_growth_rate_2022_rounded = round(year_on_year_growth_rate_2022, 1)\n    \n    # return answer\n    return f\"2022年汽车销量的同比增长率为{year_on_year_growth_rate_2022_rounded}%, 比2021年的同比增长率高了{year_on_year_growth_rate_2022_rounded - year_on_year_growth_rate_2021}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 208,
      "prompt_tokens": 1218,
      "completion_tokens_details": {
        "text_tokens": 208
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 951
      },
      "total_tokens": 1426
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2022年汽车销量的同比增长率，并将其与2021年的同比增长率进行比较；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    sales_2021 = 2624.9\n    sales_2022 = 2684.9\n    growth_rate_2021_sales = 3.9\n\n    # Multi-step logic\n    diff_sales = sales_2022 - sales_2021\n    growth_rate_2022_sales = (diff_sales / sales_2021) * 100\n    comparison = growth_rate_2022_sales - growth_rate_2021_sales\n    return round(comparison, 1)",
    "image_id": "company_05_05_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1544",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 4
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2353-1.png",
      "./MultiFinance/images/2353-2.png",
      "./MultiFinance/images/2353-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2353-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-584",
    "output": [
      "flow_asset_2022 = 6438\n    flow_asset_2023 = 8988\n    \n    # Calculate the difference between 2023 and 2022\n    diff_flow_asset = flow_asset_2023 - flow_asset_2022\n    \n    # Calculate the percentage change from 2022 to 2023\n    percent_change = (diff_flow_asset / flow_asset_2022) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(percent_change, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 145,
      "prompt_tokens": 2401,
      "completion_tokens_details": {
        "text_tokens": 145
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 2127
      },
      "total_tokens": 2546
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年流动资产的差值，并将该差值占2022年流动资产的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2022 = 6438\n    current_assets_2023 = 8988\n\n    # Multi-step logic\n    diff = current_assets_2023 - current_assets_2022\n    ratio = diff / current_assets_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_31_31_28_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1724",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2641-1.png",
      "./MultiFinance/images/2641-2.png",
      "./MultiFinance/images/2641-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2641-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-585",
    "output": [
      "net_debt_equity_ratios = [-103.68, -84.90, -85.15, -83.43, -84.23, -82.71]\n    \n    # Calculate average net debt/equity ratio\n    average_net_debt_equity_ratio = sum(net_debt_equity_ratios) / len(net_debt_equity_ratios)\n    \n    # Return the result rounded to two decimal places\n    return round(average_net_debt_equity_ratio, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 133,
      "prompt_tokens": 2080,
      "completion_tokens_details": {
        "text_tokens": 133
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 1820
      },
      "total_tokens": 2213
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2026年期间，净负债/股东权益的平均值，并保留两位小数。",
    "python_solution": "def solution():\n    net_debt_equity_2021 = -103.68\n    net_debt_equity_2026 = -82.71\n    average = (net_debt_equity_2021 + net_debt_equity_2026) / 2\n    return round(average, 2)",
    "image_id": "company_09_09_20_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-29",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2898-1.png",
      "./MultiFinance/images/2898-2.png",
      "./MultiFinance/images/2898-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2898-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-586",
    "output": [
      "cagr_2018_to_2023 = (49.3 - 45.2) / 45.2 * 100\n    \n    # Do math calculation to get the answer\n    answer = round(cagr_2018_to_2023, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 82,
      "prompt_tokens": 2087,
      "completion_tokens_details": {
        "text_tokens": 82
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 1820
      },
      "total_tokens": 2169
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年至2023年小规格瓶装水的复合年增长率（CAGR），并保留两位小数。",
    "python_solution": "def solution():\n    value_2018 = 84.1\n    value_2023 = 116.8\n    years = 5\n\n    cagr = ((value_2023 / value_2018) ** (1 / years)) - 1\n    return round(cagr * 100, 2)",
    "image_id": "company_23_23_12_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-927",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2457-1.png",
      "./MultiFinance/images/2457-2.png",
      "./MultiFinance/images/2457-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2457-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-587",
    "output": [
      "total_purchase_volume = 21478.9\n    purchase_volume_of_a_drug = 10.76 + 25.16 + 6.2\n    percentage = (purchase_volume_of_a_drug / total_purchase_volume) * 100\n    \n    # return answer\n    return round(percentage, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 92,
      "prompt_tokens": 3459,
      "completion_tokens_details": {
        "text_tokens": 92
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 3198
      },
      "total_tokens": 3551
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算某药品的采购量占总采购量的比例，并将其转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    drug_purchase_quantity = 2.03\n    total_purchase_quantity = 2.03 + 69.04 + 0.01 + 0.08 + 1.31 + 35.56 + 0.08 + 59.77 + 52.64 + 0.03 + 6.52 + 10.76 + 25.16 + 6.2 + 6.2\n\n    # Multi-step logic\n    ratio = drug_purchase_quantity / total_purchase_quantity\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_38_38_06_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1161",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 13
      },
      "operator_statistics": {
        "operators": {
          "+": 14,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 17
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 4.9126548857360515,
    "images": [
      "./MultiFinance/images/2181-1.png",
      "./MultiFinance/images/2181-2.png",
      "./MultiFinance/images/2181-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2181-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-588",
    "output": [
      "year_1 = 1.22\n    year_2 = 4.30\n    year_3 = 5.63\n    \n    # Do math calculation to get the answer\n    growth_rate_year_1 = (year_2 - year_1) / year_1 * 100\n    growth_rate_year_2 = (year_3 - year_2) / year_2 * 100\n    cagr = ((growth_rate_year_1 + growth_rate_year_2) / 2) ** (1/2)\n    \n    answer = round(cagr, 2)\n    \n    # return answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 157,
      "prompt_tokens": 3325,
      "completion_tokens_details": {
        "text_tokens": 157
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 3068
      },
      "total_tokens": 3482
    },
    "model": "qwen-omni-turbo",
    "question": "请计算极米科技在2024年到2026年的净利润复合增长率，并保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = 1.22\n    net_profit_2025 = 4.30\n    net_profit_2026 = 5.63\n\n    cagr = ((net_profit_2026 / net_profit_2024) ** (1/3) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_24_24_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-696",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2449-1.png",
      "./MultiFinance/images/2449-2.png",
      "./MultiFinance/images/2449-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2449-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-589",
    "output": [
      "net_profit_margin_2022 = 0.73\n    net_profit_margin_2021 = 0.70\n    \n    # Calculate the change in net profit margin\n    change_in_net_profit_margin = net_profit_margin_2022 - net_profit_margin_2021\n    \n    # Return the answer as a percentage point\n    return round(change_in_net_profit_margin * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 108,
      "prompt_tokens": 1510,
      "completion_tokens_details": {
        "text_tokens": 108
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 1242
      },
      "total_tokens": 1618
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in net profit margin from 2021 to 2022 in percentage points?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    total_interest_earning_assets_2022 = 4229008  # million dollars\n    total_interest_income_2022 = 87645  # million dollars\n    total_interest_bearing_liabilities_2022 = 4175445  # million dollars\n    total_interest_expense_2022 = 65314  # million dollars\n\n    total_interest_earning_assets_2021 = 4029740  # million dollars\n    total_interest_income_2021 = 73650  # million dollars\n    total_interest_bearing_liabilities_2021 = 4003501  # million dollars\n    total_interest_expense_2021 = 51650  # million dollars\n\n    #Do math calculation to get the answer\n    net_profit_2022 = total_interest_income_2022 - total_interest_expense_2022\n    net_profit_2021 = total_interest_income_2021 - total_interest_expense_2021\n    total_revenue_2022 = total_interest_earning_assets_2022\n    total_revenue_2021 = total_interest_earning_assets_2021\n    net_profit_margin_2022 = net_profit_2022 / total_revenue_2022 * 100\n    net_profit_margin_2021 = net_profit_2021 / total_revenue_2021 * 100\n    change_in_net_profit_margin = net_profit_margin_2022 - net_profit_margin_2021\n    return change_in_net_profit_margin\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-210",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2079-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 18,
        "parentheses": 0
      }
    },
    "difficulty": 4.836281906951478,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-590",
    "output": [
      "year_2022A_income = 41.2\n    year_2023A_income = -27.9\n    \n    # Do math calculation to get the answer\n    growth_rate = (year_2023A_income - year_2022A_income) / abs(year_2022A_income)\n    \n    # return answer\n    return round(growth_rate * 100, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 109,
      "prompt_tokens": 2459,
      "completion_tokens_details": {
        "text_tokens": 109
      },
      "prompt_tokens_details": {
        "text_tokens": 254,
        "image_tokens": 2205
      },
      "total_tokens": 2568
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年的营业收入增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    revenue_2022 = 41.2\n    revenue_2023 = -27.9\n    growth_rate = (revenue_2023 - revenue_2022) / revenue_2022 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_36_36_01_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-333",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2917-1.png",
      "./MultiFinance/images/2917-2.png",
      "./MultiFinance/images/2917-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2917-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-591",
    "output": [
      "total_identifiable_net_assets = 4000\n    goodwill = 329\n    \n    # Do math calculation to get the answer\n    total_equity = total_identifiable_net_assets + goodwill\n    \n    # return answer\n    return total_equity\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 69,
      "prompt_tokens": 1893,
      "completion_tokens_details": {
        "text_tokens": 69
      },
      "prompt_tokens_details": {
        "text_tokens": 302,
        "image_tokens": 1591
      },
      "total_tokens": 1962
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the total Equity attributable to Walgreens Boots Alliance, Inc. if the \"Total identifiable net assets\" is wrongly calculated as $4,000 million and \"Goodwill\" is $329 million, while all the others remain unchanged?",
    "python_solution": "def solution():\n    #Define variables name and value\n    Common_stock_amount = 12\n    Treasury_stock_amount = -15047\n    Paid_in_capital = 10522\n    AOCI = -3231\n    Retained_earnings = 34168\n    Noncontrolling_interests = 654\n    Total_identifiable_net_assets_old = 3001\n    Total_identifiable_net_assets_new = 4000\n    Goodwill_old = 1329\n    Goodwill_new = 329\n\n    #Do math calculation to get the answer\n    Total_equity = Common_stock_amount + Treasury_stock_amount + Paid_in_capital + AOCI + Retained_earnings + Noncontrolling_interests + Goodwill_old + Total_identifiable_net_assets_old\n    new_Total_equity = Total_equity - Total_identifiable_net_assets_old - Goodwill_old + Total_identifiable_net_assets_new + Goodwill_new\n    return new_Total_equity\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-259",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2114-1.png",
      "./MultiFinance/images/2114-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 9,
          "-": 4,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 13
      },
      "code_statistics": {
        "lines": 15,
        "parentheses": 0
      }
    },
    "difficulty": 5.272999558563747,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-592",
    "output": [
      "EPS_2018 = 0.02\n    EPS_2017 = -0.01\n    \n    # Calculate the change rate\n    change_rate = ((EPS_2018 - EPS_2017) / EPS_2017) * 100\n    \n    # Return the change rate as a percentage\n    return round(change_rate, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 89,
      "prompt_tokens": 1523,
      "completion_tokens_details": {
        "text_tokens": 89
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 1250
      },
      "total_tokens": 1612
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change rate of the Earnings per Share (EPS) from 2017 to 2018 in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n    EPS_2018 = 0.02\n    EPS_2017 = -0.01 \n\n    #Do math calculation to get the answer\n    change_rate = ((EPS_2018 - EPS_2017) / abs(EPS_2017)) * 100\n    answer = change_rate\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-73",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1988-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.6888794541139367,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-593",
    "output": [
      "balance_2022 = -3\n    balance_2023 = 40\n    \n    # Calculate the difference between 2023 and 2022\n    diff = balance_2023 - balance_2022\n    \n    # Calculate the percentage change from 2022 to 2023\n    percentage_change = (diff / abs(balance_2022)) * 100\n    \n    # Round the result to one decimal place\n    answer = round(percentage_change, 1)\n    \n    # Return the answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 144,
      "prompt_tokens": 2322,
      "completion_tokens_details": {
        "text_tokens": 144
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 2046
      },
      "total_tokens": 2466
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2022年的供需平衡差值，并将该差值占2022年供需平衡的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    balance_2022 = -3\n    balance_2023 = 40\n    diff = balance_2023 - balance_2022\n    ratio = diff / balance_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_01_01_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1383",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2827-1.png",
      "./MultiFinance/images/2827-2.png",
      "./MultiFinance/images/2827-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2827-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-594",
    "output": [
      "cadence_return_2015 = 314.36\n    nasdaq_return_2015 = 223.74\n    \n    # Calculate the difference in percentage cumulative 5-year total stockholder return\n    difference_percentage = ((cadence_return_2015 - nasdaq_return_2015) / nasdaq_return_2015) * 100\n    \n    # Return the answer rounded to three decimal places\n    return round(difference_percentage, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 126,
      "prompt_tokens": 1841,
      "completion_tokens_details": {
        "text_tokens": 126
      },
      "prompt_tokens_details": {
        "text_tokens": 623,
        "image_tokens": 1218
      },
      "total_tokens": 1967
    },
    "model": "qwen-omni-turbo",
    "question": "what was the difference in percentage cumulative 5-year total stockholder return for cadence design systems inc . and the nasdaq copmosite for the period ended 1/3/2015? Answer to three decimal places.",
    "answer": "90.62",
    "context": "stockholder return performance graph the following graph compares the cumulative 5-year total stockholder return on our common stock relative to the cumulative total return of the nasdaq composite index and the s&p 400 information technology index . the graph assumes that the value of the investment in our common stock on january 2 , 2010 and in each index on december 31 , 2009 ( including reinvestment of dividends ) was $ 100 and tracks it each year thereafter on the last day of cadence 2019s fiscal year through january 3 , 2015 and , for each index , on the last day of the calendar comparison of 5 year cumulative total return* among cadence design systems , inc. , the nasdaq composite index , and s&p 400 information technology cadence design systems , inc . nasdaq composite s&p 400 information technology 12/28/13 1/3/151/1/11 12/31/11 12/29/121/2/10 *$ 100 invested on 1/2/10 in stock or 12/31/09 in index , including reinvestment of dividends . indexes calculated on month-end basis . copyright a9 2014 s&p , a division of the mcgraw-hill companies inc . all rights reserved. .\n\n<image 1>\n\nthe stock price performance included in this graph is not necessarily indicative of future stock price performance. .\n",
    "program": "a = 314.36 - 100\nb = a / 100\nc = 223.74 - 100\nd = c / 100\ne = b - d \nanswer = e * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 4,
        "context_numbers": 75,
        "total_numbers": 79
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 0
      }
    },
    "difficulty": 3.58351893845611,
    "source_id": "test-51",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/703-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-595",
    "output": [
      "sum_2021_2023 = 0\n    for company in range(1):\n        sum_2021_2023 += (inventory_turnover_days[company][2] + inventory_turnover_days[company][3]) / 2\n\n    answer = sum_2021_2023 / inventory_turnover_days[company][1]\n    \n    # return answer\n    return round(answer * 100, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 4044,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 292,
        "image_tokens": 3752
      },
      "total_tokens": 4150
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算某公司在2021年和2023年的库存周转天数之和，然后用该和除以2022年的库存周转天数，最后将结果乘以100得到百分比；请保留两位小数。",
    "python_solution": "def solution():\n    value_2021 = 78.15\n    value_2023 = 150.86\n    value_2022 = 133.89\n\n    sum_values = value_2021 + value_2023\n    ratio = sum_values / value_2022\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "industry_19_19_51_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2409",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3013-1.png",
      "./MultiFinance/images/3013-2.png",
      "./MultiFinance/images/3013-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3013-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-596",
    "output": [
      "shenzhou_price_range = [16.58, 22.58]\n    yuan_price_range = [9.68, 11.98]\n    \n    shenzhou_median = (shenzhou_price_range[0] + shenzhou_price_range[1]) / 2\n    yuan_median = (yuan_price_range[0] + yuan_price_range[1]) / 2\n    \n    difference = abs(shenzhou_median - yuan_median)\n    \n    return round(difference, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 115,
      "prompt_tokens": 1410,
      "completion_tokens_details": {
        "text_tokens": 115
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1133
      },
      "total_tokens": 1525
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算某车型现款价格范围的中位数，并将其与另一车型的现款价格范围中位数进行比较，求出两者的差值；请保留两位小数。",
    "python_solution": "def solution():\n    current_price_range_1_min = 16.58\n    current_price_range_1_max = 22.58\n    current_price_range_2_min = 9.98\n    current_price_range_2_max = 13.98\n\n    median_1 = (current_price_range_1_min + current_price_range_1_max) / 2\n    median_2 = (current_price_range_2_min + current_price_range_2_max) / 2\n    diff = median_1 - median_2\n    return round(diff, 2)",
    "image_id": "industry_13_13_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2023",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2355-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2355-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-597",
    "output": [
      "net_interest_expense_2014 = -566\n    net_interest_expense_2013 = -470\n    \n    # Calculate percentage change\n    percentage_change = ((net_interest_expense_2014 - net_interest_expense_2013) / abs(net_interest_expense_2013)) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 2776,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 296,
        "image_tokens": 2480
      },
      "total_tokens": 2882
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in LZG International Inc.'s net interest expense between the three months ended August 31, 2014, and the three months ended August 31, 2013?",
    "python_solution": "def solution():\n     #Define variables name and value\n    interest_expense_2014 = -566\n    interest_expense_related_party_2014 = -470\n    interest_expense_2013 = -318\n    interest_expense_related_party_2013 = -470\n\n    #Do math calculation to get the answer\n    net_interest_expense_2014 = interest_expense_2014 + interest_expense_related_party_2014\n    net_interest_expense_2013 = interest_expense_2013 + interest_expense_related_party_2013\n    percentage_change = ((net_interest_expense_2014 - net_interest_expense_2013) / net_interest_expense_2013) * 100\n    answer = round(percentage_change, 2)\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-173",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2055-1.png",
      "./MultiFinance/images/2055-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 5,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 6
      }
    },
    "difficulty": 4.836281906951478,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-598",
    "output": [
      "flow_asset_2023 = 817 + 1011\n    flow_asset_2024 = 1201 + 1415\n    average_flow_asset = (flow_asset_2023 + flow_asset_2024) / 2\n    \n    # return answer\n    return round(average_flow_asset, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 85,
      "prompt_tokens": 2353,
      "completion_tokens_details": {
        "text_tokens": 85
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 2092
      },
      "total_tokens": 2438
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年和2024年的流动资产总额，并求出这两年的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2023 = 817\n    current_assets_2024 = 1011\n\n    # Multi-step logic\n    sum_assets = current_assets_2023 + current_assets_2024\n    average_assets = sum_assets / 2\n    return round(average_assets, 1)",
    "image_id": "company_13_13_30_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-873",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2953-1.png",
      "./MultiFinance/images/2953-2.png",
      "./MultiFinance/images/2953-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2953-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-599",
    "output": [
      "short_term_borrowings_2016 = 935.8\n    total_debt_2016 = 6225.2\n    \n    # Do math calculation to get the answer\n    short_term_debt_percentage = (short_term_borrowings_2016 / total_debt_2016) * 100\n    \n    # return answer\n    return short_term_debt_percentage\n\n# Call the function and print the result\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 1636,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 409,
        "image_tokens": 1227
      },
      "total_tokens": 1743
    },
    "model": "qwen-omni-turbo",
    "question": "considering the year 2016 , what is the short-term debt as a percent of total debt? (in percentage)",
    "python_solution": "def solution():\n    # Define variables name and value\n    short_term_borrowings = 935.8\n    current_portion_of_long_term_debt = 371.3\n    total_debt = 6225.2\n\n    # Do math calculation to get the answer\n    short_term_debt = short_term_borrowings + current_portion_of_long_term_debt\n    answer = (short_term_debt / total_debt) * 100\n    \n    return answer",
    "source": "FinQA",
    "source_id": "simpshort-testmini-28",
    "img_type": "['Tables']",
    "context": "15 . debt the tables below summarize our outstanding debt at 30 september 2016 and 2015 : total debt . \n<image 1>\n the weighted average interest rate of short-term borrowings outstanding at 30 september 2016 and 2015 was 1.1% ( 1.1 % ) and .8% ( .8 % ) , respectively . cash paid for interest , net of amounts capitalized , was $ 121.1 in 2016 , $ 97.5 in 2015 , and $ 132.4 in 2014. .",
    "images": [
      "./MultiFinance/images/1475-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-600",
    "output": [
      "sales_volume_2021_to_2024H1 = 75 + 137 + 227 + 151\n    total_sales_volume = 697 + 1315 + 1813 + 887\n    ratio = (sales_volume_2021_to_2024H1 / total_sales_volume) * 100\n    \n    # return answer\n    return round(ratio, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 109,
      "prompt_tokens": 2240,
      "completion_tokens_details": {
        "text_tokens": 109
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 1965
      },
      "total_tokens": 2349
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算集成组件在2021年到2024年上半年的总销量，并求出该总销量占电子膨胀阀总销量的比例；请保留一位小数。",
    "python_solution": "def solution():\n    component_sales_2021 = 75\n    component_sales_2022 = 137\n    component_sales_2023 = 227\n    component_sales_2024H1 = 151\n\n    total_component_sales = component_sales_2021 + component_sales_2022 + component_sales_2023 + component_sales_2024H1\n\n    valve_sales_2021 = 697\n    valve_sales_2022 = 1315\n    valve_sales_2023 = 1813\n    valve_sales_2024H1 = 887\n\n    total_valve_sales = valve_sales_2021 + valve_sales_2022 + valve_sales_2023 + valve_sales_2024H1\n\n    ratio = total_component_sales / total_valve_sales * 100\n    return round(ratio, 1)",
    "image_id": "company_11_11_26_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1370",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 2
      }
    },
    "difficulty": 4.6443908991413725,
    "images": [
      "./MultiFinance/images/2212-1.png",
      "./MultiFinance/images/2212-2.png",
      "./MultiFinance/images/2212-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2212-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-601",
    "output": [
      "year_2013_to_2023_growth_rate = [54%, 60%, 252%, -51%, -15%, -21%, 34%, 50%, -10%, -1%]\n    \n    # Calculate total growth rate from 2013 to 2023\n    total_growth_rate = sum(year_2013_to_2023_growth_rate)\n    \n    # Return the total growth rate as an integer\n    return int(total_growth_rate)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 131,
      "prompt_tokens": 2167,
      "completion_tokens_details": {
        "text_tokens": 131
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1902
      },
      "total_tokens": 2298
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中个人投资者日均成交额同比数据，计算2013年至2023年的总增长百分比；请保留整数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    growth_rates = [54, 60, 252, -51, -15, -21, 34, 50, 16, -10, -1]\n    total_growth = 1\n    for rate in growth_rates:\n        total_growth *= (1 + rate / 100)\n    total_growth_percent = (total_growth - 1) * 100\n    return int(total_growth_percent)",
    "image_id": "company_29_29_07_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1266",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 6,
          "*": 2,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 4.605170185988092,
    "images": [
      "./MultiFinance/images/2218-1.png",
      "./MultiFinance/images/2218-2.png",
      "./MultiFinance/images/2218-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2218-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-602",
    "output": [
      "february_apr_price = 88.91\n    \n    # Do math calculation to get the answer\n    average_price_paid_per_share = february_apr_price * (29.1 + 24.9) / 112.0\n    \n    # return answer\n    return average_price_paid_per_share\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 84,
      "prompt_tokens": 1811,
      "completion_tokens_details": {
        "text_tokens": 84
      },
      "prompt_tokens_details": {
        "text_tokens": 562,
        "image_tokens": 1249
      },
      "total_tokens": 1895
    },
    "model": "qwen-omni-turbo",
    "question": "How much was the Average Price Paid per Share from February 2019 to April 2019 if the total number of shares purchased in February 2019 was the same as that for April 2019 and the Average Price Paid per Share was 88.91?",
    "python_solution": "def solution():\n    # Define variables name and value\n    feb_april_shares = 29.1\n    feb_price = 88.91\n    march_shares = 58.0\n    march_price = 52.93\n    april_shares = 29.1\n    april_price = 54.41\n\n    # Do math calculation to get the answer\n    answer = (march_price * march_shares + april_price * april_shares + feb_price * feb_april_shares) / (march_shares + april_shares + feb_april_shares)\n\n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-30",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Stock Repurchase Program Our Board of Directors has approved a program for us to repurchase shares of our common stock. On September 17, 2018 and February 15, 2019, we announced that our Board of Directors approved expansions of our stock repurchase program totaling $24.0 billion. As of May 31, 2019, approximately $5.8 billion remained available for stock repurchases pursuant to our stock repurchase program. Our stock repurchase authorization does not have an expiration date and the pace of our repurchase activity will depend on factors such as our working capital needs, our cash requirements for acquisitions and dividend payments, our debt repayment obligations or repurchases of our debt, our stock price, and economic and market conditions. Our stock repurchases may be effected from time to time through open market purchases or pursuant to a rule 10b5-1 plan. Our stock repurchase program may be accelerated, suspended, delayed or discontinued at any time. The following table summarizes the stock repurchase activity for the three months ended May 31, 2019 and the approximate dollar value of shares that may yet be purchased pursuant to our stock repurchase program:",
    "images": [
      "./MultiFinance/images/1769-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 3,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 4.564348191467836,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-603",
    "output": [
      "one_month = [1, 1]\n    three_months = [3, 3]\n    \n    # Do math calculation to get the answer\n    average_one_month = sum(one_month) / len(one_month)\n    average_three_months = sum(three_months) / len(three_months)\n    \n    answer = (average_one_month + average_three_months) / 2\n    \n    # return answer\n    return round(answer, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 93,
      "prompt_tokens": 1413,
      "completion_tokens_details": {
        "text_tokens": 93
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 1158
      },
      "total_tokens": 1506
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算增持评级在一月内和三月内的平均值，并保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    hold_1month = 1\n    hold_3months = 3\n\n    # Multi-step logic\n    average = (hold_1month + hold_3months) / 2\n    return round(average, 2)",
    "image_id": "company_21_21_22_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-811",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2949-1.png",
      "./MultiFinance/images/2949-2.png",
      "./MultiFinance/images/2949-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2949-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-604",
    "output": [
      "initial_investment_1 = 55\n    initial_investment_2 = 55 - 60\n    initial_investment_3 = 60\n    initial_investment_4 = 49\n    \n    # Do math calculation to get the answer\n    average_initial_investment = (initial_investment_1 + initial_investment_2 + initial_investment_3 + initial_investment_4) / 4\n    \n    # return answer\n    return round(average_initial_investment, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 124,
      "prompt_tokens": 2584,
      "completion_tokens_details": {
        "text_tokens": 124
      },
      "prompt_tokens_details": {
        "text_tokens": 250,
        "image_tokens": 2334
      },
      "total_tokens": 2708
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中四个品牌的初始投资额的平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    initial_investment_1 = 55\n    initial_investment_2 = (55 + 60) / 2\n    initial_investment_3 = 60\n    initial_investment_4 = 49\n    average_investment = (initial_investment_1 + initial_investment_2 + initial_investment_3 + initial_investment_4) / 4\n    return round(average_investment, 2)",
    "image_id": "industry_16_16_18_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2234",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2375-1.png",
      "./MultiFinance/images/2375-2.png",
      "./MultiFinance/images/2375-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2375-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-605",
    "output": [
      "year_2022 = -29.70\n    year_2021 = 74.95\n    \n    # Do math calculation to get the answer\n    rate_of_decrease = (year_2022 - year_2021) / year_2021 * 100\n    \n    # return answer\n    return round(rate_of_decrease, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 1591,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1326
      },
      "total_tokens": 1687
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2022年与2021年相比，第八个指标的下降率，并将结果保留一位小数。",
    "python_solution": "def solution():\n    value_2021 = -5.88\n    value_2022 = 34.30\n    decline_rate = (value_2021 - value_2022) / value_2021 * 100\n    return round(decline_rate, 1)",
    "image_id": "market_09_09_38_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2887",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3053-1.png",
      "./MultiFinance/images/3053-2.png",
      "./MultiFinance/images/3053-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3053-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-606",
    "output": [
      "profit_2022 = -10\n    profit_2023 = 8\n    difference = profit_2022 - profit_2023\n    percentage_difference = (difference / abs(profit_2023)) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 82,
      "prompt_tokens": 2779,
      "completion_tokens_details": {
        "text_tokens": 82
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 2502
      },
      "total_tokens": 2861
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2022年与2023年的归母净利润差值，并将结果表示为2023年归母净利润的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    profit_2022 = -8\n    profit_2023 = 4\n    diff = profit_2023 - profit_2022\n    percentage = (diff / profit_2023) * 100\n    return round(percentage, 1)",
    "image_id": "industry_07_07_31_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2330",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2843-1.png",
      "./MultiFinance/images/2843-2.png",
      "./MultiFinance/images/2843-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2843-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-607",
    "output": [
      "year_4_2021 = -7.93\n    year_5_2021 = 12.55\n    year_6_2021 = 8.56\n    year_7_2021 = 14.07\n    result = ((year_4_2021 + year_5_2021) - year_6_2021) / year_7_2021 * 100\n    \n    # return answer\n    return round(result, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 132,
      "prompt_tokens": 1480,
      "completion_tokens_details": {
        "text_tokens": 132
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 1195
      },
      "total_tokens": 1612
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年第四项指标与第五项指标的和，然后用第六项指标减去这个和，再将结果除以第七项指标，最后将结果乘以100得到百分比；请保留两位小数。",
    "python_solution": "def solution():\n    value_2021_fourth = 10.69\n    value_2021_fifth = 24.16\n    value_2021_sixth = 11.81\n    value_2021_seventh = 92.41\n\n    sum_fourth_fifth = value_2021_fourth + value_2021_fifth\n    diff = value_2021_sixth - sum_fourth_fifth\n    ratio = diff / value_2021_seventh\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "market_09_09_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2865",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2560-1.png",
      "./MultiFinance/images/2560-2.png",
      "./MultiFinance/images/2560-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2560-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-608",
    "output": [
      "effective_portion_recognized_2017 = 1\n    effective_portion_recognized_2018 = 7\n    changes_in_value_derivative_contracts_and_other_2018 = -7\n    \n    # Do math calculation to get the answer\n    total_sum = (effective_portion_recognized_2017 + effective_portion_recognized_2018) + changes_in_value_derivative_contracts_and_other_2018\n    \n    # return answer\n    return total_sum\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 128,
      "prompt_tokens": 1270,
      "completion_tokens_details": {
        "text_tokens": 128
      },
      "prompt_tokens_details": {
        "text_tokens": 300,
        "image_tokens": 970
      },
      "total_tokens": 1398
    },
    "model": "qwen-omni-turbo",
    "question": "What is the sum of the effective portion recognized in other comprehensive income for foreign currency exchange contracts in 2017 and 2018, and the changes in value for derivative contracts and other in 2018, in million?",
    "python_solution": "def solution():\n    #Define variables name and value\n    effective_portion_2017 = -25 \n    effective_portion_2018 = 1\n    changes_in_value = -7\n\n    #Do math calculation to get the answer\n    answer = effective_portion_2017 + effective_portion_2018 + changes_in_value\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-0",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1939-1.png",
      "./MultiFinance/images/1939-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 0
      }
    },
    "difficulty": 3.332204510175204,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-609",
    "output": [
      "fixed_assets_2025 = 25194\n    fixed_assets_2026 = 24618\n    \n    difference = fixed_assets_2026 - fixed_assets_2025\n    percentage_difference = (difference / fixed_assets_2025) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 101,
      "prompt_tokens": 2826,
      "completion_tokens_details": {
        "text_tokens": 101
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 2553
      },
      "total_tokens": 2927
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2026年与2025年固定资产的差值，并将该差值占2025年固定资产的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    fixed_assets_2025 = 25194\n    fixed_assets_2026 = 24618\n\n    # Multi-step logic\n    diff = fixed_assets_2026 - fixed_assets_2025\n    ratio = diff / fixed_assets_2025\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_01_01_31_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1406",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2630-1.png",
      "./MultiFinance/images/2630-2.png",
      "./MultiFinance/images/2630-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2630-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-610",
    "output": [
      "qtr_2_2016 = 4028\n    qtr_2_2015 = 3947\n    total_qtr_2_2016 = 9900000\n    total_qtr_2_2015 = 4485000\n    \n    # Calculate the percentage increase in revenue from cordless barcode scanners and accessories\n    percentage_increase = ((qtr_2_2016 - qtr_2_2015) / qtr_2_2015) * 100\n    \n    # Calculate the percentage increase in total revenue\n    total_percentage_increase = (total_qtr_2_2016 - total_qtr_2_2015) / total_qtr_2_2015 * 100\n    \n    # Calculate the new percentage increase in revenue from cordless barcode scanners and accessories\n    new_percentage_increase = (percentage_increase / total_percentage_increase) * 100\n    \n    # return answer\n    return new_percentage_increase\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 250,
      "prompt_tokens": 1154,
      "completion_tokens_details": {
        "text_tokens": 250
      },
      "prompt_tokens_details": {
        "text_tokens": 324,
        "image_tokens": 830
      },
      "total_tokens": 1404
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the new percentage increase in revenue from cordless barcode scanners and accessories from the first to the second quarter compared with the same period in the previous year, if the company's total revenue for the second quarter of 2016 was $9.9 million instead of $10.3 million, and the only item affected was the revenue from cordless barcode scanners and accessories?",
    "python_solution": "def solution():\n    # Define variables name and value\n\n    original_cordless_revenue_Q2_2016 = 8034  # in thousands\n    original_total_revenue_Q2_2016 = 10256  # in thousands\n    new_total_revenue_Q2_2016 = 9900  # in thousands\n    cordless_revenue_Q2_2015 = 7404  # in thousands\n\n    # Do math calculation to get the answer\n    new_cordless_revenue_Q2_2016 = new_total_revenue_Q2_2016 - (original_total_revenue_Q2_2016 - original_cordless_revenue_Q2_2016)\n\n    # Calculate percentage increase\n    increase = ((new_cordless_revenue_Q2_2016 - cordless_revenue_Q2_2015) / cordless_revenue_Q2_2015) * 100\n    return increase\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-51",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1969-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 6
      }
    },
    "difficulty": 4.174387269895637,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-611",
    "output": [
      "pie_chart_values = [27, 39, 5, 2, 2, 6, 7, 9]\n    \n    # Do math calculation to get the answer\n    total_cost = sum(pie_chart_values)\n   人工成本占比 = pie_chart_values[1] / total_cost * 100\n    轴承占比 = pie_chart_values[4] / total_cost * 100\n    旋变组件占比 = pie_chart_values[6] / total_cost * 100\n    total_percentage = round(人工成本占比 + 轴承占比 + 旋变组件占比, 2)\n    \n    # return answer\n    return total_percentage\n```"
    ],
    "usage": {
      "completion_tokens": 154,
      "prompt_tokens": 2603,
      "completion_tokens_details": {
        "text_tokens": 154
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2340
      },
      "total_tokens": 2757
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中人工成本、轴承和旋变组件的占比，计算它们三者总占比占整个成本的比例；请保留两位小数。",
    "python_solution": "def solution():\n    labor_cost = 5\n    bearing = 2\n    resolver_component = 2\n    total_small_costs = labor_cost + bearing + resolver_component\n    total_percentage = (total_small_costs / 100) * 100\n    return round(total_percentage, 2)",
    "image_id": "company_16_16_16_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1861",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2749-1.png",
      "./MultiFinance/images/2749-2.png",
      "./MultiFinance/images/2749-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2749-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-612",
    "output": [
      "zhang_yaobo_percentage = (1 - 0.4721) * (1 - 0.3884)\n    \n    # Do math calculation to get the answer\n    indirect_holding_percentage = zhang_yaobo_percentage * 100\n    \n    # return answer\n    return round(indirect_holding_percentage, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 2777,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 2506
      },
      "total_tokens": 2868
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据计算张亚波通过新昌华新间接持有的浙江三花智能控制股份有限公司的股份比例，并将其转换为百分比形式；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share_zhang_yabo_in_xinchang_huanxin = 38.84\n    share_xinchang_huanxin_in_sanhuazhihong = 12.86\n\n    # Multi-step logic\n    indirect_share = (share_zhang_yabo_in_xinchang_huanxin / 100) * (share_xinchang_huanxin_in_sanhuazhihong / 100)\n    percentage = indirect_share * 100\n    return round(percentage, 2)",
    "image_id": "company_11_11_05_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1366",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2397-1.png",
      "./MultiFinance/images/2397-2.png",
      "./MultiFinance/images/2397-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2397-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-613",
    "output": [
      "year_1 = 310.89\n    year_4 = 522.29\n    \n    # Do math calculation to get the answer\n    cagr = ((year_4 / year_1) ** (1/3)) - 1\n    answer = round(cagr * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 2341,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 2081
      },
      "total_tokens": 2437
    },
    "model": "qwen-omni-turbo",
    "question": "请计算母婴服务业2023年到2026年的年复合增长率（CAGR），并将结果保留两位小数。",
    "python_solution": "def solution():\n    value_2023 = 310.89\n    value_2026 = 522.29\n    years = 3\n    cagr = ((value_2026 / value_2023) ** (1/years) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_25_25_14_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-142",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2430-1.png",
      "./MultiFinance/images/2430-2.png",
      "./MultiFinance/images/2430-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2430-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-614",
    "output": [
      "year_2018_income = 75.32\n    year_2023_income = 92.83\n    \n    # Calculate the total growth rate from 2018 to 2023\n    total_growth_rate = (year_2023_income - year_2018_income) / year_2018_income * 100\n    \n    # Calculate the average annual growth rate over 5 years\n    n_years = 5\n    average_annual_growth_rate = ((total_growth_rate + 100) ** (1/n_years)) - 1\n    \n    # Return the result rounded to two decimal places\n    return round(average_annual_growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 173,
      "prompt_tokens": 1594,
      "completion_tokens_details": {
        "text_tokens": 173
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1332
      },
      "total_tokens": 1767
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年到2023年期间收入的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    income_2018 = 75.32\n    income_2023 = 89.71\n    years = 5\n\n    growth_rate = ((income_2023 / income_2018) ** (1/years) - 1) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_13_13_21_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-856",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2454-1.png",
      "./MultiFinance/images/2454-2.png",
      "./MultiFinance/images/2454-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2454-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-615",
    "output": [
      "year_2010_production = 441\n    year_2023_production = 458\n    years_difference = 2023 - 2010 + 1\n    \n    # Calculate average annual growth rate\n    average_annual_growth_rate = ((year_2023_production / year_2010_production) ** (1/years_difference)) - 1\n    \n    # Return result as percentage with two decimal places\n    return round(average_annual_growth_rate * 100, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 131,
      "prompt_tokens": 1637,
      "completion_tokens_details": {
        "text_tokens": 131
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1375
      },
      "total_tokens": 1768
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中2010年和2023年的生产总值，计算这期间的平均年增长率；结果保留两位小数。",
    "python_solution": "def solution():\n    value_2010 = 275\n    value_2023 = 425\n    years = 2023 - 2010\n\n    average_growth_rate = ((value_2023 / value_2010) ** (1/years)) - 1\n    return round(average_growth_rate, 2)",
    "image_id": "company_32_32_09_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1070",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2467-1.png",
      "./MultiFinance/images/2467-2.png",
      "./MultiFinance/images/2467-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2467-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-616",
    "output": [
      "sales_2022 = [530, 377, 182, 136, 116]\n    sales_2023 = [544, 438, 134, 131, 105]\n    \n    total_sales_2022 = sum(sales_2022)\n    total_sales_2023 = sum(sales_2023)\n    \n    growth_rate = ((total_sales_2023 - total_sales_2022) / total_sales_2022) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 169,
      "prompt_tokens": 1508,
      "completion_tokens_details": {
        "text_tokens": 169
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1234
      },
      "total_tokens": 1677
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2022年和2023年排名前五的企业的权益销售额总和，并求出这两个年度总和的增长率；结果保留两位小数。",
    "python_solution": "def solution():\n    # 2022年排名前五的企业权益销售额\n    value_2022 = 530 + 377 + 182 + 136 + 116\n    # 2023年排名前五的企业权益销售额\n    value_2023 = 544 + 438 + 134 + 131 + 105\n    # 计算增长率\n    growth_rate = ((value_2023 - value_2022) / value_2022) * 100\n    return round(growth_rate, 2)",
    "image_id": "industry_05_05_17_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2024",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 8,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 4.700480365792417,
    "images": [
      "./MultiFinance/images/2206-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2206-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-617",
    "output": [
      "present_value = 16500\n    interest_rate = 17\n    future_value = 402662\n    \n    # Do math calculation to get the answer\n    years = (np.log(future_value) - np.log(present_value)) / (interest_rate * np.log(1 + 1/100))\n    \n    # return answer\n    return years\n```"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 338,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 246,
        "image_tokens": 92
      },
      "total_tokens": 425
    },
    "model": "qwen-omni-turbo",
    "question": "Solve for the unknown number of years in Row 3:<image 1>",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Financial Accounting",
    "source_id": "dev_Accounting_5",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/8-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-618",
    "output": [
      "electrolyte_production_2024 = [65.2, 43.6, 75.8, 78.2, 82.8, 91.8, 101.3, 111.3, 113.1, 117.8, 124.5, 1089.8]\n    electrolyte_demand_2024 = [6.3, -0.1, 7.0, 8.7, 0.1, 1.5, -0.4, 0.4, 1.5, 7.1]\n    \n    # Calculate average values\n    average_electrolyte_production = sum(electrolyte_production_2024) / len(electrolyte_production_2024)\n    average_electrolyte_demand = sum(electrolyte_demand_2024) / len(electrolyte_demand_2024)\n    \n    # Calculate difference\n    difference = average_electrolyte_production - average_electrolyte_demand\n    \n    # Return the result\n    return round(difference, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 282,
      "prompt_tokens": 2901,
      "completion_tokens_details": {
        "text_tokens": 282
      },
      "prompt_tokens_details": {
        "text_tokens": 307,
        "image_tokens": 2594
      },
      "total_tokens": 3183
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年1月到2024年12月的电解铝产量的平均值，并将该平均值与2024年1月到2024年12月的电解铝需求量的平均值进行比较，求出两者的差值；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    production = [6.3, 5.4, 8.1, 9.5, 10.2, 9.8, 9.8, 10.0, 10.7, 11.3, 11.6, 11.4]\n    demand = [6.3, 5.4, 8.1, 9.5, 10.2, 9.8, 9.8, 10.0, 10.7, 11.3, 11.6, 11.4]\n\n    # Multi-step logic\n    avg_production = sum(production) / len(production)\n    avg_demand = sum(demand) / len(demand)\n    difference = avg_production - avg_demand\n\n    return round(difference, 2)",
    "image_id": "company_15_15_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1950",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 10
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 10
      }
    },
    "difficulty": 3.951243718581427,
    "images": [
      "./MultiFinance/images/2383-1.png",
      "./MultiFinance/images/2383-2.png",
      "./MultiFinance/images/2383-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2383-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-619",
    "output": [
      "year_1_sales = 197.8\n    year_n_sales = 4.0\n    years = 2033 - 2024 + 1\n    \n    # Calculate CAGR using the formula: ((year_n_sales / year_1_sales) ** (1/years)) - 1\n    cagr = ((year_n_sales / year_1_sales) ** (1/years)) - 1\n    \n    # Return the calculated CAGR as a percentage rounded to two decimal places\n    return round(cagr * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 138,
      "prompt_tokens": 1845,
      "completion_tokens_details": {
        "text_tokens": 138
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1582
      },
      "total_tokens": 1983
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年到2033年之间，仙琚销售额的复合年增长率（CAGR），并保留两位小数。",
    "python_solution": "def solution():\n    sales_2024 = 16.6\n    sales_2033 = 197.8\n    years = 2033 - 2024\n    cagr = ((sales_2033 / sales_2024) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_39_39_13_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1247",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2472-1.png",
      "./MultiFinance/images/2472-2.png",
      "./MultiFinance/images/2472-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2472-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-620",
    "output": [
      "year1 = 30.3\n    year2 = 31.8\n    year3 = 32.7\n    year4 = 35.4\n    \n    # Do math calculation to get the answer\n    average_margin = (year1 + year2 + year3 + year4) / 4\n    \n    # return answer\n    return round(average_margin, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 92,
      "prompt_tokens": 2703,
      "completion_tokens_details": {
        "text_tokens": 92
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 2446
      },
      "total_tokens": 2795
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2026年期间，毛利率的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    margin_2023 = 30.3\n    margin_2024 = 31.8\n    margin_2025 = 32.7\n    margin_2026 = 35.4\n\n    average_margin = (margin_2023 + margin_2024 + margin_2025 + margin_2026) / 4\n    return round(average_margin, 1)",
    "image_id": "company_35_35_18_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-664",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2710-1.png",
      "./MultiFinance/images/2710-2.png",
      "./MultiFinance/images/2710-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2710-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-621",
    "output": [
      "present_value = 810\n    interest_rate = 7\n    future_value = 4341\n    \n    # Do math calculation to get the answer\n    years = (np.log(future_value) - np.log(present_value)) / (np.log(1 + interest_rate/100))\n    \n    # return answer\n    return years\n```"
    ],
    "usage": {
      "completion_tokens": 79,
      "prompt_tokens": 338,
      "completion_tokens_details": {
        "text_tokens": 79
      },
      "prompt_tokens_details": {
        "text_tokens": 246,
        "image_tokens": 92
      },
      "total_tokens": 417
    },
    "model": "qwen-omni-turbo",
    "question": "Solve for the unknown number of years in Row 2:<image 1>",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Financial Accounting",
    "source_id": "dev_Accounting_5",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/7-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-622",
    "output": [
      "cash_flow_2023 = 37\n    cash_flow_2022 = -52\n    difference = cash_flow_2023 - cash_flow_2022\n    ratio = (difference / abs(cash_flow_2022)) * 100\n    \n    # return answer\n    return round(ratio, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 86,
      "prompt_tokens": 2802,
      "completion_tokens_details": {
        "text_tokens": 86
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 2517
      },
      "total_tokens": 2888
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2022年的经营活动现金流差值，并将该差值除以2022年的经营活动现金流，得到的结果乘以100转化为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    operating_cash_flow_2022 = -52\n    operating_cash_flow_2023 = 37\n    diff = operating_cash_flow_2023 - operating_cash_flow_2022\n    ratio = diff / operating_cash_flow_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_16_16_28_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1911",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2839-1.png",
      "./MultiFinance/images/2839-2.png",
      "./MultiFinance/images/2839-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2839-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-623",
    "output": [
      "loss_from_operations = 5857077\n    total_increase_in_stockholders_deficit = 918246\n    \n    # Do math calculation to get the answer\n    ratio = loss_from_operations / total_increase_in_stockholders_deficit\n    \n    # return answer\n    return ratio\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 79,
      "prompt_tokens": 1649,
      "completion_tokens_details": {
        "text_tokens": 79
      },
      "prompt_tokens_details": {
        "text_tokens": 543,
        "image_tokens": 1106
      },
      "total_tokens": 1728
    },
    "model": "qwen-omni-turbo",
    "question": "What is the ratio of the loss from operations to the total increase in stockholders' deficit for the period ended February 28, 2023 in dollars?",
    "python_solution": "def solution():\n    loss_operations = 5857077 \n    initial_stockholders_deficit = -572460\n    final_stockholders_deficit = -918246\n    increase_stockholders_deficit = final_stockholders_deficit - initial_stockholders_deficit\n\n    #Do math calculation to get the answer\n    ratio = loss_operations / abs(increase_stockholders_deficit)\n    return ratio\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-283",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2135-1.png"
    ],
    "context": "<image 1>\nThe accompanying condensed consolidated financial statements have been prepared on the basis that the Company will continue as a going concern, which contemplates realization of assets and the satisfaction of liabilities in the normal course of business. As of February 28, 2023, the Company had a significant accumulated deficit of $ 59,474,448 and working capital deficit of $ 657,834 . For the three months ended February 28, 2023, the Company had a loss from operations of $ 5,857,077 and negative cash flows from operations of $ 287,632 . The Company’s operating activities consume the majority of its cash resources. The Company anticipates that it will continue to incur operating losses as it executes its development plans for 2023. In addition, the Company has had and expects to have negative cash flows from operations, at least into the near future. The Company has previously funded, and plans to continue funding, these losses primarily with additional infusions of cash from advances from USMC and the sale of equity and convertible notes. The accompanying condensed consolidated financial statements do not include any adjustments that might be necessary should the Company be unable to continue as a going concern.",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-624",
    "output": [
      "expected_annual_dividend_next_year_REIT_B = 2.25\n    dividend_growth_rate_in_years_2_and_3_REIT_B = 5.00\n    dividend_growth_rate_after_year_3_into_perpetuity_REIT_B = 4.50\n    assumed_cap_rate_REIT_B = 6.25\n    property_subsector_average_P_FFO_multiple_REIT_B = 13.5\n\n    # Do math calculation to get the answer\n    share_value_REIT_B = (expected_annual_dividend_next_year_REIT_B * \n                          ((1 + dividend_growth_rate_in_years_2_and_3_REIT_B) * \n                           (1 + dividend_growth_rate_after_year_3_into_perpetuity_REIT_B)) /\n                          (assumed_cap_rate_REIT_B - dividend_growth_rate_after_year_3_into_perpetuity_REIT_B)) / \\\n                         property_subsector_average_P_FFO_multiple_REIT_B\n\n    # return answer\n    return round(share_value_REIT_B, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 236,
      "prompt_tokens": 2759,
      "completion_tokens_details": {
        "text_tokens": 236
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 2498
      },
      "total_tokens": 2995
    },
    "model": "qwen-omni-turbo",
    "question": "What is the share value of REIT B using valuation Method 4, according to Exhibits 1 and 2? Answer to three decimal places.",
    "python_solution": "def solution():\n    FFO = 290612\n    non_cash_rents = 24702\n    recurring_maintenance_capex = 60852\n    shares_outstanding = 67900\n    P_AFFO_multiple = 17.1\n\n    AFFO = FFO - non_cash_rents - recurring_maintenance_capex\n    AFFO_per_share = AFFO / shares_outstanding\n    share_value = AFFO_per_share * P_AFFO_multiple\n\n    return share_value",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.58351893845611,
    "source_id": "validation-96",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/329-1.jpg",
      "./MultiFinance/images/329-2.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-625",
    "output": [
      "sales_2021Q4 = 89 * 7.5\n    sales_2022Q1 = 90 * 7.5\n    \n    total_sales_2021Q4 = sum([sales for sales in [89, 90] if sales])\n    total_sales_2022Q1 = sum([sales for sales in [89, 90] if sales])\n    \n    growth_rate = ((total_sales_2022Q1 - total_sales_2021Q4) / total_sales_2021Q4) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 164,
      "prompt_tokens": 1406,
      "completion_tokens_details": {
        "text_tokens": 164
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1142
      },
      "total_tokens": 1570
    },
    "model": "qwen-omni-turbo",
    "question": "图中给出了两个时间点的销量与单价，请先分别计算这两个时间点的销售总额，并再计算它们之间的增长率；结果请保留两位小数。",
    "python_solution": "def solution():\n    volume_t1 = 500\n    price_t1 = 20\n    volume_t2 = 600\n    price_t2 = 22\n\n    sales_t1 = volume_t1 * price_t1\n    sales_t2 = volume_t2 * price_t2\n    growth = (sales_t2 - sales_t1) / sales_t1 * 100\n    return round(growth, 2)",
    "image_id": "industry_15_15_05_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2163",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 3,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2400-1.png",
      "./MultiFinance/images/2400-2.png",
      "./MultiFinance/images/2400-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2400-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-626",
    "output": [
      "investment_cash_flow_2025 = -1381\n    investment_cash_flow_2026 = -1241\n    long_term_loan_2025 = 1177\n    \n    # Do math calculation to get the answer\n    difference = (investment_cash_flow_2026 - investment_cash_flow_2025) / long_term_loan_2025\n    \n    # return answer\n    return round(difference, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 2504,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 2231
      },
      "total_tokens": 2622
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2025年与2026年的投资性现金净流量的差值，并将该差值除以2025年的长期借款，结果保留两位小数。",
    "python_solution": "def solution():\n    investment_cash_flow_2025 = -1381\n    investment_cash_flow_2026 = -1241\n    long_term_loan_2025 = -209\n\n    difference = investment_cash_flow_2026 - investment_cash_flow_2025\n    result = difference / long_term_loan_2025\n    return round(result, 2)",
    "image_id": "company_00_00_40_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-254",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2670-1.png",
      "./MultiFinance/images/2670-2.png",
      "./MultiFinance/images/2670-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2670-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-627",
    "output": [
      "yoy_income_2018 = -20.79\n    yoy_income_2019 = 12.15\n    yoy_income_2020 = -14.01\n    yoy_income_2021 = 12.5%\n    yoy_income_2022 = -10.1%\n    yoy_income_2023 = 1.5%\n    yoy_income_2024_q1q3 = -1.5%\n    \n    # Calculate the total income from 2018 to 2024 (Q1-Q3)\n    total_income = sum([yoy_income_2018, yoy_income_2019, yoy_income_2020, \n                        yoy_income_2021, yoy_income_2022, yoy_income_2023,\n                        yoy_income_2024_q1q3])\n    \n    # Return the result as an integer\n    return int(total_income)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 248,
      "prompt_tokens": 1618,
      "completion_tokens_details": {
        "text_tokens": 248
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 1349
      },
      "total_tokens": 1866
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年到2024年（Q1-Q3）的归母净利润总和；请提供结果为整数。",
    "python_solution": "def solution():\n    net_profit_2018 = 2.01\n    net_profit_2019 = 4.61\n    net_profit_2020 = 3.35\n    net_profit_2021 = 4.85\n    net_profit_2022 = 3.63\n    net_profit_2023 = 3.56\n    net_profit_2024_Q1_Q3 = 2.06\n\n    total_net_profit = int(net_profit_2018 + net_profit_2019 + net_profit_2020 + net_profit_2021 + net_profit_2022 + net_profit_2023 + net_profit_2024_Q1_Q3)\n    return total_net_profit",
    "image_id": "company_13_13_16_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-868",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 4.094344562222101,
    "images": [
      "./MultiFinance/images/2326-1.png",
      "./MultiFinance/images/2326-2.png",
      "./MultiFinance/images/2326-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2326-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-628",
    "output": [
      "pre_total_stake = 79.57\n    post_total_stake = 40.00 + (1 - 40.00) * 60.00\n    \n    # Calculate the percentage change in total stake\n    percentage_change = ((post_total_stake - pre_total_stake) / pre_total_stake) * 100\n    \n    # Return the result as a string with one decimal place\n    return f\"{percentage_change:.1f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 2386,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 2125
      },
      "total_tokens": 2493
    },
    "model": "qwen-omni-turbo",
    "question": "请计算蜀道集团在本次交易前后对清洁能源集团的总持股比例变化，并将结果表示为百分比形式，保留一位小数。",
    "python_solution": "def solution():\n    # 本次交易前蜀道集团通过四川路桥间接持有清洁能源集团的比例\n    pre_transaction_indirect_holding = 79.57 / 100 * 100 / 100\n    # 本次交易后蜀道集团直接和间接持有清洁能源集团的比例\n    post_transaction_direct_holding = 60.00 / 100\n    post_transaction_indirect_holding = 79.57 / 100 * 40.00 / 100\n    # 计算总持股比例变化\n    total_change = (post_transaction_direct_holding + post_transaction_indirect_holding) - pre_transaction_indirect_holding\n    return round(total_change * 100, 1)",
    "image_id": "company_26_26_10_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1748",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 3,
          "/": 5,
          "%": 0,
          "**": 0
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 4.605170185988092,
    "images": [
      "./MultiFinance/images/2219-1.png",
      "./MultiFinance/images/2219-2.png",
      "./MultiFinance/images/2219-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2219-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-629",
    "output": [
      "codeforces_percentile = 96.3 + 96.6\n    math_500_pass_at_1 = 79.8 + 79.2\n    \n    # Calculate average percentage\n    average_percentage = (codeforces_percentile + math_500_pass_at_1) / 2\n    \n    # Round result to integer\n    rounded_average = round(average_percentage)\n    \n    # return answer\n    return rounded_average\n```"
    ],
    "usage": {
      "completion_tokens": 100,
      "prompt_tokens": 1272,
      "completion_tokens_details": {
        "text_tokens": 100
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 1002
      },
      "total_tokens": 1372
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算DeepSeek-R1在Codeforces和MATH-500两个测试中的平均百分位数，并将结果四舍五入到整数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    codeforces_percentile = 96.3\n    math_500_pass_rate = 97.3\n    \n    # Multi-step logic\n    average_percentile = (codeforces_percentile + math_500_pass_rate) / 2\n    rounded_average = round(average_percentile)\n    \n    return rounded_average",
    "image_id": "strategy_05_05_04_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2992",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2894-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2894-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-630",
    "output": [
      "china_continent_values = [33, 35, 34, 24, 22, 21, 23, 20, 21, 23, 22]\n    overseas_values = [35, 34, 30, 20, 21, 19, 21, 20, 22, 20, 20]\n    \n    # Calculate the average difference between China Continent and Overseas for each year\n    differences = []\n    for i in range(len(china_continent_values)):\n        difference = abs(china_continent_values[i] - overseas_values[i])\n        differences.append(difference)\n    \n    # Calculate the average of these differences over all years\n    average_difference = sum(differences) / len(differences)\n    \n    # Return the result rounded to one decimal place\n    return round(average_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 215,
      "prompt_tokens": 1681,
      "completion_tokens_details": {
        "text_tokens": 215
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 1410
      },
      "total_tokens": 1896
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中中国大陆和国外的某指标值，计算2017年到2024年上半年中国大陆与国外该指标的平均差值；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    mainland_2017 = 24\n    overseas_2017 = 33\n    mainland_2018 = 22\n    overseas_2018 = 35\n    mainland_2019 = 21\n    overseas_2019 = 34\n    mainland_2020 = 23\n    overseas_2020 = 30\n    mainland_2021 = 20\n    overseas_2021 = 20\n    mainland_2022 = 19\n    overseas_2022 = 21\n    mainland_2023 = 21\n    overseas_2023 = 23\n    mainland_2024H1 = 20\n    overseas_2024H1 = 22\n\n    differences = [\n        overseas_2017 - mainland_2017,\n        overseas_2018 - mainland_2018,\n        overseas_2019 - mainland_2019,\n        overseas_2020 - mainland_2020,\n        overseas_2021 - mainland_2021,\n        overseas_2022 - mainland_2022,\n        overseas_2023 - mainland_2023,\n        overseas_2024H1 - mainland_2024H1\n    ]\n    average_difference = sum(differences) / len(differences)\n    return round(average_difference, 1)",
    "image_id": "company_08_08_06_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-625",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 8,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 29,
        "parentheses": 6
      }
    },
    "difficulty": 5.662960480135946,
    "images": [
      "./MultiFinance/images/2151-1.png",
      "./MultiFinance/images/2151-2.png",
      "./MultiFinance/images/2151-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2151-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-631",
    "output": [
      "q1_2021_high_bid = 4.51\n    q1_2021_low_bid = 3.99\n    q2_2021_high_bid = 8.47\n    q2_2021_low_bid = 2.30\n    q3_2021_high_bid = 13.00\n    q3_2021_low_bid = 3.80\n    q4_2021_high_bid = 14.50\n    q4_2021_low_bid = 0.015\n    \n    # Calculate the average price per quarter\n    q1_avg_price = (q1_2021_high_bid + q1_2021_low_bid) / 2\n    q2_avg_price = (q2_2021_high_bid + q2_2021_low_bid) / 2\n    q3_avg_price = (q3_2021_high_bid + q3_2021_low_bid) / 2\n    q4_avg_price = (q4_2021_high_bid + q4_2021_low_bid) / 2\n    \n    # Calculate the overall average price for all quarters\n    total_avg_price = (q1_avg_price + q2_avg_price + q3_avg_price + q4_avg_price) / 4\n    \n    # Return the answer\n    return total_avg_price\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 339,
      "prompt_tokens": 969,
      "completion_tokens_details": {
        "text_tokens": 339
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 692
      },
      "total_tokens": 1308
    },
    "model": "qwen-omni-turbo",
    "question": "What is the average quarterly share price in 2021 assuming each quarter had a completely uniform price distribution in high and low bid prices, measured in dollars?",
    "python_solution": "def solution():\n     #Define variables name and value\n    Q1_high = 14.5\n    Q1_low = 0.015\n    Q2_high = 13\n    Q2_low = 3.8\n    Q3_high = 8.47\n    Q3_low = 2.3\n    Q4_high = 4.51\n    Q4_low = 3.99\n\n    #Find average quarterly prices and take the average of those\n    Q1_avg = (Q1_high + Q1_low) / 2\n    Q2_avg = (Q2_high + Q2_low) / 2\n    Q3_avg = (Q3_high + Q3_low) / 2\n    Q4_avg = (Q4_high + Q4_low) / 2\n\n    #Do math calculation to get the answer\n    average_quarterly_price = (Q1_avg + Q2_avg + Q3_avg + Q4_avg) / 4\n    return round(average_quarterly_price, 2)\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-120",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2026-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 8
      },
      "operator_statistics": {
        "operators": {
          "+": 7,
          "-": 0,
          "*": 0,
          "/": 5,
          "%": 0,
          "**": 0
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 17,
        "parentheses": 12
      }
    },
    "difficulty": 5.62040086571715,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-632",
    "output": [
      "office_and_industrial_equipment_board_margins_2021_to_2026 = [30%, 33%, 38%, 46%, 46%, 46%]\n    \n    # Calculate average margin\n    average_margin = sum(office_and_industrial_equipment_board_margins_2021_to_2026) / len(office_and_industrial_equipment_board_margins_2021_to_2026)\n    \n    # Return the result rounded to one decimal place\n    return round(average_margin, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 3514,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 3257
      },
      "total_tokens": 3655
    },
    "model": "qwen-omni-turbo",
    "question": "请计算办公及工业设备板2021年到2026年的平均毛利率，并保留一位小数。",
    "python_solution": "def solution():\n    margin_2021 = 0.3\n    margin_2022 = 0.33\n    margin_2023 = 0.38\n    margin_2024H1 = 0.46\n    margin_2024E = 0.46\n    margin_2025E = 0.46\n    margin_2026E = 0.46\n    average_margin = (margin_2021 + margin_2022 + margin_2023 + margin_2024H1 + margin_2024E + margin_2025E + margin_2026E) / 7\n    return round(average_margin, 1)",
    "image_id": "company_20_20_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-177",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 4
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2260-1.png",
      "./MultiFinance/images/2260-2.png",
      "./MultiFinance/images/2260-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2260-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-633",
    "output": [
      "property_plant_and_equipment_2016 = 3722283\n    intangible_assets_2016 = 169309\n    other_long_term_assets_2016 = 105308\n    goodwill_2016 = 69637\n    accrued_liabilities_2016 = 60485\n    long_term_debt_2016 = 3014364\n    \n    # Do math calculation to get the answer\n    book_value_2016 = (property_plant_and_equipment_2016 + intangible_assets_2016 + other_long_term_assets_2016 + goodwill_2016 - accrued_liabilities_2016) - long_term_debt_2016\n    \n    # return answer\n    return book_value_2016\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 218,
      "prompt_tokens": 5234,
      "completion_tokens_details": {
        "text_tokens": 218
      },
      "prompt_tokens_details": {
        "text_tokens": 323,
        "image_tokens": 4911
      },
      "total_tokens": 5452
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the book value of the firm at the end of 2016 if it needs to be calculated from property, plant and equipment, intangible assets, other long-term assets, goodwill, accrued liabilities and long-term debt, in thousands of dollars?",
    "python_solution": "def solution():\n     #Define variables name and value\n    property_plant_equipment = 3722283 \n    intangible_assets = 169309 - 42226\n    other_long_term_assets = 105308\n    goodwill = 696637\n    total_assets = property_plant_equipment + intangible_assets + other_long_term_assets + goodwill\n    accrued_liabilities = 60485\n    long_term_debt = 3014364\n    total_liabilities = accrued_liabilities + long_term_debt\n    #Do math calculation to get the answer\n    book_value = total_assets - total_liabilities\n    return book_value\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-245",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2102-1.png",
      "./MultiFinance/images/2102-2.png",
      "./MultiFinance/images/2102-3.png",
      "./MultiFinance/images/2102-4.png",
      "./MultiFinance/images/2102-5.png",
      "./MultiFinance/images/2102-6.png"
    ],
    "context": "<image 1>\n<image 2>\n<image 3>\n<image 4>\n<image 5>\n<image 6>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 0
      }
    },
    "difficulty": 4.276666119016055,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-634",
    "output": [
      "flow_asset_2021 = 4632\n    flow_asset_2022 = 5623\n    \n    # Do math calculation to get the answer\n    growth_rate = ((flow_asset_2022 - flow_asset_2021) / flow_asset_2021) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 97,
      "prompt_tokens": 2410,
      "completion_tokens_details": {
        "text_tokens": 97
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2151
      },
      "total_tokens": 2507
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2022年之间，流动资产的年增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2021 = 4632\n    current_assets_2022 = 5623\n\n    # Multi-step logic\n    growth = (current_assets_2022 - current_assets_2021) / current_assets_2021 * 100\n    return round(growth, 2)",
    "image_id": "company_02_02_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-112",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2696-1.png",
      "./MultiFinance/images/2696-2.png",
      "./MultiFinance/images/2696-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2696-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-635",
    "output": [
      "net_sales = 540.0\n    operating_expense = 516.0\n    other_income = 3.0\n    taxes = 13.5\n    dividends_on_6_preferred = 7.2\n    dividends_on_10_50_preferred = 0.6\n    \n    # Calculate net income before preferred dividends\n    net_income_before_preferred_dividends = net_sales - operating_expense + other_income - taxes\n    \n    # Subtract preferred dividends from net income\n    net_income_after_preferred_dividends = net_income_before_preferred_dividends - (dividends_on_6_preferred + dividends_on_10_50_preferred)\n    \n    # Calculate income available to common shareholders\n    income_available_to_common_shareholders = net_income_after_preferred_dividends\n    \n    # Return the answer rounded to the nearest integer\n    return round(income_available_to_common_shareholders)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 214,
      "prompt_tokens": 920,
      "completion_tokens_details": {
        "text_tokens": 214
      },
      "prompt_tokens_details": {
        "text_tokens": 372,
        "image_tokens": 548
      },
      "total_tokens": 1134
    },
    "model": "qwen-omni-turbo",
    "question": "The Verbrugge Publishing Company's 2010 balance sheet and income statement are as follows (in millions of dollars): <image 1> Verbrugge and its creditors have agreed upon a voluntary reorganization plan. In this plan, each share of the $6 preferred will be exchanged for one share of $2.40 preferred with a par value of $37.50 plus one 8% subordinated income debenture with a par value of $75. The $10.50 preferred issue will be retired with cash. What is the income available to common shareholders in the proposed recapitalization (in millions)? Answer to the nearest integer.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Financial Management",
    "source_id": "validation_Finance_9",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/71-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-636",
    "output": [
      "year_1 = 0.5\n    year_2 = 5\n    year_3 = 50\n    year_4 = 100\n    year_5 = 150\n    year_6 = 220\n    year_7 = 220\n    year_8 = 1000\n    \n    # Do math calculation to get the answer\n    CAGR = ((year_8/year_1)**(1/7)) - 1\n    \n    # return answer\n    return round(CAGR * 100, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 133,
      "prompt_tokens": 3116,
      "completion_tokens_details": {
        "text_tokens": 133
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 2856
      },
      "total_tokens": 3249
    },
    "model": "qwen-omni-turbo",
    "question": "请计算特斯拉在2025年到2030年间的人形机器人销量的复合年增长率，并保留两位小数。",
    "python_solution": "def solution():\n    tesla_sales_2025 = 0.5\n    tesla_sales_2030 = 220\n    years = 5\n\n    cagr = ((tesla_sales_2030 / tesla_sales_2025) ** (1/years) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_11_11_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1335",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2481-1.png",
      "./MultiFinance/images/2481-2.png",
      "./MultiFinance/images/2481-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2481-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-637",
    "output": [
      "net_profit_2024 = 833\n    depreciation_and_amortization_2024 = 138\n    total_income_2024 = net_profit_2024 + depreciation_and_amortization_2024\n    \n    net_profit_2023 = 767\n    growth_rate = (total_income_2024 - net_profit_2023) / net_profit_2023 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 128,
      "prompt_tokens": 2937,
      "completion_tokens_details": {
        "text_tokens": 128
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 2660
      },
      "total_tokens": 3065
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年预计净利润与折旧摊销的和，并将其与2023年实际净利润进行比较，求出增长百分比；请保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2023 = 767\n    net_profit_2024 = 833\n    depreciation_2024 = 138\n    total_2024 = net_profit_2024 + depreciation_2024\n    growth_percentage = ((total_2024 - net_profit_2023) / net_profit_2023) * 100\n    return round(growth_percentage, 2)",
    "image_id": "company_30_30_19_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-992",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2619-1.png",
      "./MultiFinance/images/2619-2.png",
      "./MultiFinance/images/2619-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2619-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-638",
    "output": [
      "net_income = 225922\n    income_tax_rate = 0.21\n    \n    # Do math calculation to get the answer\n    estimated_income_tax = net_income * income_tax_rate\n    \n    # return answer\n    return estimated_income_tax\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 70,
      "prompt_tokens": 1276,
      "completion_tokens_details": {
        "text_tokens": 70
      },
      "prompt_tokens_details": {
        "text_tokens": 377,
        "image_tokens": 899
      },
      "total_tokens": 1346
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the estimated income tax on the net income after the corporate restructuring in the first quarter of 2023 if the income tax rate is approximately 21%?",
    "python_solution": "def solution():\n    #Define variables name and value\n\n    restructuring_costs = 20500 # thousands\n\n    net_income_before_restructuring = 225922 # thousands\n    tax_rate = 0.21 # 21%\n\n    #Do math calculation to get the answer\n\n    # calculate net income after restructuring\n    net_income = net_income_before_restructuring - restructuring_costs \n    # calculate income tax\n    income_tax = net_income * tax_rate \n    return income_tax\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-39",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1962-1.png"
    ],
    "context": "<image 1>\nDuring the first quarter of 2023, management committed to an action to restructure certain parts of the Company to enable it to prioritize investments in the fastest growing areas of the business. As a result, certain headcount reductions were necessary. The Company has incurred $ 20.5 million related to this action during the six months ended June 30, 2023. The Company does not expect to incur material additional charges related to this action.",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 0,
          "%": 1,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 0
      }
    },
    "difficulty": 3.401197381662156,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-639",
    "output": [
      "change_in_fair_value_derivative_liabilities_2022 = 2170670\n    change_in_fair_value_derivative_liabilities_2021 = 3848000\n    change_in_fair_value_derivative_liabilities_change = change_in_fair_value_derivative_liabilities_2022 - change_in_fair_value_derivative_liabilities_2021\n    \n    offering_costs_derivative_liabilities_2022 = -259140\n    offering_costs_derivative_liabilities_2021 = -259140\n    offering_costs_derivative_liabilities_change = offering_costs_derivative_liabilities_2022 - offering_costs_derivative_liabilities_2021\n    \n    change_in_fair_value_derivative_liabilities_2023 = change_in_fair_value_derivative_liabilities_2021 + change_in_fair_value_derivative_liabilities_change\n    offering_costs_derivative_liabilities_2023 = offering_costs_derivative_liabilities_2021 + offering_costs_derivative_liabilities_change\n    \n    change_in_fair_value_derivative_liabilities_2023 = max(0, change_in_fair_value_derivative_liabilities_2023)\n    offering_costs_derivative_liabilities_2023 = min(0, offering_costs_derivative_liabilities_2023)\n    \n    total_other_income_expenses_net_2023 = 3208873 + change_in_fair_value_derivative_liabilities_2023 + offering_costs_derivative_liabilities_2023\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return total_other_income_expenses_net_2023\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 377,
      "prompt_tokens": 1333,
      "completion_tokens_details": {
        "text_tokens": 377
      },
      "prompt_tokens_details": {
        "text_tokens": 296,
        "image_tokens": 1037
      },
      "total_tokens": 1710
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the total other income (expenses), net for 2023 in dollars assuming the changes in fair value of derivative liabilities and offering costs for derivative liabilities follow the same pattern as from 2021 to 2022?",
    "python_solution": "def solution():\n    # Define variables name and value\n    change_in_fair_value_of_derivative_liabilities_2022 = 7_255_330 \n    change_in_fair_value_of_derivative_liabilities_2021 = -1_828_670\n    offering_costs_derivative_liabilities_2022 = 0\n    offering_costs_derivative_liabilities_2021 = -259_140\n\n    # Do math calculation to get the answer\n    growth_rate_change_in_fair_value = (change_in_fair_value_of_derivative_liabilities_2022 - change_in_fair_value_of_derivative_liabilities_2021) / abs(change_in_fair_value_of_derivative_liabilities_2021)\n    growth_rate_offering_costs = (offering_costs_derivative_liabilities_2022 - offering_costs_derivative_liabilities_2021) / abs(offering_costs_derivative_liabilities_2021)\n    change_in_fair_value_of_derivative_liabilities_2023 = change_in_fair_value_of_derivative_liabilities_2022 * (1 + growth_rate_change_in_fair_value)\n    offering_costs_derivative_liabilities_2023 = offering_costs_derivative_liabilities_2022 * (1 + growth_rate_offering_costs)\n    other_income_expenses_net_2023 = change_in_fair_value_of_derivative_liabilities_2023 + offering_costs_derivative_liabilities_2023\n    return other_income_expenses_net_2023\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-224",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2090-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 4,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 12
      }
    },
    "difficulty": 5.288267030694535,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-640",
    "output": [
      "fixed_assets_2023 = 4810\n    fixed_assets_2026 = 8022\n    \n    # Calculate growth rate\n    growth_rate = ((fixed_assets_2026 - fixed_assets_2023) / fixed_assets_2023) * 100\n    \n    # Return result rounded to one decimal place\n    return round(growth_rate, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 2296,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 2040
      },
      "total_tokens": 2402
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2026年的固定资产增长百分比，并将结果保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    fixed_assets_2023 = 4810\n    fixed_assets_2026E = 8022\n\n    # Multi-step logic\n    growth_percentage = ((fixed_assets_2026E - fixed_assets_2023) / fixed_assets_2023) * 100\n    return round(growth_percentage, 1)",
    "image_id": "company_23_23_27_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-933",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2615-1.png",
      "./MultiFinance/images/2615-2.png",
      "./MultiFinance/images/2615-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2615-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-641",
    "output": [
      "total_percentage = 83.6 + 10.8 + 7 + 7 + 24.2\n    \n    # Do math calculation to get the answer\n    answer = round(total_percentage, 1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 60,
      "prompt_tokens": 2037,
      "completion_tokens_details": {
        "text_tokens": 60
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1778
      },
      "total_tokens": 2097
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有大于等于60%的部分的总和，并将其作为整体的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_40_50 = 83.6\n    value_50_60 = 10.8\n    value_60_70 = 3.2\n    value_70_80 = 2.0\n    value_80_90 = 0.3\n    value_above_90 = 0.1\n\n    # Multi-step logic\n    total_above_60 = value_60_70 + value_70_80 + value_80_90 + value_above_90\n    percentage_of_total = (total_above_60 / 100) * 100\n    return round(percentage_of_total, 1)",
    "image_id": "company_12_12_19_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1655",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 4
      }
    },
    "difficulty": 4.356708826689592,
    "images": [
      "./MultiFinance/images/2258-1.png",
      "./MultiFinance/images/2258-2.png",
      "./MultiFinance/images/2258-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2258-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-642",
    "output": [
      "direct_acquisition_related_costs = 4.3\n    ceo_transition_costs = 0.6\n    bad_debt_reserves_for_customer_bankruptcies = 0.8\n    export_penalties_related_to_product_shipments = 0.9\n    underwriting_fees_associated_with_debt_financing = 0.3\n    \n    # Do math calculation to get the answer\n    total_cost = direct_acquisition_related_costs + ceo_transition_costs + bad_debt_reserves_for_customer_bankruptcies + export_penalties_related_to_product_shipments + underwriting_fees_associated_with_debt_financing\n    \n    # return answer\n    return total_cost\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 154,
      "prompt_tokens": 2523,
      "completion_tokens_details": {
        "text_tokens": 154
      },
      "prompt_tokens_details": {
        "text_tokens": 309,
        "image_tokens": 2214
      },
      "total_tokens": 2677
    },
    "model": "qwen-omni-turbo",
    "question": "What is the total cost incurred by the company for the acquisition of Tube Supply, inclusive of direct acquisition-related costs, CEO transition costs, bad debt reserves for customer bankruptcies, charges for export penalties related to product shipments and underwriting fees associated with debt financing in $ million?",
    "python_solution": "def solution():\n    # Define variables name and value\n    direct_acquisition_related_costs = 4.3\n    CEO_transition_costs = 0.6\n    bad_debt_reserves = 0.8\n    export_related_penalties_2012 = 0.9\n    export_related_penalties_2011 = 0.9\n    underwriting_fees = 3.4\n    # Do math calculation to get the answer\n    total_cost_Tube_Supply_acquisition = direct_acquisition_related_costs + CEO_transition_costs + bad_debt_reserves + export_related_penalties_2012 + export_related_penalties_2011 + underwriting_fees     \n    return total_cost_Tube_Supply_acquisition\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-3",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1942-1.png",
      "./MultiFinance/images/1942-2.png",
      "./MultiFinance/images/1942-3.png"
    ],
    "context": "<image 1>\n<image 2>\n<image 3>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 0
      }
    },
    "difficulty": 3.9120230054281464,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-643",
    "output": [
      "q1_rental_rate = 98.33% \n    q2_rental_rate = 98.13% \n    \n    # Do math calculation to get the answer\n    rental_rate_growth = (q2_rental_rate - q1_rental_rate) * 100 / q1_rental_rate\n    \n    # return answer\n    return round(rental_rate_growth, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 89,
      "prompt_tokens": 3476,
      "completion_tokens_details": {
        "text_tokens": 89
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 3204
      },
      "total_tokens": 3565
    },
    "model": "qwen-omni-turbo",
    "question": "请计算嘉实物美消费 REIT 在2024年第四季度北京市大成项目、玉蜓桥项目的出租率与上一季度相比的增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    occupancy_rate_q3 = 96.69\n    occupancy_rate_q4 = 96.43\n    \n    # Multi-step logic\n    growth_rate = (occupancy_rate_q4 - occupancy_rate_q3) / occupancy_rate_q3 * 100\n    \n    return round(growth_rate, 2)",
    "image_id": "industry_18_18_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2436",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2768-1.png",
      "./MultiFinance/images/2768-2.png",
      "./MultiFinance/images/2768-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2768-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-644",
    "output": [
      "total_market_share = 100\n    market_shares_less_than_5_percent = [3, 4, 4]\n    \n    sum_market_shares_less_than_5_percent = sum(market_shares_less_than_5_percent)\n    sum_market_shares_greater_or_equal_to_5_percent = total_market_share - sum_market_shares_less_than_5_percent\n    \n    percentage_less_than_5_percent = (sum_market_shares_less_than_5_percent / total_market_share) * 100\n    \n    # return answer\n    return round(percentage_less_than_5_percent, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 1674,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 286,
        "image_tokens": 1388
      },
      "total_tokens": 1815
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有市场份额小于5%的公司总和，并将该总和与市场份额大于或等于5%的公司总和进行比较，求出市场份额小于5%的公司总和占总市场份额的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    less_than_5_percent = 0.04 + 0.03\n    greater_or_equal_5_percent = 0.10 + 0.10 + 0.06 + 0.06 + 0.06 + 0.05 + 0.05\n    total_market = 1.00\n\n    # Multi-step logic\n    percentage = (less_than_5_percent / total_market) * 100\n    return round(percentage, 1)",
    "image_id": "company_32_32_10_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1090",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 7,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 4.499809670330265,
    "images": [
      "./MultiFinance/images/2233-1.png",
      "./MultiFinance/images/2233-2.png",
      "./MultiFinance/images/2233-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2233-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-645",
    "output": [
      "year_list = [2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022]\n    income_list = [47, 35, 64, 46, 56, 132, 155]\n    \n    total_growth_rate = (income_list[-1] - income_list[0]) / income_list[0]\n    average_growth_rate = total_growth_rate / len(year_list)\n    \n    answer = round(average_growth_rate * 100, 2)\n    \n    return answer\n\n```"
    ],
    "usage": {
      "completion_tokens": 148,
      "prompt_tokens": 2465,
      "completion_tokens_details": {
        "text_tokens": 148
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2202
      },
      "total_tokens": 2613
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2015年到2022年CR5收入的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    cr5_revenue_2015 = 47\n    cr5_revenue_2022 = 155\n    years = 2022 - 2015\n\n    average_growth_rate = ((cr5_revenue_2022 / cr5_revenue_2015) ** (1/years) - 1) * 100\n    return round(average_growth_rate, 2)",
    "image_id": "company_29_29_08_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1275",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2370-1.png",
      "./MultiFinance/images/2370-2.png",
      "./MultiFinance/images/2370-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2370-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-646",
    "output": [
      "child_wang_2024_profit = 1.8\n    child_wang_2025_profit = 4.8\n    child_wang_2026_profit = 6.7\n    \n    # Do math calculation to get the answer\n    growth_rate_2024_to_2025 = ((child_wang_2025_profit - child_wang_2024_profit) / child_wang_2024_profit)\n    growth_rate_2025_to_2026 = ((child_wang_2026_profit - child_wang_2025_profit) / child_wang_2025_profit)\n    \n    net_profit_growth_rate = (growth_rate_2024_to_2025 + growth_rate_2025_to_2026) / 2 * 100\n    \n    # return answer\n    return round(net_profit_growth_rate, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 225,
      "prompt_tokens": 3243,
      "completion_tokens_details": {
        "text_tokens": 225
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 2982
      },
      "total_tokens": 3468
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算孩子王在2024年到2026年的净利润复合增长率，并保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = 1.8\n    net_profit_2025 = 4.8\n    net_profit_2026 = 6.7\n    cagr = ((net_profit_2026 / net_profit_2024) ** (1/2) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_25_25_15_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-161",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2431-1.png",
      "./MultiFinance/images/2431-2.png",
      "./MultiFinance/images/2431-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2431-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-647",
    "output": [
      "five_year_spot_rate = 4.37\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return five_year_spot_rate\n```"
    ],
    "usage": {
      "completion_tokens": 36,
      "prompt_tokens": 1525,
      "completion_tokens_details": {
        "text_tokens": 36
      },
      "prompt_tokens_details": {
        "text_tokens": 283,
        "image_tokens": 1242
      },
      "total_tokens": 1561
    },
    "model": "qwen-omni-turbo",
    "question": "Based on Exhibit 1, what is the five-year spot rate for Steve, a bond trader at a financial institution (expressed as a percentage)? Keep in mind that par and spot rates are derived from annual-coupon sovereign bonds. Answer to three decimal places.",
    "python_solution": "def solution():\n    # given spot rates and swap rate\n    spot_rates = [0.025, 0.03, 0.035, 0.04]\n    swap_rate = 0.0437\n\n    # calculate the sum of discounted swap rate payments \n    sum_discounted_payments = sum([swap_rate / ((1 + rate) ** i) for i, rate in enumerate(spot_rates, start=1)])\n\n    # calculate the 5-year spot rate solving the formula above for S5\n    S5 = ((1 + swap_rate) / (1 - sum_discounted_payments))**(1/5) - 1\n\n    # return S5 in percentage\n    return S5 * 100",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 2
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 16
      }
    },
    "difficulty": 5.231108616854587,
    "source_id": "validation-22",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/298-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-648",
    "output": [
      "count_100 = 0\n\n    # Do math calculation to get the answer\n    for row in table_data:\n        if row[2] == '100':\n            count_100 += 1\n\n    # return answer\n    return count_100\n\n```"
    ],
    "usage": {
      "completion_tokens": 64,
      "prompt_tokens": 3147,
      "completion_tokens_details": {
        "text_tokens": 64
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 2890
      },
      "total_tokens": 3211
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中容量电价为100元/千瓦·年的省级电网数量，并将结果作为整数返回。",
    "python_solution": "def solution():\n    # 容量电价为100元/千瓦·年的省级电网数量\n    low_price_count = 0\n    # 列出所有容量电价为100元/千瓦·年的省级电网\n    low_price_grids = ['北京', '天津', '冀北', '河北', '山西', '山东', '蒙西', '蒙东', '辽宁', '吉林', '黑龙江', '上海', '江苏', '浙江', '安徽', '福建', '江西', '湖北', '陕西', '新疆', '宁夏', '甘肃', '深圳', '广东', '海南', '贵州']\n    # 计算数量\n    for grid in low_price_grids:\n        low_price_count += 1\n    return low_price_count",
    "image_id": "industry_17_17_23_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2326",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 0
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3008-1.png",
      "./MultiFinance/images/3008-2.png",
      "./MultiFinance/images/3008-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3008-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-649",
    "output": [
      "year_2013 = 72\n    year_2023 = -5\n    \n    # Do math calculation to get the answer\n    CAGR = ((year_2023 / year_2013) ** (1/10)) - 1\n    \n    # return answer\n    return round(CAGR * 100, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 88,
      "prompt_tokens": 2170,
      "completion_tokens_details": {
        "text_tokens": 88
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 1902
      },
      "total_tokens": 2258
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中同花顺2C软件现金流的年增长率数据，计算2013年至2023年的复合年增长率；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    growth_rates = [72, 103, 363, -42, -13, -22, 77, 37, 3, -17, -5]\n    product = 1\n    for rate in growth_rates:\n        product *= (1 + rate / 100)\n    cagr = (product ** (1 / len(growth_rates)) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_29_29_07_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1265",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 6,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 10
      }
    },
    "difficulty": 4.969813299576001,
    "images": [
      "./MultiFinance/images/2179-1.png",
      "./MultiFinance/images/2179-2.png",
      "./MultiFinance/images/2179-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2179-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-650",
    "output": [
      "earnings_2014 = 5058\n    earnings_2013 = 4523\n    \n    # Calculate percentage change\n    percentage_change = ((earnings_2014 - earnings_2013) / earnings_2013) * 100\n    \n    # Return the result rounded to three decimal places\n    return round(percentage_change, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 103,
      "prompt_tokens": 2005,
      "completion_tokens_details": {
        "text_tokens": 103
      },
      "prompt_tokens_details": {
        "text_tokens": 743,
        "image_tokens": 1262
      },
      "total_tokens": 2108
    },
    "model": "qwen-omni-turbo",
    "question": "what is the percent change in earnings for basic and diluted eps from 2013 to 2014? Answer to three decimal places.",
    "answer": "11.828",
    "context": "the weighted-average grant date fair value of altria group , inc . restricted stock and deferred stock granted during the years ended december 31 , 2014 , 2013 and 2012 was $ 53 million , $ 49 million and $ 53 million , respectively , or $ 36.75 , $ 33.76 and $ 28.77 per restricted or deferred share , respectively . the total fair value of altria group , inc . restricted stock and deferred stock vested during the years ended december 31 , 2014 , 2013 and 2012 was $ 86 million , $ 89 million and $ 81 million , respectively . stock options : altria group , inc . has not granted stock options since 2002 , and there have been no stock options outstanding since february 29 , 2012 . the total intrinsic value of options exercised during the year ended december 31 , 2012 was insignificant . note 12 . earnings per share basic and diluted earnings per share ( 201ceps 201d ) were calculated using the following: .\n\n<image 1>\n\nnet earnings attributable to altria group , inc . $ 5070 $ 4535 $ 4180 less : distributed and undistributed earnings attributable to unvested restricted and deferred shares ( 12 ) ( 12 ) ( 13 ) earnings for basic and diluted eps $ 5058 $ 4523 $ 4167 weighted-average shares for basic and diluted eps 1978 1999 2024 since february 29 , 2012 , there have been no stock options outstanding . for the 2012 computation , there were no antidilutive stock options . altria group , inc . and subsidiaries notes to consolidated financial statements _________________________ altria_mdc_2014form10k_nolinks_crops.pdf 54 2/25/15 5:56 pm .\n",
    "program": "basic_eps_2014 = 5058\nbasic_eps_2013 = 4523\ndiluted_eps_2014 = basic_eps_2014 - 12\ndiluted_eps_2013 = basic_eps_2013 - 12\nchange_basic_eps = basic_eps_2014 - basic_eps_2013\nchange_diluted_eps = diluted_eps_2014 - diluted_eps_2013\npercent_change_basic_eps = change_basic_eps / basic_eps_2013\npercent_change_diluted_eps = change_diluted_eps / diluted_eps_2013\nanswer = percent_change_basic_eps * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 73,
        "total_numbers": 75
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 4.143134726391533,
    "source_id": "test-104",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/756-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-651",
    "output": [
      "first_2021 = -4.35%\n    first_2022 = -13.59%\n    \n    difference = (first_2022 - first_2021) / first_2021 * 100\n    \n    # return answer\n    return round(difference, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 77,
      "prompt_tokens": 1784,
      "completion_tokens_details": {
        "text_tokens": 77
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1504
      },
      "total_tokens": 1861
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年和2022年第一项指标的差值，并将该差值除以2021年的第一项指标，然后将结果转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_2021_first = 25.80\n    value_2022_first = -35.14\n    diff = value_2022_first - value_2021_first\n    ratio = diff / value_2021_first\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_21_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2874",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2853-1.png",
      "./MultiFinance/images/2853-2.png",
      "./MultiFinance/images/2853-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2853-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-652",
    "output": [
      "board_2022_marginal_profit = 18331.7 * 10 - (20811.2 + 6416) * 10\n    board_2023_marginal_profit = 14131.9 * 10 - (18331.7 + 4941.4) * 10\n    board_2024_marginal_profit = 14414.6 * 10\n    \n    # Do math calculation to get the answer\n    difference = board_2022_marginal_profit + board_2023_marginal_profit - board_2024_marginal_profit\n    \n    # return answer\n    return round(difference, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 191,
      "prompt_tokens": 2401,
      "completion_tokens_details": {
        "text_tokens": 191
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 2124
      },
      "total_tokens": 2592
    },
    "model": "qwen-omni-turbo",
    "question": "请计算板材在2022年和2023年的毛利润总额，并将这个总额与2024年的毛利润进行比较，求出它们之间的差值；请保留两位小数。",
    "python_solution": "def solution():\n    # 板材的销售收入和毛利率\n    revenue_2022 = 20811.2\n    margin_2022 = 10.5 / 100\n    revenue_2023 = 18331.7\n    margin_2023 = 10.0 / 100\n    revenue_2024 = 14131.9\n    margin_2024 = 10.0 / 100\n\n    # 计算毛利润\n    profit_2022 = revenue_2022 * margin_2022\n    profit_2023 = revenue_2023 * margin_2023\n    total_profit_2022_2023 = profit_2022 + profit_2023\n    profit_2024 = revenue_2024 * margin_2024\n\n    # 求差值\n    difference = total_profit_2022_2023 - profit_2024\n\n    return round(difference, 2)",
    "image_id": "company_05_05_34_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1552",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 3,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 15,
        "parentheses": 2
      }
    },
    "difficulty": 4.852030263919617,
    "images": [
      "./MultiFinance/images/2187-1.png",
      "./MultiFinance/images/2187-2.png",
      "./MultiFinance/images/2187-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2187-3.png",
      "./MultiFinance/images/2187-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-653",
    "output": [
      "profit_2024 = 1.85\n    profit_2025 = 2.75\n    profit_2026 = 3.96\n    \n    # Do math calculation to get the answer\n    growth_rate = ((profit_2026 - profit_2024) / profit_2024 + (profit_2025 - profit_2024) / profit_2024) / 2 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 138,
      "prompt_tokens": 1436,
      "completion_tokens_details": {
        "text_tokens": 138
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1170
      },
      "total_tokens": 1574
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算浙江自然公司2024年到2026年的归母净利润的复合年增长率；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    profit_2024 = 1.85\n    profit_2025 = 2.75\n    profit_2026 = 3.79\n\n    # Multi-step logic\n    cagr = ((profit_2026 / profit_2024) ** (1/2) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_37_37_15_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-588",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.189654742026425,
    "images": [
      "./MultiFinance/images/2298-1.png",
      "./MultiFinance/images/2298-2.png",
      "./MultiFinance/images/2298-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2298-2.png",
      "./MultiFinance/images/2298-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-654",
    "output": [
      "model_y_2021_sales = 401456\n    model_y_2023_sales = 724986\n    \n    sales_difference = model_y_2023_sales - model_y_2021_sales\n    percentage_increase = (sales_difference / model_y_2021_sales) * 100\n    \n    # return answer\n    return round(percentage_increase, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 110,
      "prompt_tokens": 3292,
      "completion_tokens_details": {
        "text_tokens": 110
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 3008
      },
      "total_tokens": 3402
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年全球Model Y的销量与2021年的差值，然后将该差值除以2021年的销量，最后将结果乘以100得到百分比。请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    model_y_2021 = 401456\n    model_y_2023 = 1175874\n    # Multi-step logic\n    diff = model_y_2023 - model_y_2021\n    ratio = diff / model_y_2021\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_19_19_32_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1015",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2621-1.png",
      "./MultiFinance/images/2621-2.png",
      "./MultiFinance/images/2621-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2621-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-655",
    "output": [
      "net_earnings_per_diluted_share_2016 = 1.68\n    net_earnings_per_diluted_share_2015 = 1.87\n    \n    # Calculate the percentage change\n    percentage_change = ((net_earnings_per_diluted_share_2016 - net_earnings_per_diluted_share_2015) / net_earnings_per_diluted_share_2015) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 133,
      "prompt_tokens": 1306,
      "completion_tokens_details": {
        "text_tokens": 133
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 1037
      },
      "total_tokens": 1439
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the net earnings per diluted share from 2015 to 2016?",
    "python_solution": "def solution():\n    #Define variables name and value\n    diluted_eps_2015 = 1.87 \n    diluted_eps_2016 = 1.68  \n\n    #Do math calculation to get the answer\n    percentage_change = ((diluted_eps_2016 - diluted_eps_2015) / diluted_eps_2015) * 100\n    return percentage_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-92",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2002-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-656",
    "output": [
      "fixed_assets_2025 = 1455\n    fixed_assets_2026 = 1506\n    \n    # Calculate the growth rate\n    growth_rate = ((fixed_assets_2026 - fixed_assets_2025) / fixed_assets_2025) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 108,
      "prompt_tokens": 3054,
      "completion_tokens_details": {
        "text_tokens": 108
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2795
      },
      "total_tokens": 3162
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2026年与2025年的固定资产增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values from the image\n    fixed_assets_2025 = 1455\n    fixed_assets_2026 = 1506\n\n    # Multi-step logic\n    growth = (fixed_assets_2026 - fixed_assets_2025) / fixed_assets_2025 * 100\n    return round(growth, 2)",
    "image_id": "company_30_30_19_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-998",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2722-1.png",
      "./MultiFinance/images/2722-2.png",
      "./MultiFinance/images/2722-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2722-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-657",
    "output": [
      "year_1 = 96773\n    year_2 = 125646\n    year_3 = 157875\n    year_4 = 200476\n    \n    # Do math calculation to get the answer\n    growth_rate_year_1 = (year_2 - year_1) / year_1 * 100\n    growth_rate_year_2 = (year_3 - year_2) / year_2 * 100\n    growth_rate_year_3 = (year_4 - year_3) / year_3 * 100\n    \n    average_growth_rate = (growth_rate_year_1 + growth_rate_year_2 + growth_rate_year_3) / 3\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 195,
      "prompt_tokens": 2126,
      "completion_tokens_details": {
        "text_tokens": 195
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 1870
      },
      "total_tokens": 2321
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2025年到2027年营业收入的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    revenue_2025 = 125646\n    revenue_2027 = 200476\n    years = 2\n    growth_rate = ((revenue_2027 / revenue_2025) ** (1/years) - 1) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_19_19_01_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1036",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2464-1.png",
      "./MultiFinance/images/2464-2.png",
      "./MultiFinance/images/2464-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2464-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-658",
    "output": [
      "normal_capacity = 40000\n    units_produced = 38000\n    actual_labor_hours = 155000\n    actual_fixed_overhead = 162000\n    actual_variable_overhead = 580000\n    \n    # Calculate the standard hours allowed for production\n    standard_hours_allowed = (units_produced * 4) / normal_capacity\n    \n    # Calculate the total overhead applied\n    total_overhead_applied = (standard_hours_allowed * 7.5)\n    \n    # Calculate the volume variance\n    volume_variance = total_overhead_applied - actual_fixed_overhead\n    \n    # Return the volume variance rounded to the nearest integer\n    return round(volume_variance)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 172,
      "prompt_tokens": 488,
      "completion_tokens_details": {
        "text_tokens": 172
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 215
      },
      "total_tokens": 660
    },
    "model": "qwen-omni-turbo",
    "question": "The standard cost card for the Rollins Manufacturing Company's only product is: <image 1> Other data is as follows: <image 2> What is the volume variance? Answer to the nearest integer.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Manage",
    "source_id": "test_Manage_73",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/259-1.png",
      "./MultiFinance/images/259-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-659",
    "output": [
      "rank_1_score = 40\n    rank_2_score = 20\n    rank_3_score = 19\n    rank_4_score = 18\n    rank_5_score = 15\n    \n    # Do math calculation to get the answer\n    total_score = round(rank_1_score + rank_2_score + rank_3_score + rank_4_score + rank_5_score)\n    \n    # return answer\n    return total_score\n```"
    ],
    "usage": {
      "completion_tokens": 103,
      "prompt_tokens": 1855,
      "completion_tokens_details": {
        "text_tokens": 103
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 1602
      },
      "total_tokens": 1958
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中排名前五的公司总分，并将结果四舍五入到整数。",
    "python_solution": "def solution():\n    google = 40\n    openai = 20\n    meta = 19\n    microsoft = 18\n    deepmind = 15\n    \n    total_score = google + openai + meta + microsoft + deepmind\n    return round(total_score)",
    "image_id": "market_05_05_12_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2737",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2776-1.png",
      "./MultiFinance/images/2776-2.png",
      "./MultiFinance/images/2776-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2776-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-660",
    "output": [
      "fixed_assets_2021 = 3321\n    total_assets_2021 = 9722\n    fixed_assets_2022 = 4153\n    total_assets_2022 = 11324\n    \n    # Calculate the change in percentage\n    change_percentage = ((fixed_assets_2022 - fixed_assets_2021) / total_assets_2021 * 100)\n    \n    # Return the result rounded to one decimal place\n    return round(change_percentage, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 139,
      "prompt_tokens": 2410,
      "completion_tokens_details": {
        "text_tokens": 139
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2151
      },
      "total_tokens": 2549
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2022年和2023年之间，固定资产占总资产的比例变化，并将结果保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    fixed_assets_2022 = 4153\n    total_assets_2022 = 11324\n    fixed_assets_2023 = 4393\n    total_assets_2023 = 11011\n\n    # Multi-step logic\n    ratio_2022 = fixed_assets_2022 / total_assets_2022 * 100\n    ratio_2023 = fixed_assets_2023 / total_assets_2023 * 100\n    change = ratio_2023 - ratio_2022\n    return round(change, 1)",
    "image_id": "company_02_02_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-113",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 4.189654742026425,
    "images": [
      "./MultiFinance/images/2294-1.png",
      "./MultiFinance/images/2294-2.png",
      "./MultiFinance/images/2294-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2294-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-661",
    "output": [
      "year_2019_fixed_expenses = 12.2\n    year_2019_operating_expenses = 23.3\n    year_2030e_fixed_expenses = 0.3\n    year_2030e_operating_expenses = 1\n\n    total_change = (year_2030e_fixed_expenses + year_2030e_operating_expenses) - \\\n                   (year_2019_fixed_expenses + year_2019_operating_expenses)\n\n    # return answer\n    return round(total_change, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 137,
      "prompt_tokens": 2481,
      "completion_tokens_details": {
        "text_tokens": 137
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 2215
      },
      "total_tokens": 2618
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2019年与2030E年Robo taxi的固定费用和营运开支总和的变化量，并将结果保留两位小数。",
    "python_solution": "def solution():\n    fixed_cost_2019 = 12.2\n    operating_expense_2019 = 11.1\n    total_2019 = fixed_cost_2019 + operating_expense_2019\n\n    fixed_cost_2030E = 0.3\n    operating_expense_2030E = 0.7\n    total_2030E = fixed_cost_2030E + operating_expense_2030E\n\n    change = total_2030E - total_2019\n    return round(change, 2)",
    "image_id": "company_19_19_22_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1011",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2875-1.png",
      "./MultiFinance/images/2875-2.png",
      "./MultiFinance/images/2875-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2875-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-662",
    "output": [
      "total_market_value = 179.19\n    free_float_market_value = 177.50\n    free_float_shares = 1246.46\n    \n    # Calculate the difference between total market value and free float market value\n    difference = total_market_value - free_float_market_value\n    \n    # Divide the difference by the free float shares (in millions)\n    result = (difference / free_float_shares) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 133,
      "prompt_tokens": 602,
      "completion_tokens_details": {
        "text_tokens": 133
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 317
      },
      "total_tokens": 735
    },
    "model": "qwen-omni-turbo",
    "question": "请计算该股票的总市值与自由流通市值之间的差值，然后将这个差值除以自由流通股数（单位：百万），最后将结果乘以100得到每百万股对应的差值金额；请保留两位小数。",
    "python_solution": "def solution():\n    total_market_value = 179.19\n    free_float_market_value = 177.50\n    free_float_shares = 1246.46\n\n    diff = total_market_value - free_float_market_value\n    per_share_diff = diff / free_float_shares\n    result = per_share_diff * 100\n    return round(result, 2)",
    "image_id": "company_25_25_00_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-139",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2909-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2909-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-663",
    "output": [
      "overheat_end_bond = 50.0\n    overheat_end_stock = 10.0\n    overheat_end_commodity = 40.0\n    total_overheat_end = overheat_end_bond + overheat_end_stock + overheat_end_commodity\n\n    recession_initial_bond = 95.0\n    recession_initial_commodity = 5.0\n    total_recession_initial = recession_initial_bond + recession_initial_commodity\n\n    ratio = (total_overheat_end / total_recession_initial) * 100\n\n    # return answer\n    return round(ratio, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 136,
      "prompt_tokens": 1576,
      "completion_tokens_details": {
        "text_tokens": 136
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 1300
      },
      "total_tokens": 1712
    },
    "model": "qwen-omni-turbo",
    "question": "请计算过热末期债券、股票和商品的总占比，并将该总占比除以衰退初期债券和商品的总占比，最后将结果转换为百分比形式；请保留两位小数。",
    "python_solution": "def solution():\n    bond_overheat_end = 50.0\n    stock_overheat_end = 10.0\n    commodity_overheat_end = 40.0\n    bond_recession_start = 95.0\n    commodity_recession_start = 5.0\n\n    total_overheat_end = bond_overheat_end + stock_overheat_end + commodity_overheat_end\n    total_recession_start = bond_recession_start + commodity_recession_start\n    ratio = total_overheat_end / total_recession_start * 100\n    return round(ratio, 2)",
    "image_id": "strategy_03_03_12_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2969",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2407-1.png",
      "./MultiFinance/images/2407-2.png",
      "./MultiFinance/images/2407-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2407-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-664",
    "output": [
      "q1_quarterly_performance = -2.37% \n    q1_annual_performance = -7.11%\n    \n    # Calculate the difference between quarterly performance and annual performance\n    difference = q1_quarterly_performance - q1_annual_performance\n    \n    # Calculate the percentage of the difference relative to the annual performance\n    percentage_difference = (difference / q1_annual_performance) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(percentage_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 125,
      "prompt_tokens": 3268,
      "completion_tokens_details": {
        "text_tokens": 125
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 3004
      },
      "total_tokens": 3393
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中某板块的季度表现与年度表现的差值，并将该差值占年度表现的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    quarterly_performance = -2.37\n    annual_performance = -7.11\n    diff = quarterly_performance - annual_performance\n    ratio = diff / annual_performance\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_00_00_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2757",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2689-1.png",
      "./MultiFinance/images/2689-2.png",
      "./MultiFinance/images/2689-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2689-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-665",
    "output": [
      "years = [2023, 2024, 2025, 2026, 2027]\n    revenues = [544.78, 584.17, 627.76, 676.06, 729.63]\n    \n    total_revenue = sum(revenues)\n    average_revenue = round(total_revenue / len(years))\n    \n    return average_revenue\n```"
    ],
    "usage": {
      "completion_tokens": 109,
      "prompt_tokens": 3064,
      "completion_tokens_details": {
        "text_tokens": 109
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 2807
      },
      "total_tokens": 3173
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2027年的平均收入，并将结果四舍五入到整数。",
    "python_solution": "def solution():\n    value_2023 = 544.78\n    value_2024 = 584.17\n    value_2025 = 627.76\n    value_2026 = 676.06\n    value_2027 = 729.63\n\n    average = (value_2023 + value_2024 + value_2025 + value_2026 + value_2027) / 5\n    return round(average)",
    "image_id": "market_05_05_11_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2746",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2509-1.png",
      "./MultiFinance/images/2509-2.png",
      "./MultiFinance/images/2509-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2509-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-666",
    "output": [
      "national_difference_2020 = 4.61 - 4.26\n    national_difference_2021 = 4.57 - 4.22\n    \n    average_difference = (national_difference_2020 + national_difference_2021) / 2\n    \n    # return answer\n    return round(average_difference, 2)\n\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 86,
      "prompt_tokens": 3613,
      "completion_tokens_details": {
        "text_tokens": 86
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 3348
      },
      "total_tokens": 3699
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年12月和2021年12月全国与上海的平均利差，并将结果保留两位小数。",
    "python_solution": "def solution():\n    national_2020 = 4.61\n    shanghai_2020 = 4.26\n    national_2021 = 4.57\n    shanghai_2021 = 4.22\n    diff_2020 = national_2020 - shanghai_2020\n    diff_2021 = national_2021 - shanghai_2021\n    average_diff = (diff_2020 + diff_2021) / 2\n    return round(average_diff, 2)",
    "image_id": "company_07_07_16_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1812",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2546-1.png",
      "./MultiFinance/images/2546-2.png",
      "./MultiFinance/images/2546-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2546-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-667",
    "output": [
      "cost_2023 = 0.2174\n    cost_2024 = 0.2189\n    difference = cost_2023 - cost_2024\n    percentage = (difference / cost_2023) * 100\n    \n    # return answer\n    return round(percentage, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 3715,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 3438
      },
      "total_tokens": 3802
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2024年的度电成本差值，并将该差值占2023年度电成本的百分比；请保留两位小数。",
    "python_solution": "def solution():\n    cost_per_kwh_2023 = 0.2321\n    cost_per_kwh_2024 = 0.2355\n\n    # Multi-step logic\n    diff = cost_per_kwh_2024 - cost_per_kwh_2023\n    ratio = diff / cost_per_kwh_2023\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "company_31_31_24_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1708",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2748-1.png",
      "./MultiFinance/images/2748-2.png",
      "./MultiFinance/images/2748-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2748-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-668",
    "output": [
      "sharp_ratio_difference = -11.30% - (-0.23)\n    max_drawdown = 70.78%\n    \n    # Do math calculation to get the answer\n    result = sharp_ratio_difference * max_drawdown\n    \n    # return answer\n    return round(result, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 72,
      "prompt_tokens": 1436,
      "completion_tokens_details": {
        "text_tokens": 72
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1173
      },
      "total_tokens": 1508
    },
    "model": "qwen-omni-turbo",
    "question": "请计算第二项的夏普比与卡尔玛之间的差值，并将该差值乘以最大回撤，得到的结果保留一位小数。",
    "python_solution": "def solution():\n    sharpe_ratio_second = -0.32\n    calmar_ratio_second = -0.16\n    max_drawdown_second = 72.37\n\n    diff = sharpe_ratio_second - calmar_ratio_second\n    result = diff * max_drawdown_second\n    return round(result, 1)",
    "image_id": "market_09_09_40_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2867",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2852-1.png",
      "./MultiFinance/images/2852-2.png",
      "./MultiFinance/images/2852-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2852-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-669",
    "output": [
      "central_golden_investment = 97753\n    hong_kong_central_settlement = 97270\n    total_shares = 8305\n    percentage = (central_golden_investment + hong_kong_central_settlement) / total_shares * 100\n    \n    # return answer\n    return round(percentage, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 2295,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 2030
      },
      "total_tokens": 2386
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中排名前两名的股东持股数量之和，然后将该和数占总股本的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share_count_1 = 97753\n    share_count_2 = 97270\n    total_shares = 259081\n\n    # Multi-step logic\n    sum_of_top_two = share_count_1 + share_count_2\n    percentage_of_total = (sum_of_top_two / total_shares) * 100\n    return round(percentage_of_total, 1)",
    "image_id": "company_27_27_03_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-428",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2534-1.png",
      "./MultiFinance/images/2534-2.png",
      "./MultiFinance/images/2534-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2534-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-670",
    "output": [
      "net_cash_2019 = 66\n    accounts_receivable_2019 = 27\n    net_cash_2020 = 68\n    accounts_receivable_2020 = 23\n    \n    total_2019 = net_cash_2019 + accounts_receivable_2019\n    total_2020 = net_cash_2020 + accounts_receivable_2020\n    \n    difference = abs(total_2019 - total_2020)\n    \n    # return answer\n    return round(difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 155,
      "prompt_tokens": 2813,
      "completion_tokens_details": {
        "text_tokens": 155
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 2547
      },
      "total_tokens": 2968
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2019年和2020年的净现金与应收项目的总和，并求这两个总和的差值；请保留一位小数。",
    "python_solution": "def solution():\n    net_cash_2019 = 66\n    receivables_2019 = 52\n    total_2019 = net_cash_2019 + receivables_2019\n\n    net_cash_2020 = 68\n    receivables_2020 = 51\n    total_2020 = net_cash_2020 + receivables_2020\n\n    difference = total_2020 - total_2019\n    return round(difference, 1)",
    "image_id": "company_09_09_09_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-21",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2860-1.png",
      "./MultiFinance/images/2860-2.png",
      "./MultiFinance/images/2860-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2860-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-671",
    "output": [
      "magnetic_percentage = 2.88 + 3.53\n    \n    # Do math calculation to get the answer\n    percentage = magnetic_percentage / 100\n    \n    # return answer\n    return percentage\n```"
    ],
    "usage": {
      "completion_tokens": 48,
      "prompt_tokens": 1632,
      "completion_tokens_details": {
        "text_tokens": 48
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 1376
      },
      "total_tokens": 1680
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算磁电雷管的市场份额占总市场份额的比例，并将结果保留两位小数。",
    "python_solution": "def solution():\n    magnetic_percentage = 100 - 93.59 - 3.53 - 2.88\n    total_percentage = 100\n    ratio = (magnetic_percentage / total_percentage) * 100\n    return round(ratio, 2)",
    "image_id": "company_32_32_09_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1064",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.401197381662155,
    "images": [
      "./MultiFinance/images/2805-1.png",
      "./MultiFinance/images/2805-2.png",
      "./MultiFinance/images/2805-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2805-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-672",
    "output": [
      "buy_1_month = 25\n    buy_2_month = 47\n    buy_3_month = 134\n    \n    # Do math calculation to get the answer\n    growth_rate = (buy_3_month - buy_2_month) / buy_2_month * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 84,
      "prompt_tokens": 739,
      "completion_tokens_details": {
        "text_tokens": 84
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 482
      },
      "total_tokens": 823
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算买入评级在三个月内相对于二月内的增长百分比；请保留两位小数。",
    "python_solution": "def solution():\n    value_3_months = 47\n    value_2_months = 25\n\n    if value_2_months == 0:\n        return '无法计算'\n    else:\n        growth_percentage = ((value_3_months - value_2_months) / value_2_months) * 100\n        return round(growth_percentage, 2)",
    "image_id": "company_27_27_16_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-441",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.401197381662156,
    "images": [
      "./MultiFinance/images/2794-1.png",
      "./MultiFinance/images/2794-2.png",
      "./MultiFinance/images/2794-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2794-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-673",
    "output": [
      "absolute_performance_1_month = -5.8\n    relative_performance_1_month = -9.6\n    shenzhen_300_performance_1_month = 3.8\n    \n    # Calculate the difference between absolute performance and relative performance\n    difference = absolute_performance_1_month - relative_performance_1_month\n    \n    # Divide the difference by the Shenzhen 300's 1-month performance\n    result = difference / shenzhen_300_performance_1_month\n    \n    # Return the result rounded to two decimal places\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 136,
      "prompt_tokens": 1244,
      "completion_tokens_details": {
        "text_tokens": 136
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 977
      },
      "total_tokens": 1380
    },
    "model": "qwen-omni-turbo",
    "question": "请计算1月的绝对表现与相对表现之间的差值，并将该差值除以沪深300的1月表现，得到的结果保留两位小数。",
    "python_solution": "def solution():\n    absolute_performance_1_month = -5.8\n    relative_performance_1_month = -9.6\n    hs300_1_month = 3.8\n\n    diff = absolute_performance_1_month - relative_performance_1_month\n    result = diff / hs300_1_month\n    return round(result, 2)",
    "image_id": "company_12_12_00_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1587",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2835-1.png",
      "./MultiFinance/images/2835-2.png",
      "./MultiFinance/images/2835-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2835-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-674",
    "output": [
      "shang_zheng_index = -2.89\n    chuangye_board_index = -7.53\n    difference = shang_zheng_index - chuangye_board_index\n    growth_style_change = -4.11\n    answer = difference / growth_style_change\n    \n    # return answer\n    return round(answer, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 82,
      "prompt_tokens": 3745,
      "completion_tokens_details": {
        "text_tokens": 82
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 3479
      },
      "total_tokens": 3827
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算上证指数与创业板指的差值，并将该差值除以成长风格的变动值；请保留两位小数。",
    "python_solution": "def solution():\n    shanghai_index = -0.99\n    chi_next_index = -3.90\n    growth_style = -4.06\n\n    diff = shanghai_index - chi_next_index\n    result = diff / growth_style\n    return round(result, 2)",
    "image_id": "strategy_02_02_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3092",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2690-1.png",
      "./MultiFinance/images/2690-2.png",
      "./MultiFinance/images/2690-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2690-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-675",
    "output": [
      "crystal_photovoltaics_market_share = 23.1\n    huawei_market_share = 21.2\n    huayang_media_market_share = 16.6\n    \n    # Calculate the sum of crystal photovoltaics and Huawei's market shares\n    total_market_shares = crystal_photovoltaics_market_share + huawei_market_share\n    \n    # Calculate the difference between the total market shares and Huayang Media's market share\n    difference = total_market_shares - huayang_media_market_share\n    \n    # Return the result rounded to one decimal place\n    return round(difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 144,
      "prompt_tokens": 2557,
      "completion_tokens_details": {
        "text_tokens": 144
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 2290
      },
      "total_tokens": 2701
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中水晶光电和华为的市场份额总和，并将其与华阳多媒体的市场份额进行比较，求出它们之间的差值；结果保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    shuixianguangdian = 23.1\n    huawei = 21.2\n    huayangduomeiti = 16.6\n\n    # Multi-step logic\n    total_shuixianguangdian_huawei = shuixianguangdian + huawei\n    difference = total_shuixianguangdian_huawei - huayangduomeiti\n    return round(difference, 1)",
    "image_id": "company_18_18_31_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-783",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2874-1.png",
      "./MultiFinance/images/2874-2.png",
      "./MultiFinance/images/2874-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2874-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-676",
    "output": [
      "# Calculate the lease obligations to Entergy Louisiana as a percentage of long-term debt maturities in 2014\n    lease_obligations_to_entergy_louisiana = 149_000  # $149 million\n    long_term_debt_maturities_in_2014 = 385_373  # $385,373 thousand\n\n    percentage_of_long_term_debt_maturities = (lease_obligations_to_entergy_louisiana / long_term_debt_maturities_in_2014) * 100\n\n    # Return the calculated percentage\n    return percentage_of_long_term_debt_maturities\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 166,
      "prompt_tokens": 2320,
      "completion_tokens_details": {
        "text_tokens": 166
      },
      "prompt_tokens_details": {
        "text_tokens": 1076,
        "image_tokens": 1244
      },
      "total_tokens": 2486
    },
    "model": "qwen-omni-turbo",
    "question": "what are the lease obligations to entergy louisiana as a percentage of long-term debt maturities in 2014? (in percentage)",
    "python_solution": "def solution():\n    # Define variables name and value\n    long_term_debt_maturities_2014 = 385373\n    lease_obligations_entergy_louisiana = 149\n    const_1000 = 1000\n    \n    # Do math calculation to get the answer\n    long_term_debt_maturities_2014_in_thousands = long_term_debt_maturities_2014 / const_1000\n    lease_obligations_percentage = (lease_obligations_entergy_louisiana / long_term_debt_maturities_2014_in_thousands) * 100\n    \n    return lease_obligations_percentage",
    "source": "FinQA",
    "source_id": "simpshort-testmini-54",
    "img_type": "['Tables']",
    "context": "entergy corporation and subsidiaries notes to financial statements ( a ) consists of pollution control revenue bonds and environmental revenue bonds , some of which are secured by collateral first mortgage bonds . ( b ) these notes do not have a stated interest rate , but have an implicit interest rate of 4.8% ( 4.8 % ) . ( c ) pursuant to the nuclear waste policy act of 1982 , entergy 2019s nuclear owner/licensee subsidiaries have contracts with the doe for spent nuclear fuel disposal service . the contracts include a one-time fee for generation prior to april 7 , 1983 . entergy arkansas is the only entergy company that generated electric power with nuclear fuel prior to that date and includes the one-time fee , plus accrued interest , in long-term ( d ) see note 10 to the financial statements for further discussion of the waterford 3 and grand gulf lease obligations . ( e ) the fair value excludes lease obligations of $ 149 million at entergy louisiana and $ 97 million at system energy , long-term doe obligations of $ 181 million at entergy arkansas , and the note payable to nypa of $ 95 million at entergy , and includes debt due within one year . fair values are classified as level 2 in the fair value hierarchy discussed in note 16 to the financial statements and are based on prices derived from inputs such as benchmark yields and reported trades . the annual long-term debt maturities ( excluding lease obligations and long-term doe obligations ) for debt outstanding as of december 31 , 2013 , for the next five years are as follows : amount ( in thousands ) . \n<image 1>\n in november 2000 , entergy 2019s non-utility nuclear business purchased the fitzpatrick and indian point 3 power plants in a seller-financed transaction . entergy issued notes to nypa with seven annual installments of approximately $ 108 million commencing one year from the date of the closing , and eight annual installments of $ 20 million commencing eight years from the date of the closing . these notes do not have a stated interest rate , but have an implicit interest rate of 4.8% ( 4.8 % ) . in accordance with the purchase agreement with nypa , the purchase of indian point 2 in 2001 resulted in entergy becoming liable to nypa for an additional $ 10 million per year for 10 years , beginning in september 2003 . this liability was recorded upon the purchase of indian point 2 in september 2001 . in july 2003 a payment of $ 102 million was made prior to maturity on the note payable to nypa . under a provision in a letter of credit supporting these notes , if certain of the utility operating companies or system energy were to default on other indebtedness , entergy could be required to post collateral to support the letter of credit . entergy gulf states louisiana , entergy louisiana , entergy mississippi , entergy texas , and system energy have obtained long-term financing authorizations from the ferc that extend through october 2015 . entergy arkansas has obtained long-term financing authorization from the apsc that extends through december 2015 . entergy new orleans has obtained long-term financing authorization from the city council that extends through july 2014 . capital funds agreement pursuant to an agreement with certain creditors , entergy corporation has agreed to supply system energy with sufficient capital to : 2022 maintain system energy 2019s equity capital at a minimum of 35% ( 35 % ) of its total capitalization ( excluding short- term debt ) ; .",
    "images": [
      "./MultiFinance/images/1501-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 0,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-677",
    "output": [
      "july_1_net_worth = 2534664\n    sep_30_net_worth = 2557297\n    \n    # Calculate the difference in net worth\n    difference = sep_30_net_worth - july_1_net_worth\n    \n    # Calculate the percentage change\n    percentage_change = (difference / july_1_net_worth) * 100\n    \n    # Return the answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 117,
      "prompt_tokens": 2081,
      "completion_tokens_details": {
        "text_tokens": 117
      },
      "prompt_tokens_details": {
        "text_tokens": 283,
        "image_tokens": 1798
      },
      "total_tokens": 2198
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the company's total net worth between July 1, 2021 and September 30, 2021?",
    "python_solution": "def solution():\n    # Define variables name and value\n    initial_total_equity_July = 2534664 \n    final_total_equity_September = 2557297 \n\n    # Do math calculation to get the answer\n    percentage_change = ((final_total_equity_September - initial_total_equity_July) / initial_total_equity_July) * 100\n    answer = percentage_change\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-292",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2142-1.png",
      "./MultiFinance/images/2142-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-678",
    "output": [
      "sa_2025_q1_to_q3 = 8978 - 9978\n    sa_2025_quota = 10478\n    percentage_difference = (sa_2025_q1_to_q3 / sa_2025_quota) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 101,
      "prompt_tokens": 3067,
      "completion_tokens_details": {
        "text_tokens": 101
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 2787
      },
      "total_tokens": 3168
    },
    "model": "qwen-omni-turbo",
    "question": "请计算沙特阿拉伯在2025年1-3月和4-9月的产量差值，并将该差值占2025年配额量的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    saudi_arabia_q1 = 8978\n    saudi_arabia_q2 = 9978\n    saudi_arabia_quota = 10478\n\n    diff = saudi_arabia_q2 - saudi_arabia_q1\n    ratio = diff / saudi_arabia_quota\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "industry_06_06_03_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2037",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2999-1.png",
      "./MultiFinance/images/2999-2.png",
      "./MultiFinance/images/2999-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2999-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-679",
    "output": [
      "investment_cash_flow_2021_to_2023 = -1266 + (-1767) + (-97)\n    \n    # Do math calculation to get the answer\n    total_investment_cash_flow = round(investment_cash_flow_2021_to_2023, 0)\n    \n    # return answer\n    return total_investment_cash_flow\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 1421,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1158
      },
      "total_tokens": 1512
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2023年投资活动现金净流的总和，并将结果四舍五入至整数。",
    "python_solution": "def solution():\n    cash_flow_invest_2021 = -1266\n    cash_flow_invest_2022 = -1767\n    cash_flow_invest_2023 = -97\n    total_cash_flow_invest = cash_flow_invest_2021 + cash_flow_invest_2022 + cash_flow_invest_2023\n    return round(total_cash_flow_invest)",
    "image_id": "company_02_02_25_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-90",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.401197381662155,
    "images": [
      "./MultiFinance/images/2800-1.png",
      "./MultiFinance/images/2800-2.png",
      "./MultiFinance/images/2800-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2800-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-680",
    "output": [
      "fda_sales_growth_rate = (84 - 400) / 400 * 100\n    \n    # Do math calculation to get the answer\n    growth_rate = fda_sales_growth_rate / 45% * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 78,
      "prompt_tokens": 2592,
      "completion_tokens_details": {
        "text_tokens": 78
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2330
      },
      "total_tokens": 2670
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算福田汽车预测的新能源商用车销量相比中国汽车工业协会预测的商用车销量的增长率；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    foton_sales = 84\n    association_sales = 400\n\n    # Multi-step logic\n    growth_rate = (foton_sales - association_sales) / association_sales * 100\n    return round(growth_rate, 2)",
    "image_id": "company_08_08_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-618",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2708-1.png",
      "./MultiFinance/images/2708-2.png",
      "./MultiFinance/images/2708-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2708-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-681",
    "output": [
      "total_shares = 1 + 90/100 * (1 - 99.996/100) + 100/100 * (1 - 53/100)\n    \n    # Do math calculation to get the answer\n    total_shares_percentage = total_shares * 100\n    \n    # return answer\n    return round(total_shares_percentage, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 99,
      "prompt_tokens": 2204,
      "completion_tokens_details": {
        "text_tokens": 99
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 1951
      },
      "total_tokens": 2303
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算华润医药集团有限公司的总持股比例。请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share1 = 0.53\n    share2 = 0.17\n    share3 = 0.02\n\n    # Multi-step logic\n    total_share = share1 + share2 + share3\n    return round(total_share, 2)",
    "image_id": "company_12_12_04_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1650",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2977-1.png",
      "./MultiFinance/images/2977-2.png",
      "./MultiFinance/images/2977-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2977-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-682",
    "output": [
      "total_percentage = 24 + 7 + 6\n    \n    # Do math calculation to get the answer\n    percentage_sum = round(total_percentage * 100)\n    \n    # return answer\n    return percentage_sum\n```"
    ],
    "usage": {
      "completion_tokens": 50,
      "prompt_tokens": 1796,
      "completion_tokens_details": {
        "text_tokens": 50
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1531
      },
      "total_tokens": 1846
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中来福谐波、日本新宝和福德机器人所占比例之和，并将结果转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    lifu_harmonic = 8\n    japan_new_bao = 7\n    ford_robot = 6\n    total_percentage = (lifu_harmonic + japan_new_bao + ford_robot) / 100 * 100\n    return round(total_percentage, 1)",
    "image_id": "company_11_11_14_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1358",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2826-1.png",
      "./MultiFinance/images/2826-2.png",
      "./MultiFinance/images/2826-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2826-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-683",
    "output": [
      "cash_and_cash_equivalents_2022 = 20965\n    short_term_investments_2022 = 101041\n    current_assets_2022 = 127414\n    accounts_payable_2022 = 1522\n    accrued_liabilities_2022 = 6279\n    operating_lease_liabilities_2022 = 670\n    total_current_liabilities_2022 = 8481\n    cash_and_cash_equivalents_2021 = 11943\n    short_term_investments_2021 = 128878\n    current_assets_2021 = 146127\n    accounts_payable_2021 = 1439\n    accrued_liabilities_2021 = 4527\n    operating_lease_liabilities_2021 = 551\n    total_current_liabilities_2021 = 6559\n    \n    # Calculate quick ratios\n    quick_ratio_2022 = (cash_and_cash_equivalents_2022 + short_term_investments_2022) / total_current_liabilities_2022\n    quick_ratio_2021 = (cash_and_cash_equivalents_2021 + short_term_investments_2021) / total_current_liabilities_2021\n    \n    # Calculate change in quick ratio\n    change_quick_ratio = quick_ratio_2022 - quick_ratio_2021\n    \n    # Return answer\n    return change_quick_ratio\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 394,
      "prompt_tokens": 1534,
      "completion_tokens_details": {
        "text_tokens": 394
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 1256
      },
      "total_tokens": 1928
    },
    "model": "qwen-omni-turbo",
    "question": "Calculate the change in the company's quick ratio from December 31, 2021 to June 30, 2022 in ratio.",
    "python_solution": "def solution():\n    #Define variables name and value\n    cash_and_cash_equivalent_dec = 11943\n    short_term_investments_dec = 128878\n    accounts_receivable_dec = 535\n    current_liabilities_dec = 6559\n    cash_and_cash_equivalent_june = 20965 \n    short_term_investments_june = 101041\n    accounts_receivable_june = 551\n    current_liabilities_june = 8481\n\n    #Do math calculation to get the answer\n    quick_ratio_dec = (cash_and_cash_equivalent_dec + short_term_investments_dec + accounts_receivable_dec) / current_liabilities_dec\n    quick_ratio_june = (cash_and_cash_equivalent_june + short_term_investments_june + accounts_receivable_june) / current_liabilities_june\n    answer = quick_ratio_june - quick_ratio_dec\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-102",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2011-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 14,
        "parentheses": 4
      }
    },
    "difficulty": 4.718498871295094,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-684",
    "output": [
      "ping_an_a_market_value_2023 = 9469\n    new_hua_a_market_value_2025 = 1600\n    guo_shou_h_market_value_2023 = 4117\n    \n    # Do math calculation to get the answer\n    difference = (ping_an_a_market_value_2023 - new_hua_a_market_value_2025) / guo_shou_h_market_value_2023 * 100\n    \n    # return answer\n    return round(difference, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 133,
      "prompt_tokens": 2945,
      "completion_tokens_details": {
        "text_tokens": 133
      },
      "prompt_tokens_details": {
        "text_tokens": 289,
        "image_tokens": 2656
      },
      "total_tokens": 3078
    },
    "model": "qwen-omni-turbo",
    "question": "请计算平安A在2023年的市值与2025年新华A的市值之差，并将结果除以国寿H的2023年EV值，最后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    pingan_a_2023_market_value = 9469\n    xinhua_a_2025_market_value = 1600\n    guoshou_h_2023_ev = 12606\n\n    diff = pingan_a_2023_market_value - xinhua_a_2025_market_value\n    ratio = diff / guoshou_h_2023_ev\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_27_27_14_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-436",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2925-1.png",
      "./MultiFinance/images/2925-2.png",
      "./MultiFinance/images/2925-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2925-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-685",
    "output": [
      "total_purchase_coal_quantity = 1328 + 1528 + 1906 + 2049\n    average_growth_rate = ((total_purchase_coal_quantity - 1328) / 1328) ** (1/4)\n    \n    # return answer\n    return round(average_growth_rate * 100, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 2789,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 2514
      },
      "total_tokens": 2885
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年到2027年内购煤电厂的内购煤数量总和，并求出这四年间内购煤数量的年均增长率；结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    internal_coal_2024 = 1328\n    internal_coal_2025 = 1528\n    internal_coal_2026 = 1906\n    internal_coal_2027 = 2049\n\n    total_internal_coal = internal_coal_2024 + internal_coal_2025 + internal_coal_2026 + internal_coal_2027\n    avg_growth_rate = ((internal_coal_2025 / internal_coal_2024 - 1) + (internal_coal_2026 / internal_coal_2025 - 1) + (internal_coal_2027 / internal_coal_2026 - 1)) / 3\n    return round(avg_growth_rate, 2)",
    "image_id": "company_31_31_17_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1709",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 3,
          "*": 0,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 10
      }
    },
    "difficulty": 5.049856007249537,
    "images": [
      "./MultiFinance/images/2176-1.png",
      "./MultiFinance/images/2176-2.png",
      "./MultiFinance/images/2176-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2176-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-686",
    "output": [
      "easy_poliy = 10\n    northern_special_energy = 10\n    guangdong_hongda = 6\n    \n    # Do math calculation to get the answer\n    total_market_share = easy_poliy + northern_special_energy\n    comparison_result = total_market_share - guangdong_hongda\n    \n    # return answer\n    return round(comparison_result, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 86,
      "prompt_tokens": 1622,
      "completion_tokens_details": {
        "text_tokens": 86
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1356
      },
      "total_tokens": 1708
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算易善力和北方特种能源集团的市场份额总和，并将其与广东宏大的市场份额进行比较，结果保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    yishanli = 11\n    beifang_tezhong = 10\n    guangdong_hongda = 8\n\n    # Multi-step logic\n    total_yishanli_beifang = yishanli + beifang_tezhong\n    difference = total_yishanli_beifang - guangdong_hongda\n    return round(difference, 1)",
    "image_id": "company_32_32_10_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1104",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2877-1.png",
      "./MultiFinance/images/2877-2.png",
      "./MultiFinance/images/2877-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2877-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-687",
    "output": [
      "ajiwosales = 500\n    bdfhjysales = 350\n    cegfdsales = 270\n    ddghsales = 200\n    ebnedsales = 150\n    allothersales = 40\n    \n    total_sales = ajiwosales + bdfhjysales + cegfdsales + ddghsales + ebnedsales + allothersales\n    \n    ajiwoshare = ajiwosales / total_sales * 100\n    bdfhjyshare = bdfhjysales / total_sales * 100\n    cegfdshare = cegfdsales / total_sales * 100\n    ddghshare = ddghsales / total_sales * 100\n    ebnedshare = ebnedsales / total_sales * 100\n    allothershare = allothersales / total_sales * 100\n    \n    concentration_ratio = ajiwoshare + bdfhjyshare + cegfdshare + ddghshare\n    \n    # return answer\n    return round(concentration_ratio, 3)\n```"
    ],
    "usage": {
      "completion_tokens": 255,
      "prompt_tokens": 1516,
      "completion_tokens_details": {
        "text_tokens": 255
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1242
      },
      "total_tokens": 1771
    },
    "model": "qwen-omni-turbo",
    "question": "In the previous quarter, we noted the market share data of various businesses as follows: Based on this information, what is the concentration ratio of the four firms (expressed as a percentage)? Answer to three decimal places.",
    "python_solution": "def solution():\n    total_market_share = 500 + 350 + 270 + 200 + 150 + 40\n    top_4_firms_share = 500 + 350 + 270 + 200\n    concentration_ratio = top_4_firms_share / total_market_share\n    return concentration_ratio * 100",
    "topic": "Market Analysis & Economics",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 8,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 0
      }
    },
    "difficulty": 3.6888794541139367,
    "source_id": "validation-152",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/348-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-688",
    "output": [
      "ROE_2022 = -26523634/550289647\n    ROE_2021 = -39855947/550255214\n    \n    # Calculate the change in return on equity\n    change_in_ROE = ROE_2022 - ROE_2021\n    \n    # Return the change in return on equity as a percentage point\n    return round(change_in_ROE * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 134,
      "prompt_tokens": 2189,
      "completion_tokens_details": {
        "text_tokens": 134
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 1914
      },
      "total_tokens": 2323
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in return on equity from the year 2021 to 2022 in percentage points?",
    "python_solution": "def solution():\n    #Define variables name and value\n    assets_2022 = 550289647\n    liabilities_2022 = 27358863\n    assets_2021 = 550255214\n    liabilities_2021 = 41361161\n    net_income_2022 = 3819515\n    net_income_2021 = -7065419\n\n    #Calculate shareholders' equity for 2021 and 2022\n    equity_2022 = assets_2022 - liabilities_2022\n    equity_2021 = assets_2021 - liabilities_2021\n\n    #Calculate ROE for both years\n    roe_2022 = net_income_2022 / equity_2022\n    roe_2021 = net_income_2021 / equity_2021\n\n    #Do math calculation to get the difference in ROE\n    diff_roe = roe_2022 - roe_2021\n    answer = diff_roe * 100\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-220",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2086-1.png",
      "./MultiFinance/images/2086-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 17,
        "parentheses": 0
      }
    },
    "difficulty": 4.77912349311153,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-689",
    "output": [
      "cagr_2018_2023 = 7.5%\n    cagr_2023_2028 = 8.0%\n    \n    # Calculate CAGR for natural mineral water from 2018-2023\n    cagr_natural_mineral_water_2018_2023 = (cagr_2018_2023 - 1) ** (1/5)\n    \n    # Calculate CAGR for natural mineral water from 2023-2028\n    cagr_natural_mineral_water_2023_2028 = (cagr_2023_2028 - 1) ** (1/5)\n    \n    # Calculate overall CAGR for natural mineral water from 2018-2028\n    cagr_natural_mineral_water_2018_2028 = ((cagr_natural_mineral_water_2018_2023 + 1) * \n                                           (cagr_natural_mineral_water_2023_2028 + 1) - 1)\n    \n    # Return the result rounded to two decimal places\n    return round(cagr_natural_mineral_water_2018_2028, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 309,
      "prompt_tokens": 2815,
      "completion_tokens_details": {
        "text_tokens": 309
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 2550
      },
      "total_tokens": 3124
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年至2028年期间天然矿泉水的复合年增长率（CAGR），并保留两位小数。",
    "python_solution": "def solution():\n    value_2023 = 20\n    value_2028 = 30\n    years = 5\n\n    cagr = ((value_2028 / value_2023) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_23_23_10_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-946",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2618-1.png",
      "./MultiFinance/images/2618-2.png",
      "./MultiFinance/images/2618-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2618-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-690",
    "output": [
      "sp_10y_treasury_index_4th_column = -8.71%\n    sp_10y_treasury_index_5th_column = -3.17%\n    \n    # Do math calculation to get the answer\n    difference = (sp_10y_treasury_index_4th_column - sp_10y_treasury_index_5th_column) * 100\n    \n    # return answer\n    return round(difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 119,
      "prompt_tokens": 3589,
      "completion_tokens_details": {
        "text_tokens": 119
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 3318
      },
      "total_tokens": 3708
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算标普美国10年期国债指数在第四列和第五列的差值，并将结果转换为百分比形式；请保留一位小数。",
    "python_solution": "def solution():\n    value_col4 = -3.17\n    value_col5 = -8.71\n    diff = value_col5 - value_col4\n    percentage = diff * 100\n    return round(percentage, 1)",
    "image_id": "market_00_00_03_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2753",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3036-1.png",
      "./MultiFinance/images/3036-2.png",
      "./MultiFinance/images/3036-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3036-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-691",
    "output": [
      "total_stocks = 1 - 26.93% \n    other_stocks = total_stocks - 6.43% - 5% - 4.02% - 4% - 1.9%\n    \n    # Do math calculation to get the answer\n    result = round(other_stocks * 100, 2)\n    \n    # return answer\n    return result\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 101,
      "prompt_tokens": 3011,
      "completion_tokens_details": {
        "text_tokens": 101
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2748
      },
      "total_tokens": 3112
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中汇宇制药的股东持股比例，计算除丁兆外其他股东的持股比例总和，并将结果保留两位小数。",
    "python_solution": "def solution():\n    huangqianyi_percentage = 6.43\n    yangbo_percentage = 5.00\n    wangxiaopeng_percentage = 4.02\n    caoyongming_percentage = 4.00\n    tanjuan_percentage = 1.90\n    other_shareholders_percentage = huangqianyi_percentage + yangbo_percentage + wangxiaopeng_percentage + caoyongming_percentage + tanjuan_percentage\n    return round(other_shareholders_percentage, 2)",
    "image_id": "company_38_38_04_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1172",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2728-1.png",
      "./MultiFinance/images/2728-2.png",
      "./MultiFinance/images/2728-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2728-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-692",
    "output": [
      "T1_margin = 24.9\n    T2_margin = 34.8\n    T3_margin = 40.7\n    T4_margin = 40.6\n    T5_margin = 39.9\n    \n    # Do math calculation to get the answer\n    average_margin = (T1_margin + T2_margin + T3_margin + T4_margin + T5_margin) / 5\n    \n    # return answer\n    return round(average_margin, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 121,
      "prompt_tokens": 2249,
      "completion_tokens_details": {
        "text_tokens": 121
      },
      "prompt_tokens_details": {
        "text_tokens": 254,
        "image_tokens": 1995
      },
      "total_tokens": 2370
    },
    "model": "qwen-omni-turbo",
    "question": "请计算T+1年度至T+5年度的毛利率平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    gross_margin_t1 = 24.9 / 100\n    gross_margin_t2 = 34.8 / 100\n    gross_margin_t3 = 40.7 / 100\n    gross_margin_t4 = 40.6 / 100\n    gross_margin_t5 = 39.9 / 100\n\n    average_gross_margin = (gross_margin_t1 + gross_margin_t2 + gross_margin_t3 + gross_margin_t4 + gross_margin_t5) / 5\n    return round(average_gross_margin * 100, 2)",
    "image_id": "industry_07_07_29_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2334",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 1,
          "/": 6,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 4.595119850134591,
    "images": [
      "./MultiFinance/images/2221-1.png",
      "./MultiFinance/images/2221-2.png",
      "./MultiFinance/images/2221-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2221-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-693",
    "output": [
      "hong_kong_mid_cap = 3.0\n    hong_kong_small_and_mid_cap = 0.8\n    hong_kong_large_cap = 6.4\n    \n    # Calculate average of mid cap and small and mid cap\n    average = (hong_kong_mid_cap + hong_kong_small_and_mid_cap) / 2\n    \n    # Calculate result by multiplying with large cap\n    result = average * hong_kong_large_cap\n    \n    # Return result rounded to one decimal place\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 132,
      "prompt_tokens": 1977,
      "completion_tokens_details": {
        "text_tokens": 132
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1703
      },
      "total_tokens": 2109
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算恒生中型股与恒生中小型股涨跌幅的平均值，并将该平均值乘以恒生大型股的涨跌幅；结果保留一位小数。",
    "python_solution": "def solution():\n    mid_cap_change = 3.0\n    mid_small_cap_change = 0.8\n    large_cap_change = 6.4\n    average_change = (mid_cap_change + mid_small_cap_change) / 2\n    result = average_change * large_cap_change\n    return round(result, 1)",
    "image_id": "market_06_06_15_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2652",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3031-1.png",
      "./MultiFinance/images/3031-2.png",
      "./MultiFinance/images/3031-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3031-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-694",
    "output": [
      "other_existing_capacity = 418\n    top5_battery_component_existing_capacity = 340\n    nominal_planned_capacity = 1204\n    \n    capacity_difference = other_existing_capacity - top5_battery_component_existing_capacity\n    percentage_difference = (capacity_difference / nominal_planned_capacity) * 100\n    \n    # return answer\n    return round(percentage_difference, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 98,
      "prompt_tokens": 2585,
      "completion_tokens_details": {
        "text_tokens": 98
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 2316
      },
      "total_tokens": 2683
    },
    "model": "qwen-omni-turbo",
    "question": "请计算其他现有产能与一线（TOP5电池+组件）现有产能的差值，并将该差值占名义规划产能的百分比；请保留两位小数。",
    "python_solution": "def solution():\n    planned_capacity = 1204\n    current_top5_capacity = 418\n    other_current_capacity = 340\n    diff = other_current_capacity - current_top5_capacity\n    ratio = diff / planned_capacity\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "company_21_21_12_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-830",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2950-1.png",
      "./MultiFinance/images/2950-2.png",
      "./MultiFinance/images/2950-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2950-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-695",
    "output": [
      "total_debt_2007 = 692\n    total_obligations_2007 = 3165\n    \n    # Do math calculation to get the answer\n    percentage = (total_debt_2007 / total_obligations_2007) * 100\n    \n    # return answer\n    return round(percentage)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 2740,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 1532,
        "image_tokens": 1208
      },
      "total_tokens": 2836
    },
    "model": "qwen-omni-turbo",
    "question": "what percentage of contractual obligations for future payments under existing debt and lease commitments and purchase obligations at december 31 , 2006 due in 2007 is attributable to total debt repayments? Answer to the nearest integer.",
    "answer": "22",
    "context": "see note 8 of the notes to consolidated financial statements in item 8 . financial statements and supplementary data for a further discussion of these transactions . capital resources outlook for 2007 international paper expects to be able to meet pro- jected capital expenditures , service existing debt and meet working capital and dividend requirements during 2007 through current cash balances and cash from operations and divestiture proceeds , supple- mented as required by its various existing credit facilities . international paper has approximately $ 3.0 billion of committed liquidity , which we believe is adequate to cover expected operating cash flow variability during our industry 2019s economic cycles . in march 2006 , international paper replaced its matur- ing $ 750 million revolving bank credit agreement with a 364-day $ 500 million fully committed revolv- ing bank credit agreement that expires in march 2007 and has a facility fee of 0.08% ( 0.08 % ) payable quarterly , and replaced its $ 1.25 billion revolving bank credit agreement with a $ 1.5 billion fully committed revolv- ing bank credit agreement that expires in march 2011 and has a facility fee of 0.10% ( 0.10 % ) payable quarterly . in addition , in october 2006 , the company amended its existing receivables securitization program that pro- vides for up to $ 1.2 billion of commercial paper- based financings with a facility fee of 0.20% ( 0.20 % ) and an expiration date in november 2007 , to provide up to $ 1.0 billion of available commercial paper-based financings with a facility fee of 0.10% ( 0.10 % ) and an expira- tion date of october 2009 . at december 31 , 2006 , there were no borrowings under either of the bank credit agreements or the receivables securitization program . additionally , international paper investments ( luxembourg ) s.ar.l. , a wholly-owned subsidiary of international paper , has a $ 100 million bank credit agreement maturing in december 2007 , with $ 40 million in borrowings outstanding as of december 31 , 2006 . the company will continue to rely upon debt and capital markets for the majority of any necessary long-term funding not provided by operating cash flow or divestiture proceeds . funding decisions will be guided by our capital structure planning and liability management practices . the primary goals of the company 2019s capital structure planning are to maximize financial flexibility and preserve liquidity while reducing interest expense . the majority of international paper 2019s debt is accessed through global public capital markets where we have a wide base of investors . the company was in compliance with all its debt covenants at december 31 , 2006 . principal financial covenants include maintenance of a minimum net worth , defined as the sum of common stock , paid-in capital and retained earnings , less treasury stock , plus any goodwill impairment charges , of $ 9 billion ; and a maximum total debt to capital ratio , defined as total debt divided by total debt plus net worth , of maintaining an investment grade credit rating is an important element of international paper 2019s financing strategy . in the third quarter of 2006 , standard & poor 2019s reaffirmed the company 2019s long-term credit rating of bbb , revised its ratings outlook from neg- ative to stable , and upgraded its short-term credit rating from a-3 to a-2 . at december 31 , 2006 , the company also held long-term credit ratings of baa3 ( stable outlook ) and a short-term credit rating of p-3 from moody 2019s investor services . contractual obligations for future payments under existing debt and lease commitments and purchase obligations at december 31 , 2006 , were as follows : in millions 2007 2008 2009 2010 2011 thereafter .\n\n<image 1>\n\n( a ) total debt includes scheduled principal payments only . ( b ) included in these amounts are $ 76 million of lease obligations related to discontinued operations and businesses held for sale that are due as follows : 2007 - $ 23 million ; 2008 - $ 19 million ; 2009 - $ 15 million ; 2010 - $ 7 million ; 2011 - $ 5 million ; and thereafter - $ 7 million . ( c ) included in these amounts are $ 1.3 billion of purchase obliga- tions related to discontinued operations and businesses held for sale that are due as follows : 2007 - $ 335 million ; 2008 - $ 199 million ; 2009 - $ 157 million ; 2010 - $ 143 million ; 2011 - $ 141 million ; and thereafter - $ 331 million . ( d ) includes $ 2.2 billion relating to fiber supply agreements entered into at the time of the transformation plan forestland sales . transformation plan in july 2005 , the company had announced a plan to focus its business portfolio on two key global plat- form businesses : uncoated papers ( including dis- tribution ) and packaging . the plan 2019s other elements include exploring strategic options for other busi- nesses , including possible sale or spin-off , returning value to shareholders , strengthening the balance sheet , selective reinvestment to strengthen the paper .\n",
    "program": "total_debt = 692\nlease_obligations = 144\npurchase_obligations = 2329\ntotal_obligations = total_debt + lease_obligations + purchase_obligations\nfuture_minimum_payments = 3165\npercent_debt = total_debt / future_minimum_payments\nanswer = percent_debt * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 3,
        "context_numbers": 122,
        "total_numbers": 125
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 0
      }
    },
    "difficulty": 3.332204510175204,
    "source_id": "test-294",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/946-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-696",
    "output": [
      "# Calculate the share of enterprise communication market board\n    share = (14 + 21) / 100\n    \n    # Return the result as a float rounded to two decimal places\n    return round(share, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 65,
      "prompt_tokens": 1382,
      "completion_tokens_details": {
        "text_tokens": 65
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 1126
      },
      "total_tokens": 1447
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算企业通讯市场板的份额占总份额的比例，并将结果保留两位小数。",
    "python_solution": "def solution():\n    enterprise_communication = 71\n    automotive = 21\n    office_industrial = 4\n    consumer_electronics = 0\n    other_business = 4\n\n    total_share = enterprise_communication + automotive + office_industrial + consumer_electronics + other_business\n    enterprise_communication_ratio = enterprise_communication / total_share * 100\n    return round(enterprise_communication_ratio, 2)",
    "image_id": "company_20_20_05_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-190",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2361-1.png",
      "./MultiFinance/images/2361-2.png",
      "./MultiFinance/images/2361-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2361-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-697",
    "output": [
      "operating_cash_flow_2023A = 612\n    operating_cash_flow_2024E = 390\n    operating_cash_flow_2025E = 621\n    operating_cash_flow_2026E = 729\n    \n    # Do math calculation to get the answer\n    average_operating_cash_flow = (operating_cash_flow_2023A + operating_cash_flow_2024E + operating_cash_flow_2025E + operating_cash_flow_2026E) / 4\n    \n    # return answer\n    return round(average_operating_cash_flow, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 159,
      "prompt_tokens": 2611,
      "completion_tokens_details": {
        "text_tokens": 159
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 2356
      },
      "total_tokens": 2770
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2026年经营现金流的平均值，并保留一位小数。",
    "python_solution": "def solution():\n    operating_cash_flow_2023 = 612\n    operating_cash_flow_2024 = 390\n    operating_cash_flow_2025 = 621\n    operating_cash_flow_2026 = 729\n\n    average_operating_cash_flow = (operating_cash_flow_2023 + operating_cash_flow_2024 + operating_cash_flow_2025 + operating_cash_flow_2026) / 4\n    return round(average_operating_cash_flow, 1)",
    "image_id": "company_10_10_14_table_5",
    "source": "CRRQA",
    "source_id": "CRRQA-company-385",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2702-1.png",
      "./MultiFinance/images/2702-2.png",
      "./MultiFinance/images/2702-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2702-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-698",
    "output": [
      "current_units_sold = 1450\n    current_sales_price_per_unit = 90\n    variable_cost_per_unit = 40\n    contribution_margin_per_unit = 50\n    fixed_costs = 20650\n    \n    # Calculate the new sales price per unit after a 10% increase\n    new_sales_price_per_unit = current_sales_price_per_unit * 1.10\n    \n    # Calculate the new contribution margin per unit with the increased sales price\n    new_contribution_margin_per_unit = new_sales_price_per_unit - variable_cost_per_unit\n    \n    # Calculate the new break-even point in units using the formula: Break-even (in units) = Fixed Costs / Contribution Margin per Unit\n    new_break_even_point_in_units = fixed_costs / new_contribution_margin_per_unit\n    \n    # Return the new break-even point rounded to the nearest integer\n    return round(new_break_even_point_in_units)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 208,
      "prompt_tokens": 894,
      "completion_tokens_details": {
        "text_tokens": 208
      },
      "prompt_tokens_details": {
        "text_tokens": 320,
        "image_tokens": 574
      },
      "total_tokens": 1102
    },
    "model": "qwen-omni-turbo",
    "question": "Baghdad Company produces a single product. They have recently received the result of a market survey that indicates that they can increase the retail price of their product by 10% without losing customers or market share. All other costs will remain unchanged. If they enact the 10% price increase, what will be their new break-even point in units? Their most recent CVP analysis is: <image 1>  Answer to the nearest integer.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Managerial Accounting",
    "source_id": "validation_Accounting_26",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/35-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-699",
    "output": [
      "buy_6m = 28\n    increase_buy_6m = 1\n    percentage_increase = (increase_buy_6m / buy_6m) * 100\n    \n    # Do math calculation to get the answer\n    answer = round(percentage_increase, 1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 75,
      "prompt_tokens": 1411,
      "completion_tokens_details": {
        "text_tokens": 75
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 1158
      },
      "total_tokens": 1486
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算买入评级在六个月内增加的百分比，并保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    buy_1week = 0\n    buy_6months = 28\n\n    # Multi-step logic\n    increase = buy_6months - buy_1week\n    percentage_increase = (increase / buy_1week) * 100 if buy_1week != 0 else 0\n    return round(percentage_increase, 1)",
    "image_id": "company_21_21_22_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-810",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2609-1.png",
      "./MultiFinance/images/2609-2.png",
      "./MultiFinance/images/2609-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2609-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-700",
    "output": [
      "sum_earnings = -17.84 + 51.46 - 1.54 - 10.70 - 29.03 + 32.16 + 24.11 - 2.35 - 19.89 - 2.24 + 10.68 + 0.40 - 0.62\n    count_years = 11\n    average_earnings = sum_earnings / count_years\n    \n    # return answer\n    return round(average_earnings, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 133,
      "prompt_tokens": 1579,
      "completion_tokens_details": {
        "text_tokens": 133
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1314
      },
      "total_tokens": 1712
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2014年至2024年原始池内多头组的平均年化收益，并保留两位小数。",
    "python_solution": "def solution():\n    values = [5.76, 51.46, -1.54, -10.70, -29.03, 32.16, 24.11, 36.57, -19.89, -2.24, 10.68]\n    average = sum(values) / len(values)\n    return round(average, 2)",
    "image_id": "strategy_04_04_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3116",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 12
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 5,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 6
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2668-1.png",
      "./MultiFinance/images/2668-2.png",
      "./MultiFinance/images/2668-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2668-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-701",
    "output": [
      "domestic_marginal_profit_2023 = 769.85\n    domestic_marginal_profit_2024 = 620.34\n    \n    marginal_profit_growth_rate = ((domestic_marginal_profit_2024 - domestic_marginal_profit_2023) / domestic_marginal_profit_2023) * 100\n    \n    # Do math calculation to get the answer\n    total_marginal_profit_2023_and_2024 = domestic_marginal_profit_2023 + domestic_marginal_profit_2024\n    marginal_profit_growth_rate = round(marginal_profit_growth_rate, 2)\n    \n    # return answer\n    return total_marginal_profit_2023_and_2024, marginal_profit_growth_rate\n\n# Call function and print result\ntotal_marginal_profit, marginal_profit_growth_rate = solution()\nprint(f\"2023年和2024年国内出货量的毛利总额为：{total_marginal_profit} 百万元\")\nprint(f\"两年的毛利总额增长率为：{marginal_profit_growth_rate}%\")\n```"
    ],
    "usage": {
      "completion_tokens": 262,
      "prompt_tokens": 3772,
      "completion_tokens_details": {
        "text_tokens": 262
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 3503
      },
      "total_tokens": 4034
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年和2024年国内出货量的毛利总额，并求出这两年的毛利总额的增长率；结果保留两位小数。",
    "python_solution": "def solution():\n    gross_profit_domestic_2023 = -769.85\n    gross_profit_domestic_2024 = 620.34\n    total_gross_profit_domestic_2023 = gross_profit_domestic_2023\n    total_gross_profit_domestic_2024 = gross_profit_domestic_2024\n    growth_rate = (total_gross_profit_domestic_2024 - total_gross_profit_domestic_2023) / total_gross_profit_domestic_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_21_21_18_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-794",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2714-1.png",
      "./MultiFinance/images/2714-2.png",
      "./MultiFinance/images/2714-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2714-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-702",
    "output": [
      "wind_power = 15.51\n    pv_power = 13.10\n    total_power = 243.12\n    \n    # Do math calculation to get the answer\n    sum_power = wind_power + pv_power\n    ratio = (sum_power / total_power) * 100\n    \n    # return answer\n    return round(ratio, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 98,
      "prompt_tokens": 2231,
      "completion_tokens_details": {
        "text_tokens": 98
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1966
      },
      "total_tokens": 2329
    },
    "model": "qwen-omni-turbo",
    "question": "请计算华能国际的风电和光伏装机量之和，并求该和占华能集团总计装机量的比例，结果保留两位小数。",
    "python_solution": "def solution():\n    wind_power_huaguo = 15.51\n    solar_power_huaguo = 13.10\n    total_huaguo_wind_solar = wind_power_huaguo + solar_power_huaguo\n    total_capacity_group = 243.12\n    ratio = (total_huaguo_wind_solar / total_capacity_group) * 100\n    return round(ratio, 2)",
    "image_id": "industry_17_17_14_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2321",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3006-1.png",
      "./MultiFinance/images/3006-2.png",
      "./MultiFinance/images/3006-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3006-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-703",
    "output": [
      "year_1 = 2.02\n    year_2 = 2.69\n    year_3 = 3.43\n    \n    # Do math calculation to get the answer\n    growth_rate_year_1 = (year_2 - year_1) / year_1 * 100\n    growth_rate_year_2 = (year_3 - year_2) / year_2 * 100\n    average_growth_rate = ((growth_rate_year_1 + growth_rate_year_2) / 2)\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 150,
      "prompt_tokens": 2639,
      "completion_tokens_details": {
        "text_tokens": 150
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 2382
      },
      "total_tokens": 2789
    },
    "model": "qwen-omni-turbo",
    "question": "请计算怡和嘉业2024年到2026年的净利润复合增长率，并保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = 2.02\n    net_profit_2025 = 2.69\n    net_profit_2026 = 3.43\n    cagr = ((net_profit_2026 / net_profit_2024) ** (1/2) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_34_34_28_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-505",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2441-1.png",
      "./MultiFinance/images/2441-2.png",
      "./MultiFinance/images/2441-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2441-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-704",
    "output": [
      "max_value = -17.84\n    min_value = -19.48\n    \n    # Do math calculation to get the answer\n    difference = max_value - min_value\n    \n    # return answer\n    return round(difference, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 61,
      "prompt_tokens": 2622,
      "completion_tokens_details": {
        "text_tokens": 61
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 2350
      },
      "total_tokens": 2683
    },
    "model": "qwen-omni-turbo",
    "question": "请计算第3.0组在2014年到2024年的最大年化超额收益与最小年化超额收益的差值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    values = [-14.48, 42.94, 7.35, -8.16, 2.83, 3.15, 0.46, 21.85, 16.26, 14.91, 8.05]\n    max_value = max(values)\n    min_value = min(values)\n    difference = max_value - min_value\n    return round(difference, 2)",
    "image_id": "strategy_04_04_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3113",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 12
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3066-1.png",
      "./MultiFinance/images/3066-2.png",
      "./MultiFinance/images/3066-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3066-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-705",
    "output": [
      "month_sales = 30\n    cost_expense = 5\n    gross_profit_rate = (15 - 20) / 100\n    \n    # Do math calculation to get the answer\n    month_gross_profit = month_sales * gross_profit_rate\n    month_cost = cost_expense * 10000\n    month_net_profit = month_gross_profit - month_cost\n    \n    # return answer\n    return round(month_net_profit, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 103,
      "prompt_tokens": 2105,
      "completion_tokens_details": {
        "text_tokens": 103
      },
      "prompt_tokens_details": {
        "text_tokens": 249,
        "image_tokens": 1856
      },
      "total_tokens": 2208
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中提供的数据，计算月均毛利润，并保留两位小数。",
    "python_solution": "def calculate_monthly_gross_profit():\n    monthly_sales = 30\n    cost_per_month = 5\n    gross_margin_rate = 0.175 # (15% + 20%) / 2\n    gross_profit = monthly_sales * gross_margin_rate - cost_per_month\n    return round(gross_profit, 2)",
    "image_id": "industry_16_16_18_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2274",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 2,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2377-1.png",
      "./MultiFinance/images/2377-2.png",
      "./MultiFinance/images/2377-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2377-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-706",
    "output": [
      "investment_cash_flow_2023 = -11257\n    investment_cash_flow_2024 = -945\n    depreciation_and_amortization_2023 = 542\n    \n    # Do math calculation to get the answer\n    difference_in_investment_cash_flow = (investment_cash_flow_2024 - investment_cash_flow_2023) / 2\n    answer = difference_in_investment_cash_flow / depreciation_and_amortization_2023\n    \n    # return answer\n    return round(answer, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 138,
      "prompt_tokens": 2209,
      "completion_tokens_details": {
        "text_tokens": 138
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 1931
      },
      "total_tokens": 2347
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2024年的投资性现金净流量之差，并将结果除以2023年的折旧与摊销；请保留一位小数。",
    "python_solution": "def solution():\n    investment_cash_flow_2023 = -1257\n    investment_cash_flow_2024 = -945\n    depreciation_amortization_2023 = 542\n\n    diff = investment_cash_flow_2024 - investment_cash_flow_2023\n    ratio = diff / depreciation_amortization_2023\n    return round(ratio, 1)",
    "image_id": "company_14_14_22_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-68",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2815-1.png",
      "./MultiFinance/images/2815-2.png",
      "./MultiFinance/images/2815-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2815-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-707",
    "output": [
      "sales_2022 = 11384.4\n    sales_2026 = 16968.8\n    \n    # Calculate compound annual growth rate (CAGR)\n    cagr = ((sales_2026 / sales_2022) ** (1/4)) - 1\n    \n    # Return the result as a percentage with two decimal places\n    return round(cagr * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 115,
      "prompt_tokens": 1922,
      "completion_tokens_details": {
        "text_tokens": 115
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 1650
      },
      "total_tokens": 2037
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中健康消费品2022年和2026年的销售收入，计算2026年相对于2022年的复合年增长率；请保留两位小数。",
    "python_solution": "def solution():\n    revenue_2022_hc = 11384.4\n    revenue_2026_hc = 16968.8\n    years = 4\n    cagr = ((revenue_2026_hc / revenue_2022_hc) ** (1/years) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_12_12_27_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1628",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2487-1.png",
      "./MultiFinance/images/2487-2.png",
      "./MultiFinance/images/2487-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2487-1.png",
      "./MultiFinance/images/2487-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-708",
    "output": [
      "yoy_profit_2018_to_2024_q1q3 = [2.01, 4.61, -3.35, 4.85, -3.63, 3.56, 2.06]\n    \n    # Calculate average YOY profit from 2018 to 2024 (Q1-Q3)\n    total_yoy_profit = sum(yoy_profit_2018_to_2024_q1q3)\n    num_years = len(yoy_profit_2018_to_2024_q1q3)\n    average_yoy_profit = total_yoy_profit / num_years\n    \n    # Return the result rounded to one decimal place\n    return round(average_yoy_profit, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 190,
      "prompt_tokens": 1616,
      "completion_tokens_details": {
        "text_tokens": 190
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 1349
      },
      "total_tokens": 1806
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年到2024年（Q1-Q3）的平均归母净利润；请保留一位小数。",
    "python_solution": "def solution():\n    net_profit_2018 = 2.01\n    net_profit_2019 = 4.61\n    net_profit_2020 = 3.35\n    net_profit_2021 = 4.85\n    net_profit_2022 = 3.63\n    net_profit_2023 = 3.56\n    net_profit_2024_Q1_Q3 = 2.06\n\n    total_net_profit = net_profit_2018 + net_profit_2019 + net_profit_2020 + net_profit_2021 + net_profit_2022 + net_profit_2023 + net_profit_2024_Q1_Q3\n    average_net_profit = round(total_net_profit / 7, 1)\n    return average_net_profit",
    "image_id": "company_13_13_16_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-870",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 8
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2263-1.png",
      "./MultiFinance/images/2263-2.png",
      "./MultiFinance/images/2263-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2263-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-709",
    "output": [
      "year_1_operating_income = 612\n    year_2_operating_income = 390\n    \n    year_1_operating_income_growth_rate = (year_2_operating_income - year_1_operating_income) / year_1_operating_income * 100\n    year_2_operating_income_growth_rate = (729 - 390) / 390 * 100\n    \n    # Do math calculation to get the answer\n    operating_income_growth_rate = [round(year_1_operating_income_growth_rate, 2), round(year_2_operating_income_growth_rate, 2)]\n    \n    # return answer\n    return operating_income_growth_rate\n```"
    ],
    "usage": {
      "completion_tokens": 153,
      "prompt_tokens": 2615,
      "completion_tokens_details": {
        "text_tokens": 153
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2356
      },
      "total_tokens": 2768
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年和2024年的营业收入增长率，并将结果保留两位小数。",
    "python_solution": "def calculate_growth_rate():\n    revenue_2023 = 24.6\n    revenue_2024 = 1.6\n    growth_rate = (revenue_2024 - revenue_2023) / revenue_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_10_10_14_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-373",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2921-1.png",
      "./MultiFinance/images/2921-2.png",
      "./MultiFinance/images/2921-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2921-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-710",
    "output": [
      "term_loan_a_facility_2023 = 377.8\n    term_loan_a_facility_2022 = 387.9\n    finance_lease_obligations_2023 = 4.0\n    finance_lease_obligations_2022 = 5.2\n    long_term_debt_net_of_current_portion_2023 = 539.3\n    long_term_debt_net_of_current_portion_2022 = 560.0\n    \n    # Calculate total long-term debt\n    total_long_term_debt_2023 = (term_loan_a_facility_2023 + finance_lease_obligations_2023) - 22.5\n    total_long_term_debt_2022 = (term_loan_a_facility_2022 + finance_lease_obligations_2022) - 23.1\n    \n    # Calculate average long-term debt over two years\n    average_long_term_debt = (total_long_term_debt_2023 + total_long_term_debt_2022) / 2\n    \n    # Calculate effective interest rate\n    effective_interest_rate = ((average_long_term_debt * 7.2%) - (200.0 * 4.3%)) / average_long_term_debt\n    \n    # Return the answer as a percentage\n    return effective_interest_rate * 100\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 338,
      "prompt_tokens": 1130,
      "completion_tokens_details": {
        "text_tokens": 338
      },
      "prompt_tokens_details": {
        "text_tokens": 438,
        "image_tokens": 692
      },
      "total_tokens": 1468
    },
    "model": "qwen-omni-turbo",
    "question": "What is the effective interest rate on the outstanding long-term debt after considering the impact of the interest rate swap with a notional value of $200 million and a fixed rate of interest payment of 4.3%, in percentage?",
    "python_solution": "def solution():\n    #Define variables name and value\n\n    advances_under_revolving_credit_facility = 180.0 # in millions\n    term_loan_a_facility = 377.8 # in millions\n    finance_lease_obligations = 4.0 # in millions\n\n    interest_expense = 7.2 # in percentage\n\n    interest_rate_swap_notional = 200.0 # in millions\n    interest_rate_swap_fixed_rate = 4.3 # in percentage\n\n    #Do math calculation to get the answer\n    total_debt = advances_under_revolving_credit_facility + term_loan_a_facility + finance_lease_obligations\n    portion_of_debt_covered_by_swap = interest_rate_swap_notional/total_debt\n    effective_interest_rate = portion_of_debt_covered_by_swap * interest_rate_swap_fixed_rate + (1-portion_of_debt_covered_by_swap) * interest_expense\n    return effective_interest_rate\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-236",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2098-1.png"
    ],
    "context": "<image 1>\ninterest rate of 7.2 %. For additional information on the Separation, see Note 1, Summary of Significant Accounting Policies, to the accompanying unaudited condensed consolidated financial statements.\nOn October 20, 2022, we entered into an interest rate swap to manage our exposure to interest rate movements for a portion of our Term Loan A Facility. The interest rate swap has a $ 200.0 million notional value and a maturity date of October 20, 2025. Beginning in October 2022, we receive the one-month SOFR and pay a fixed rate of interest of 4.3 %. See Note 7, Derivative Instruments.",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 2,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 2
      }
    },
    "difficulty": 4.51085950651685,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-711",
    "output": [
      "shanghai_capacity = 1.5 + 3.5 + 6 + 10\n    beijing_capacity = 5 + 6 + 10\n    total_capacity = shanghai_capacity + beijing_capacity\n    \n    beijing_ratio = (beijing_capacity / total_capacity) * 100\n    \n    # return answer\n    return round(beijing_ratio, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 85,
      "prompt_tokens": 2859,
      "completion_tokens_details": {
        "text_tokens": 85
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 2588
      },
      "total_tokens": 2944
    },
    "model": "qwen-omni-turbo",
    "question": "请计算中芯国际在北京的规划产能总和，并将其与上海的规划产能总和进行比较，求出北京规划产能占总规划产能的比例；结果保留两位小数。",
    "python_solution": "def solution():\n    # 北京规划产能\n    beijing_planned_capacity = 6 + 10 + 5 + 5 + 5\n    # 上海规划产能\n    shanghai_planned_capacity = 3.5 + 3.5\n    # 总规划产能\n    total_planned_capacity = beijing_planned_capacity + shanghai_planned_capacity\n    # 北京规划产能占比\n    beijing_ratio = (beijing_planned_capacity / total_planned_capacity) * 100\n    return round(beijing_ratio, 2)",
    "image_id": "company_28_28_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-213",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 4
      }
    },
    "difficulty": 4.477336814478207,
    "images": [
      "./MultiFinance/images/2234-1.png",
      "./MultiFinance/images/2234-2.png",
      "./MultiFinance/images/2234-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2234-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-712",
    "output": [
      "ipo_pre_total_capacity_tent = 44\n    post_acquisition_total_capacity_tent = 149\n    growth_rate_tent = (post_acquisition_total_capacity_tent - ipo_pre_total_capacity_tent) / ipo_pre_total_capacity_tent * 100\n    \n    # Do math calculation to get the answer\n    difference_post_acquisition_total_capacity_tent = post_acquisition_total_capacity_tent - ipo_pre_total_capacity_tent\n    total_capacity_tent = ipo_pre_total_capacity_tent + post_acquisition_total_capacity_tent\n    rate_difference_post_acquisition_total_capacity_tent = difference_post_acquisition_total_capacity_tent / total_capacity_tent * 100\n    \n    # return answer\n    return round(rate_difference_post_acquisition_total_capacity_tent, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 187,
      "prompt_tokens": 1471,
      "completion_tokens_details": {
        "text_tokens": 187
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 1195
      },
      "total_tokens": 1658
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算帐篷在收购及达产后总产能与IPO前总产能的差值，并将该差值除以IPO前总产能，得到的增长率保留两位小数。",
    "python_solution": "def tent_growth_rate():\n    pre_IPO_capacity = 44\n    post_acquisition_capacity = 149\n    difference = post_acquisition_capacity - pre_IPO_capacity\n    growth_rate = (difference / pre_IPO_capacity) * 100\n    return round(growth_rate, 2)\n",
    "image_id": "company_37_37_13_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-552",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2866-1.png",
      "./MultiFinance/images/2866-2.png",
      "./MultiFinance/images/2866-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2866-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-713",
    "output": [
      "year_2022 = -18.03\n    year_2023 = -14.97\n    base_value = -0.03\n    \n    # Calculate the change in the fifth column between 2022 and 2023\n    change_in_column_5 = year_2023 - year_2022\n    \n    # Calculate the percentage change relative to the benchmark (base) for 2022\n    percentage_change_relative_to_base_2022 = (change_in_column_5 / base_value) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(percentage_change_relative_to_base_2022, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 174,
      "prompt_tokens": 1662,
      "completion_tokens_details": {
        "text_tokens": 174
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 1387
      },
      "total_tokens": 1836
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2022年和2023年在第五列的指标变化量，然后求该变化量占2022年基准值的百分比；请保留两位小数。",
    "python_solution": "def solution():\n    value_2022_col5 = -26.61\n    value_2023_col5 = -12.68\n    benchmark_2022_col5 = -24.58\n\n    change = value_2023_col5 - value_2022_col5\n    percentage_change = (change / benchmark_2022_col5) * 100\n    return round(percentage_change, 2)",
    "image_id": "market_09_09_42_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2851",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.8712010109078907,
    "images": [
      "./MultiFinance/images/2423-1.png",
      "./MultiFinance/images/2423-2.png",
      "./MultiFinance/images/2423-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2423-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-714",
    "output": [
      "year_2024_e = 187.43\n    year_2025_e = -32.36\n    year_2026_e = 19.93\n    \n    # Do math calculation to get the answer\n    growth_rate_2025 = (year_2025_e - year_2024_e) / year_2024_e * 100\n    growth_rate_2026 = (year_2026_e - year_2025_e) / year_2025_e * 100\n    \n    # return answer\n    return round(growth_rate_2025, 2), round(growth_rate_2026, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 186,
      "prompt_tokens": 2115,
      "completion_tokens_details": {
        "text_tokens": 186
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 1860
      },
      "total_tokens": 2301
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2025年和2026年的每股净资产增长率，并将结果保留两位小数。",
    "python_solution": "def calculate_growth_rate():\n    book_value_2025 = 36.04\n    book_value_2026 = 41.88\n    growth_rate_2025_2026 = (book_value_2026 - book_value_2025) / book_value_2025 * 100\n    return round(growth_rate_2025_2026, 2)",
    "image_id": "company_27_27_15_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-418",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2924-1.png",
      "./MultiFinance/images/2924-2.png",
      "./MultiFinance/images/2924-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2924-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-715",
    "output": [
      "year_2021 = 105.9\n    year_2022 = 77.9\n    year_2023 = 96.2\n    year_2024 = 91.5\n    year_2025 = 84.7\n    \n    # Calculate average of 2021-2025 years\n    average = (year_2021 + year_2022 + year_2023 + year_2024 + year_2025) / 5\n    \n    # Calculate percentage difference between average and 2021\n    percentage_difference = ((average - year_2021) / year_2021) * 100\n    \n    # Round the result to one decimal place\n    rounded_percentage_difference = round(percentage_difference, 1)\n    \n    # Return the final result\n    return rounded_percentage_difference\n\n# Call the function and print the result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 228,
      "prompt_tokens": 1607,
      "completion_tokens_details": {
        "text_tokens": 228
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 1331
      },
      "total_tokens": 1835
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年至2025年每年数据的平均值，并将该平均值与2021年的数据进行比较，求出百分比差异；结果请保留一位小数。",
    "python_solution": "def solution():\n    values = [105.9, 77.9, 96.2, 91.5, 84.7]\n    average = sum(values) / len(values)\n    diff_percentage = ((average - values[0]) / values[0]) * 100\n    return round(diff_percentage, 1)",
    "image_id": "macro_02_02_05_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2496",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 10
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2654-1.png",
      "./MultiFinance/images/2654-2.png",
      "./MultiFinance/images/2654-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2654-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-716",
    "output": [
      "dividend_2022 = 13.13\n    dividend_2023 = 13.50\n    dividend_rate_2022 = 3.7%\n    dividend_rate_2023 = 3.6%\n    \n    # Calculate the growth rate in percentage\n    growth_rate_percentage = ((dividend_rate_2023 - dividend_rate_2022) / dividend_rate_2022) * 100\n    \n    # Return the calculated growth rate as a float with two decimal places\n    return round(growth_rate_percentage, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 146,
      "prompt_tokens": 2376,
      "completion_tokens_details": {
        "text_tokens": 146
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 2096
      },
      "total_tokens": 2522
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中2022年和2023年的每股股利以及对应的股息率，计算2023年相对于2022年的股息率增长百分比；请保留两位小数。",
    "python_solution": "def solution():\n    dividend_2022 = 0.35\n    dividend_yield_2022 = 3.7 / 100\n    dividend_2023 = 0.36\n    dividend_yield_2023 = 3.6 / 100\n\n    growth_rate = (dividend_yield_2023 - dividend_yield_2022) / dividend_yield_2022 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_31_31_22_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1686",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2574-1.png",
      "./MultiFinance/images/2574-2.png",
      "./MultiFinance/images/2574-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2574-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-717",
    "output": [
      "q1 = 3703.09\n    q2 = 3690.0\n    q3 = 713.65\n    q4 = 619.07\n    \n    # Do math calculation to get the answer\n    average = (q1 + q2 + q3 + q4) / 4\n    \n    # return answer\n    return round(average, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 95,
      "prompt_tokens": 1486,
      "completion_tokens_details": {
        "text_tokens": 95
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1223
      },
      "total_tokens": 1581
    },
    "model": "qwen-omni-turbo",
    "question": "请计算建信中关村产业园 REIT 在2024年第一季度至第四季度的可分配金额平均值，并将结果保留一位小数。",
    "python_solution": "def solution():\n    distributable_amount_q1 = 1064.16\n    distributable_amount_q2 = 3690\n    distributable_amount_q3 = 1122.85\n    distributable_amount_q4 = 713.65\n    average_distributable_amount = round((distributable_amount_q1 + distributable_amount_q2 + distributable_amount_q3 + distributable_amount_q4) / 4, 1)\n    return average_distributable_amount",
    "image_id": "industry_18_18_06_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2469",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2771-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2771-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-718",
    "output": [
      "money_market_funds = 68138\n    common_stock_sold = 86224\n    accumulated_deficit = -193720\n    \n    # Calculate the total financial assets ratio to the accumulated deficit\n    total_financial_assets_ratio = (money_market_funds + common_stock_sold) / abs(accumulated_deficit)\n    \n    # Return the answer as a percentage rounded to two decimal places\n    return round(total_financial_assets_ratio * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 122,
      "prompt_tokens": 2514,
      "completion_tokens_details": {
        "text_tokens": 122
      },
      "prompt_tokens_details": {
        "text_tokens": 716,
        "image_tokens": 1798
      },
      "total_tokens": 2636
    },
    "model": "qwen-omni-turbo",
    "question": "What is the company's total financial assets ratio to the accumulated deficit from the sale of common stock considering only the money market funds and the common stock sold in both underwritten follow-on offerings? (In percentage up to two decimal places)",
    "python_solution": "def solution():\n    #Define variables name and value\n    initial_money_market_fund = 17802 \n    available_for_sale_market_securities = 68138 \n    follow_on_offering_1 = 86224\n    follow_on_offering_2 = 92026 \n    accumulated_deficit = 193720\n\n    #Calculate total financial assets from money market funds\n    total_financial_assets = initial_money_market_fund + available_for_sale_market_securities + follow_on_offering_1 + follow_on_offering_2\n\n    #Calculate the ratio\n    ratio = (total_financial_assets / accumulated_deficit) * 100\n\n    # Return the answer rounded to two decimal places\n    answer = round(ratio, 2)\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-228",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2092-1.png",
      "./MultiFinance/images/2092-2.png"
    ],
    "context": "<image 1>\n<image 2>\nOn April 5, 2017, the Company closed an underwritten follow-on offering for 5,117,500 shares of its common stock, including the full exercise of the underwriters’ option to purchase 667,500 additional shares of its common stock. The Company received net proceeds of approximately $86,224, after deducting $5,891 relating to underwriting discounts and commissions and offering expenses. This offering was made pursuant to the Company’s Registration Statement on Form S-3 (File No. 333-216657), filed with the SEC on March 13, 2017 and declared effective on March 24, 2017, and a related prospectus dated March 24, 2017 and prospectus supplement dated March 30, 2017, which was filed with the SEC on March 31, 2017.\nOn July 23, 2018, the Company closed an underwritten follow-on offering for 5,175,000 shares of its common stock, including the full exercise of the underwriters’ option to purchase 675,000 additional shares of its common stock. The Company received net proceeds of approximately $92,026, after deducting $6,300 relating to underwriting discounts and commissions and estimated offering expenses. This offering was made pursuant to the Company’s Registration Statement on Form S-3 (File No. 333-216657) filed with the SEC on March 13, 2017 and declared effective on March 24, 2017, and a related prospectus supplement dated July 18, 2018, which was filed with the SEC on July 20, 2018 (see Note 16, Subsequent Event).",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 13,
        "parentheses": 4
      }
    },
    "difficulty": 4.31748811353631,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-719",
    "output": [
      "total_stock_holding = 100 + 100\n    fangdonghui_stock_holding = 4.95\n    \n    # Do math calculation to get the answer\n    sum_stock_holding = total_stock_holding - fangdonghui_stock_holding\n    \n    # return answer\n    return round(sum_stock_holding, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 83,
      "prompt_tokens": 2273,
      "completion_tokens_details": {
        "text_tokens": 83
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 2005
      },
      "total_tokens": 2356
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算联德控股和联德国际的持股比例之和，并将其与方东晖的持股比例进行比较；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share_a = 33.53\n    share_b = 27.43\n    share_c = 4.95\n\n    # Multi-step logic\n    sum_ab = share_a + share_b\n    difference = sum_ab - share_c\n    return round(difference, 1)",
    "image_id": "company_17_17_04_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-75",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2861-1.png",
      "./MultiFinance/images/2861-2.png",
      "./MultiFinance/images/2861-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2861-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-720",
    "output": [
      "ps_values = [16.5, 10.8, 7.9, 6.5]\n    \n    # Calculate average PS values\n    average_ps = sum(ps_values) / len(ps_values)\n    \n    # Return result with one decimal place\n    return round(average_ps, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 83,
      "prompt_tokens": 3018,
      "completion_tokens_details": {
        "text_tokens": 83
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 2753
      },
      "total_tokens": 3101
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算百济神州2023年到2026年的PS值的平均值，并将结果保留一位小数。",
    "python_solution": "def solution():\n    ps_2023 = 16.5\n    ps_2024 = 10.8\n    ps_2025 = 7.9\n    ps_2026 = 6.5\n\n    average_ps = (ps_2023 + ps_2024 + ps_2025 + ps_2026) / 4\n    return round(average_ps, 1)",
    "image_id": "company_00_00_38_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-258",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2700-1.png",
      "./MultiFinance/images/2700-2.png",
      "./MultiFinance/images/2700-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2700-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-721",
    "output": [
      "研发投入强度1 = 3.90%\n   研发投入强度2 = 3.91%\n   研发投入强度3 = 3.92%\n    \n    # Do math calculation to get the answer\n    total_investment_strength =研发投入强度1 + 投入研发强度2 + 投入研发强度3\n    answer = round(total_investment_strength, 1)\n    \n    # return answer\n    return answer\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 96,
      "prompt_tokens": 3461,
      "completion_tokens_details": {
        "text_tokens": 96
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 3195
      },
      "total_tokens": 3557
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年到2026年期间，每年的研发投入强度的总和，并将结果保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    r_d_intensity_2024 = 3.90\n    r_d_intensity_2025 = 3.91\n    r_d_intensity_2026 = 3.92\n    \n    # Multi-step logic\n    total_r_d_intensity = r_d_intensity_2024 + r_d_intensity_2025 + r_d_intensity_2026\n    return round(total_r_d_intensity, 1)",
    "image_id": "company_30_30_05_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-978",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2956-1.png",
      "./MultiFinance/images/2956-2.png",
      "./MultiFinance/images/2956-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2956-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-722",
    "output": [
      "year_2018 = 41\n    year_2022 = 55\n    \n    # Do math calculation to get the answer\n    growth_rate = ((year_2022 - year_2018) / year_2018) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 88,
      "prompt_tokens": 3040,
      "completion_tokens_details": {
        "text_tokens": 88
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 2776
      },
      "total_tokens": 3128
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年至2022年期间中国大宗供应链市场规模的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2018 = 41\n    value_2019 = 41\n    value_2020 = 40\n    value_2021 = 51\n    value_2022 = 55\n\n    # Multi-step logic\n    total_growth = (value_2022 - value_2018) / value_2018\n    years = 4\n    annual_growth_rate = (total_growth / years) * 100\n    return round(annual_growth_rate, 2)",
    "image_id": "company_14_14_12_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-69",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 6
      }
    },
    "difficulty": 4.2484952420493585,
    "images": [
      "./MultiFinance/images/2292-1.png",
      "./MultiFinance/images/2292-2.png",
      "./MultiFinance/images/2292-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2292-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-723",
    "output": [
      "share_other = 25\n    share_weier = 19\n    \n    # Do math calculation to get the answer\n    difference = abs(share_other - share_weier)\n    \n    # return answer\n    return round(difference, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 59,
      "prompt_tokens": 2153,
      "completion_tokens_details": {
        "text_tokens": 59
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1895
      },
      "total_tokens": 2212
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中韦尔股份和其他公司的市场份额占比之差，并将结果表示为百分比形式，保留一位小数。",
    "python_solution": "def solution():\n    weier_share = 11\n    other_share = 25\n    diff = weier_share - other_share\n    percentage_diff = diff / (weier_share + other_share) * 100\n    return round(percentage_diff, 1)",
    "image_id": "industry_19_19_18_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2425",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2844-1.png",
      "./MultiFinance/images/2844-2.png",
      "./MultiFinance/images/2844-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2844-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-724",
    "output": [
      "stock1_return = 7\n    stock2_return = 10\n    stock1_stddev = 12\n    stock2_stddev = 25\n    correlation = 0.20\n    weight_stock1 = 0.30\n    weight_stock2 = 0.70\n    \n    # Do math calculation to get the answer\n    portfolio_stddev = ((weight_stock1 ** 2 * stock1_stddev ** 2) + \n                        (weight_stock2 ** 2 * stock2_stddev ** 2) +\n                        (2 * weight_stock1 * weight_stock2 * stock1_stddev * stock2_stddev * correlation)) ** 0.5\n    \n    # return answer\n    return portfolio_stddev\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 174,
      "prompt_tokens": 1507,
      "completion_tokens_details": {
        "text_tokens": 174
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1242
      },
      "total_tokens": 1681
    },
    "model": "qwen-omni-turbo",
    "question": "A portfolio consisting of two shares has the following properties: What is the standard deviation of the returns from this portfolio (expressed as a percentage)? Answer to two decimal places.",
    "python_solution": "def solution():\n    # weights \n    w1 = 0.3\n    w2 = 0.7\n\n    # standard deviations \n    sigma1 = 12\n    sigma2 = 25\n\n    # correlation coefficient \n    rho = 0.2\n\n    # covariance \n    Cov = rho * sigma1 * sigma2\n    \n    # portfolio variance \n    variance = (w1**2 * sigma1**2) + (w2**2 * sigma2**2) + (2*w1*w2*Cov)\n    \n    # portfolio standard deviation \n    std_dev = variance**0.5\n\n    return round(std_dev, 2)",
    "topic": "Quantitative Analysis & Valuation",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 7,
          "/": 0,
          "%": 0,
          "**": 5
        },
        "total_operators": 14
      },
      "code_statistics": {
        "lines": 15,
        "parentheses": 8
      }
    },
    "difficulty": 5.583496308781699,
    "source_id": "validation-70",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/316-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-725",
    "output": [
      "net_profit_2021 = 245\n    net_profit_2022 = 454\n    main_business_income_2021 = 2356\n    \n    # Calculate the difference in net profit between 2021 and 2022\n    diff_net_profit = net_profit_2022 - net_profit_2021\n    \n    # Calculate the percentage change in net profit relative to 2021's main business income\n    percentage_change = (diff_net_profit / main_business_income_2021) * 100\n    \n    # Round the result to one decimal place\n    rounded_percentage_change = round(percentage_change, 1)\n    \n    # Return the calculated percentage change\n    return rounded_percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 183,
      "prompt_tokens": 2310,
      "completion_tokens_details": {
        "text_tokens": 183
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 2034
      },
      "total_tokens": 2493
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年和2022年的净利润的差值，并将该差值占2021年主营业务收入的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    net_profit_2021 = 214\n    net_profit_2022 = 390\n    revenue_2021 = 2356\n\n    diff_net_profit = net_profit_2022 - net_profit_2021\n    percentage = (diff_net_profit / revenue_2021) * 100\n    return round(percentage, 1)",
    "image_id": "company_28_28_18_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-218",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2912-1.png",
      "./MultiFinance/images/2912-2.png",
      "./MultiFinance/images/2912-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2912-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-726",
    "output": [
      "salaries_and_fees_2018 = 4\n    salaries_and_fees_2019 = 4\n    incentive_schemes_2018 = 3\n    incentive_schemes_2019 = 2\n    \n    # Calculate the difference between average salaries and fees and average incentive schemes from 2018 to 2019\n    difference = (salaries_and_fees_2018 + salaries_and_fees_2019) - (incentive_schemes_2018 + incentive_schemes_2019)\n    \n    # Return the answer\n    return difference\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 153,
      "prompt_tokens": 1680,
      "completion_tokens_details": {
        "text_tokens": 153
      },
      "prompt_tokens_details": {
        "text_tokens": 403,
        "image_tokens": 1277
      },
      "total_tokens": 1833
    },
    "model": "qwen-omni-turbo",
    "question": "What is the difference between average salaries and fees and average incentive schemes from 2018 to 2019? (in million)",
    "python_solution": "def solution():\n    # Define variables name and value\n    salaries_and_fees_2019 = 4\n    salaries_and_fees_2018 = 4\n    incentive_schemes_2019 = 2\n    incentive_schemes_2018 = 3\n\n    # Do math calculation to get the answer\n    average_salaries_and_fees = (salaries_and_fees_2019 + salaries_and_fees_2018) / 2\n    average_incentive_schemes = (incentive_schemes_2019 + incentive_schemes_2018) / 2\n    answer = average_salaries_and_fees - average_incentive_schemes\n\n    return answer",
    "source": "TAT-QA",
    "source_id": "simpshort-testmini-75",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n 22. Directors and key management compensation This note details the total amounts earned by the Company’s Directors and members of the Executive Committee. Directors Aggregate emoluments of the Directors of the Company were as follows: Notes: 1 Excludes gains from long-term incentive plans. 2 Includes the value of the cash allowance taken by some individuals in lieu of pension contributions No Directors serving during the year exercised share options in the year ended 31 March 2019 (2018: one Director, gain €0.1 million; gain 2017: one Director, €0.7 million",
    "images": [
      "./MultiFinance/images/1522-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 4.0943445622221,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-727",
    "output": [
      "x1 = 71.54\n    x2 = 35.46\n    \n    # Do math calculation to get the answer\n    difference = abs(x1 - x2)\n    percentage = (difference / max(x1, x2)) * 100\n    \n    # return answer\n    return round(percentage, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 2079,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1818
      },
      "total_tokens": 2170
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中的数据，计算两个占比的差值，并将该差值占较大数值的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    ratio1 = 35.46 / 100\n    ratio2 = 71.54 / 100\n    diff = ratio2 - ratio1\n    ratio = diff / ratio2\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_05_05_30_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1534",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2677-1.png",
      "./MultiFinance/images/2677-2.png",
      "./MultiFinance/images/2677-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2677-2.png",
      "./MultiFinance/images/2677-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-728",
    "output": [
      "律维施泰因份额 = 1.7%\n    德百世份额 = 40.3%\n    飞利浦份额 = 59%\n    \n    总份额 = 律维施泰因份额 + 德百世份额\n    飞利浦占比 = (飞利浦份额 / 总份额) * 100\n    \n    # return answer\n    return round(飞利浦占比, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 101,
      "prompt_tokens": 1412,
      "completion_tokens_details": {
        "text_tokens": 101
      },
      "prompt_tokens_details": {
        "text_tokens": 283,
        "image_tokens": 1129
      },
      "total_tokens": 1513
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中律维施泰因（万曼）和德百世的市场份额总和，并将其与飞利浦的市场份额进行比较，求出飞利浦市场份额占两者总和的百分比；结果保留两位小数。",
    "python_solution": "def solution():\n    livinstone_share = 4.9\n    debest_share = 2.8\n    philips_share = 40.3\n\n    total_share = livinstone_share + debest_share\n    percentage = (philips_share / total_share) * 100\n    return round(percentage, 2)",
    "image_id": "company_34_34_14_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-487",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2929-1.png",
      "./MultiFinance/images/2929-2.png",
      "./MultiFinance/images/2929-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2929-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-729",
    "output": [
      "first_yearly_return = -8.07\n    benchmark_yearly_return = -0.23\n    max_drawdown = 70.01\n    \n    # Calculate the difference between the first item's yearly return and the benchmark's yearly return\n    difference = first_yearly_return - benchmark_yearly_return\n    \n    # Divide the difference by the maximum drawdown\n    result = difference / max_drawdown\n    \n    # Return the result rounded to two decimal places\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 121,
      "prompt_tokens": 1438,
      "completion_tokens_details": {
        "text_tokens": 121
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1173
      },
      "total_tokens": 1559
    },
    "model": "qwen-omni-turbo",
    "question": "请计算第一项的年化收益与基准年化收益之间的差值，并将该差值除以最大回撤，得到的结果保留两位小数。",
    "python_solution": "def solution():\n    annual_return_first = -8.07\n    benchmark_annual_return = -0.23\n    max_drawdown_first = 70.01\n\n    diff = annual_return_first - benchmark_annual_return\n    result = diff / max_drawdown_first\n    return round(result, 2)",
    "image_id": "market_09_09_40_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2866",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2851-1.png",
      "./MultiFinance/images/2851-2.png",
      "./MultiFinance/images/2851-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2851-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-730",
    "output": [
      "growth_rate_2026 = (1 - 0.4) * 100\n    \n    # Do math calculation to get the answer\n    answer = round(growth_rate_2026, 1)\n    \n    # return answer\n    return answer\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 75,
      "prompt_tokens": 2208,
      "completion_tokens_details": {
        "text_tokens": 75
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1945
      },
      "total_tokens": 2283
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2026年公司归母净利润相对于2024年的增长百分比；请保留一位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = 100  # 假设2024年归母净利润为100\n    target_net_profit_2026 = 400  # 根据图中数据，2026年目标归母净利润为2024年的400%\n    growth_percentage = (target_net_profit_2026 / net_profit_2024 - 1) * 100\n    return round(growth_percentage, 1)",
    "image_id": "company_32_32_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1117",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 1,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2960-1.png",
      "./MultiFinance/images/2960-2.png",
      "./MultiFinance/images/2960-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2960-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-731",
    "output": [
      "net_profit_2021_to_2026 = sum([264, 449, 701, 937, 1216, 1528])\n    \n    # Do math calculation to get the answer\n    total_net_profit = round(net_profit_2021_to_2026)\n    \n    # return answer\n    return total_net_profit\n```"
    ],
    "usage": {
      "completion_tokens": 93,
      "prompt_tokens": 1469,
      "completion_tokens_details": {
        "text_tokens": 93
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1208
      },
      "total_tokens": 1562
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2026年的净利润总和，并将结果四舍五入至最接近的整数。",
    "python_solution": "def solution():\n    net_profit_2021 = 264\n    net_profit_2022 = 449\n    net_profit_2023 = 701\n    net_profit_2024E = 937\n    net_profit_2025E = 1216\n    net_profit_2026E = 1528\n    total_net_profit = net_profit_2021 + net_profit_2022 + net_profit_2023 + net_profit_2024E + net_profit_2025E + net_profit_2026E\n    return round(total_net_profit)",
    "image_id": "company_08_08_20_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-631",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2445-1.png",
      "./MultiFinance/images/2445-2.png",
      "./MultiFinance/images/2445-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2445-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-732",
    "output": [
      "uae_2025_1_to_3 = 2912\n    uae_2025_4_to_9 = 3375 + 300\n    quota_2025 = 3519\n    \n    # Calculate the difference in production between January-March and April-September\n    diff_production = uae_2025_4_to_9 - uae_2025_1_to_3\n    \n    # Convert the difference into a percentage of the 2025 quota\n    percentage_diff = (diff_production / quota_2025) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(percentage_diff, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 178,
      "prompt_tokens": 3068,
      "completion_tokens_details": {
        "text_tokens": 178
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 2787
      },
      "total_tokens": 3246
    },
    "model": "qwen-omni-turbo",
    "question": "请计算阿联酋在2025年1-3月和4-9月的产量差值，并将该差值占2025年配额量的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    uae_q1 = 2912\n    uae_q2 = 3375\n    uae_quota = 3519\n\n    diff = uae_q2 - uae_q1\n    ratio = diff / uae_quota\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "industry_06_06_03_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2038",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3000-1.png",
      "./MultiFinance/images/3000-2.png",
      "./MultiFinance/images/3000-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3000-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-733",
    "output": [
      "year_1_revenue = 8938\n    year_2_revenue = 13341\n    year_1_growth_rate = (year_2_revenue - year_1_revenue) / year_1_revenue * 100\n    \n    year_2_revenue = 13341\n    year_3_revenue = 18530\n    year_2_growth_rate = (year_3_revenue - year_2_revenue) / year_2_revenue * 100\n    \n    difference = year_2_growth_rate - year_1_growth_rate\n    \n    # return answer\n    return round(difference, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 150,
      "prompt_tokens": 569,
      "completion_tokens_details": {
        "text_tokens": 150
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 290
      },
      "total_tokens": 719
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2024年的营业收入增长率，并将其与2022年到2023年的增长率进行比较，最后求出这两个增长率的差值；请保留两位小数。",
    "python_solution": "def solution():\n    revenue_2022 = 8336\n    revenue_2023 = 8938\n    revenue_2024E = 13341\n\n    growth_rate_2022_2023 = (revenue_2023 - revenue_2022) / revenue_2022 * 100\n    growth_rate_2023_2024E = (revenue_2024E - revenue_2023) / revenue_2023 * 100\n\n    difference = growth_rate_2023_2024E - growth_rate_2022_2023\n    return round(difference, 2)",
    "image_id": "company_20_20_00_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-184",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 4.248495242049359,
    "images": [
      "./MultiFinance/images/2284-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2284-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-734",
    "output": [
      "spot_rate_beginning = 1.3983\n    spot_rate_three_months_later = 1.4210\n    spot_rate_at_maturity = 1.4289\n    usd_per_eur_beginning = 1/spot_rate_beginning\n    usd_per_eur_three_months_later = 1/spot_rate_three_months_later\n    usd_per_eur_at_maturity = 1/spot_rate_at_maturity\n    number_of_shares = 200000\n    price_per_share = 90\n    total_investment = number_of_shares * price_per_share\n    mark_to_market_value_usd = total_investment * usd_per_eur_three_months_later\n    \n    # return answer\n    return round(mark_to_market_value_usd, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 193,
      "prompt_tokens": 1587,
      "completion_tokens_details": {
        "text_tokens": 193
      },
      "prompt_tokens_details": {
        "text_tokens": 345,
        "image_tokens": 1242
      },
      "total_tokens": 1780
    },
    "model": "qwen-omni-turbo",
    "question": "Bradley took over a Spanish packaging firm. The Spanish venture included Bradley purchasing 200,000 shares at a rate of EUR90 each from a packaging company. He elected to entirely hedge the position with a six month USD/EUR forward contract. Further details of the euro hedge at the beginning and three months later are displayed in Exhibit 1. Using the information in Exhibit 1, if the Spanish shares were sold after three months, what is the mark-to-market value (in US dollars) that the manager would report? Answer to three decimal places.",
    "python_solution": "def solution():\n    num_shares = 200000\n    price_per_share_eur = 90\n    total_value_eur = num_shares * price_per_share_eur\n    \n    init_forward_rate = 1.3935 - 19/10000\n    settling_forward_rate = 1.4210 - 21/10000\n    \n    diff_rate = init_forward_rate - settling_forward_rate\n    \n    notional_value_usd = diff_rate * total_value_eur\n    \n    libor = 1.266 / 100\n    investment_period = 90\n    \n    mark_to_market_usd = notional_value_usd / (1 + libor * investment_period / 360)\n    \n    return mark_to_market_usd",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 3,
          "/": 5,
          "%": 0,
          "**": 0
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 2
      }
    },
    "difficulty": 4.969813299576001,
    "source_id": "validation-80",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/321-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-735",
    "output": [
      "bond_price_1 = 105\n    par_value_1 = 25000000\n    bond_price_2 = 100\n    par_value_2 = 25000000\n    bond_price_3 = 95\n    par_value_3 = 20000000\n    bond_price_4 = 87\n    par_value_4 = 30000000\n    \n    # Do math calculation to get the answer\n    price_value_of_a_basis_point = (bond_price_1 - bond_price_2) / (par_value_1 * 100)\n    \n    # return answer\n    return price_value_of_a_basis_point\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 176,
      "prompt_tokens": 1507,
      "completion_tokens_details": {
        "text_tokens": 176
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1242
      },
      "total_tokens": 1683
    },
    "model": "qwen-omni-turbo",
    "question": "According to the table providing necessary details about four bonds in an investment collection, what is the price value of a basis point for this collection? Answer to a single decimal place.",
    "python_solution": "def solution():\n    bond_weights = [0.25, 0.25, 0.2, 0.3]\n    bond_prices = [105, 100, 95, 87]\n    bond_durations = [7.9, 8.5, 6.3, 10.2]\n\n    portfolio_price = sum([bond_weights[i] * bond_prices[i] for i in range(len(bond_weights))])\n   \n    portfolio_duration = sum([bond_weights[i] * bond_prices[i] * bond_durations[i] for i in range(len(bond_weights))]) / portfolio_price\n\n    price_value_basis_point = portfolio_duration * 0.0001 * portfolio_price * 1000000\n\n    return price_value_basis_point",
    "topic": "Quantitative Analysis & Valuation",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 0,
          "*": 6,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 12
      }
    },
    "difficulty": 4.51085950651685,
    "source_id": "validation-86",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/323-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-736",
    "output": [
      "flow_2022 = 10238\n    flow_2023 = 10208\n    \n    # Do math calculation to get the answer\n    growth_rate = ((flow_2023 - flow_2022) / flow_2022) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 2316,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 2056
      },
      "total_tokens": 2420
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2022年的流动资产增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2022 = 10238\n    current_assets_2023 = 10208\n\n    # Multi-step logic\n    growth_rate = (current_assets_2023 - current_assets_2022) / current_assets_2022 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_21_21_21_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-797",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2715-1.png",
      "./MultiFinance/images/2715-2.png",
      "./MultiFinance/images/2715-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2715-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-737",
    "output": [
      "flow_asset_2023 = 87355\n    flow_asset_2024 = 99566\n    \n    # Do math calculation to get the answer\n    difference = flow_asset_2024 - flow_asset_2023\n    percentage = (difference / flow_asset_2023) * 100\n    \n    # return answer\n    return round(percentage, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 111,
      "prompt_tokens": 2717,
      "completion_tokens_details": {
        "text_tokens": 111
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 2440
      },
      "total_tokens": 2828
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2024年的流动资产总计的差值，并将该差值占2023年流动资产总计的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2023 = 87355\n    current_assets_2024 = 99566\n\n    # Multi-step logic\n    diff = current_assets_2024 - current_assets_2023\n    ratio = diff / current_assets_2023\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_14_14_22_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-63",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2587-1.png",
      "./MultiFinance/images/2587-2.png",
      "./MultiFinance/images/2587-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2587-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-738",
    "output": [
      "state_1_duration = 6 + 6\n    state_2_duration = 13 + 14\n    \n    duration_difference = abs(state_1_duration - state_2_duration)\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return duration_difference\n```"
    ],
    "usage": {
      "completion_tokens": 64,
      "prompt_tokens": 1511,
      "completion_tokens_details": {
        "text_tokens": 64
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 1244
      },
      "total_tokens": 1575
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中状态1:复苏初期的总持续周期，并将其与状态2:复苏末期的总持续周期进行比较，求出两者的差值。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    recovery_early_duration = 6 + 5 + 6\n    recovery_late_duration = 13 + 6\n    # Multi-step logic\n    duration_difference = recovery_early_duration - recovery_late_duration\n    return duration_difference",
    "image_id": "strategy_03_03_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2955",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 0
      }
    },
    "difficulty": 3.401197381662155,
    "images": [
      "./MultiFinance/images/2812-1.png",
      "./MultiFinance/images/2812-2.png",
      "./MultiFinance/images/2812-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2812-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-739",
    "output": [
      "TP = 182\n    FP = 52\n    FN = 31\n    TN = 96\n    \n    # Calculate accuracy\n    total_samples = TP + FP + FN + TN\n    correct_predictions = TP + TN\n    accuracy = (correct_predictions / total_samples) * 100\n    \n    # Return the accuracy rounded to three decimal places\n    return round(accuracy, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 1557,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 315,
        "image_tokens": 1242
      },
      "total_tokens": 1661
    },
    "model": "qwen-omni-turbo",
    "question": "Once happy with the ultimate set of attributes, Williams chooses and operates a model on the training set that categorizes the text as either having positive sentiment (Class “1” or negative sentiment (Class “0”). He then appraises its performance by implementing error analysis. Based on Exhibit 1, what is the accuracy metric of the model in the ensuing confusion matrix (expressed as a percentage)? Answer to three decimal places.",
    "python_solution": "def solution():\n    TP = 182\n    TN = 96\n    FP = 52\n    FN = 31\n\n    Accuracy = (TP + TN) / (TP + FP + TN + FN)\n    return Accuracy * 100",
    "topic": "Quantitative Analysis & Valuation",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.8712010109078907,
    "source_id": "validation-191",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/362-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-740",
    "output": [
      "chc_2019 = 45\n    chc_2020 = 38\n    chc_2021 = 35\n    chc_2022 = 33\n    chc_2023 = 21\n    \n    # Do math calculation to get the answer\n    average_chc = (chc_2019 + chc_2020 + chc_2021 + chc_2022 + chc_2023) / 5\n    \n    # return answer\n    return round(average_chc, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 147,
      "prompt_tokens": 2153,
      "completion_tokens_details": {
        "text_tokens": 147
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1888
      },
      "total_tokens": 2300
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2019年到2023年健康消费品（CHC）的平均占比；请保留一位小数。",
    "python_solution": "def solution():\n    chc_2019 = 51\n    chc_2020 = 58\n    chc_2021 = 61\n    chc_2022 = 63\n    chc_2023 = 47\n    average_chc = (chc_2019 + chc_2020 + chc_2021 + chc_2022 + chc_2023) / 5\n    return round(average_chc, 1)",
    "image_id": "company_12_12_06_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1662",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2490-1.png",
      "./MultiFinance/images/2490-2.png",
      "./MultiFinance/images/2490-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2490-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-741",
    "output": [
      "Indemnification_receivable_2019 = 598\n    Indemnification_receivable_2018 = 2410\n    \n    # Do math calculation to get the answer\n    percentage_change = ((Indemnification_receivable_2019 - Indemnification_receivable_2018) / Indemnification_receivable_2018) * 100\n    \n    # return answer\n    return round(percentage_change, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 120,
      "prompt_tokens": 1297,
      "completion_tokens_details": {
        "text_tokens": 120
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1038
      },
      "total_tokens": 1417
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in indemnification receivable between 2018 and 2019? Answer to two decimal places.",
    "answer": "-75.19",
    "program": "indemnification_receivable_2019 = df[\"Indemnification receivable from SSL for pre-closing taxes (see Note 13)\"][\"2019\"]\n\nindemnification_receivable_2018 = df[\"Indemnification receivable from SSL for pre-closing taxes (see Note 13)\"][\"2018\"]\n\nanswer = ( indemnification_receivable_2019 - indemnification_receivable_2018 ) / indemnification_receivable_2018 * 100.0",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 21,
        "total_numbers": 23
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 6
      }
    },
    "difficulty": 3.401197381662155,
    "source_id": "test-6",
    "img_type": "['Tables']",
    "source": "CodeTAT-QA",
    "images": [
      "./MultiFinance/images/370-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-742",
    "output": [
      "fit = 78 + 2 + 14 + 9 + 3 + 5 + 4 + 13 + 10 + 0\n    low = 18 + 22 + 31 + 38 + 39 + 41 + 41 + 58 + 61 + 74\n    difference = round(fit - low, 1)\n    \n    # return answer\n    return difference\n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 2976,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2717
      },
      "total_tokens": 3080
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算符合预期的百分比与低于预期的百分比之差，并将结果保留一位小数。",
    "python_solution": "def solution():\n    meet_expectation = 0.0 + 0.02 + 0.03 + 0.07 + 0.01 + 0.05 + 0.1 + 0.04 + 0.04 + 0.04 + 0.13 + 0.0\n    below_expectation = 0.06 + 0.04 + 0.09 + 0.07 + 0.16 + 0.14 + 0.13 + 0.19 + 0.2 + 0.13 + 0.21 + 0.32\n    result = round(meet_expectation - below_expectation, 1)\n    return result",
    "image_id": "market_00_00_12_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2762",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 18
      },
      "operator_statistics": {
        "operators": {
          "+": 22,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 23
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 2
      }
    },
    "difficulty": 4.74493212836325,
    "images": [
      "./MultiFinance/images/2197-1.png",
      "./MultiFinance/images/2197-2.png",
      "./MultiFinance/images/2197-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2197-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-743",
    "output": [
      "cash_and_cash_equivalents_2023 = 205\n    total_assets_2023 = 15063\n    cash_and_cash_equivalents_2022 = 287\n    total_assets_2022 = 17863\n    \n    # Calculate the change in percentage\n    change_percentage = ((cash_and_cash_equivalents_2023 - cash_and_cash_equivalents_2022) / cash_and_cash_equivalents_2022) * 100\n    \n    # Return the calculated change percentage\n    return change_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 151,
      "prompt_tokens": 1510,
      "completion_tokens_details": {
        "text_tokens": 151
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 1226
      },
      "total_tokens": 1661
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change of Cash and Cash equivalents as a percentage of total assets from December 31, 2022 to June 30, 2023 in %?",
    "python_solution": "def solution():\n    # Define variables name and value\n    cash_2022 = 287 \n    total_assets_2022 = 17863 \n    cash_2023 = 205 \n    total_assets_2023 = 15063 \n\n    # Calculate the percentage of Cash and Cash equivalents in total assets\n    cash_percentage_2022 = (cash_2022 / total_assets_2022) * 100\n    cash_percentage_2023 = (cash_2023 / total_assets_2023) * 100\n\n    # Calculate the change in percentage (2023 - 2022)\n    change = cash_percentage_2023 - cash_percentage_2022\n    return change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-276",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2129-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 6
      }
    },
    "difficulty": 4.430816798843313,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-744",
    "output": [
      "buy_1_week = 0\n    buy_1_month = 7\n    buy_2_month = 9\n    buy_3_month = 10\n    buy_6_month = 22\n    \n    # Do math calculation to get the answer\n    increase_percent = (buy_6_month - buy_1_month) / buy_1_month * 100\n    \n    # return answer\n    return round(increase_percent, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 1411,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 1158
      },
      "total_tokens": 1515
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算买入评级在六个月内增加的百分比，并保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    buy_rating_1_week = 0\n    buy_rating_6_months = 22\n\n    # Multi-step logic\n    increase = buy_rating_6_months - buy_rating_1_week\n    percentage_increase = (increase / buy_rating_1_week) * 100 if buy_rating_1_week != 0 else 0\n    return round(percentage_increase, 1)",
    "image_id": "company_02_02_26_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-102",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2589-1.png",
      "./MultiFinance/images/2589-2.png",
      "./MultiFinance/images/2589-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2589-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-745",
    "output": [
      "GB300_NVIL72_125 = 49\n    GB300_NVIL72_15 = 61\n    GB300_NVIL72_DIFFERENCE = GB300_NVIL72_15 - GB300_NVIL72_125\n    single_w_price = 2.5\n    result = round(GB300_NVIL72_DIFFERENCE * single_w_price, 1)\n    \n    # return answer\n    return result\n```"
    ],
    "usage": {
      "completion_tokens": 117,
      "prompt_tokens": 2142,
      "completion_tokens_details": {
        "text_tokens": 117
      },
      "prompt_tokens_details": {
        "text_tokens": 296,
        "image_tokens": 1846
      },
      "total_tokens": 2259
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算柴发单机功率为2200kw时，GB300 NVL72等效（w柜）市场规模在1.25和1.5之间的差值，并将结果乘以该功率对应的单W价格；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    power = 2200\n    gb300_1_25 = 84\n    gb300_1_5 = 101\n    single_w_price = 2.5\n\n    # Multi-step logic\n    diff = gb300_1_5 - gb300_1_25\n    result = diff * single_w_price\n    return round(result, 1)",
    "image_id": "industry_15_15_14_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2172",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.401197381662156,
    "images": [
      "./MultiFinance/images/2797-1.png",
      "./MultiFinance/images/2797-2.png",
      "./MultiFinance/images/2797-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2797-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-746",
    "output": [
      "year_1 = 1328\n    year_2 = 1528\n    year_3 = 1906\n    year_4 = 2049\n    \n    total = year_1 + year_2 + year_3 + year_4\n    average_growth_rate = ((total/4) ** (1/4)) - 1\n    \n    answer = round(average_growth_rate * 100, 2)\n    \n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 2795,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 2514
      },
      "total_tokens": 2902
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年到2027年外购煤电厂的外购煤数量总和，并求出这四年间外购煤数量的年均增长率；结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    external_coal_2024 = 1056\n    external_coal_2025 = 878\n    external_coal_2026 = 861\n    external_coal_2027 = 1480\n\n    total_external_coal = external_coal_2024 + external_coal_2025 + external_coal_2026 + external_coal_2027\n    avg_growth_rate = ((external_coal_2025 / external_coal_2024 - 1) + (external_coal_2026 / external_coal_2025 - 1) + (external_coal_2027 / external_coal_2026 - 1)) / 3\n    return round(avg_growth_rate, 2)",
    "image_id": "company_31_31_17_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1710",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 3,
          "*": 0,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 10
      }
    },
    "difficulty": 5.049856007249537,
    "images": [
      "./MultiFinance/images/2177-1.png",
      "./MultiFinance/images/2177-2.png",
      "./MultiFinance/images/2177-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2177-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-747",
    "output": [
      "net_earnings_2012 = -1379\n    net_earnings_2014 = -118\n    \n    # Calculate the change in percentage\n    change_percentage = ((net_earnings_2014 - net_earnings_2012) / abs(net_earnings_2012)) * 100\n    \n    # Return the answer\n    return change_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 109,
      "prompt_tokens": 1321,
      "completion_tokens_details": {
        "text_tokens": 109
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 1037
      },
      "total_tokens": 1430
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in percentage of the Net Earnings from the year ending December 31, 2012 to the year ending December 31, 2014?",
    "python_solution": "def solution():\n    #Define variables name and value\n    net_earnings_2014 = -123\n    net_earnings_2012 = -1379\n\n    #Do math calculation to get the answer\n    answer = ((net_earnings_2014 - net_earnings_2012) / abs(net_earnings_2012)) * 100\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-77",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1990-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.8066624897703196,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-748",
    "output": [
      "year_2015_deficit = 63.7\n    year_2020_deficit = 112.5\n    \n    # Calculate the difference between 2015 and 2020\n    deficit_difference = year_2020_deficit - year_2015_deficit\n    \n    # Calculate the percentage change from 2015 to 2020\n    percentage_change = (deficit_difference / year_2015_deficit) * 100\n    \n    # Round the result to one decimal place\n    percentage_change_rounded = round(percentage_change, 1)\n    \n    # Return the calculated percentage change as a string with two decimal places\n    return f\"{percentage_change_rounded:.2f}%\"\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 183,
      "prompt_tokens": 3761,
      "completion_tokens_details": {
        "text_tokens": 183
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 3487
      },
      "total_tokens": 3944
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2015年和2020年不良余额的差值，并将该差值占2015年不良余额的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2015 = 63.7\n    value_2020 = 134.0\n\n    # Multi-step logic\n    diff = value_2020 - value_2015\n    ratio = diff / value_2015\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_07_07_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1835",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2645-1.png",
      "./MultiFinance/images/2645-2.png",
      "./MultiFinance/images/2645-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2645-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-749",
    "output": [
      "ydbs_profit_growth_2023_to_2026 = -8.09 + 20.19 + 21.48 + 21.73\n    \n    # Do math calculation to get the answer\n    total_profit_growth = int(ydbs_profit_growth_2023_to_2026)\n    \n    # return answer\n    return total_profit_growth\n\n# Call function and print result\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 101,
      "prompt_tokens": 1797,
      "completion_tokens_details": {
        "text_tokens": 101
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1538
      },
      "total_tokens": 1898
    },
    "model": "qwen-omni-turbo",
    "question": "请计算苑东生物2023年到2026年的净利润增速的总和，并将结果保留整数。",
    "python_solution": "def solution():\n    net_profit_growth_2023 = -8.09\n    net_profit_growth_2024 = 20.19\n    net_profit_growth_2025 = 21.48\n    net_profit_growth_2026 = 21.73\n    \n    total_growth = int(net_profit_growth_2023 + net_profit_growth_2024 + net_profit_growth_2025 + net_profit_growth_2026)\n    return total_growth",
    "image_id": "company_38_38_26_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1156",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2822-1.png",
      "./MultiFinance/images/2822-2.png",
      "./MultiFinance/images/2822-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2822-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-750",
    "output": [
      "profit_2023 = -71\n    profit_2024 = -2284\n    revenue_2023 = 90475\n    \n    # Do math calculation to get the answer\n    difference_profit = (profit_2024 - profit_2023) / 2\n    answer = difference_profit / revenue_2023 * 10000\n    \n    # return answer\n    return round(answer, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 112,
      "prompt_tokens": 2810,
      "completion_tokens_details": {
        "text_tokens": 112
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 2539
      },
      "total_tokens": 2922
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年和2024年的营业利润差值，并将结果除以2023年的营业收入。请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    operating_profit_2023 = -264\n    operating_profit_2024 = -2266\n    revenue_2023 = 90475\n\n    # Multi-step logic\n    diff = operating_profit_2024 - operating_profit_2023\n    result = diff / revenue_2023\n    return round(result, 2)",
    "image_id": "company_05_05_37_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1513",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2485-1.png",
      "./MultiFinance/images/2485-2.png",
      "./MultiFinance/images/2485-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2485-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-751",
    "output": [
      "import numpy as np\n    from scipy.stats import linregress\n    \n    # Convert the data into a NumPy array\n    x = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])\n    y = np.array([17, 16, 16, 21, 20, 20, 23, 25, 24])\n    \n    # Perform linear regression to find the slope and intercept\n    slope, intercept, r_value, p_value, std_err = linregress(x, y)\n    \n    # Calculate the predicted value for Year 11 using the regression equation\n    year_11_registration = intercept + slope * 11\n    \n    # Round the result to the nearest integer\n    answer = round(year_11_registration)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 197,
      "prompt_tokens": 390,
      "completion_tokens_details": {
        "text_tokens": 197
      },
      "prompt_tokens_details": {
        "text_tokens": 328,
        "image_tokens": 62
      },
      "total_tokens": 587
    },
    "model": "qwen-omni-turbo",
    "question": "Room registrations in the Toronto Towers Plaza Hotel have been recorded for the past 9 years. To project future occupancy, management would like to determine the mathematical trend of guest registration. This estimate will help the hotel determine whether future expansion will be needed. Given the following time-series data, develop a regression equation relating registrations to time (e.g., a trend equation). Then forecast year 11 registrations. Room registrations are in the thousands: <image 1> Answer to the nearest integer.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Strategic Management",
    "source_id": "validation_Manage_4",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/92-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-752",
    "output": [
      "growth_2022 = 19.2%\n    growth_2023 = 16.5%\n    \n    # Calculate the percentage change in growth rate from 2022 to 2023\n    growth_change_percentage = ((growth_2023 - growth_2022) / growth_2022) * 100\n    \n    # Return the calculated growth change percentage\n    return round(growth_change_percentage, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 119,
      "prompt_tokens": 1914,
      "completion_tokens_details": {
        "text_tokens": 119
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 1646
      },
      "total_tokens": 2033
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年归属于母公司净利润的增长率，并将其与2022年的增长率进行比较，得出增长变化的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    net_profit_2022 = 2449\n    net_profit_2023 = 2853\n    growth_rate_2022 = (net_profit_2022 - 2061) / 2061 * 100\n    growth_rate_2023 = (net_profit_2023 - net_profit_2022) / net_profit_2022 * 100\n    change = growth_rate_2023 - growth_rate_2022\n    return round(change, 1)",
    "image_id": "company_12_12_00_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1579",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 4.143134726391533,
    "images": [
      "./MultiFinance/images/2309-1.png",
      "./MultiFinance/images/2309-2.png",
      "./MultiFinance/images/2309-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2309-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-753",
    "output": [
      "year_1 = 19.26\n    year_2 = 14.23\n    year_3 = 15.13\n    \n    # Do math calculation to get the answer\n    CAGR = ((year_3 / year_1) ** (1/3)) - 1\n    answer = round(CAGR * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 2543,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2281
      },
      "total_tokens": 2649
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年到2026年的净资产收益率的复合年增长率；请保留两位小数。",
    "python_solution": "def solution():\n    roe_2023 = 19.26\n    roe_2024 = 12.61\n    roe_2025 = 14.23\n    roe_2026 = 15.13\n\n    cagr = ((roe_2026 / roe_2023) ** (1/3)) - 1\n    return round(cagr * 100, 2)",
    "image_id": "company_23_23_27_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-968",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 8
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2394-1.png",
      "./MultiFinance/images/2394-2.png",
      "./MultiFinance/images/2394-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2394-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-754",
    "output": [
      "year_1 = 940\n    year_2 = 731\n    year_3 = 1010\n    year_4 = 1162\n    \n    # Do math calculation to get the answer\n    total_growth = (year_4 - year_1) + (year_3 - year_2) + (year_2 - year_1)\n    average_growth_rate = total_growth / 3\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 2703,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 2446
      },
      "total_tokens": 2821
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2026年经营活动现金流的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    cash_flow_2023 = 940\n    cash_flow_2024 = 731\n    cash_flow_2025 = 1010\n    cash_flow_2026 = 1162\n\n    growth_rate_2024 = (cash_flow_2024 - cash_flow_2023) / cash_flow_2023 * 100\n    growth_rate_2025 = (cash_flow_2025 - cash_flow_2024) / cash_flow_2024 * 100\n    growth_rate_2026 = (cash_flow_2026 - cash_flow_2025) / cash_flow_2025 * 100\n\n    average_growth_rate = (growth_rate_2024 + growth_rate_2025 + growth_rate_2026) / 3\n    return round(average_growth_rate, 2)",
    "image_id": "company_35_35_18_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-661",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 3,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 10
      }
    },
    "difficulty": 5.123963979403259,
    "images": [
      "./MultiFinance/images/2171-1.png",
      "./MultiFinance/images/2171-2.png",
      "./MultiFinance/images/2171-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2171-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-755",
    "output": [
      "priceline_group_2011 = 100.00\n    priceline_group_2016 = 313.45\n    sp_500_2011 = 100.00\n    sp_500_2016 = 198.18\n    \n    # Calculate percentage change\n    priceline_group_change = (priceline_group_2016 - priceline_group_2011) / priceline_group_2011 * 100\n    sp_500_change = (sp_500_2016 - sp_500_2011) / sp_500_2011 * 100\n    \n    # Calculate the difference in percentage change\n    difference_percentage_change = abs(priceline_group_change - sp_500_change)\n    \n    # Return the answer rounded to three decimal places\n    return round(difference_percentage_change, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 241,
      "prompt_tokens": 1532,
      "completion_tokens_details": {
        "text_tokens": 241
      },
      "prompt_tokens_details": {
        "text_tokens": 311,
        "image_tokens": 1221
      },
      "total_tokens": 1773
    },
    "model": "qwen-omni-turbo",
    "question": "what was the difference in percentage change in priceline group and the s&p 500 index for the five year period ended 2016? Answer to three decimal places.",
    "answer": "115.27",
    "context": "measurement point december 31 the priceline group nasdaq composite index s&p 500 rdg internet composite .\n\n<image 1>\n\n.\n",
    "program": "price_priceline = 313.45\nprice_s_p_500 = 198.18\npercent_change_priceline = (price_priceline - 100) / 100\npercent_change_s_p_500 = (price_s_p_500 - 100) / 100\ndifference = percent_change_priceline - percent_change_s_p_500\nanswer = difference * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 34,
        "total_numbers": 36
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.8712010109078907,
    "source_id": "test-704",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1356-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-756",
    "output": [
      "year_2018_income = 72.81\n    year_2023_income = 87.73\n    \n    # Calculate the total growth rate from 2018 to 2023\n    total_growth_rate = (year_2023_income - year_2018_income) / year_2018_income * 100\n    \n    # Calculate the average annual growth rate over 5 years\n    n_years = 5\n    average_annual_growth_rate = (total_growth_rate ** (1/n_years)) - 1\n    \n    # Return the result rounded to two decimal places\n    return round(average_annual_growth_rate * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 172,
      "prompt_tokens": 2231,
      "completion_tokens_details": {
        "text_tokens": 172
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1970
      },
      "total_tokens": 2403
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年到2023年收入的年均增长率。请保留两位小数。",
    "python_solution": "def solution():\n    income_2018 = 72.81\n    income_2023 = 87.73\n    years = 5\n\n    average_growth_rate = ((income_2023 / income_2018) ** (1/years) - 1) * 100\n    return round(average_growth_rate, 2)",
    "image_id": "company_13_13_22_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-912",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2456-1.png",
      "./MultiFinance/images/2456-2.png",
      "./MultiFinance/images/2456-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2456-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-757",
    "output": [
      "operating_cash_flow_2023 = -7793\n    operating_cash_flow_2024 = -4926\n    capital_expenditure_2023 = 4389\n    \n    # Calculate the difference between 2023 and 2024 operating cash flow\n    diff_operating_cash_flow = operating_cash_flow_2023 - operating_cash_flow_2024\n    \n    # Divide the difference by 2023's capital expenditure\n    result = diff_operating_cash_flow / capital_expenditure_2023\n    \n    # Return the result rounded to two decimal places\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 162,
      "prompt_tokens": 2504,
      "completion_tokens_details": {
        "text_tokens": 162
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 2231
      },
      "total_tokens": 2666
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2024年的经营性现金净流量的差值，并将该差值除以2023年的资本支出，结果保留两位小数。",
    "python_solution": "def solution():\n    operating_cash_flow_2023 = -7793\n    operating_cash_flow_2024 = -4926\n    capital_expenditure_2023 = 4389\n\n    difference = operating_cash_flow_2024 - operating_cash_flow_2023\n    result = difference / capital_expenditure_2023\n    return round(result, 2)",
    "image_id": "company_00_00_40_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-253",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2817-1.png",
      "./MultiFinance/images/2817-2.png",
      "./MultiFinance/images/2817-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2817-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-758",
    "output": [
      "rating_1_month = 9\n    rating_2_month = 15\n    rating_3_month = 51\n    \n    # Do math calculation to get the answer\n    average_rating = (rating_1_month + rating_2_month + rating_3_month) / 3\n    rounded_average_rating = round(average_rating)\n    \n    # return answer\n    return rounded_average_rating\n```"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 1413,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 1158
      },
      "total_tokens": 1500
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算买入评级在三个月内的平均值，并将其四舍五入到整数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_1_month = 3\n    value_2_months = 9\n    value_3_months = 15\n\n    # Multi-step logic\n    average = (value_1_month + value_2_months + value_3_months) / 3\n    return round(average)",
    "image_id": "company_28_28_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-201",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2597-1.png",
      "./MultiFinance/images/2597-2.png",
      "./MultiFinance/images/2597-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2597-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-759",
    "output": [
      "num_shares_2013 = 1.5\n    num_shares_2014 = 1.4\n    \n    # Calculate percentage change\n    percentage_change = ((num_shares_2014 - num_shares_2013) / num_shares_2013) * 100\n    \n    # Return the result rounded to three decimal places\n    return round(percentage_change, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 110,
      "prompt_tokens": 2815,
      "completion_tokens_details": {
        "text_tokens": 110
      },
      "prompt_tokens_details": {
        "text_tokens": 1538,
        "image_tokens": 1277
      },
      "total_tokens": 2925
    },
    "model": "qwen-omni-turbo",
    "question": "what is the percent change in number of shares purchased by employees between 2013 and 2014? Answer to three decimal places.",
    "answer": "-6.667",
    "context": "upon the death of the employee , the employee 2019s beneficiary typically receives the designated portion of the death benefits directly from the insurance company and the company receives the remainder of the death benefits . it is currently expected that minimal cash payments will be required to fund these policies . the net periodic pension cost for these split-dollar life insurance arrangements was $ 5 million for the years ended december 31 , 2014 , 2013 and 2012 . the company has recorded a liability representing the actuarial present value of the future death benefits as of the employees 2019 expected retirement date of $ 66 million and $ 51 million as of december 31 , 2014 and december 31 , 2013 , respectively . deferred compensation plan the company amended and reinstated its deferred compensation plan ( 201cthe plan 201d ) effective june 1 , 2013 to reopen the plan to certain participants . under the plan , participants may elect to defer base salary and cash incentive compensation in excess of 401 ( k ) plan limitations . participants under the plan may choose to invest their deferred amounts in the same investment alternatives available under the company's 401 ( k ) plan . the plan also allows for company matching contributions for the following : ( i ) the first 4% ( 4 % ) of compensation deferred under the plan , subject to a maximum of $ 50000 for board officers , ( ii ) lost matching amounts that would have been made under the 401 ( k ) plan if participants had not participated in the plan , and ( iii ) discretionary amounts as approved by the compensation and leadership committee of the board of directors . defined contribution plan the company and certain subsidiaries have various defined contribution plans , in which all eligible employees may participate . in the u.s. , the 401 ( k ) plan is a contributory plan . matching contributions are based upon the amount of the employees 2019 contributions . the company 2019s expenses for material defined contribution plans for the years ended december 31 , 2014 , 2013 and 2012 were $ 31 million , $ 32 million and $ 30 million , respectively . beginning january 1 , 2012 , the company may make an additional discretionary 401 ( k ) plan matching contribution to eligible employees . for the years ended december 31 , 2014 , 2013 , and 2012 the company made no discretionary matching contributions . 8 . share-based compensation plans and other incentive plans stock options , stock appreciation rights and employee stock purchase plan the company grants options to acquire shares of common stock to certain employees and to existing option holders of acquired companies in connection with the merging of option plans following an acquisition . each option granted and stock appreciation right has an exercise price of no less than 100% ( 100 % ) of the fair market value of the common stock on the date of the grant . the awards have a contractual life of five to fifteen years and vest over two to four years . stock options and stock appreciation rights assumed or replaced with comparable stock options or stock appreciation rights in conjunction with a change in control of the company only become exercisable if the holder is also involuntarily terminated ( for a reason other than cause ) or quits for good reason within 24 months of a change in control . the employee stock purchase plan allows eligible participants to purchase shares of the company 2019s common stock through payroll deductions of up to 20% ( 20 % ) of eligible compensation on an after-tax basis . plan participants cannot purchase more than $ 25000 of stock in any calendar year . the price an employee pays per share is 85% ( 85 % ) of the lower of the fair market value of the company 2019s stock on the close of the first trading day or last trading day of the purchase period . the plan has two purchase periods , the first from october 1 through march 31 and the second from april 1 through september 30 . for the years ended december 31 , 2014 , 2013 and 2012 , employees purchased 1.4 million , 1.5 million and 1.4 million shares , respectively , at purchase prices of $ 51.76 and $ 53.79 , $ 43.02 and $ 50.47 , and $ 34.52 and $ 42.96 , respectively . the company calculates the value of each employee stock option , estimated on the date of grant , using the black-scholes option pricing model . the weighted-average estimated fair value of employee stock options granted during 2014 , 2013 and 2012 was $ 11.02 , $ 9.52 and $ 9.60 , respectively , using the following weighted-average assumptions: .\n\n<image 1>\n\nthe company uses the implied volatility for traded options on the company 2019s stock as the expected volatility assumption required in the black-scholes model . the selection of the implied volatility approach was based upon the availability of actively traded options on the company 2019s stock and the company 2019s assessment that implied volatility is more representative of future stock price trends than historical volatility . the risk-free interest rate assumption is based upon the average daily closing rates during the year for u.s . treasury notes that have a life which approximates the expected life of the option . the dividend yield assumption is based on the company 2019s future expectation of dividend payouts . the expected life of employee stock options represents the average of the contractual term of the options and the weighted-average vesting period for all option tranches. .\n",
    "program": "shares_purchased_2014 = 1.4 * 1000\nshares_purchased_2013 = 1.5 * 1000\ndecrease = shares_purchased_2014 - shares_purchased_2013\npercent_change = decrease / shares_purchased_2013\nanswer = percent_change * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 93,
        "total_numbers": 95
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 3,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 0
      }
    },
    "difficulty": 3.2188758248682006,
    "source_id": "test-491",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1143-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-760",
    "output": [
      "nantong_employee_num = 159\n    wuxi_employee_num = 158\n    suqian_employee_num = 150\n    total_employee_num = 5261\n    \n    # Do math calculation to get the answer\n    result = (nantong_employee_num + wuxi_employee_num + suqian_employee_num) / total_employee_num\n    \n    # return answer\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 110,
      "prompt_tokens": 3512,
      "completion_tokens_details": {
        "text_tokens": 110
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 3248
      },
      "total_tokens": 3622
    },
    "model": "qwen-omni-turbo",
    "question": "请计算南通、无锡和宿迁三地的员工数总和，然后用这个总和除以总员工数，得到的结果保留两位小数。",
    "python_solution": "def solution():\n    nantong_employees = 159\n    wuxi_employees = 158\n    sulin_employees = 150\n    total_employees = 5261\n\n    sum_employees = nantong_employees + wuxi_employees + sulin_employees\n    ratio = sum_employees / total_employees\n    return round(ratio, 2)",
    "image_id": "company_04_04_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-718",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2947-1.png",
      "./MultiFinance/images/2947-2.png",
      "./MultiFinance/images/2947-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2947-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-761",
    "output": [
      "sales_2024_dec = 76.22\n    sales_2023_dec = 48.44\n    \n    growth_rate = ((sales_2024_dec - sales_2023_dec) / sales_2023_dec) * 100\n    \n    # Return the calculated growth rate rounded to two decimal places\n    return round(growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 2116,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1854
      },
      "total_tokens": 2221
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年12月和2023年12月纯电车型销量的增长率，并保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    sales_2024_dec = 76.22\n    sales_2023_dec = 75.76\n\n    # Multi-step logic\n    growth_rate = (sales_2024_dec - sales_2023_dec) / sales_2023_dec * 100\n    return round(growth_rate, 2)",
    "image_id": "company_16_16_14_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1891",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2753-1.png",
      "./MultiFinance/images/2753-2.png",
      "./MultiFinance/images/2753-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2753-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-762",
    "output": [
      "year_2016_loan_scale = 5540\n    year_2024Q2_loan_scale = 14245\n    \n    # Do math calculation to get the answer\n    loan_scale_growth_rate = ((year_2024Q2_loan_scale - year_2016_loan_scale) / year_2016_loan_scale) ** (1/8)\n    \n    answer = round(loan_scale_growth_rate * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 129,
      "prompt_tokens": 3646,
      "completion_tokens_details": {
        "text_tokens": 129
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 3387
      },
      "total_tokens": 3775
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2016年至2024年第二季度上海地区的贷款规模的年均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    # 上海地区2016年和2024年第二季度的贷款规模\n    value_2016 = 2268\n    value_2024Q2 = 6737\n    # 计算年均增长率\n    years = 8\n    growth_rate = ((value_2024Q2 / value_2016) ** (1/years)) - 1\n    return round(growth_rate, 2)",
    "image_id": "company_07_07_13_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1841",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 3.7841896339182615,
    "images": [
      "./MultiFinance/images/2515-1.png",
      "./MultiFinance/images/2515-2.png",
      "./MultiFinance/images/2515-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2515-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-763",
    "output": [
      "max_value = 107\n    min_value = -8.2\n    \n    difference = max_value - min_value\n    percentage_difference = (difference / max_value) * 100\n    \n    # return answer\n    return round(percentage_difference, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 63,
      "prompt_tokens": 3253,
      "completion_tokens_details": {
        "text_tokens": 63
      },
      "prompt_tokens_details": {
        "text_tokens": 282,
        "image_tokens": 2971
      },
      "total_tokens": 3316
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算24-01至24-12期间全球石油需求预期的最大值与最小值之间的差值，并将该差值占最大值的比例转换为百分比；请保留两位小数。",
    "python_solution": "def solution():\n    values = [105.0, 105.6, 106.0, 106.3, 106.6, 106.9, 107.2, 107.5, 107.8, 108.1, 108.4, 108.7]\n    max_value = max(values)\n    min_value = min(values)\n    diff = max_value - min_value\n    ratio = diff / max_value * 100\n    return round(ratio, 2)",
    "image_id": "industry_06_06_06_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2053",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 11
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2886-1.png",
      "./MultiFinance/images/2886-2.png",
      "./MultiFinance/images/2886-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2886-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-764",
    "output": [
      "net_income_2022_third_quarter = 5263465\n    net_income_2021_third_quarter = -5293113\n    \n    # Calculate the percentage change\n    percentage_change = ((net_income_2022_third_quarter - net_income_2021_third_quarter) / abs(net_income_2021_third_quarter)) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 120,
      "prompt_tokens": 1311,
      "completion_tokens_details": {
        "text_tokens": 120
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1037
      },
      "total_tokens": 1431
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in net income between the three months ended June 2022 and the same period in the previous year in %?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    net_income_june_2022 = 5_263_465 # Net Income for June 2022\n    net_income_june_2021 = -5_293_113 # Net Income for June 2021\n\n    #Do math calculation to get the answer\n    percentage_change = ((net_income_june_2022 - net_income_june_2021) / abs(net_income_june_2021)) * 100\n    answer = percentage_change\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-89",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2000-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.6888794541139367,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-765",
    "output": [
      "first_item_2020 = 32.71\n    second_item_2020 = 45.62\n    third_item_2020 = -6.90\n    \n    # Do math calculation to get the answer\n    difference = (first_item_2020 - second_item_2020) / third_item_2020 * 100\n    \n    # return answer\n    return round(difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 119,
      "prompt_tokens": 1395,
      "completion_tokens_details": {
        "text_tokens": 119
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1118
      },
      "total_tokens": 1514
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年第一项指标与第二项指标的差值，并将该差值除以第三项指标，然后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_1 = 32.71\n    value_2 = 31.34\n    value_3 = 45.62\n    diff = value_1 - value_2\n    ratio = diff / value_3\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_20_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2839",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3049-1.png",
      "./MultiFinance/images/3049-2.png",
      "./MultiFinance/images/3049-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3049-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-766",
    "output": [
      "ppi_2023_01 = -1.4\n    ppi_2023_06 = -2.7\n    \n    # Do math calculation to get the answer\n    growth_rate = (ppi_2023_06 - ppi_2023_01) / abs(ppi_2023_01)\n    \n    # return answer\n    return round(growth_rate * 100, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 111,
      "prompt_tokens": 4024,
      "completion_tokens_details": {
        "text_tokens": 111
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 3756
      },
      "total_tokens": 4135
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中2023年1月和2023年6月的PPI值，计算这两个月之间的增长率；结果请保留两位小数。",
    "python_solution": "def solution():\n    ppi_jan_2023 = -1.4\n    ppi_jun_2023 = -5.4\n    growth_rate = (ppi_jun_2023 - ppi_jan_2023) / ppi_jan_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "macro_09_09_20_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2641",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.401197381662155,
    "images": [
      "./MultiFinance/images/2808-1.png",
      "./MultiFinance/images/2808-2.png",
      "./MultiFinance/images/2808-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2808-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-767",
    "output": [
      "year_1_free_cash_flow = 1.30\n    year_2_free_cash_flow = 1.50\n    year_3_free_cash_flow = 1.75\n    year_4_free_cash_flow = 2.00\n    year_5_free_cash_flow = 2.12\n    year_1_interest_expense = 1.2\n    year_2_interest_expense = 1.7\n    year_3_interest_expense = 2.8\n    year_4_interest_expense = 2.1\n    year_5_interest_expense = '?'\n    \n    # Calculate the present value of free cash flows and interest expenses\n    pv_year_1_free_cash_flow = year_1_free_cash_flow / (1 + 0.06)\n    pv_year_2_free_cash_flow = year_2_free_cash_flow / ((1 + 0.06) ** 2)\n    pv_year_3_free_cash_flow = year_3_free_cash_flow / ((1 + 0.06) ** 3)\n    pv_year_4_free_cash_flow = year_4_free_cash_flow / ((1 + 0.06) ** 4)\n    pv_year_5_free_cash_flow = year_5_free_cash_flow / ((1 + 0.06) ** 5)\n    \n    pv_year_1_interest_expense = year_1_interest_expense / (1 + 0.06)\n    pv_year_2_interest_expense = year_2_interest_expense / ((1 + 0.06) ** 2)\n    pv_year_3_interest_expense = year_3_interest_expense / ((1 + 0.06) ** 3)\n    pv_year_4_interest_expense = year_4_interest_expense / ((1 + 0.06) ** 4)\n    pv_year_5_interest_expense = '?' / ((1 + 0.06) ** 5)\n    \n    # Calculate the present value of the terminal value\n    terminal_value = (pv_year_5_free_cash_flow - pv_year_5_interest_expense) * (1 + 0.06) ** 5 / 0.06\n    pv_terminal_value = terminal_value / ((1 + 0.06) ** 5)\n    \n    # Calculate the present value of the interest expenses\n    pv_interest_expenses = pv_year_1_interest_expense + pv_year_2_interest_expense + pv_year_3_interest_expense + pv_year_4_interest_expense + pv_year_5_interest_expense\n    \n    # Calculate the present value of the free cash flows\n    pv_free_cash_flows = pv_year_1_free_cash_flow + pv_year_2_free_cash_flow + pv_year_3_free_cash_flow + pv_year_4_free_cash_flow + pv_year_5_free_cash_flow\n    \n    # Calculate the present value of the terminal value\n    pv_terminal_value = terminal_value / ((1 + 0.06) ** 5)\n    \n    # Calculate the present value of the interest expenses\n    pv_interest_expenses = pv_year_1_interest_expense + pv_year_2_interest_expense + pv_year_3_interest_expense + pv_year_4_interest_expense + pv_year_5_interest_expense\n    \n    # Calculate the present value of the free cash flows\n    pv_free_cash_flows = pv_year_1_free_cash_flow + pv_year_2_free_cash_flow + pv_year_3_free_cash_flow + pv_year_4_free_cash_flow + pv_year_5_free_cash_flow\n    \n    # Calculate the present value of the terminal value\n    pv_terminal_value = terminal_value / ((1 + 0.06) ** 5)\n    \n    # Calculate the present value of the interest expenses\n    pv_interest_expenses = pv_year_1_interest_expense + pv_year_2_interest_expense + pv_year_3_interest_expense + pv_year_4_interest_expense + pv_year_5_interest_expense\n    \n    # Calculate the present value of the free cash flows\n    pv_free_cash_flows = pv_year_1_free_cash_flow + pv_year_2_free_cash_flow + pv_year_3_free_cash_flow + pv_year_4_free_cash_flow + pv_year_5_free_cash_flow\n    \n    # Calculate the present value of the terminal value\n    pv_terminal_value = terminal_value / ((1 + 0.06) ** 5)\n    \n    # Calculate the present value of the interest expenses\n    pv_interest_expenses = pv_year_1_interest_expense + pv_year_2_interest_expense + pv_year_3_interest_expense + pv_year_4_interest_expense + pv_year_5_interest_expense\n    \n    # Calculate the present value of the free cash flows\n    pv_free_cash_flows = pv_year_1_free_cash_flow + pv_year_2_free_cash_flow + pv_year_3_free_cash_flow + pv_year_4_free_cash_flow + pv_year_5_free_cash_flow\n    \n    # Calculate the present value of the terminal value\n    pv_terminal_value = terminal_value / ((1 + 0.06) ** 5)\n    \n    # Calculate the present value of the interest expenses\n    pv_interest_expenses = pv_year_1_interest_expense + pv_year_2_interest_expense + pv_year_3_interest_expense + pv_year_4_interest_expense + pv_year_5_interest_expense\n    \n    # Calculate the present value of the free cash flows\n    pv_free_cash_flows = pv_year_1_free_cash_flow + pv_year_2_free_cash_flow + pv_year_3_free_cash_flow + pv_year_4_free_cash_flow + pv_year_5_free_cash_flow\n    \n    # Calculate the present value of the terminal value\n    pv_terminal_value = terminal_value / ((1 + 0.06) ** 5)\n    \n    # Calculate the present value of the interest expenses\n    pv_interest_expenses = pv_year_1_interest_expense + pv_year_2_interest_expense + pv_year_3_interest_expense + pv_year_4_interest_expense + pv_year_5_interest_expense\n    \n    # Calculate the present value of the free cash flows\n    pv_free_cash_flows = pv_year_1_free_cash_flow + pv_year_2_free_cash_flow + pv_year_3_free_cash_flow + pv_year_4_free_cash_flow + pv_year_5_free_cash_flow\n    \n    # Calculate the present value of the terminal value\n    pv_terminal_value = terminal_value / ((1 + 0.06) ** 5)\n    \n    # Calculate the present value of the interest expenses\n    pv_interest_expenses = pv_year_1_interest_expense + pv_year_2_interest_expense + pv_year_3_interest_expense + pv_year_4_interest_expense + pv_year_5_interest_expense\n    \n    # Calculate the present value of the free cash flows\n    pv_free_cash_flows = pv_year_1_free_cash_flow + pv_year_2_free_cash_flow + pv_year_3_free_cash_flow + pv_year_4_free_cash_flow + pv_year_5_free_cash_flow\n    \n    # Calculate the present value of the terminal value\n    pv_terminal_value = terminal_value / ((1 + 0.06) ** 5)\n    \n    # Calculate the present value of the interest expenses\n    pv_interest_expenses = pv_year_1_interest_expense + pv_year_2_interest_expense + pv_year_3_interest_expense + pv_year_4_interest_expense + pv_year_5_interest_expense\n    \n    # Calculate the present value of the free cash flows\n    pv_free_cash_flows = pv_year_1_free_cash_flow + pv_year_2_free_cash_flow + pv_year_3_free_cash_flow + pv_year_4_free_cash_flow + pv_year_5_free_cash_flow\n    \n    # Calculate the present value of the terminal value\n    pv_terminal_value = terminal_value / ((1 + 0.06) ** 5)\n    \n    # Calculate the present value of the interest expenses\n    pv_interest_expenses = pv_year_1_interest_expense + pv_year_2_interest_expense + pv_year_3_interest_expense + pv_year_4_interest_expense + pv_year_5_interest_expense\n    \n    # Calculate the present value of the free cash flows\n    pv_free_cash_flows = pv_year_1_free_cash_flow + pv_year_2_free_cash_flow + pv_year_3_free_cash_flow + pv_year_4_free_cash_flow + pv_year_5_free_cash_flow\n    \n    # Calculate the present value of the terminal value\n    pv_terminal_value = terminal_value / ((1 + 0.06) ** 5)\n    \n    # Calculate the present value of the interest expenses\n    pv_interest_expenses = pv_year_1_interest_expense + pv_year_2_interest_expense + pv_year_3_interest_expense + pv_year_4_interest_expense + pv_year_5_interest_expense\n    \n    # Calculate the present value of the free cash flows\n    pv_free_cash_flows = pv_year_1_free_cash_flow + pv_year_2_free_cash_flow + pv_year_3_free_cash_flow + pv_year_4_free_cash_flow + pv_year_5_free_cash_flow\n    \n    # Calculate the present value of the terminal value\n    pv_terminal_value = terminal_value / ((1 + 0.06) ** 5)\n    \n    # Calculate the present value of the interest expenses\n    pv_interest_expenses = pv_year_1_interest_expense + pv_year_2_interest_expense + pv_year_3_interest_expense + pv_year_4_interest_expense + pv_year_5_interest_expense"
    ],
    "usage": {
      "completion_tokens": 2048,
      "prompt_tokens": 676,
      "completion_tokens_details": {
        "text_tokens": 2048
      },
      "prompt_tokens_details": {
        "text_tokens": 584,
        "image_tokens": 92
      },
      "total_tokens": 2724
    },
    "model": "qwen-omni-turbo",
    "question": "Marston Marble Corporation is considering a merger with the Conroy Concrete Company. Conroy is a publicly traded company, and its beta is 1.30. Conroy has been barely profitable, so it has paid an average of only 20% in taxes during the lastseveral years. In addition, it uses little debt; its target ratio is just 25%, with the cost of debt 9%. If the acquisition were made, Marston would operate Conroy as a separate, wholly owned subsidiary. Marston would pay taxes on a consolidated basis, and the tax rate would therefore increase to 35%. Marston also would increase the debt capitalization in the Conroy subsidiary to wd = 40%, for a total of $22.27 million in debt by the end of Year 4, and pay 9.5% on the debt. Marston's acquisition department estimates that Conroy, if acquired, would generate the following free cash flows and interest expenses (in millions of dollars) in Years 1-5: <image 1> In Year 5, Conroy's interest expense would be based on its beginning-of-year (that is, the end-of-Year-4) debt, and in subsequent years both interest expense and free cash flows are projected to grow at a rate of 6%. These cash flows include all acquisition effects. Marston's cost of equity is 10.5%, its beta is 1.0, and its cost of debt is 9.5%. The risk-free rate is 6%, and the market risk premium is 4.5%. What is the dollar value of Conroy's operations (in millions)? Answer to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_313",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/273-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-768",
    "output": [
      "q2_2022_net_income = 5720\n    q2_2021_net_income = 351\n    total_comprehensive_income_q2_2022 = 17227\n    total_comprehensive_income_q2_2021 = 3274\n    \n    # Calculate the percentage change in net income as a percentage of total comprehensive income\n    percentage_change = ((q2_2022_net_income - q2_2021_net_income) / q2_2021_net_income) * 100\n    \n    # Calculate the percentage of net income relative to total comprehensive income\n    percentage_of_total_comprehensive_income_q2_2022 = (q2_2022_net_income / total_comprehensive_income_q2_2022) * 100\n    percentage_of_total_comprehensive_income_q2_2021 = (q2_2021_net_income / total_comprehensive_income_q2_2021) * 100\n    \n    # Calculate the change in percentage of net income relative to total comprehensive income\n    change_in_percentage = percentage_of_total_comprehensive_income_q2_2022 - percentage_of_total_comprehensive_income_q2_2021\n    \n    # Return the change in percentage\n    return change_in_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 310,
      "prompt_tokens": 1107,
      "completion_tokens_details": {
        "text_tokens": 310
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 830
      },
      "total_tokens": 1417
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in net income as a percentage of total comprehensive income from Q2 2021 to Q2 2022 in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n    net_income_2021 = 86 \n    comprehensive_income_2021 = 351\n    net_income_2022 = 5089 \n    comprehensive_income_2022 = 5720 \n\n    #Do math calculation to get the answer\n    net_income_percentage_2021 = (net_income_2021 / comprehensive_income_2021) * 100\n    net_income_percentage_2022 = (net_income_2022 / comprehensive_income_2022) * 100\n    percentage_change = net_income_percentage_2022 - net_income_percentage_2021\n    return percentage_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-222",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2088-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 4.0943445622221,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-769",
    "output": [
      "iraq_2025_1_to_3 = 4000\n    iraq_2025_4_to_9 = 8978\n    quota_2025 = 34529\n    \n    # Calculate the difference in production between January-March and April-September\n    diff_production = iraq_2025_4_to_9 - iraq_2025_1_to_3\n    \n    # Calculate the percentage of the difference relative to the quota for 2025\n    percentage_diff = (diff_production / quota_2025) * 100\n    \n    # Round the result to one decimal place\n    rounded_percentage_diff = round(percentage_diff, 1)\n    \n    # Return the calculated percentage as a string with two decimal places\n    return f\"{rounded_percentage_diff:.2f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 193,
      "prompt_tokens": 3066,
      "completion_tokens_details": {
        "text_tokens": 193
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 2787
      },
      "total_tokens": 3259
    },
    "model": "qwen-omni-turbo",
    "question": "请计算伊拉克在2025年1-3月和4-9月的产量差值，并将该差值占2025年配额量的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    iraq_q1 = 4000\n    iraq_q2 = 4220\n    iraq_quota = 4431\n\n    diff = iraq_q2 - iraq_q1\n    ratio = diff / iraq_quota\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "industry_06_06_03_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2035",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2997-1.png",
      "./MultiFinance/images/2997-2.png",
      "./MultiFinance/images/2997-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2997-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-770",
    "output": [
      "year_1 = 34.5\n    year_2 = 78.3\n    growth_rate_year_1_to_year_2 = ((year_2 - year_1) / year_1)\n    \n    year_2_to_year_3 = 116.3\n    growth_rate_year_2_to_year_3 = ((year_2_to_year_3 - year_2) / year_2)\n    \n    average_growth_rate = (growth_rate_year_1_to_year_2 + growth_rate_year_2_to_year_3) / 2\n    \n    # return answer\n    return round(average_growth_rate * 100, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 150,
      "prompt_tokens": 1996,
      "completion_tokens_details": {
        "text_tokens": 150
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1738
      },
      "total_tokens": 2146
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2025年（保守）的平均增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    value_2023 = 34.5\n    value_2024 = 78.3\n    value_2025_conservative = 116.3\n\n    growth_2023_2024 = (value_2024 - value_2023) / value_2023 * 100\n    growth_2024_2025 = (value_2025_conservative - value_2024) / value_2024 * 100\n    average_growth = (growth_2023_2024 + growth_2024_2025) / 2\n    return round(average_growth, 2)",
    "image_id": "company_08_08_14_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-626",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.477336814478207,
    "images": [
      "./MultiFinance/images/2236-1.png",
      "./MultiFinance/images/2236-2.png",
      "./MultiFinance/images/2236-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2236-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-771",
    "output": [
      "year_2024_growth_rate = -19.8\n    year_2025_growth_rate = 10.6\n    \n    # Calculate the average growth rate for diesel/gasoline\n    average_growth_rate = (year_2024_growth_rate + year_2025_growth_rate) / 2\n    \n    # Return the result rounded to two decimal places\n    return round(average_growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 109,
      "prompt_tokens": 2976,
      "completion_tokens_details": {
        "text_tokens": 109
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 2716
      },
      "total_tokens": 3085
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中2024年与2025年柴油/燃气的年增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    value_2024 = 65\n    value_2025 = -158\n    growth_rate = (value_2025 - value_2024) / value_2024 * 100\n    return round(growth_rate, 2)",
    "image_id": "industry_06_06_11_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2048",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3001-1.png",
      "./MultiFinance/images/3001-2.png",
      "./MultiFinance/images/3001-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3001-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-772",
    "output": [
      "health_care_product = 24%\n    other_products = 18%\n    \n    total_percentage = (health_care_product + other_products) * 100\n    \n    # Do math calculation to get the answer\n    result = round(total_percentage, 2)\n    \n    # return answer\n    return result\n```"
    ],
    "usage": {
      "completion_tokens": 70,
      "prompt_tokens": 1915,
      "completion_tokens_details": {
        "text_tokens": 70
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1657
      },
      "total_tokens": 1985
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中健康个护产品和其他产品的占比之和占总比例的百分比，并将结果保留两位小数。",
    "python_solution": "def solution():\n    personal_care_percentage = 8\n    other_products_percentage = 9\n    total_percentage = personal_care_percentage + other_products_percentage\n    total_sum = 100\n    result_percentage = (total_percentage / total_sum) * 100\n    return round(result_percentage, 2)",
    "image_id": "company_36_36_18_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-344",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2918-1.png",
      "./MultiFinance/images/2918-2.png",
      "./MultiFinance/images/2918-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2918-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-773",
    "output": [
      "birth_population_2015_to_2019 = (1655 + 1786 + 1723 + 1523 + 1465) / 5\n    birth_population_2014 = 1687\n    growth_rate = ((birth_population_2015_to_2019 - birth_population_2014) / birth_population_2014) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 123,
      "prompt_tokens": 1607,
      "completion_tokens_details": {
        "text_tokens": 123
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 1328
      },
      "total_tokens": 1730
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2015年到2019年这五年间出生人口的平均值，并与2014年的出生人口进行比较，计算出增长或减少的百分比；请保留两位小数。",
    "python_solution": "def solution():\n    births = [1655, 1786, 1723, 1523, 1465]\n    average_births = sum(births) / len(births)\n    birth_2014 = 1687\n    percentage_change = ((average_births - birth_2014) / birth_2014) * 100\n    return round(percentage_change, 2)",
    "image_id": "company_25_25_10_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-160",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 10
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2531-1.png",
      "./MultiFinance/images/2531-2.png",
      "./MultiFinance/images/2531-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2531-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-774",
    "output": [
      "year_2017 = 10.5\n    year_2022 = 14.0\n    years = 2022 - 2017 + 1\n    \n    # Do math calculation to get the answer\n    average_growth_rate = ((year_2022 / year_2017) ** (1/years)) - 1\n    answer = round(average_growth_rate * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 115,
      "prompt_tokens": 3151,
      "completion_tokens_details": {
        "text_tokens": 115
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 2893
      },
      "total_tokens": 3266
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2017年到2022年间休闲零食人均消费量的平均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    consumption_2017 = 10.5\n    consumption_2022 = 14.0\n    years = 2022 - 2017\n\n    growth_rate = ((consumption_2022 / consumption_2017) ** (1/years) - 1) * 100\n    return round(growth_rate, 2)",
    "image_id": "industry_16_16_20_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2243",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2376-1.png",
      "./MultiFinance/images/2376-2.png",
      "./MultiFinance/images/2376-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2376-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-775",
    "output": [
      "investment_b_beginning_value = 225000\n    investment_b_end_value = 324000\n    cash_flow_during_period = 16000\n    \n    # Calculate the rate of return for Investment B\n    rate_of_return_b = (investment_b_end_value - investment_b_beginning_value) / investment_b_beginning_value * 100 + cash_flow_during_period / investment_b_beginning_value * 100\n    \n    # Return the rate of return for Investment B\n    return rate_of_return_b\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 133,
      "prompt_tokens": 519,
      "completion_tokens_details": {
        "text_tokens": 133
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 242
      },
      "total_tokens": 652
    },
    "model": "qwen-omni-turbo",
    "question": "For each of the investments shown in the following table, calculate the rate of return earned over the unspecified time period. <image 1> What is the rate of return for Investment B? Answer as a percentage to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_163",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/166-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-776",
    "output": [
      "fixed_assets_2024 = 36867\n    fixed_assets_2023 = 39101\n    \n    difference = fixed_assets_2024 - fixed_assets_2023\n    percentage_difference = (difference / fixed_assets_2023) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 103,
      "prompt_tokens": 3146,
      "completion_tokens_details": {
        "text_tokens": 103
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 2873
      },
      "total_tokens": 3249
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年与2023年固定资产的差值，并将该差值占2023年固定资产的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    fixed_assets_2023 = 39101\n    fixed_assets_2024 = 36867\n\n    # Multi-step logic\n    diff = fixed_assets_2024 - fixed_assets_2023\n    ratio = diff / fixed_assets_2023\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_05_05_37_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1518",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2634-1.png",
      "./MultiFinance/images/2634-2.png",
      "./MultiFinance/images/2634-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2634-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-777",
    "output": [
      "min1 = 249\n    min2 = 22\n    min3 = 33\n    \n    # Do math calculation to get the answer\n    sum_min = min1 + min2 + min3\n    \n    # return answer\n    return round(sum_min, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 68,
      "prompt_tokens": 3166,
      "completion_tokens_details": {
        "text_tokens": 68
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 2906
      },
      "total_tokens": 3234
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算试用期解雇人数最少的三个部门的人数总和，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    department1 = 50\n    department2 = 60\n    department3 = 168\n\n    # Multi-step logic\n    total = department1 + department2 + department3\n    rounded_total = round(total, 2)\n    return rounded_total",
    "image_id": "macro_08_08_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2492",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2892-1.png",
      "./MultiFinance/images/2892-2.png",
      "./MultiFinance/images/2892-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2892-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-778",
    "output": [
      "filing_date_specimen_unit_certificate = \"October 8, 2021\"\n    filing_date_warrant_agreement = \"October 21, 2021\"\n    \n    # Convert dates to datetime objects for easier calculation\n    from datetime import datetime\n    date_format = \"%B %d, %Y\"\n    date1 = datetime.strptime(filing_date_specimen_unit_certificate, date_format)\n    date2 = datetime.strptime(filing_date_warrant_agreement, date_format)\n    \n    # Calculate the difference in days\n    difference_in_days = (date2 - date1).days\n    \n    # return answer\n    return difference_in_days\n\n```"
    ],
    "usage": {
      "completion_tokens": 139,
      "prompt_tokens": 1442,
      "completion_tokens_details": {
        "text_tokens": 139
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 1175
      },
      "total_tokens": 1581
    },
    "model": "qwen-omni-turbo",
    "question": "What is the difference in days between the Filing date of the Specimen Unit Certificate and the Warrant Agreement?",
    "python_solution": "def solution():\n     # Define variables name and value\n\n    specimen_unit_filing_date = 'October 8, 2021'  # Filing date of Specimen Unit Certificate\n\n    warrant_agreement_filing_date = 'October 26, 2021'  # Filing date of Warrant Agreement\n\n    # Convert the string to datetime object\n    from datetime import datetime\n    specimen_unit_filing_date = datetime.strptime(specimen_unit_filing_date, '%B %d, %Y')\n    warrant_agreement_filing_date = datetime.strptime(warrant_agreement_filing_date, '%B %d, %Y')\n\n    # Do math calculation to get the answer\n    answer = (warrant_agreement_filing_date - specimen_unit_filing_date).days\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-86",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1997-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 6,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 6
      }
    },
    "difficulty": 4.51085950651685,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-779",
    "output": [
      "year_1 = -52\n    year_2 = -102\n    year_3 = -103\n    year_4 = 255\n    \n    # Do math calculation to get the answer\n    sum_cash_flow = year_1 + year_2 + year_3 + year_4\n    average_growth_rate = (sum_cash_flow / 3) ** (1/3)\n    \n    answer = round(average_growth_rate * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 129,
      "prompt_tokens": 2774,
      "completion_tokens_details": {
        "text_tokens": 129
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2512
      },
      "total_tokens": 2903
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年到2026年经营活动现金流的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    cash_flow_2023 = -52\n    cash_flow_2024 = -102\n    cash_flow_2025 = -103\n    cash_flow_2026 = 255\n\n    growth_rate_2024 = (cash_flow_2024 / cash_flow_2023 - 1) * 100\n    growth_rate_2025 = (cash_flow_2025 / cash_flow_2024 - 1) * 100\n    growth_rate_2026 = (cash_flow_2026 / cash_flow_2025 - 1) * 100\n\n    average_growth_rate = (growth_rate_2024 + growth_rate_2025 + growth_rate_2026) / 3\n    return round(average_growth_rate, 2)",
    "image_id": "company_03_03_20_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-2",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 6,
          "*": 3,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 15
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 10
      }
    },
    "difficulty": 5.3471075307174685,
    "images": [
      "./MultiFinance/images/2159-1.png",
      "./MultiFinance/images/2159-2.png",
      "./MultiFinance/images/2159-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2159-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-780",
    "output": [
      "flow_asset_2023 = 5558\n    flow_asset_2024 = 8323\n    \n    # Do math calculation to get the answer\n    growth_rate = (flow_asset_2024 - flow_asset_2023) / flow_asset_2023 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 2297,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 2040
      },
      "total_tokens": 2403
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2024年的流动资产合计的增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2023 = 5558\n    current_assets_2024E = 8323\n\n    # Multi-step logic\n    growth_rate = ((current_assets_2024E - current_assets_2023) / current_assets_2023) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_23_23_27_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-932",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2614-1.png",
      "./MultiFinance/images/2614-2.png",
      "./MultiFinance/images/2614-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2614-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-781",
    "output": [
      "euro_rate_2011_11 = 2.7\n    euro_rate_2014_06 = -0.1\n    average_euro_rate = (euro_rate_2011_11 + euro_rate_2014_06) / 2\n    \n    # Do math calculation to get the answer\n    average_euro_rate = round(average_euro_rate, 1)\n    \n    # return answer\n    return average_euro_rate\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 119,
      "prompt_tokens": 3862,
      "completion_tokens_details": {
        "text_tokens": 119
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 3593
      },
      "total_tokens": 3981
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2011年11月到2014年6月期间欧元区基准利率的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    rate_2011_11 = 1.5\n    rate_2012_12 = 0.75\n    rate_2013_12 = 0.25\n    rate_2014_6 = 0.15\n\n    # Multi-step logic\n    total_rate = rate_2011_11 + rate_2012_12 + rate_2013_12 + rate_2014_6\n    average_rate = total_rate / 4\n    return round(average_rate, 1)",
    "image_id": "strategy_08_08_19_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3021",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2408-1.png",
      "./MultiFinance/images/2408-2.png",
      "./MultiFinance/images/2408-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2408-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-782",
    "output": [
      "month_change = -2.46\n    three_month_change = -16.30\n    \n    # Do math calculation to get the answer\n    difference = month_change - three_month_change\n    percentage_difference = (difference / abs(three_month_change)) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 78,
      "prompt_tokens": 1524,
      "completion_tokens_details": {
        "text_tokens": 78
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 1256
      },
      "total_tokens": 1602
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算标普香港BMI指数的月变动与3个月变动的差值，并将结果转换为百分比形式；请保留一位小数。",
    "python_solution": "def solution():\n    sp_hk_bmi_monthly = -2.46\n    sp_hk_bmi_3m = -16.30\n    diff = sp_hk_bmi_monthly - sp_hk_bmi_3m\n    percentage = diff * 100\n    return round(percentage, 1)",
    "image_id": "market_00_00_02_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2771",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3038-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3038-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-783",
    "output": [
      "year_4_2021 = -7.01\n    year_5_2021 = 31.27\n    year_6_2021 = 892\n    \n    # Do math calculation to get the answer\n    sum_year_4_5_2021 = year_4_2021 + year_5_2021\n    result = (sum_year_4_5_2021 / year_6_2021) * 100\n    \n    # return answer\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 147,
      "prompt_tokens": 1752,
      "completion_tokens_details": {
        "text_tokens": 147
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1475
      },
      "total_tokens": 1899
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年第四项指标与第五项指标的和，然后将该和值除以第六项指标，再将结果乘以100得到百分比；请保留两位小数。",
    "python_solution": "def solution():\n    value_2021_fourth = 66.65\n    value_2021_fifth = 3.86\n    value_2021_sixth = 13.55\n\n    sum_value = value_2021_fourth + value_2021_fifth\n    ratio = sum_value / value_2021_sixth\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "market_09_09_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2879",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3051-1.png",
      "./MultiFinance/images/3051-2.png",
      "./MultiFinance/images/3051-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3051-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-784",
    "output": [
      "total_percentage = 10.8 + 2.0 + 0.3 + 0.1\n    \n    # Do math calculation to get the answer\n    answer = round(total_percentage * 100, 1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 62,
      "prompt_tokens": 2036,
      "completion_tokens_details": {
        "text_tokens": 62
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1778
      },
      "total_tokens": 2098
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有小于60%的部分的总和，并将其作为整体的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_40_50 = 83.6\n    value_50_60 = 10.8\n    value_60_70 = 3.2\n    value_70_80 = 2.0\n    value_80_90 = 0.3\n    value_above_90 = 0.1\n\n    # Multi-step logic\n    total_below_60 = value_40_50 + value_50_60\n    percentage_of_total = (total_below_60 / 100) * 100\n    return round(percentage_of_total, 1)",
    "image_id": "company_12_12_19_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1654",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 4
      }
    },
    "difficulty": 3.951243718581427,
    "images": [
      "./MultiFinance/images/2382-1.png",
      "./MultiFinance/images/2382-2.png",
      "./MultiFinance/images/2382-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2382-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-785",
    "output": [
      "internal_sales_price_2023 = 711\n    external_sales_price_2023 = 452\n    internal_sales_price_2022 = 718\n    external_sales_price_2022 = 535\n    \n    difference_2023 = abs(internal_sales_price_2023 - external_sales_price_2023)\n    difference_2022 = abs(internal_sales_price_2022 - external_sales_price_2022)\n    \n    ratio = (difference_2023 / difference_2022) * 100\n    \n    # return answer\n    return round(ratio, 2)\n\n# Call the function and print the result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 171,
      "prompt_tokens": 1589,
      "completion_tokens_details": {
        "text_tokens": 171
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1315
      },
      "total_tokens": 1760
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年内外销煤吨价的差值占2022年内外销煤吨价差值的比例，并将结果转换为百分比形式，保留两位小数。",
    "python_solution": "def solution():\n    internal_price_2023 = 230\n    external_price_2023 = 711\n    diff_2023 = external_price_2023 - internal_price_2023\n\n    internal_price_2022 = 370\n    external_price_2022 = 718\n    diff_2022 = external_price_2022 - internal_price_2022\n\n    ratio = (diff_2023 / diff_2022) * 100\n    return round(ratio, 2)",
    "image_id": "company_31_31_10_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1719",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2545-1.png",
      "./MultiFinance/images/2545-2.png",
      "./MultiFinance/images/2545-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2545-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-786",
    "output": [
      "year_2021 = 148\n    year_2022 = 179\n    \n    # Do math calculation to get the answer\n    growth_rate = (year_2022 - year_2021) / year_2021 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 89,
      "prompt_tokens": 1702,
      "completion_tokens_details": {
        "text_tokens": 89
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1443
      },
      "total_tokens": 1791
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年与2022年内销煤吨毛利的增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2021 = 125\n    value_2022 = 155\n\n    # Multi-step logic\n    growth = (value_2022 - value_2021) / value_2021 * 100\n    return round(growth, 2)",
    "image_id": "company_31_31_10_figure_5",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1670",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2746-1.png",
      "./MultiFinance/images/2746-2.png",
      "./MultiFinance/images/2746-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2746-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-787",
    "output": [
      "operating_cash_flow_2021_to_2026 = sum([6885, 13389, -2118, -14299, 9289, 10116])\n    \n    # Do math calculation to get the answer\n    total_operating_cash_flow = round(operating_cash_flow_2021_to_2026)\n    \n    # return answer\n    return total_operating_cash_flow\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 112,
      "prompt_tokens": 1427,
      "completion_tokens_details": {
        "text_tokens": 112
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 1158
      },
      "total_tokens": 1539
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年到2026年的经营活动现金净流量总和，并将结果四舍五入至最接近的整数。",
    "python_solution": "def solution():\n    cash_flow_from_operations_2021 = 6885\n    cash_flow_from_operations_2022 = 13389\n    cash_flow_from_operations_2023 = -2118\n    cash_flow_from_operations_2024E = -14299\n    cash_flow_from_operations_2025E = 9289\n    cash_flow_from_operations_2026E = 10116\n\n    total_cash_flow_from_operations = cash_flow_from_operations_2021 + cash_flow_from_operations_2022 + cash_flow_from_operations_2023 + cash_flow_from_operations_2024E + cash_flow_from_operations_2025E + cash_flow_from_operations_2026E\n    return round(total_cash_flow_from_operations)",
    "image_id": "company_26_26_16_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1739",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 4.143134726391533,
    "images": [
      "./MultiFinance/images/2310-1.png",
      "./MultiFinance/images/2310-2.png",
      "./MultiFinance/images/2310-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2310-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-788",
    "output": [
      "total_growth_rate = -7.35 + (-6.18) + 78.58 + 47.2 + 3.09 + 56.36 + (-9.84) + (-4.46) + (-5.15) + (-14.35) + 27.39 + 3.58 + 33.52 + 6.23 + 19.99 + 41.45 + (-0.18) + 29.08 + 99.39 + 4.72\n    \n    # return answer\n    return round(total_growth_rate, 1)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 167,
      "prompt_tokens": 2326,
      "completion_tokens_details": {
        "text_tokens": 167
      },
      "prompt_tokens_details": {
        "text_tokens": 249,
        "image_tokens": 2077
      },
      "total_tokens": 2493
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有产品增长率的总和，并将结果保留一位小数。",
    "python_solution": "def solution():\n    growth_rates = [-7.35, -6.18, 78.58, 47.20, 3.09, 56.36, -9.84, -4.46, -5.15, -14.35, 27.39, 3.58, 33.52, 6.23, 19.99, 41.45, -0.18, 29.08, 99.39, 4.72]\n    total_growth = sum(growth_rates)\n    return round(total_growth, 1)",
    "image_id": "company_12_12_12_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1603",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 17
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 7,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 4
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2680-1.png",
      "./MultiFinance/images/2680-2.png",
      "./MultiFinance/images/2680-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2680-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-789",
    "output": [
      "EPS_2012 = 0.64\n    EPS_2011 = 0.51\n    \n    # Calculate the percentage change in EPS\n    percentage_change_EPS = ((EPS_2012 - EPS_2011) / EPS_2011) * 100\n    \n    # Return the result\n    return percentage_change_EPS\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 97,
      "prompt_tokens": 1506,
      "completion_tokens_details": {
        "text_tokens": 97
      },
      "prompt_tokens_details": {
        "text_tokens": 288,
        "image_tokens": 1218
      },
      "total_tokens": 1603
    },
    "model": "qwen-omni-turbo",
    "question": "What's the percentage change in earnings per share (EPS) for the Twenty-Six Weeks Ended July 28, 2012 compared to July 30, 2011 in %?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    net_income_2012 = 107040  # Net income for the year 2012\n    net_income_2011 = 89309  # Net income for the year 2011\n    weighted_avg_shares_outstanding_basic_2012 = 163898  # Weighted average common shares outstandingbasic for the year 2012\n    weighted_avg_shares_outstanding_basic_2011 = 173082  # Weighted average common shares outstandingbasic for the year 2011\n\n    #Do math calculation to get the answer\n    # Calculate EPS for both years\n    eps_2012 = net_income_2012 / weighted_avg_shares_outstanding_basic_2012\n    eps_2011 = net_income_2011 / weighted_avg_shares_outstanding_basic_2011\n\n    # Calculate percentage change in EPS\n    percentage_change_eps = ((eps_2012 - eps_2011) / eps_2011) * 100\n    answer = percentage_change_eps\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-93",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2003-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 13,
        "parentheses": 4
      }
    },
    "difficulty": 4.31748811353631,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-790",
    "output": [
      "year_2022_profit = 378\n    year_2023_profit = 141\n    year_2024_profit = 466\n    \n    average_profit = (year_2023_profit + year_2024_profit) / 2\n    comparison = round(average_profit - year_2022_profit, 1)\n    \n    # return answer\n    return comparison\n```"
    ],
    "usage": {
      "completion_tokens": 98,
      "prompt_tokens": 565,
      "completion_tokens_details": {
        "text_tokens": 98
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 290
      },
      "total_tokens": 663
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年和2024年的归母净利润的平均值，并将其与2022年的归母净利润进行比较；请保留一位小数。",
    "python_solution": "def solution():\n    net_profit_2022 = 378\n    net_profit_2023 = 141\n    net_profit_2024E = 466\n\n    average_net_profit_2023_2024 = (net_profit_2023 + net_profit_2024E) / 2\n    difference = average_net_profit_2023_2024 - net_profit_2022\n    return round(difference, 1)",
    "image_id": "company_02_02_00_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-95",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2904-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2904-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-791",
    "output": [
      "new_government_deposits = 136.18\n    new_overseas_deposits = 2.51\n    non_financial_corporate_deposits = 156.51\n    \n    # Calculate the difference between government deposits and overseas deposits\n    difference = new_government_deposits - new_overseas_deposits\n    \n    # Calculate the proportion of this difference relative to non-financial corporate deposits\n    proportion = (difference / non_financial_corporate_deposits) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(proportion, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 150,
      "prompt_tokens": 692,
      "completion_tokens_details": {
        "text_tokens": 150
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 427
      },
      "total_tokens": 842
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中新增政府存款与新增境外存款的差值，然后求该差值占新增非金融企业存款的比例；请保留两位小数。",
    "python_solution": "def solution():\n    government_deposits = 2.51\n    overseas_deposits = 66.15\n    non_financial_enterprise_deposits = 303.79\n\n    diff = government_deposits - overseas_deposits\n    ratio = diff / non_financial_enterprise_deposits\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "macro_07_07_06_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2490",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3018-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3018-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-792",
    "output": [
      "net_loss_3_months = -492  # Net loss for three months ended September 30, 2018\n    total_comprehensive_loss_year = net_loss_3_months * 4  # Total comprehensive loss after a year\n    \n    # return answer\n    return total_comprehensive_loss_year\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 81,
      "prompt_tokens": 1053,
      "completion_tokens_details": {
        "text_tokens": 81
      },
      "prompt_tokens_details": {
        "text_tokens": 292,
        "image_tokens": 761
      },
      "total_tokens": 1134
    },
    "model": "qwen-omni-turbo",
    "question": "If Zillow group inc. incurred 'Net loss' every three months at the same rate as in the three months ended September 30, 2019, what will be the total comprehensive loss after a year in USD?",
    "python_solution": "def solution():\n    #Define variables name and value\n    net_loss_3_months = 64649\n    other_comprehensive_loss_3_months = 112\n\n    #Do math calculation to get the answer\n    # Since there are 4 quarters in a year\n    net_loss_annual = 4 * net_loss_3_months\n    other_comprehensive_loss_annual = 4 * other_comprehensive_loss_3_months\n    total_comprehensive_loss_annual = net_loss_annual + other_comprehensive_loss_annual\n    return total_comprehensive_loss_annual\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-53",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1971-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 2,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-793",
    "output": [
      "pv0 = 99.41172\n    pv_plus = 99.32213\n    pv_minus = 99.50132\n    delta_curve = 3\n    delta_yield = 1\n    \n    # Do math calculation to get the answer\n    convexity = (delta_curve - delta_yield) / ((pv_plus + pv_minus) * (pv0 ** 2))\n    \n    # return answer\n    return round(convexity, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 123,
      "prompt_tokens": 1570,
      "completion_tokens_details": {
        "text_tokens": 123
      },
      "prompt_tokens_details": {
        "text_tokens": 328,
        "image_tokens": 1242
      },
      "total_tokens": 1693
    },
    "model": "qwen-omni-turbo",
    "question": "Taking into account the details for a conventional fixed-rate bond with no options where PV0 signifies the original bond price, PV+ denotes the bond's price when the yield to maturity is raised, PV_ indicates the new price of the bond when yield to maturity is reduced, ∆Curve shows the modification in the benchmark yield curve, and ∆Yield explains the alteration in the yield to maturity, what can you estimate as the bond's approximate convexity? Answer to three decimal places.",
    "python_solution": "def solution():\n    PV_minus = 99.50132\n    PV_plus = 99.32213\n    PV0 = 99.41172\n    delta_yield = 0.0001\n\n    ApproxConvexity = ((PV_minus + PV_plus) - 2 * PV0) / ((delta_yield) ** 2 * PV0)\n    \n    return ApproxConvexity",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 2,
          "/": 1,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 8
      }
    },
    "difficulty": 4.094344562222101,
    "source_id": "validation-43",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/305-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-794",
    "output": [
      "global_oil_demand_growth_rate = [4.2, -8.2, -13.5, -10.6, 0.3, 0.0, 4.2, -19.8, -12.2, -20.8, -21.0, -7.3]\n    \n    # Calculate the average growth rate\n    average_growth_rate = sum(global_oil_demand_growth_rate) / len(global_oil_demand_growth_rate)\n    \n    # Return the result with two decimal places\n    return round(average_growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 3248,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 2971
      },
      "total_tokens": 3389
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算24-01至24-12期间全球石油需求预期的月度增长率（相对于上个月），并求这些增长率的平均值；请保留两位小数。",
    "python_solution": "def solution():\n    values = [105.0, 105.6, 106.0, 106.3, 106.6, 106.9, 107.2, 107.5, 107.8, 108.1, 108.4, 108.7]\n    growth_rates = []\n    for i in range(1, len(values)):\n        growth_rate = (values[i] - values[i-1]) / values[i-1] * 100\n        growth_rates.append(growth_rate)\n    average_growth_rate = sum(growth_rates) / len(growth_rates)\n    return round(average_growth_rate, 2)",
    "image_id": "industry_06_06_06_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2054",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 11
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 14
      }
    },
    "difficulty": 4.430816798843313,
    "images": [
      "./MultiFinance/images/2250-1.png",
      "./MultiFinance/images/2250-2.png",
      "./MultiFinance/images/2250-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2250-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-795",
    "output": [
      "count = 0\n    \n    # Do math calculation to get the answer\n    for i in range(2):\n        if '165' in table.iloc[i].values:\n            count += 1\n    \n    # return answer\n    return count\n\n```"
    ],
    "usage": {
      "completion_tokens": 55,
      "prompt_tokens": 3147,
      "completion_tokens_details": {
        "text_tokens": 55
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 2890
      },
      "total_tokens": 3202
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中容量电价为165元/千瓦·年的省级电网数量，并将结果作为整数返回。",
    "python_solution": "def solution():\n    # 容量电价为165元/千瓦·年的省级电网数量\n    high_price_count = 0\n    # 列出所有容量电价为165元/千瓦·年的省级电网\n    high_price_grids = ['河南', '湖南', '重庆', '四川', '青海', '云南', '广西']\n    # 计算数量\n    for grid in high_price_grids:\n        high_price_count += 1\n    return high_price_count",
    "image_id": "industry_17_17_23_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2325",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 0
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3007-1.png",
      "./MultiFinance/images/3007-2.png",
      "./MultiFinance/images/3007-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3007-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-796",
    "output": [
      "year_1 = 2934\n    year_2 = 3843\n    year_3 = 4665\n    \n    # Do math calculation to get the answer\n    cagr = ((year_3 / year_1) ** (1/3)) - 1\n    answer = round(cagr * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 93,
      "prompt_tokens": 3003,
      "completion_tokens_details": {
        "text_tokens": 93
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 2735
      },
      "total_tokens": 3096
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算某公司在2024年至2026年期间归母净利润的复合年增长率（CAGR），并保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = 30.5\n    net_profit_2026 = 45.6\n    years = 2\n    cagr = ((net_profit_2026 / net_profit_2024) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_11_11_29_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1364",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2628-1.png",
      "./MultiFinance/images/2628-2.png",
      "./MultiFinance/images/2628-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2628-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-797",
    "output": [
      "tian_shen_zhi_yan_A_sensor_count = 24\n    tian_shen_zhi_yan_B_sensor_count = 18\n    \n    # Do math calculation to get the answer\n    sensor_total_difference = abs(tian_shen_zhi_yan_A_sensor_count - tian_shen_zhi_yan_B_sensor_count)\n    percentage_difference = (sensor_total_difference / tian_shen_zhi_yan_A_sensor_count) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 130,
      "prompt_tokens": 3834,
      "completion_tokens_details": {
        "text_tokens": 130
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 3556
      },
      "total_tokens": 3964
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算天神之眼-A与天神之眼-B的传感器总数差异，并将该差异占天神之眼-A传感器总数的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    sensors_A = 3 + 11 + 5 + 12  # 天神之眼-A的传感器总数\n    sensors_B = 1/2 + 11 + 5 + 12  # 天神之眼-B的传感器总数\n    diff = abs(sensors_A - sensors_B)  # 计算差值\n    ratio = diff / sensors_A  # 计算比例\n    percentage = ratio * 100  # 转换为百分比\n    return round(percentage, 1)",
    "image_id": "industry_08_08_17_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2228",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 3,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 4.564348191467836,
    "images": [
      "./MultiFinance/images/2228-1.png",
      "./MultiFinance/images/2228-2.png",
      "./MultiFinance/images/2228-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2228-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-798",
    "output": [
      "cash_flow_2023 = 67\n    cash_flow_2022 = 194\n    net_profit_2022 = 139\n    \n    # Calculate the difference between 2023 and 2022 operating cash flows\n    diff_cash_flow = cash_flow_2023 - cash_flow_2022\n    \n    # Calculate the percentage change in operating cash flow relative to 2022's net profit\n    percentage_change = (diff_cash_flow / net_profit_2022) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(percentage_change, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 162,
      "prompt_tokens": 2939,
      "completion_tokens_details": {
        "text_tokens": 162
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 2660
      },
      "total_tokens": 3101
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2022年经营活动现金流的差值，并将该差值占2022年净利润的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    cash_flow_2022 = 194\n    cash_flow_2023 = 67\n    net_profit_2022 = 249\n\n    diff = cash_flow_2023 - cash_flow_2022\n    ratio = diff / net_profit_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_38_38_27_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1162",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2965-1.png",
      "./MultiFinance/images/2965-2.png",
      "./MultiFinance/images/2965-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2965-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-799",
    "output": [
      "year_1 = 2025\n    year_n = 2029\n    value_1 = 103\n    value_n = 750\n    \n    # Do math calculation to get the answer\n    cagr = ((value_n/value_1)**(1/(year_n-year_1)) - 1) * 100\n    \n    # return answer\n    return round(cagr, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 100,
      "prompt_tokens": 1542,
      "completion_tokens_details": {
        "text_tokens": 100
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1280
      },
      "total_tokens": 1642
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2025年到2029年的复合年增长率（CAGR），并保留两位小数。",
    "python_solution": "def solution():\n    value_2025 = 53\n    value_2029 = 750\n    years = 4  # From 2025 to 2029\n\n    cagr = ((value_2029 / value_2025) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_08_08_15_figure_5",
    "source": "CRRQA",
    "source_id": "CRRQA-company-597",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2606-1.png",
      "./MultiFinance/images/2606-2.png",
      "./MultiFinance/images/2606-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2606-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-800",
    "output": [
      "year_2009_return = 20\n    year_2010_return = -30\n    year_2011_return = 15\n    \n    # Calculate the product of returns\n    product_of_returns = (1 + year_2009_return/100) * (1 + year_2010_return/100) * (1 + year_2011_return/100)\n    \n    # Calculate the geometric mean return\n    geometric_mean_return = ((product_of_returns ** (1/3)) - 1) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(geometric_mean_return, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 170,
      "prompt_tokens": 1500,
      "completion_tokens_details": {
        "text_tokens": 170
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1242
      },
      "total_tokens": 1670
    },
    "model": "qwen-omni-turbo",
    "question": "What is the yearly geometric mean return of this investment over a three-year period (expressed as a percentage)? Answer to two decimal places.",
    "python_solution": "def solution():\n    return round((((1 + 0.2) * (1 - 0.3) * (1 + 0.15))**(1/3) - 1) * 100, 2)",
    "topic": "Portfolio Management & Strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 3,
          "/": 1,
          "%": 0,
          "**": 1
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 1,
        "parentheses": 14
      }
    },
    "difficulty": 4.276666119016055,
    "source_id": "validation-187",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/360-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-801",
    "output": [
      "total_lease_payments = 193542\n    interest = 15028\n    present_value_of_lease_liabilities = 178514\n    \n    # Calculate the total lease payments including inflation\n    inflation_rate = 0.02\n    total_lease_payments_inflation = total_lease_payments * (1 + inflation_rate)\n    \n    # Calculate the present value of lease liabilities including inflation\n    present_value_of_lease_liabilities_inflation = present_value_of_lease_liabilities * (1 + inflation_rate)\n    \n    # Calculate the amount the company should anticipate to pay for operating lease liabilities in 2021\n    amount_to_pay = total_lease_payments_inflation - interest\n    \n    # return answer\n    return amount_to_pay\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 180,
      "prompt_tokens": 1041,
      "completion_tokens_details": {
        "text_tokens": 180
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 761
      },
      "total_tokens": 1221
    },
    "model": "qwen-omni-turbo",
    "question": "How much should the company anticipate to pay for operating lease liabilities in 2021 if the inflation rate for that year is projected to be 2% (in thousands)?",
    "python_solution": "def solution():\n\n    lease_liabilities_2021 = 39184 # in thousands.\n\n    # Define variable from the inflation rate\n    inflation_rate = 2 # 2% projected inflation rate in 2021. \n\n    # Do the math calculation to get the answer\n    adjusted_lease_liabilities_2021 = lease_liabilities_2021 * (1 + inflation_rate / 100)\n    answer = adjusted_lease_liabilities_2021\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-110",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2018-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 1,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-802",
    "output": [
      "russia = 17\n    new_zealand = 13\n    japan = 7\n    \n    total = russia + new_zealand + japan\n    proportion = total / (russia + new_zealand + japan + 68 + 154)\n    \n    # return answer\n    return round(proportion * 100, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 2401,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2142
      },
      "total_tokens": 2488
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中俄罗斯、新西兰和日本的数据之和，然后求该和占总数据的比例；请保留两位小数。",
    "python_solution": "def solution():\n    russia_value = 17\n    new_zealand_value = 13\n    japan_value = 7\n    total_value = russia_value + new_zealand_value + japan_value\n    all_values = [1, 3, 4, 5, 7, 13, 17, 68, 154]\n    total_sum = sum(all_values)\n    ratio = total_value / total_sum * 100\n    return round(ratio, 2)",
    "image_id": "company_03_03_13_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-11",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2529-1.png",
      "./MultiFinance/images/2529-2.png",
      "./MultiFinance/images/2529-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2529-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-803",
    "output": [
      "growth_rate_2025 = (8.2% - (-4.2%)) / (-4.2%) * 100\n    growth_rate_2026 = (25.8% - 20.5%) / 20.5% * 100\n    \n    # return answer\n    return round(growth_rate_2025 + growth_rate_2026, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 101,
      "prompt_tokens": 2131,
      "completion_tokens_details": {
        "text_tokens": 101
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1870
      },
      "total_tokens": 2232
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2025年与2024年的归属母公司净利润增长率，并将结果保留一位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = -4.2\n    net_profit_2025 = 20.5\n    growth_rate = (net_profit_2025 - net_profit_2024) / abs(net_profit_2024) * 100\n    return round(growth_rate, 1)",
    "image_id": "company_06_06_39_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1501",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 6
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2829-1.png",
      "./MultiFinance/images/2829-2.png",
      "./MultiFinance/images/2829-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2829-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-804",
    "output": [
      "tenth_item_2024 = -9.68%\n    benchmark_value_2024 = 8.46%\n    excess_value_2024 = -2.13%\n    \n    # Calculate the difference between the tenth item and the benchmark value in 2024\n    difference = tenth_item_2024 - benchmark_value_2024\n    \n    # Divide the difference by the excess value and multiply by 100 to get the percentage\n    result = (difference / excess_value_2024) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 159,
      "prompt_tokens": 1703,
      "completion_tokens_details": {
        "text_tokens": 159
      },
      "prompt_tokens_details": {
        "text_tokens": 275,
        "image_tokens": 1428
      },
      "total_tokens": 1862
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年第十项指标与基准值的差值，并将该差值除以超额值，然后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_2024_tenth = -4.67\n    base_value = 16.64\n    excess_value = 21.31\n\n    diff = value_2024_tenth - base_value\n    ratio = diff / excess_value\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_23_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2849",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2786-1.png",
      "./MultiFinance/images/2786-2.png",
      "./MultiFinance/images/2786-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2786-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-805",
    "output": [
      "year_1 = 776\n    year_2 = 1128\n    \n    # Do math calculation to get the answer\n    growth_rate = ((year_2 - year_1) / year_1) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 76,
      "prompt_tokens": 2294,
      "completion_tokens_details": {
        "text_tokens": 76
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 2034
      },
      "total_tokens": 2370
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年到2022年的主营业务收入增长率，并将结果保留两位小数。",
    "python_solution": "def calculate_growth_rate_2021_to_2022():\n    revenue_2021 = 776\n    revenue_2022 = 1128\n    growth_rate = (revenue_2022 - revenue_2021) / revenue_2021 * 100\n    return round(growth_rate, 2)\n",
    "image_id": "company_37_37_17_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-533",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2936-1.png",
      "./MultiFinance/images/2936-2.png",
      "./MultiFinance/images/2936-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2936-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-806",
    "output": [
      "shuihuatei_capacity = 1050 + 400\n    in_construction_capacity = 50 + 1200\n    \n    total_capacity = shuihuatei_capacity + in_construction_capacity\n    \n    # Do math calculation to get the answer\n    answer = round(total_capacity)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 80,
      "prompt_tokens": 1616,
      "completion_tokens_details": {
        "text_tokens": 80
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1358
      },
      "total_tokens": 1696
    },
    "model": "qwen-omni-turbo",
    "question": "请计算瑞华泰公司已建产能与在建产能的总和，并将结果四舍五入到整数。",
    "python_solution": "def solution():\n    built_capacity_shenzhen = 1050\n    built_capacity_jiaxing = 400\n    under_construction_capacity_shenzhen = 50\n    under_construction_capacity_jiaxing = 1200\n\n    total_built_capacity = built_capacity_shenzhen + built_capacity_jiaxing\n    total_under_construction_capacity = under_construction_capacity_shenzhen + under_construction_capacity_jiaxing\n\n    total_capacity = total_built_capacity + total_under_construction_capacity\n    return round(total_capacity)",
    "image_id": "industry_04_04_21_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2175",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2889-1.png",
      "./MultiFinance/images/2889-2.png",
      "./MultiFinance/images/2889-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2889-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-807",
    "output": [
      "year_2020 = [919, 823, 956, 875, 859, 828, 859, 865, 1013, 946, 795]\n    year_2024 = [923, 823, 956, 875, 859, 828, 859, 865, 1013, 946, 795]\n    year_2021 = [1105, 1030, 1119, 1059, 1001, 926, 826, 865, 1013, 946, 795]\n    \n    # Calculate the difference between 2020 and 2024 for each month\n    diff = []\n    for i in range(len(year_2020)):\n        diff.append(year_2020[i] - year_2024[i])\n    \n    # Calculate the sum of differences divided by 2021 total\n    result = (sum(diff) / sum(year_2021)) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 328,
      "prompt_tokens": 1760,
      "completion_tokens_details": {
        "text_tokens": 328
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1483
      },
      "total_tokens": 2088
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年与2024年的差值，并将结果除以2021年的总和，最后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    total_2020 = 919 + 886 + 859 + 801 + 859 + 859\n    total_2024 = 1013 + 865 + 845 + 795\n    diff = total_2020 - total_2024\n    ratio = diff / (923 + 823 + 859 + 875 + 859 + 828 + 859)\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "industry_17_17_16_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2318",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 14,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 17
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 4.9126548857360515,
    "images": [
      "./MultiFinance/images/2182-1.png",
      "./MultiFinance/images/2182-2.png",
      "./MultiFinance/images/2182-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2182-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-808",
    "output": [
      "import numpy as np\n\n    data = [\n        [9.5, -8], [10.2, -6.9], [17.3, -11.1], [19.3, -7.5], [33.3, -9.8],\n        [65.6, -10.5], [46.4, -14.1], [52.9, -7.6], [65.4, -5.3], [89.6, -2.9],\n        [72.8, -0.5], [27.4, -7.5], [12.7, -8.4], [19.4, -1.8], [24.6, 10.7],\n        [27.0, -0.9], [22.4, 9.6], [30.5, 13.5], [26.4, 17.8], [15.9, -8.3],\n        [12.0, -0.1]\n    ]\n\n    # Do math calculation to get the answer\n    median_value = np.median([item[1] for item in data])\n\n    # return answer\n    return median_value\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 299,
      "prompt_tokens": 2752,
      "completion_tokens_details": {
        "text_tokens": 299
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 2488
      },
      "total_tokens": 3051
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2014年7月31日至2015年1月31日期间，商品6月涨幅的中位数。",
    "python_solution": "def solution():\n    commodity_jul = -8.0\n    commodity_aug = -6.9\n    commodity_sep = -11.1\n    commodity_oct = -7.5\n    commodity_nov = -9.8\n    commodity_dec = -10.5\n    commodity_jan = -14.1\n\n    sorted_commodity = sorted([commodity_jul, commodity_aug, commodity_sep, commodity_oct, commodity_nov, commodity_dec, commodity_jan])\n    median_commodity = sorted_commodity[len(sorted_commodity) // 2]\n    return median_commodity",
    "image_id": "strategy_03_03_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2940",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 7,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 4.68213122712422,
    "images": [
      "./MultiFinance/images/2208-1.png",
      "./MultiFinance/images/2208-2.png",
      "./MultiFinance/images/2208-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2208-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-809",
    "output": [
      "total_less_than_5_percent = sum([13%, 9%, 7%, 4%, 2%, 1%, 8%, 6%, 4%, 3%, 3%, 3%])\n    \n    # Do math calculation to get the answer\n    percentage_total_less_than_5_percent = (total_less_than_5_percent / 100) * 100\n    \n    # return answer\n    return round(percentage_total_less_than_5_percent, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 108,
      "prompt_tokens": 2164,
      "completion_tokens_details": {
        "text_tokens": 108
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 1904
      },
      "total_tokens": 2272
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有小于5%的部分的总和，并将其表示为整个饼图的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_3_percent = 0.03\n    value_4_percent = 0.04\n\n    # Multi-step logic\n    total_small_parts = value_3_percent * 2 + value_4_percent * 2\n    percentage_of_total = total_small_parts * 100\n    return round(percentage_of_total, 1)",
    "image_id": "industry_19_19_16_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2386",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 3,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2576-1.png",
      "./MultiFinance/images/2576-2.png",
      "./MultiFinance/images/2576-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2576-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-810",
    "output": [
      "year_2021 = 4026.4\n    year_2022 = 6120\n    year_2023 = 6381.6\n    year_2024 = 7160.20\n    \n    # Calculate the total growth rate from 2021 to 2024\n    total_growth_rate = (year_2024 - year_2021) / year_2021\n    \n    # Calculate the annual growth rate by dividing the total growth rate by 3 years\n    annual_growth_rate = total_growth_rate / 3\n    \n    # Return the result rounded to two decimal places\n    return round(annual_growth_rate * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 182,
      "prompt_tokens": 2945,
      "completion_tokens_details": {
        "text_tokens": 182
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 2684
      },
      "total_tokens": 3127
    },
    "model": "qwen-omni-turbo",
    "question": "请计算牧原股份2021年到2024年的生猪出栏量的年均增长率，并保留两位小数。",
    "python_solution": "def solution():\n    value_2021 = 4026.4\n    value_2024 = 7160.20\n    years = 3\n    growth_rate = ((value_2024 / value_2021) ** (1/years) - 1) * 100\n    return round(growth_rate, 2)",
    "image_id": "industry_02_02_08_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2061",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2497-1.png",
      "./MultiFinance/images/2497-2.png",
      "./MultiFinance/images/2497-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2497-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-811",
    "output": [
      "yoy_meta_2021 = 69%\n    meta_2021 = 186\n    answer = (yoy_meta_2021 - 100%) * 100 / meta_2021\n    \n    return round(answer, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 68,
      "prompt_tokens": 1413,
      "completion_tokens_details": {
        "text_tokens": 68
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 1142
      },
      "total_tokens": 1481
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中上一年度与本年度的某指标值以及对应费用，先计算差值，再求该差值占费用的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_last_year = 1000\n    value_this_year = 1200\n    some_fee_last_year = 800\n    some_fee_this_year = 900\n\n    diff_value = value_this_year - value_last_year\n    diff_fee = some_fee_this_year - some_fee_last_year\n    ratio = diff_value / diff_fee\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "industry_15_15_05_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2162",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2550-1.png",
      "./MultiFinance/images/2550-2.png",
      "./MultiFinance/images/2550-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2550-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-812",
    "output": [
      "zeta_market_share = 35\n    yusef_market_share = 25\n    xenon_market_share = 20\n    waters_market_share = 10\n    vlastos_market_share = 10\n    \n    # Calculate the HHI\n    hhi = (zeta_market_share ** 2 + yusef_market_share ** 2 + \n           xenon_market_share ** 2 + waters_market_share ** 2 + \n           vlastos_market_share ** 2)\n    \n    # Return the HHI rounded to the nearest integer\n    return round(hhi)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 1514,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 1242
      },
      "total_tokens": 1655
    },
    "model": "qwen-omni-turbo",
    "question": "What is the three-firm Herfindahl-Hirschmann Index for the sector, given that a researcher collected the following market share data for a sector made up of five firms? Answer to the nearest integer.",
    "python_solution": "def solution():\n    # three firms' market shares\n    firm1_share = 35\n    firm2_share = 25\n    firm3_share = 20\n    \n    # Herfindahl-Hirschmann Index\n    hhi = firm1_share**2 + firm2_share**2 + firm3_share**2\n    \n    return hhi",
    "topic": "Market Analysis & Economics",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 3
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 0
      }
    },
    "difficulty": 3.737669618283368,
    "source_id": "validation-6",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/290-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-813",
    "output": [
      "stockholders_equity_2022 = 2822\n    stockholders_equity_q1_2023 = 10602\n    \n    # Calculate the difference\n    difference = stockholders_equity_q1_2023 - stockholders_equity_2022\n    \n    # return answer\n    return difference\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 915,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 292,
        "image_tokens": 623
      },
      "total_tokens": 1006
    },
    "model": "qwen-omni-turbo",
    "question": "What is the difference of the company's stockholders' equity between the end of 2022 and the first quarter of 2023, resulted from operations rather than financial activities like stock offerings, in thousands of dollars?",
    "python_solution": "def solution():\n    #Define variables name and value\n\n    initial_equity_2023 = 2534        # Stockholders' Equity at December 31, 2022\n    final_equity_2023 = 10602         # Stockholders' Equity at March 31, 2023\n    offering_common_stock = 1437      # Direct offering of common stock\n    offering_prefunded_warrants = 3545 # Direct offering of pre-funded warrants\n\n    #Do math calculation to get the answer\n    operations_related_equity_increase = final_equity_2023 - initial_equity_2023 - offering_common_stock - offering_prefunded_warrants\n    answer = operations_related_equity_increase\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-248",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2105-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.58351893845611,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-814",
    "output": [
      "cagr_nscl_2018_2021 = ((4.7/1) ** (1/3)) - 1\n    answer = round(cagr_nscl_2018_2021 * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 72,
      "prompt_tokens": 1687,
      "completion_tokens_details": {
        "text_tokens": 72
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1422
      },
      "total_tokens": 1759
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年至2021年NSCLC的复合年增长率（CAGR），并保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    sales_2018 = 5.0\n    sales_2021 = 26.0\n    years = 3\n\n    # Multi-step logic\n    cagr = ((sales_2021 / sales_2018) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_00_00_15_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-238",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2345-1.png",
      "./MultiFinance/images/2345-2.png",
      "./MultiFinance/images/2345-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2345-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-815",
    "output": [
      "coal_revenue_2016 = 2440\n    coal_revenue_2015 = 3237\n    coal_revenue_2014 = 4127\n    \n    total_revenue_2016 = 18601\n    total_revenue_2015 = 20397\n    total_revenue_2014 = 22560\n    \n    # Calculate percentages\n    coal_percentage_2016 = (coal_revenue_2016 / total_revenue_2016) * 100\n    coal_percentage_2015 = (coal_revenue_2015 / total_revenue_2015) * 100\n    coal_percentage_2014 = (coal_revenue_2014 / total_revenue_2014) * 100\n    \n    # Calculate average percentage over the years\n    average_coal_percentage = (coal_percentage_2016 + coal_percentage_2015 + coal_percentage_2014) / 3\n    \n    # Return the result rounded to three decimal places\n    return round(average_coal_percentage, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 287,
      "prompt_tokens": 2221,
      "completion_tokens_details": {
        "text_tokens": 287
      },
      "prompt_tokens_details": {
        "text_tokens": 994,
        "image_tokens": 1227
      },
      "total_tokens": 2508
    },
    "model": "qwen-omni-turbo",
    "question": "what percentage of total operating revenues from 2014-2016 is the revenue from coal? Answer to three decimal places.",
    "answer": "14.913",
    "context": "notes to the consolidated financial statements union pacific corporation and subsidiary companies for purposes of this report , unless the context otherwise requires , all references herein to the 201ccorporation 201d , 201ccompany 201d , 201cupc 201d , 201cwe 201d , 201cus 201d , and 201cour 201d mean union pacific corporation and its subsidiaries , including union pacific railroad company , which will be separately referred to herein as 201cuprr 201d or the 201crailroad 201d . 1 . nature of operations operations and segmentation 2013 we are a class i railroad operating in the u.s . our network includes 32070 route miles , linking pacific coast and gulf coast ports with the midwest and eastern u.s . gateways and providing several corridors to key mexican gateways . we own 26053 miles and operate on the remainder pursuant to trackage rights or leases . we serve the western two-thirds of the country and maintain coordinated schedules with other rail carriers for the handling of freight to and from the atlantic coast , the pacific coast , the southeast , the southwest , canada , and mexico . export and import traffic is moved through gulf coast and pacific coast ports and across the mexican and canadian borders . the railroad , along with its subsidiaries and rail affiliates , is our one reportable operating segment . although we provide and analyze revenue by commodity group , we treat the financial results of the railroad as one segment due to the integrated nature of our rail network . the following table provides freight revenue by commodity group: .\n\n<image 1>\n\nalthough our revenues are principally derived from customers domiciled in the u.s. , the ultimate points of origination or destination for some products we transport are outside the u.s . each of our commodity groups includes revenue from shipments to and from mexico . included in the above table are freight revenues from our mexico business which amounted to $ 2.2 billion in 2016 , $ 2.2 billion in 2015 , and $ 2.3 billion in 2014 . basis of presentation 2013 the consolidated financial statements are presented in accordance with accounting principles generally accepted in the u.s . ( gaap ) as codified in the financial accounting standards board ( fasb ) accounting standards codification ( asc ) . 2 . significant accounting policies principles of consolidation 2013 the consolidated financial statements include the accounts of union pacific corporation and all of its subsidiaries . investments in affiliated companies ( 20% ( 20 % ) to 50% ( 50 % ) owned ) are accounted for using the equity method of accounting . all intercompany transactions are eliminated . we currently have no less than majority-owned investments that require consolidation under variable interest entity requirements . cash and cash equivalents 2013 cash equivalents consist of investments with original maturities of three months or less . accounts receivable 2013 accounts receivable includes receivables reduced by an allowance for doubtful accounts . the allowance is based upon historical losses , credit worthiness of customers , and current economic conditions . receivables not expected to be collected in one year and the associated allowances are classified as other assets in our consolidated statements of financial position. .\n",
    "program": "revenue_2016 = 19941\nrevenue_2015 = 21813\nrevenue_2014 = 23988\ntotal_revenue = revenue_2016 + revenue_2015 + revenue_2014\ncoal_revenue = 2440 + 3237 + 4127\nanswer = coal_revenue / total_revenue * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 92,
        "total_numbers": 94
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 0
      }
    },
    "difficulty": 3.58351893845611,
    "source_id": "test-654",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1306-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-816",
    "output": [
      "deferred_financing_costs_first_lien_term_facility = 5432000\n    amortization_period_first_lien_term_facility = 7\n    principal_amount_loan = 4450\n    \n    # Calculate the annual nominal interest rate\n    annual_nominal_interest_rate = (deferred_financing_costs_first_lien_term_facility / principal_amount_loan) * (100 / amortization_period_first_lien_term_facility)\n    \n    # Return the answer\n    return round(annual_nominal_interest_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 129,
      "prompt_tokens": 1690,
      "completion_tokens_details": {
        "text_tokens": 129
      },
      "prompt_tokens_details": {
        "text_tokens": 470,
        "image_tokens": 1220
      },
      "total_tokens": 1819
    },
    "model": "qwen-omni-turbo",
    "question": "What is the annual nominal interest rate if the company's deferred financing costs on the First Lien Term Facility for fiscal 2022 is $5,432,000 to be amortized over seven years and the principal amount of the loan is equal to the company's total long-term debt, in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n     deferred_financing_costs = 5432000 \n     amortization_period = 7\n     long_term_debt = 244504000 \n\n     #Do math calculation to get the answer\n     interest_rate = (deferred_financing_costs / long_term_debt) / amortization_period * 100\n     answer = round(interest_rate, 2)\n     return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-18",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1950-1.png"
    ],
    "context": "Further, in fiscal 2022 the Company expects to record $5,432,000 in deferred financing costs on the First Lien Term Facility, which will be amortized over seven years. The Company expects to record $4,027,000 in deferred financings costs on the New Revolver, of which $3,050,000 is related to the new Revolver and $977,000 is carried over from the Company's prior Revolver as certain Revolver lenders increased their borrowing capacity. These balances will be amortized over five years and classified in Other assets since no funds are expected to be drawn on the New Revolver in the first quarter of fiscal 2022.\n<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 0,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.401197381662156,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-817",
    "output": [
      "borrowings_including_interest_total = -5657.8\n    borrowings_including_interest_over_5_years = -2000\n    \n    # Do math calculation to get the answer\n    percentage = (borrowings_including_interest_over_5_years / borrowings_including_interest_total) * 100\n    \n    # return answer\n    return percentage\n\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 83,
      "prompt_tokens": 1910,
      "completion_tokens_details": {
        "text_tokens": 83
      },
      "prompt_tokens_details": {
        "text_tokens": 650,
        "image_tokens": 1260
      },
      "total_tokens": 1993
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage of borrowings (including interest) that matures over 5 years in the total borrowings in 2019 if the amount maturing over 5 years is now (2,000) million? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    over_5_years = 2000\n    old_over_5_years = 1716.1\n    total_borrowings_2019 = 5657.8\n    \n    # Do math calculation to get the answer\n    new_total_borrowings = (total_borrowings_2019 - old_over_5_years + over_5_years)\n    answer = (over_5_years / new_total_borrowings) * 100\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-155",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Liquidity risk Liquidity risk is managed to enable the Group to meet future payment obligations when financial liabilities fall due. Liquidity analysis is conducted to determine that sufficient headroom is available to meet the Group’s operational requirements and committed investments. The Group treasury policy aims to meet this objective by maintaining adequate cash, marketable securities and committed facilities. Undrawn borrowing facilities are detailed in note 23. The Group’s policy is to seek to optimise its exposure to liquidity risk by balancing its exposure to interest rate risk and to refinancing risk. In effect the Group seeks to borrow for as long as possible at the lowest acceptable cost. Group policy is to maintain a weighted average debt maturity of over five years. At 31 December 2019, the maturity profile of Group debt showed an average maturity of five years (2018: six years). The Group regularly reviews the maturity profile of its borrowings and seeks to avoid concentration of maturities through the regular replacement of facilities and by arranging a selection of maturity dates. Refinancing risk may be reduced by doing so prior to the contracted maturity date. The change in valuation of an asset used as security for a debt facility may impact the Group’s ability to refinance that debt facility at the same quantum as currently outstanding. The Group does not use supplier financing arrangements to manage liquidity risk. The tables below set out the maturity analysis of the Group’s financial liabilities based on the undiscounted contractual obligations to make payments of interest and to repay principal. Where interest payment obligations are based on a floating rate, the rates used are those implied by the par yield curve for the relevant currency. Where payment obligations are in foreign currencies, the spot exchange rate at the balance sheet date is used.",
    "images": [
      "./MultiFinance/images/1894-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-818",
    "output": [
      "childrens_book_publishing_and_distribution_2022 = -30.1\n    childrens_book_publishing_and_distribution_2021 = -21.7\n    \n    # Calculate the change in profit margin\n    change_in_profit_margin = ((childrens_book_publishing_and_distribution_2022 - childrens_book_publishing_and_distribution_2021) / abs(childrens_book_publishing_and_distribution_2021)) * 100\n    \n    # Return the answer\n    return round(change_in_profit_margin, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 122,
      "prompt_tokens": 1250,
      "completion_tokens_details": {
        "text_tokens": 122
      },
      "prompt_tokens_details": {
        "text_tokens": 282,
        "image_tokens": 968
      },
      "total_tokens": 1372
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in profit margin for the company's \"Children's Book Publishing and Distribution\" segment from fiscal year 2021 to 2022 (in percentage)?",
    "python_solution": "def solution():\n  # Define variables name and value\n  revenue_2022 = 124.7 \n  revenue_2021 = 115.8\n  operating_income_2022 = -30.1\n  operating_income_2021 = -21.7\n\n  # Do math calculation to get the answer\n  profit_margin_2022 = operating_income_2022 / revenue_2022\n  profit_margin_2021 = operating_income_2021 / revenue_2021\n  change_in_profit_margin = profit_margin_2022 - profit_margin_2021\n  answer = change_in_profit_margin * 100\n  return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-116",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2023-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 0
      }
    },
    "difficulty": 4.189654742026425,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-819",
    "output": [
      "year_2023_revenue = 857\n    year_2024_revenue = 1537\n    \n    # Do math calculation to get the answer\n    growth_rate = (year_2024_revenue - year_2023_revenue) / year_2023_revenue * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 100,
      "prompt_tokens": 3416,
      "completion_tokens_details": {
        "text_tokens": 100
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 3157
      },
      "total_tokens": 3516
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年预计的光电半导体业务营收与2023年相比的增长率，并保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    revenue_photovoltaic_2023 = 857\n    revenue_photovoltaic_2024E = 1537\n\n    # Multi-step logic\n    growth_rate = (revenue_photovoltaic_2024E - revenue_photovoltaic_2023) / revenue_photovoltaic_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_28_28_15_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-216",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2699-1.png",
      "./MultiFinance/images/2699-2.png",
      "./MultiFinance/images/2699-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2699-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-820",
    "output": [
      "average_liability_ratio = 41.83\n    liance_precision_liability_ratio = 53.96\n    \n    # Do math calculation to get the answer\n    ratio = (liance_precision_liability_ratio / average_liability_ratio) * 100\n    \n    # return answer\n    return round(ratio, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 90,
      "prompt_tokens": 2457,
      "completion_tokens_details": {
        "text_tokens": 90
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 2199
      },
      "total_tokens": 2547
    },
    "model": "qwen-omni-turbo",
    "question": "请计算联诚精密的资产负债率占平均资产负债率的比例，并将结果转换为百分比；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    debt_ratio_liancheng = 53.96\n    avg_debt_ratio = 41.83\n\n    # Multi-step logic\n    ratio = debt_ratio_liancheng / avg_debt_ratio\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "company_17_17_21_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-84",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2903-1.png",
      "./MultiFinance/images/2903-2.png",
      "./MultiFinance/images/2903-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2903-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-821",
    "output": [
      "ebit_2023 = -100.5\n    ebit_2024 = -1511.3\n    ebit_2025 = 196.0\n    \n    # Calculate EBIT growth rate from 2023 to 2024\n    ebit_growth_rate_2023_to_2024 = (ebit_2024 - ebit_2023) / abs(ebit_2023)\n    \n    # Calculate EBIT growth rate in 2025\n    ebit_growth_rate_2025 = (ebit_2025 - ebit_2024) / abs(ebit_2024)\n    \n    # Compare the two growth rates\n    if ebit_growth_rate_2023_to_2024 > ebit_growth_rate_2025:\n        result = \"增长\"\n    else:\n        result = \"下降\"\n    \n    # Return the result with one decimal place\n    return round(result, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 251,
      "prompt_tokens": 3194,
      "completion_tokens_details": {
        "text_tokens": 251
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 2926
      },
      "total_tokens": 3445
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2024年EBIT增长率的变化，并将其与2025年的EBIT增长率进行比较，结果保留一位小数。",
    "python_solution": "def solution():\n    ebit_growth_2023 = -100.5\n    ebit_growth_2024 = -1511.3\n    ebit_growth_2025 = 196.0\n\n    change_2023_to_2024 = ebit_growth_2024 - ebit_growth_2023\n    comparison_2025 = ebit_growth_2025 - change_2023_to_2024\n    return round(comparison_2025, 1)",
    "image_id": "company_15_15_26_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1936",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2840-1.png",
      "./MultiFinance/images/2840-2.png",
      "./MultiFinance/images/2840-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2840-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-822",
    "output": [
      "domestic_manufacturers_deduction_2017 = -2545\n    domestic_manufacturers_deduction_2018 = -3200\n    \n    # Calculate the percentage change\n    percentage_change = ((domestic_manufacturers_deduction_2018 - domestic_manufacturers_deduction_2017) / abs(domestic_manufacturers_deduction_2017)) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 126,
      "prompt_tokens": 1973,
      "completion_tokens_details": {
        "text_tokens": 126
      },
      "prompt_tokens_details": {
        "text_tokens": 713,
        "image_tokens": 1260
      },
      "total_tokens": 2099
    },
    "model": "qwen-omni-turbo",
    "question": "What was the percentage change in the Domestic manufacturers deduction from 2017 to 2018? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    domestic_manufacturers_deduction_2017 = 4095\n    domestic_manufacturers_deduction_2018 = -2545\n    \n    # Do math calculation to get the answer\n    answer = (domestic_manufacturers_deduction_2018 / domestic_manufacturers_deduction_2017) - 1\n    \n    return answer * 100",
    "source": "TAT-QA",
    "source_id": "simpshort-testmini-20",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n The differences between income tax expense (benefit) at the Company’s effective income tax rate and income tax\nexpense at the statutory federal income tax rate were as follows: In December 2017, the President of the United States signed into law the Tax Cuts and Jobs Act of 2017 (the “Act”), which among other matters reduced the United States corporate tax rate from 35% to 21% effective January 1, 2018. In fiscal 2018, the Company recorded a $43 million tax benefit primarily related to the remeasurement of certain deferred tax assets and liabilities. Federal and state income taxes of $36.5 million, $2.1 million, and $3.7 million were paid in fiscal years 2019, 2018, and 2017, respectively. Federal and state income taxes of $418,000, $47.2 million, and $17.6 million were refunded in fiscal years 2019, 2018, and 2017, respectively. The Company may recognize the tax benefit from an uncertain tax position only if it is more likely than not that the tax position will be sustained on examination by the taxing authorities, based on the technical merits of the position. The Company measures the tax benefits recognized based on the largest benefit that has a greater than 50% likelihood of being realized upon ultimate resolution. As of June 1, 2019, there were no uncertain tax positions that resulted in any adjustment to the Company’s provision for income taxes. We are under audit by the IRS for the fiscal years 2013 through 2015. We are subject to income tax in many jurisdictions within the U.S., and certain jurisdictions are under audit by state and local tax authorities. The resolutions of these audits are not expected to be material to our consolidated financial statements. Tax periods for all years beginning with fiscal year 2013 remain open to examination by federal and state taxing jurisdictions to which we are subject.",
    "images": [
      "./MultiFinance/images/1467-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-823",
    "output": [
      "year_1_free_cash_flow = 1.30\n    year_2_free_cash_flow = 1.50\n    year_3_free_cash_flow = 1.75\n    year_4_free_cash_flow = 2.00\n    year_5_free_cash_flow = 2.12\n    year_1_interest_expense = 1.2\n    year_2_interest_expense = 1.7\n    year_3_interest_expense = 2.8\n    year_4_interest_expense = 2.1\n    year_5_interest_expense = '?'\n    \n    # Calculate the present value of the free cash flows and interest expenses\n    present_value_free_cash_flows = sum([year_1_free_cash_flow / (1 + 0.09)**1,\n                                         year_2_free_cash_flow / (1 + 0.09)**2,\n                                         year_3_free_cash_flow / (1 + 0.09)**3,\n                                         year_4_free_cash_flow / (1 + 0.09)**4,\n                                         year_5_free_cash_flow / (1 + 0.09)**5])\n    \n    present_value_interest_expenses = sum([year_1_interest_expense / (1 + 0.09)**1,\n                                           year_2_interest_expense / (1 + 0.09)**2,\n                                           year_3_interest_expense / (1 + 0.09)**3,\n                                           year_4_interest_expense / (1 + 0.09)**4,\n                                           year_5_interest_expense / (1 + 0.09)**5])\n    \n    # Calculate the net present value of the free cash flows and interest expenses\n    net_present_value = present_value_free_cash_flows - present_value_interest_expenses\n    \n    # Calculate the willingness to pay for Conroy\n    willingness_to_pay = net_present_value * (1 + 0.09)\n    \n    # Return the willingness to pay\n    return willingness_to_pay\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 449,
      "prompt_tokens": 681,
      "completion_tokens_details": {
        "text_tokens": 449
      },
      "prompt_tokens_details": {
        "text_tokens": 589,
        "image_tokens": 92
      },
      "total_tokens": 1130
    },
    "model": "qwen-omni-turbo",
    "question": "Marston Marble Corporation is considering a merger with the Conroy Concrete Company. Conroy is a publicly traded company, and its beta is 1.30. Conroy has been barely profitable, so it has paid an average of only 20% in taxes during the lastseveral years. In addition, it uses little debt; its target ratio is just 25%, with the cost of debt 9%. If the acquisition were made, Marston would operate Conroy as a separate, wholly owned subsidiary. Marston would pay taxes on a consolidated basis, and the tax rate would therefore increase to 35%. Marston also would increase the debt capitalization in the Conroy subsidiary to wd = 40%, for a total of $22.27 million in debt by the end of Year 4, and pay 9.5% on the debt. Marston's acquisition department estimates that Conroy, if acquired, would generate the following free cash flows and interest expenses (in millions of dollars) in Years 1-5: <image 1> In Year 5, Conroy's interest expense would be based on its beginning-of-year (that is, the end-of-Year-4) debt, and in subsequent years both interest expense and free cash flows are projected to grow at a rate of 6%. These cash flows include all acquisition effects. Marston's cost of equity is 10.5%, its beta is 1.0, and its cost of debt is 9.5%. The risk-free rate is 6%, and the market risk premium is 4.5%. If Conroy has $10 million in debt outstanding, how much would Marston be willing to pay for Conroy?",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_313",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/274-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-824",
    "output": [
      "global_headquarters_operating_lease_2016 = 4278\n    total_contractual_obligations = 138930\n    \n    # Do math calculation to get the answer\n    percentage = (global_headquarters_operating_lease_2016 / total_contractual_obligations) * 100\n    \n    # return answer\n    return round(percentage, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 2002,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 761,
        "image_tokens": 1241
      },
      "total_tokens": 2106
    },
    "model": "qwen-omni-turbo",
    "question": "as of december 31 , 2016 what was the percent of the company's significant contractual obligations for the global headquarters operating lease due in 2016 Answer to three decimal places.",
    "answer": "29.41",
    "context": "table of contents contractual obligations the company's significant contractual obligations as of december 31 , 2016 are summarized below: .\n\n<image 1>\n\n( 1 ) on september 14 , 2012 , the company entered into a lease agreement for 186000 square feet of rentable space located in an office facility in canonsburg , pennsylvania , which serves as the company's headquarters . the lease was effective as of september 14 , 2012 , but because the leased premises were under construction , the company was not obligated to pay rent until three months following the date that the leased premises were delivered to ansys , which occurred on october 1 , 2014 . the term of the lease is 183 months , beginning on october 1 , 2014 . the company has a one-time right to terminate the lease effective upon the last day of the tenth full year following the date of possession ( december 31 , 2024 ) by providing the landlord with at least 18 months' prior written notice of such termination . ( 2 ) other operating leases primarily include noncancellable lease commitments for the company's other domestic and international offices as well as certain operating equipment . ( 3 ) unconditional purchase obligations primarily include software licenses and long-term purchase contracts for network , communication and office maintenance services , which are unrecorded as of december 31 , 2016 . ( 4 ) the company has $ 18.4 million of unrecognized tax benefits , including estimated interest and penalties , that have been recorded as liabilities in accordance with income tax accounting guidance for which the company is uncertain as to if or when such amounts may be settled . as a result , such amounts are excluded from the table above . ( 5 ) other long-term obligations primarily include third-party commissions of $ 15.0 million , deferred compensation of $ 7.4 million ( including estimated imputed interest of $ 161000 within 1 year and $ 87000 within 2-3 years ) and post- employment benefits , including pension obligations , of $ 6.5 million for certain foreign locations of the company . these amounts include the related current portions when applicable. .\n",
    "program": "lease_payments_2016 = 40859\nother_leases_2016 = 29808\nunconditional_obligations_2016 = 37415\nuncertain_tax_obligations_2016 = 2\nother_long_term_obligations_2016 = 30846\ntotal_obligations_2016 = lease_payments_2016 + other_leases_2016 + unconditional_obligations_2016 + uncertain_tax_obligations_2016 + other_long_term_obligations_2016\ntotal_obligations_2016_percent = lease_payments_2016 / total_obligations_2016\nanswer = total_obligations_2016_percent * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 3,
        "context_numbers": 92,
        "total_numbers": 95
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 0
      }
    },
    "difficulty": 3.8712010109078907,
    "source_id": "test-586",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1238-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-825",
    "output": [
      "third_item_annualized_return = -2.18%\n    benchmark_annualized_return = -0.23%\n    difference = third_item_annualized_return - benchmark_annualized_return\n    benchmark_max_drawdown = 62.66%\n    \n    # Do math calculation to get the answer\n    result = difference / benchmark_max_drawdown * 100\n    \n    # return answer\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 109,
      "prompt_tokens": 1594,
      "completion_tokens_details": {
        "text_tokens": 109
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1330
      },
      "total_tokens": 1703
    },
    "model": "qwen-omni-turbo",
    "question": "请计算第三项的年化收益与基准年化收益的差值，并将该差值除以基准的最大回撤，保留两位小数。",
    "python_solution": "def solution():\n    annual_return = 1.94 / 100\n    benchmark_annual_return = -0.23 / 100\n    difference = annual_return - benchmark_annual_return\n    benchmark_max_drawdown = 62.66 / 100\n    result = difference / benchmark_max_drawdown\n    return round(result, 2)",
    "image_id": "market_09_09_37_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2815",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.737669618283368,
    "images": [
      "./MultiFinance/images/2527-1.png",
      "./MultiFinance/images/2527-2.png",
      "./MultiFinance/images/2527-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2527-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-826",
    "output": [
      "year_2019_unrecognized_tax_benefit_end_bal = 8840\n    year_2018_unrecognized_tax_benefit_end_bal = 7527\n    year_2017_unrecognized_tax_benefit_end_bal = 7527\n    \n    # Do math calculation to get the answer\n    total_unrecognized_tax_benefit_end_bal = round(year_2019_unrecognized_tax_benefit_end_bal + year_2018_unrecognized_tax_benefit_end_bal + year_2017_unrecognized_tax_benefit_end_bal)\n    \n    # return answer\n    return total_unrecognized_tax_benefit_end_bal\n```"
    ],
    "usage": {
      "completion_tokens": 145,
      "prompt_tokens": 1374,
      "completion_tokens_details": {
        "text_tokens": 145
      },
      "prompt_tokens_details": {
        "text_tokens": 252,
        "image_tokens": 1122
      },
      "total_tokens": 1519
    },
    "model": "qwen-omni-turbo",
    "question": "What is the total unrecognized tax benefit - ending balance across all 3 years? Answer to the nearest integer.",
    "answer": "24584",
    "program": "Unrecognized_tax_benefit_end_balance_2019 = df[\"Unrecognized tax benefit - ending balance\"][\"2019\"]\n\nUnrecognized_tax_benefit_begin_balance_2019 = df[\"Unrecognized tax benefit - beginning balance\"][\"2019\"]\n\nUnrecognized_tax_benefit_begin_balance_2018 = df[\"Unrecognized tax benefit - beginning balance\"][\"2018\"]\n\nanswer = (\n\n            Unrecognized_tax_benefit_end_balance_2019 + Unrecognized_tax_benefit_begin_balance_2019 + Unrecognized_tax_benefit_begin_balance_2018)",
    "statistics": {
      "number_statistics": {
        "question_numbers": 1,
        "context_numbers": 30,
        "total_numbers": 31
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.401197381662155,
    "source_id": "test-11",
    "img_type": "['Tables']",
    "source": "CodeTAT-QA",
    "images": [
      "./MultiFinance/images/375-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-827",
    "output": [
      "year_1 = 3.58\n    year_2 = 4.56\n    year_3 = 5.62\n    \n    # Do math calculation to get the answer\n    growth_rate_year_1 = (year_2 - year_1) / year_1 * 100\n    growth_rate_year_2 = (year_3 - year_2) / year_2 * 100\n    average_growth_rate = ((growth_rate_year_1 + growth_rate_year_2) / 2)\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 150,
      "prompt_tokens": 2638,
      "completion_tokens_details": {
        "text_tokens": 150
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 2382
      },
      "total_tokens": 2788
    },
    "model": "qwen-omni-turbo",
    "question": "请计算可孚医疗2024年到2026年的净利润复合增长率，并保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = 3.58\n    net_profit_2025 = 4.56\n    net_profit_2026 = 5.62\n    cagr = ((net_profit_2026 / net_profit_2024) ** (1/2) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_34_34_28_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-504",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2440-1.png",
      "./MultiFinance/images/2440-2.png",
      "./MultiFinance/images/2440-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2440-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-828",
    "output": [
      "factory_purchase_price_2021 = 161\n    factory_internal_purchase_price_2021 = 128\n    factory_internal_purchase_cost_2021 = 202\n    \n    # Calculate the difference between factory purchase price and internal purchase price in 2021\n    price_difference_2021 = factory_purchase_price_2021 - factory_internal_purchase_price_2021\n    \n    # Calculate the percentage of the difference relative to the internal purchase cost in 2021\n    percentage_difference_2021 = (price_difference_2021 / factory_internal_purchase_cost_2021) * 100\n    \n    # Round the result to one decimal place\n    rounded_percentage_difference_2021 = round(percentage_difference_2021, 1)\n    \n    # Return the calculated percentage difference\n    return rounded_percentage_difference_2021\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 217,
      "prompt_tokens": 1800,
      "completion_tokens_details": {
        "text_tokens": 217
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1520
      },
      "total_tokens": 2017
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年电厂外购煤价与电厂内购煤价的差值，并将该差值占电厂内购煤成本的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    external_coal_price_2021 = 555\n    internal_coal_price_2021 = 362\n    internal_coal_cost_2021 = 234\n\n    diff = external_coal_price_2021 - internal_coal_price_2021\n    ratio = diff / internal_coal_cost_2021\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_31_31_19_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1713",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2983-1.png",
      "./MultiFinance/images/2983-2.png",
      "./MultiFinance/images/2983-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2983-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-829",
    "output": [
      "platform_service_2023 = 116.47\n    platform_service_2024 = 130.45\n    platform_service_2025 = 143.49\n    platform_service_2026 = 154.97\n    \n    total_income_2023 = 8752.59\n    total_income_2024 = 9709.33\n    total_income_2025 = 12226.19\n    total_income_2026 = 14513.79\n    \n    platform_service_ratio_2023 = (platform_service_2023 / total_income_2023) * 100\n    platform_service_ratio_2024 = (platform_service_2024 / total_income_2024) * 100\n    platform_service_ratio_2025 = (platform_service_2025 / total_income_2025) * 100\n    platform_service_ratio_2026 = (platform_service_2026 / total_income_2026) * 100\n    \n    change_2024_to_2025 = round(platform_service_ratio_2024 - platform_service_ratio_2023, 1)\n    change_2025_to_2026 = round(platform_service_ratio_2025 - platform_service_ratio_2024, 1)\n    \n    answer = f\"{change_2024_to_2025} {change_2025_to_2026}\"\n    \n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 386,
      "prompt_tokens": 2338,
      "completion_tokens_details": {
        "text_tokens": 386
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 2081
      },
      "total_tokens": 2724
    },
    "model": "qwen-omni-turbo",
    "question": "请计算平台服务2023年到2026年的总收入占比变化，并将结果保留一位小数。",
    "python_solution": "def solution():\n    income_2023 = 116.47\n    income_2026 = 154.97\n    total_income_2023 = 8752.59\n    total_income_2026 = 14513.79\n    ratio_change = (income_2026 / total_income_2026) - (income_2023 / total_income_2023)\n    return round(ratio_change * 100, 1)",
    "image_id": "company_25_25_14_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-143",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2594-1.png",
      "./MultiFinance/images/2594-2.png",
      "./MultiFinance/images/2594-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2594-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-830",
    "output": [
      "new_chang_hua_qing_shares = 29.96 + 12.86\n    new_chang_hua_xin_shares = 38.84 + 10.46\n    \n    total_shares = new_chang_hua_qing_shares + new_chang_hua_xin_shares\n    \n    percentage_new_chang_hua_qing = (new_chang_hua_qing_shares / total_shares) * 100\n    percentage_new_chang_hua_xin = (new_chang_hua_xin_shares / total_shares) * 100\n    \n    # Do math calculation to get the answer\n    total_percentage = percentage_new_chang_hua_qing + percentage_new_chang_hua_xin\n    \n    # return answer\n    return round(total_percentage, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 197,
      "prompt_tokens": 2769,
      "completion_tokens_details": {
        "text_tokens": 197
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2506
      },
      "total_tokens": 2966
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据计算新昌华清和新昌华新的总持股比例，并将其转换为百分比形式；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share_xinchang_huaqing = 29.96\n    share_xinchang_huanxin = 12.86\n\n    # Multi-step logic\n    total_share = share_xinchang_huaqing + share_xinchang_huanxin\n    percentage = total_share / 100 * 100\n    return round(percentage, 1)",
    "image_id": "company_11_11_05_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1365",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2736-1.png",
      "./MultiFinance/images/2736-2.png",
      "./MultiFinance/images/2736-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2736-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-831",
    "output": [
      "debt_2022 = 9038\n    equity_2022 = 3612\n    debt_equity_ratio_2022 = debt_2022 / equity_2022\n    \n    debt_2021 = 9037\n    equity_2021 = 3566\n    debt_equity_ratio_2021 = debt_2021 / equity_2021\n    \n    percentage_change = ((debt_equity_ratio_2022 - debt_equity_ratio_2021) / debt_equity_ratio_2021) * 100\n    \n    # return answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 173,
      "prompt_tokens": 1525,
      "completion_tokens_details": {
        "text_tokens": 173
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 1244
      },
      "total_tokens": 1698
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in the Debt-to-equity ratio from December 31, 2021 to June 30, 2022 in percentage change?",
    "python_solution": "def solution():\n    #Define variables name and value\n    totalLiabilities_Dec = 9_037  \n    totalEquity_Dec = 3_566 \n    totalLiabilities_Jun = 9_038   \n    totalEquity_Jun = 3_612  \n\n    # Calculate Debt to Equity ratio for December and June\n    Debt_to_Equity_Dec = totalLiabilities_Dec / totalEquity_Dec\n    Debt_to_Equity_Jun = totalLiabilities_Jun / totalEquity_Jun\n\n    # Calculate the change in Debt to Equity ratio\n    change_in_Debt_to_Equity = (Debt_to_Equity_Jun - Debt_to_Equity_Dec) / Debt_to_Equity_Dec * 100\n    return change_in_Debt_to_Equity\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-273",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2126-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 2
      }
    },
    "difficulty": 4.0943445622221,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-832",
    "output": [
      "year_2015 = 41.60\n    year_2020 = 29.20\n    years = 2020 - 2015 + 1\n    \n    # Calculate average growth rate\n    average_growth_rate = ((year_2020 / year_2015) ** (1/years)) - 1\n    \n    # Return result rounded to two decimal places\n    return round(average_growth_rate * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 125,
      "prompt_tokens": 1379,
      "completion_tokens_details": {
        "text_tokens": 125
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 1115
      },
      "total_tokens": 1504
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2015年到2020年IDC产业规模的平均增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    growth_2015 = 41.60\n    growth_2016 = 39.20\n    growth_2017 = 40.60\n    growth_2018 = 29.90\n    growth_2019 = 29.20\n    growth_2020 = 24.60\n\n    # Multi-step logic\n    total_growth = growth_2015 + growth_2016 + growth_2017 + growth_2018 + growth_2019 + growth_2020\n    average_growth = total_growth / 6\n    return round(average_growth, 2)",
    "image_id": "industry_07_07_08_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2360",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 2
      }
    },
    "difficulty": 4.430816798843313,
    "images": [
      "./MultiFinance/images/2252-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2252-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-833",
    "output": [
      "fourth_item_2022 = -4.40\n    fifth_item_2022 = -37.61\n    sixth_item_2022 = -19.68\n    \n    # Calculate the difference between the fourth and fifth items in 2022\n    difference = fourth_item_2022 - fifth_item_2022\n    \n    # Divide the difference by the sixth item in 2022\n    result = difference / sixth_item_2022\n    \n    # Multiply the result by 100 to get a percentage\n    answer = result * 100\n    \n    # Round the answer to one decimal place\n    answer = round(answer, 1)\n    \n    # Return the final answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 183,
      "prompt_tokens": 1705,
      "completion_tokens_details": {
        "text_tokens": 183
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1428
      },
      "total_tokens": 1888
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2022年第四项指标与第五项指标的差值，并将该差值除以第六项指标，然后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_2022_fourth = -29.31\n    value_2022_fifth = -23.63\n    value_2022_sixth = -28.38\n\n    diff = value_2022_fourth - value_2022_fifth\n    ratio = diff / value_2022_sixth\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_23_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2847",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.8712010109078907,
    "images": [
      "./MultiFinance/images/2421-1.png",
      "./MultiFinance/images/2421-2.png",
      "./MultiFinance/images/2421-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2421-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-834",
    "output": [
      "year_2017 = 0.7\n    year_2023 = 42.6\n    \n    # Do math calculation to get the answer\n    cagr = ((year_2023 / year_2017) ** (1/6)) - 1\n    answer = round(cagr * 100, 1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 93,
      "prompt_tokens": 2152,
      "completion_tokens_details": {
        "text_tokens": 93
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1891
      },
      "total_tokens": 2245
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算大客户渠道在2017-2023年的复合年增长率，并保留一位小数。",
    "python_solution": "def solution():\n    value_2017 = 0.7\n    cagr_2017_2020 = 25.6\n    cagr_2020_2023 = -6.2\n\n    # Calculate the compound annual growth rate for 2017-2023\n    cagr_2017_2023 = ((1 + cagr_2017_2020/100) * (1 + cagr_2020_2023/100))**(1/6) - 1\n    return round(cagr_2017_2023 * 100, 1)",
    "image_id": "company_36_36_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-322",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 1
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 10
      }
    },
    "difficulty": 4.795790545596741,
    "images": [
      "./MultiFinance/images/2191-1.png",
      "./MultiFinance/images/2191-2.png",
      "./MultiFinance/images/2191-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2191-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-835",
    "output": [
      "min_market_share = 3%\n    max_market_share = 40%\n    \n    # Calculate the difference between the minimum and maximum market shares\n    diff = max_market_share - min_market_share\n    \n    # Divide the difference by the maximum market share and convert it to percentage\n    result = (diff / max_market_share) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(result, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 95,
      "prompt_tokens": 1873,
      "completion_tokens_details": {
        "text_tokens": 95
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 1600
      },
      "total_tokens": 1968
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中最小市场份额的公司与最大市场份额的公司之间的差值，并将该差值除以最大市场份额的公司，求出的结果表示为百分比；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    max_share = 22.77\n    min_share = 3.58\n\n    diff = max_share - min_share\n    ratio = diff / max_share\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "company_16_16_13_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1887",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2987-1.png",
      "./MultiFinance/images/2987-2.png",
      "./MultiFinance/images/2987-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2987-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-836",
    "output": [
      "one_month_absolute_performance = -4.3\n    one_month_relative_performance = 2.84\n    shenzhen_300_index_one_month_performance = 15.19\n    \n    # Calculate the difference between absolute performance and relative performance\n    difference = one_month_absolute_performance - one_month_relative_performance\n    \n    # Calculate the percentage of the difference compared to the Shenzhen 300 index's performance\n    percentage_difference = (difference / shenzhen_300_index_one_month_performance) * 100\n    \n    # Round the result to one decimal place\n    rounded_percentage_difference = round(percentage_difference, 1)\n    \n    # Return the final result\n    return rounded_percentage_difference\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 163,
      "prompt_tokens": 1270,
      "completion_tokens_details": {
        "text_tokens": 163
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 1001
      },
      "total_tokens": 1433
    },
    "model": "qwen-omni-turbo",
    "question": "请计算1个月的绝对表现与相对表现之间的差值，并将该差值占沪深300指数1个月表现的百分比；结果请保留一位小数。",
    "python_solution": "def solution():\n    abs_performance_1m = -1.71\n    rel_performance_1m = -4.3\n    hs300_1m = 2.59\n\n    diff = abs_performance_1m - rel_performance_1m\n    ratio = diff / hs300_1m\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_01_01_00_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1437",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2573-1.png",
      "./MultiFinance/images/2573-2.png",
      "./MultiFinance/images/2573-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2573-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-837",
    "output": [
      "year_1 = 16.5\n    year_2 = 20.7\n    year_3 = 24.5\n    \n    # Do math calculation to get the answer\n    growth_rate_year_1 = (year_2 - year_1) / year_1 * 100\n    growth_rate_year_2 = (year_3 - year_2) / year_2 * 100\n    \n    average_growth_rate = (growth_rate_year_1 + growth_rate_year_2) / 2\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 149,
      "prompt_tokens": 2823,
      "completion_tokens_details": {
        "text_tokens": 149
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 2558
      },
      "total_tokens": 2972
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算华润饮料2024年到2026年的归母净利润的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = 16.5\n    net_profit_2025 = 20.7\n    net_profit_2026 = 24.5\n\n    growth_2024_2025 = (net_profit_2025 - net_profit_2024) / net_profit_2024 * 100\n    growth_2025_2026 = (net_profit_2026 - net_profit_2025) / net_profit_2025 * 100\n    avg_growth = (growth_2024_2025 + growth_2025_2026) / 2\n    return round(avg_growth, 2)",
    "image_id": "company_23_23_26_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-952",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.477336814478207,
    "images": [
      "./MultiFinance/images/2238-1.png",
      "./MultiFinance/images/2238-2.png",
      "./MultiFinance/images/2238-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2238-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-838",
    "output": [
      "year_2021_overdue = 8.07\n    year_2022_overdue = 6.95\n    \n    # Do math calculation to get the answer\n    average_overdue = (year_2021_overdue + year_2022_overdue) / 2\n    \n    # return answer\n    return round(average_overdue, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 92,
      "prompt_tokens": 1684,
      "completion_tokens_details": {
        "text_tokens": 92
      },
      "prompt_tokens_details": {
        "text_tokens": 256,
        "image_tokens": 1428
      },
      "total_tokens": 1776
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年和2022年的平均超额百分比，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    excess_2021 = 6.22\n    excess_2022 = 3.73\n    \n    # Multi-step logic\n    average_excess = (excess_2021 + excess_2022) / 2\n    return round(average_excess, 2)",
    "image_id": "market_09_09_22_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2816",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3046-1.png",
      "./MultiFinance/images/3046-2.png",
      "./MultiFinance/images/3046-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3046-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-839",
    "output": [
      "year_2014_return = 9.93\n    year_2015_return = 96.55\n    year_2016_sharpe_ratio = 1.81\n    \n    # Do math calculation to get the answer\n    sum_return = (year_2014_return + year_2015_return) / 2\n    result = sum_return / year_2016_sharpe_ratio\n    \n    # return answer\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 128,
      "prompt_tokens": 1678,
      "completion_tokens_details": {
        "text_tokens": 128
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1404
      },
      "total_tokens": 1806
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2014年和2015年的年化收益之和，并将结果除以2016年的夏普比率；请保留两位小数。",
    "python_solution": "def solution():\n    annual_return_2014 = 19.93\n    annual_return_2015 = 96.55\n    sharpe_ratio_2016 = 0.50\n\n    sum_returns = (annual_return_2014 + annual_return_2015) / 2\n    result = sum_returns / sharpe_ratio_2016\n    return round(result, 2)",
    "image_id": "strategy_04_04_29_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3109",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3064-1.png",
      "./MultiFinance/images/3064-2.png",
      "./MultiFinance/images/3064-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3064-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-840",
    "output": [
      "year_1 = 4078.9\n    year_2 = 6725.69\n    year_3 = 6725.69\n    year_4 = 7971.73\n    \n    # Do math calculation to get the answer\n    average = (year_1 + year_2 + year_3 + year_4) / 4\n    \n    # return answer\n    return round(average, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 2202,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 1947
      },
      "total_tokens": 2307
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年到2023年的营业收入平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    revenue_2020 = 6725.69\n    revenue_2021 = 6900\n    revenue_2022 = 7100\n    revenue_2023 = 7971.73\n    average_revenue = (revenue_2020 + revenue_2021 + revenue_2022 + revenue_2023) / 4\n    return round(average_revenue, 2)",
    "image_id": "company_34_34_08_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-494",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2705-1.png",
      "./MultiFinance/images/2705-2.png",
      "./MultiFinance/images/2705-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2705-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-841",
    "output": [
      "flow_asset_2023 = 22522\n    flow_asset_2022 = 11988\n    difference = flow_asset_2023 - flow_asset_2022\n    percentage = (difference / flow_asset_2022) * 100\n    \n    # return answer\n    return round(percentage, 1)\n\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 89,
      "prompt_tokens": 2805,
      "completion_tokens_details": {
        "text_tokens": 89
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 2528
      },
      "total_tokens": 2894
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年的流动资产合计的差值，并将该差值占2022年流动资产合计的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2022 = 11988\n    current_assets_2023 = 22522\n\n    # Multi-step logic\n    diff = current_assets_2023 - current_assets_2022\n    ratio = diff / current_assets_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_12_12_30_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1592",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2637-1.png",
      "./MultiFinance/images/2637-2.png",
      "./MultiFinance/images/2637-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2637-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-842",
    "output": [
      "growth_rate_1998_1999 = (4 - (-2)) / abs(-2) * 100\n    growth_rate_1999_2002 = (7 - (-1)) / abs(-1) * 100\n    \n    # Do math calculation to get the answer\n    answer = growth_rate_1998_1999 - growth_rate_1999_2002\n    \n    # return answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 124,
      "prompt_tokens": 3982,
      "completion_tokens_details": {
        "text_tokens": 124
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 3697
      },
      "total_tokens": 4106
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算1998/5-1999/9期间电器行业的增长率，并将其与1999/10-2002/2期间的增长率进行比较；请提供结果作为百分比。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_1998_1999 = 38\n    value_1999_2002 = -28\n\n    # Multi-step logic\n    growth_rate_1998_1999 = (value_1998_1999 + 100) / 100\n    growth_rate_1999_2002 = (value_1999_2002 + 100) / 100\n\n    final_result = (growth_rate_1999_2002 - growth_rate_1998_1999) * 100\n    return round(final_result, 2)",
    "image_id": "strategy_08_08_28_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3018",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 8
      }
    },
    "difficulty": 4.564348191467836,
    "images": [
      "./MultiFinance/images/2230-1.png",
      "./MultiFinance/images/2230-2.png",
      "./MultiFinance/images/2230-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2230-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-843",
    "output": [
      "dec_31_2018_net_loss = -72948\n    mar_31_2019_net_loss = -6852\n    \n    # Calculate percentage change\n    percentage_change = ((mar_31_2019_net_loss - dec_31_2018_net_loss) / abs(dec_31_2018_net_loss)) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 119,
      "prompt_tokens": 1672,
      "completion_tokens_details": {
        "text_tokens": 119
      },
      "prompt_tokens_details": {
        "text_tokens": 497,
        "image_tokens": 1175
      },
      "total_tokens": 1791
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the company's net operating loss for income tax purposes from December 31, 2018 to March 31, 2019?",
    "python_solution": "def solution():\n    # Define variables name and value\n    Net_loss_Dec = 5855  \n    Net_loss_Mar = 6852  \n\n    # Do math calculation to get the answer\n    answer = ((Net_loss_Mar - Net_loss_Dec)/Net_loss_Dec)*100\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-22",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1954-1.png"
    ],
    "context": "<image 1>\nThe Company has not recognized an income tax benefit for its operating losses generated based on uncertainties concerning its ability to generate taxable income in future periods. The tax benefit for the period presented is offset by a valuation allowance established against deferred tax assets arising from the net operating losses, the realization of which could not be considered more likely than not. In future periods, tax benefits and related deferred tax assets will be recognized when management considers realization of such amounts to be more likely than not. As of March 31, 2019, the Company has incurred a net loss of approximately $6,852 which resulted in a net operating loss for income tax purposes. The loss results in a deferred tax asset of approximately $1,439 at the effective statutory rate of 21%. The deferred tax asset has been off-set by an equal valuation allowance. Given our inception on December 6, 2018, and our fiscal year end of December 31, 2018, we have completed only one taxable fiscal year.",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-844",
    "output": [
      "growth_rate_1 = (2.4 - 2.7) / 2.7 * 100\n    growth_rate_2 = (2.9 - 2.7) / 2.7 * 100\n    growth_rate_3 = (3.5 - 2.9) / 2.9 * 100\n    growth_rate_4 = (4.2 - 3.5) / 3.5 * 100\n    growth_rate_5 = (2.8 - 4.2) / 4.2 * 100\n    \n    average_growth_rate = (growth_rate_1 + growth_rate_2 + growth_rate_3 + growth_rate_4 + growth_rate_5) / 5\n    \n    # return answer\n    return round(average_growth_rate, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 188,
      "prompt_tokens": 1448,
      "completion_tokens_details": {
        "text_tokens": 188
      },
      "prompt_tokens_details": {
        "text_tokens": 267,
        "image_tokens": 1181
      },
      "total_tokens": 1636
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年到2023年的平均增长率。首先计算每年的增长率，然后求这些增长率的平均值；结果保留一位小数。",
    "python_solution": "def solution():\n    growth_2020_to_2021 = ((2.9 - 2.7) / 2.7) * 100\n    growth_2021_to_2022 = ((3.1 - 2.9) / 2.9) * 100\n    growth_2022_to_2023 = ((2.8 - 3.1) / 3.1) * 100\n    average_growth = (growth_2020_to_2021 + growth_2021_to_2022 + growth_2022_to_2023) / 3\n    return round(average_growth, 1)",
    "image_id": "company_12_12_13_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1618",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 3,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 16
      }
    },
    "difficulty": 5.049856007249537,
    "images": [
      "./MultiFinance/images/2175-1.png",
      "./MultiFinance/images/2175-2.png",
      "./MultiFinance/images/2175-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2175-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-845",
    "output": [
      "jiangwei_shares = 28.53 + 17.29\n    total_shares = 100\n    percentage = (jiangwei_shares / total_shares) * 100\n    \n    # Do math calculation to get the answer\n    answer = round(percentage, 1)\n    \n    # return answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 94,
      "prompt_tokens": 2748,
      "completion_tokens_details": {
        "text_tokens": 94
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 2480
      },
      "total_tokens": 2842
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算蒋伟和游捷的持股比例之和占上海昊海生物科技有限公司总持股比例的百分比，并将结果保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share_sw = 28.53\n    share_yj = 17.29\n    total_share = 100\n\n    # Multi-step logic\n    sum_shares = share_sw + share_yj\n    percentage = (sum_shares / total_share) * 100\n    return round(percentage, 1)",
    "image_id": "company_10_10_03_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-398",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2533-1.png",
      "./MultiFinance/images/2533-2.png",
      "./MultiFinance/images/2533-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2533-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-846",
    "output": [
      "sum_stock_6m = -19.5 + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-19.5) + (-6.4) + (-3.9) + 1.1 + 2.9 + 2.1 + (-1"
    ],
    "usage": {
      "completion_tokens": 2048,
      "prompt_tokens": 1924,
      "completion_tokens_details": {
        "text_tokens": 2048
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 1656
      },
      "total_tokens": 3972
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年1月31日至2025年1月31日股票6月涨幅的平均值，并将结果保留两位小数。",
    "python_solution": "def solution():\n    stock_june_returns = [-19.5, -6.4, -3.9, 1.1, 2.9, 2.1, 9.6, -3.1, 16.7, 10.9, 12.3, 15.9, 12.0]\n    average_return = sum(stock_june_returns) / len(stock_june_returns)\n    return round(average_return, 2)",
    "image_id": "strategy_03_03_23_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2963",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 9
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 4,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 6
      }
    },
    "difficulty": 3.401197381662155,
    "images": [
      "./MultiFinance/images/2813-1.png",
      "./MultiFinance/images/2813-2.png",
      "./MultiFinance/images/2813-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2813-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-847",
    "output": [
      "year_2017 = 3.5\n    year_2018 = -1.1\n    year_2019 = 13.5\n    year_2020 = 7.0\n    year_2021 = 10.8\n    year_2022 = 9.2\n    year_2023 = 10.8\n    year_2024 = 50.0\n    \n    # Do math calculation to get the answer\n    total_growth_rate = (year_2018 - year_2017) + (year_2019 - year_2018) + (year_2020 - year_2019) + (year_2021 - year_2020) + (year_2022 - year_2021) + (year_2023 - year_2022) + (year_2024 - year_2023)\n    average_growth_rate = total_growth_rate / 7\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 276,
      "prompt_tokens": 2502,
      "completion_tokens_details": {
        "text_tokens": 276
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2239
      },
      "total_tokens": 2778
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年到2024年间新能源零售渗透率的平均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2018 = 3.5\n    value_2024 = 50.0\n    years = 6\n\n    # Multi-step logic\n    growth = (value_2024 - value_2018) / value_2018\n    average_growth = (growth ** (1/years)) - 1\n    return round(average_growth, 2)",
    "image_id": "company_16_16_09_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1888",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 8
      }
    },
    "difficulty": 4.276666119016055,
    "images": [
      "./MultiFinance/images/2280-1.png",
      "./MultiFinance/images/2280-2.png",
      "./MultiFinance/images/2280-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2280-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-848",
    "output": [
      "shang_hang_yin_hang_cheng_shi_zhong_chou = 0.591997\n    mei_de_ju_xing_cheng_shi_zhong_chou = 0.530483\n    chang_jiang_di_lie_cheng_shi_zhong_chou = 0.161107\n    \n    # Do math calculation to get the answer\n    cheng_shi_zhong_chou_zhi_cha = shang_hang_yin_hang_cheng_shi_zhong_chou - mei_de_ju_xing_cheng_shi_zhong_chou\n    chu_shi_cheng_shi_zhong_chou = cheng_shi_zhong_chou_zhi_cha / chang_jiang_di_lie_cheng_shi_zhong_chou\n    answer = chu_shi_cheng_shi_zhong_chou * 100\n    \n    # return answer\n    return round(answer, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 236,
      "prompt_tokens": 4042,
      "completion_tokens_details": {
        "text_tokens": 236
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 3762
      },
      "total_tokens": 4278
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算招商银行的持仓权重与美的集团的持仓权重之差，然后将该差值除以长江电力的持仓权重，最后将结果乘以100；请保留两位小数。",
    "python_solution": "def solution():\n    weight_zsyyh = 0.591997\n    weight_mdjt = 0.530483\n    weight_cjdl = 0.161107\n\n    diff_weight = weight_zsyyh - weight_mdjt\n    ratio = diff_weight / weight_cjdl\n    final_result = ratio * 100\n    return round(final_result, 2)",
    "image_id": "strategy_07_07_15_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3068",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3060-1.png",
      "./MultiFinance/images/3060-2.png",
      "./MultiFinance/images/3060-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3060-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-849",
    "output": [
      "total_principal_amount = 0\n    total_interest_rate = 0\n    \n    # Iterate through each row in the table\n    for i in range(2, len(table)):\n        if table[i][4] == \"Subordinated Note\" or table[i][4] == \"Senior Note\":\n            principal_amount = float(table[i][5].replace(\"$\", \"\"))\n            interest_rate = float(table[i][7].replace(\"%\", \"\"))\n            \n            total_principal_amount += principal_amount\n            total_interest_rate += (principal_amount * interest_rate)\n    \n    # Calculate the weighted average interest rate\n    weighted_average_interest_rate = (total_interest_rate / total_principal_amount) * 100\n    \n    # Return the answer\n    return round(weighted_average_interest_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 173,
      "prompt_tokens": 1514,
      "completion_tokens_details": {
        "text_tokens": 173
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1234
      },
      "total_tokens": 1687
    },
    "model": "qwen-omni-turbo",
    "question": "What is the total weighted average Cash and Payment-In-Kind (PIK) interest rate payable under the subordinated and senior notes portfolio in the year 2023?",
    "python_solution": "def solution():\n    # Define variables name and value\n\n    smile_brands_investment = 22_341_283 # Subordinated Notes (10% Cash, 2% PIK, Due 02/23)\n    smile_brands_cash= 10\n    smile_brands_PIK = 2\n    trademark_global_investment = 14_800_000 # Subordinated Note (10% Cash, 1.3% PIK, Due 04/23)\n    trademark_global_cash = 10\n    trademark_global_PIK = 1.3\n    travelpro_investment = 10_126_055 # Second Lien Term Note - Travelpro (11% Cash, 2% PIK, Due 11/22)\n    travelpro_cash = 11\n    travelpro_PIK = 2\n\n    # Do math calculation to get the answer\n    total_investment = smile_brands_investment + trademark_global_investment + travelpro_investment\n    avg_cash_rate = ((smile_brands_investment * smile_brands_cash) + \n                     (trademark_global_investment * trademark_global_cash) + \n                     (travelpro_investment * travelpro_cash)) / total_investment\n    avg_pik_rate = ((smile_brands_investment * smile_brands_PIK) + \n                    (trademark_global_investment * trademark_global_PIK) + \n                    (travelpro_investment * travelpro_PIK)) / total_investment\n    average_weighted_interest_rate = avg_cash_rate + avg_pik_rate\n    return round(average_weighted_interest_rate, 2)\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-253",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2109-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 7,
          "-": 1,
          "*": 6,
          "/": 5,
          "%": 6,
          "**": 0
        },
        "total_operators": 25
      },
      "code_statistics": {
        "lines": 20,
        "parentheses": 24
      }
    },
    "difficulty": 6.684611727667927,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-850",
    "output": [
      "net_loss_2015 = -81503\n    net_loss_2016 = -78254\n    accumulated_deficit_2015 = -1922106\n    accumulated_deficit_2016 = -2000360\n    \n    # Calculate percentage change\n    percentage_change = ((accumulated_deficit_2016 - accumulated_deficit_2015) / accumulated_deficit_2015) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 2173,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 1900
      },
      "total_tokens": 2314
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in net loss to accumulated deficit from 2015 to 2016?",
    "python_solution": "def solution():\n     #Define variables name and value\n    net_loss_2016 = 78254 \n    net_loss_2015 = 81503\n    accum_deficit_2016 = 2000360\n    accum_deficit_2015 = 1922106\n\n    #Do math calculation to get the answer\n    ratio_2016 = (net_loss_2016 / accum_deficit_2016) * 100\n    ratio_2015 = (net_loss_2015 / accum_deficit_2015) * 100\n    percent_change = ((ratio_2016 - ratio_2015) / ratio_2015) * 100\n    return percent_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-291",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2141-1.png",
      "./MultiFinance/images/2141-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 3,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 8
      }
    },
    "difficulty": 4.584967478670571,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-851",
    "output": [
      "year_2024_profit = 5085\n    year_2025_profit = 5712\n    year_2026_profit = 6352\n    \n    growth_rate_2025 = (year_2025_profit - year_2024_profit) / year_2024_profit * 100\n    growth_rate_2026 = (year_2026_profit - year_2025_profit) / year_2025_profit * 100\n    \n    # Return the results as a list with two elements for each year's growth rate\n    return [round(growth_rate_2025, 2), round(growth_rate_2026, 2)]\n```"
    ],
    "usage": {
      "completion_tokens": 174,
      "prompt_tokens": 637,
      "completion_tokens_details": {
        "text_tokens": 174
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 376
      },
      "total_tokens": 811
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2025年和2026年的归母净利润增长率，并将结果保留两位小数。",
    "python_solution": "def calculate_profit_growth_rate():\n    profit_2025 = 5712\n    profit_2026 = 6352\n    growth_rate_2026 = (profit_2026 - profit_2025) / profit_2025 * 100\n    return round(growth_rate_2026, 2)",
    "image_id": "company_04_04_00_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-716",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2946-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2946-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-852",
    "output": [
      "year_2016_value = -14.73\n    year_2017_value = -8.99\n    difference = (year_2017_value - year_2016_value) / year_2016_value * 100\n    \n    # return answer\n    return round(difference, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 81,
      "prompt_tokens": 1766,
      "completion_tokens_details": {
        "text_tokens": 81
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1492
      },
      "total_tokens": 1847
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2016年和2017年的差值，然后将该差值除以2016年的值，最后将结果转换为百分比并保留一位小数。",
    "python_solution": "def solution():\n    value_2016 = 15.61\n    value_2017 = -13.27\n    diff = value_2017 - value_2016\n    ratio = diff / value_2016\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "strategy_04_04_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3127",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2857-1.png",
      "./MultiFinance/images/2857-2.png",
      "./MultiFinance/images/2857-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2857-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-853",
    "output": [
      "total = 119.7 + 89.3 + 77.5 + 68.7 + 67.3 + 65.6 + 65.3 + 60.1 + 59.3 + 57.4\n    average = total / 10\n    \n    # return answer\n    return round(average, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 89,
      "prompt_tokens": 3641,
      "completion_tokens_details": {
        "text_tokens": 89
      },
      "prompt_tokens_details": {
        "text_tokens": 251,
        "image_tokens": 3390
      },
      "total_tokens": 3730
    },
    "model": "qwen-omni-turbo",
    "question": "请计算阶段一涨幅排名前十大个股的平均涨幅，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_1 = 119.7\n    value_2 = 89.3\n    value_3 = 77.5\n    value_4 = 68.7\n    value_5 = 67.3\n    value_6 = 65.6\n    value_7 = 65.3\n    value_8 = 60.1\n    value_9 = 59.3\n    value_10 = 57.4\n\n    # Multi-step logic\n    sum_values = value_1 + value_2 + value_3 + value_4 + value_5 + value_6 + value_7 + value_8 + value_9 + value_10\n    average = sum_values / 10\n    return round(average, 2)",
    "image_id": "strategy_08_08_35_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3019",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 9,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 15,
        "parentheses": 2
      }
    },
    "difficulty": 5.170483995038152,
    "images": [
      "./MultiFinance/images/2166-1.png",
      "./MultiFinance/images/2166-2.png",
      "./MultiFinance/images/2166-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2166-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-854",
    "output": [
      "original_cost_truck = 57000\n    salvage_value_truck = 15000\n    current_fair_value_truck = 27000\n    depreciation_rate = 0.20\n    estimated_life = 8\n\n    # Calculate accumulated depreciation using declining balance method\n    accumulated_depreciation = original_cost_truck * ((1 - depreciation_rate) ** (estimated_life - 3))\n\n    # Calculate book value after 3 years\n    book_value_after_3_years = original_cost_truck - accumulated_depreciation\n\n    # Calculate gain or loss\n    gain_or_loss = current_fair_value_truck - book_value_after_3_years\n\n    # Return the absolute value of the gain or loss as a negative number if there's a loss\n    return abs(gain_or_loss)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 190,
      "prompt_tokens": 1541,
      "completion_tokens_details": {
        "text_tokens": 190
      },
      "prompt_tokens_details": {
        "text_tokens": 299,
        "image_tokens": 1242
      },
      "total_tokens": 1731
    },
    "model": "qwen-omni-turbo",
    "question": "A business chose to swap a truck that it had bought three years ago for a parcel of land owned by a different enterprise. The subsequent table outlines information pertinent to both assets: The profit and loss statement for the enterprise that relinquishes the truck is most likely going to reflect a loss of (in negative value): Answer to a single decimal place.",
    "python_solution": "def solution():\n    truck_value = 57000\n    depreciation_rate = 0.20\n    years = 3\n    land_value = 21000\n    \n    truck_carrying_value = truck_value * ((1 - depreciation_rate)**years)\n    loss = land_value - truck_carrying_value\n    \n    return loss",
    "topic": "Accounting",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "source_id": "validation-0",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/287-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-855",
    "output": [
      "operating_income_2023a = 709\n    operating_cost_2023a = 219\n    \n    # Calculate the difference between operating income and operating cost\n    difference = operating_income_2023a - operating_cost_2023a\n    \n    # Calculate the percentage of the difference relative to operating income\n    percentage_difference = (difference / operating_income_2023a) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(percentage_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 133,
      "prompt_tokens": 2460,
      "completion_tokens_details": {
        "text_tokens": 133
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 2186
      },
      "total_tokens": 2593
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年A的营业总收入与营业总成本的差值，并将该差值占营业总收入的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    revenue_2023A = 709\n    cost_of_revenue_2023A = 219\n\n    # Multi-step logic\n    diff = revenue_2023A - cost_of_revenue_2023A\n    ratio = diff / revenue_2023A\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_33_33_15_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-118",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2592-1.png",
      "./MultiFinance/images/2592-2.png",
      "./MultiFinance/images/2592-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2592-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-856",
    "output": [
      "profit_2022 = -2.34\n    profit_2023_Q1_Q3 = -0.44\n    \n    # Calculate the growth rate\n    growth_rate = (profit_2023_Q1_Q3 - profit_2022) / abs(profit_2022)\n    \n    # Return the result rounded to two decimal places\n    return round(growth_rate * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 2867,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 2598
      },
      "total_tokens": 2980
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算好想你2023年Q1-Q3的利润与2022年相比的增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    profit_2022 = -2.34\n    profit_2023 = -0.44\n    growth_rate = (profit_2023 - profit_2022) / profit_2022 * 100\n    return round(growth_rate, 2)",
    "image_id": "industry_16_16_16_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2256",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.401197381662155,
    "images": [
      "./MultiFinance/images/2807-1.png",
      "./MultiFinance/images/2807-2.png",
      "./MultiFinance/images/2807-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2807-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-857",
    "output": [
      "easy_pultris = 11 + 4 * 2\n    northern_special_energy = 10 + 4\n    guangdong_hongda = 8\n    \n    # Do math calculation to get the answer\n    total_market_share = easy_pultris + northern_special_energy\n    comparison = (total_market_share - guangdong_hongda) / total_market_share * 100\n    \n    # return answer\n    return comparison\n```"
    ],
    "usage": {
      "completion_tokens": 101,
      "prompt_tokens": 1474,
      "completion_tokens_details": {
        "text_tokens": 101
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 1206
      },
      "total_tokens": 1575
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算易普力和北方特种能源集团的市场份额总和，并将其与广东宏大控股集团的市场份额进行比较；请提供结果作为百分比。",
    "python_solution": "def solution():\n    epu = 38\n    btfny = 11\n    gdhd = 10\n\n    total_epu_btfny = epu + btfny\n    comparison = (total_epu_btfny / gdhd) * 100\n    return round(comparison, 2)",
    "image_id": "company_15_15_21_figure_5",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1932",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2989-1.png",
      "./MultiFinance/images/2989-2.png",
      "./MultiFinance/images/2989-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2989-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-858",
    "output": [
      "sum_return = -3.15 + (-7.84) + 32.20 + 15.79 + 3.16 + 13.95 + 25.56 + 46.75 + (-14.85) + 13.41 + 21.20\n    count = 11\n    average_return = sum_return / count\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(average_return, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 123,
      "prompt_tokens": 2287,
      "completion_tokens_details": {
        "text_tokens": 123
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2024
      },
      "total_tokens": 2410
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2014年至2024年情绪调整后动量多空组净值的平均年化收益，并保留两位小数。",
    "python_solution": "def solution():\n    values = [-3.15, -7.84, 32.20, 15.79, 3.16, 13.95, 25.56, 46.75, -14.85, 13.41, 21.20]\n    average_return = sum(values) / len(values)\n    return round(average_return, 2)",
    "image_id": "strategy_04_04_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3100",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 11
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 3,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3063-1.png",
      "./MultiFinance/images/3063-2.png",
      "./MultiFinance/images/3063-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3063-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-859",
    "output": [
      "total_energy_consumption = 100\n    cooling_energy_consumption = 40\n    power_distribution_energy_consumption = 10\n    \n    # Do math calculation to get the answer\n    combined_energy_consumption = cooling_energy_consumption + power_distribution_energy_consumption\n    percentage_of_combined_energy_consumption = (combined_energy_consumption / total_energy_consumption) * 100\n    \n    # return answer\n    return round(percentage_of_combined_energy_consumption, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 1621,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1358
      },
      "total_tokens": 1726
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算制冷设备能耗与供配电能耗的总和，并将其占总能耗的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    power_supply_energy = 10\n    cooling_energy = 40\n    total_energy = 100\n\n    sum_energy = power_supply_energy + cooling_energy\n    percentage = (sum_energy / total_energy) * 100\n    return round(percentage, 1)",
    "image_id": "company_08_08_11_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-649",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2939-1.png",
      "./MultiFinance/images/2939-2.png",
      "./MultiFinance/images/2939-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2939-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-860",
    "output": [
      "year_2019 = 141.0\n    year_2020 = 102.6\n    year_2021 = 107.7\n    year_2022 = 116.0\n    year_2023 = 113.5\n    year_2024 = 112.3\n    \n    # Do math calculation to get the answer\n    average_inventory_turnover_days = (year_2019 + year_2020 + year_2021 + year_2022 + year_2023 + year_2024) / 6\n    \n    # return answer\n    return round(average_inventory_turnover_days, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 174,
      "prompt_tokens": 1523,
      "completion_tokens_details": {
        "text_tokens": 174
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1260
      },
      "total_tokens": 1697
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2019年到2023年存货周转天数的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    inventory_days_2019 = 141.0\n    inventory_days_2020 = 102.6\n    inventory_days_2021 = 107.7\n    inventory_days_2022 = 116.0\n    inventory_days_2023 = 113.5\n\n    total_days = inventory_days_2019 + inventory_days_2020 + inventory_days_2021 + inventory_days_2022 + inventory_days_2023\n    average_days = total_days / 5\n    return round(average_days, 1)",
    "image_id": "company_28_28_05_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-209",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2432-1.png",
      "./MultiFinance/images/2432-2.png",
      "./MultiFinance/images/2432-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2432-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-861",
    "output": [
      "us_2023 = 1779\n    eu_2023 = 1731\n    us_2024 = 1767\n    eu_2024 = 1767\n    \n    total_2023 = us_2023 + eu_2023\n    total_2024 = us_2024 + eu_2024\n    \n    growth_rate = ((total_2024 - total_2023) / total_2023) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 164,
      "prompt_tokens": 2639,
      "completion_tokens_details": {
        "text_tokens": 164
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 2371
      },
      "total_tokens": 2803
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年和2024年美国与欧洲的石油消费量之和，并求这两个时间点之间的增长率；结果请保留两位小数。",
    "python_solution": "def solution():\n    us_2023 = 2.6\n    europe_2023 = 1.5\n    us_2024 = 1.4\n    europe_2024 = 1.4\n\n    total_2023 = us_2023 + europe_2023\n    total_2024 = us_2024 + europe_2024\n    growth = (total_2024 - total_2023) / total_2023 * 100\n    return round(growth, 2)",
    "image_id": "industry_06_06_06_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2051",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2399-1.png",
      "./MultiFinance/images/2399-2.png",
      "./MultiFinance/images/2399-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2399-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-862",
    "output": [
      "year_2023_non_attributable_net_profit = 5.0\n    year_2024_q1_to_3_non_attributable_net_profit = 5.0\n    year_2022_non_attributable_net_profit = 6.0\n    \n    average_non_attributable_net_profit = (year_2023_non_attributable_net_profit + year_2024_q1_to_3_non_attributable_net_profit) / 2\n    growth_percentage = ((average_non_attributable_net_profit - year_2022_non_attributable_net_profit) / year_2022_non_attributable_net_profit) * 100\n    \n    # return answer\n    return round(growth_percentage, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 161,
      "prompt_tokens": 1522,
      "completion_tokens_details": {
        "text_tokens": 161
      },
      "prompt_tokens_details": {
        "text_tokens": 291,
        "image_tokens": 1231
      },
      "total_tokens": 1683
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年和2024Q1-3的扣非归母净利润的平均值，并将该平均值与2022年的扣非归母净利润进行比较，计算增长百分比；请保留两位小数。",
    "python_solution": "def solution():\n    value_2023 = 5.3\n    value_2024Q1_3 = 5.1\n    average_value = (value_2023 + value_2024Q1_3) / 2\n    value_2022 = 6.1\n    growth = (average_value - value_2022) / value_2022 * 100\n    return round(growth, 2)",
    "image_id": "company_39_39_03_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1198",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2471-1.png",
      "./MultiFinance/images/2471-2.png",
      "./MultiFinance/images/2471-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2471-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-863",
    "output": [
      "flow_asset_2022A = 9873\n    flow_asset_2023A = 9385\n    \n    # Do math calculation to get the answer\n    difference = flow_asset_2023A - flow_asset_2022A\n    percentage = (difference / flow_asset_2022A) * 100\n    \n    # return answer\n    return round(percentage, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 103,
      "prompt_tokens": 2540,
      "completion_tokens_details": {
        "text_tokens": 103
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 2266
      },
      "total_tokens": 2643
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年流动资产的差值，并将该差值占2022年流动资产的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2022 = 9873\n    current_assets_2023 = 9385\n\n    # Multi-step logic\n    diff = current_assets_2023 - current_assets_2022\n    ratio = diff / current_assets_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_34_34_30_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-475",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2603-1.png",
      "./MultiFinance/images/2603-2.png",
      "./MultiFinance/images/2603-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2603-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-864",
    "output": [
      "year_1 = 59\n    year_2 = 57\n    year_3 = 59\n    year_4 = 58\n    year_5 = 61\n    \n    total_growth_rate = (year_5 - year_1) + (year_2 - year_1) + (year_3 - year_1) + (year_4 - year_1)\n    \n    average_growth_rate = total_growth_rate / 4\n    \n    answer = round(average_growth_rate, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 126,
      "prompt_tokens": 2415,
      "completion_tokens_details": {
        "text_tokens": 126
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 2151
      },
      "total_tokens": 2541
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2019年至2023年自我诊疗（CHC）的平均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    chc_2019 = 59\n    chc_2020 = 57\n    chc_2021 = 60\n    chc_2022 = 58\n    chc_2023 = 61\n\n    growth_2019_2020 = (chc_2020 - chc_2019) / chc_2019 * 100\n    growth_2020_2021 = (chc_2021 - chc_2020) / chc_2020 * 100\n    growth_2021_2022 = (chc_2022 - chc_2021) / chc_2021 * 100\n    growth_2022_2023 = (chc_2023 - chc_2022) / chc_2022 * 100\n\n    average_growth = (growth_2019_2020 + growth_2020_2021 + growth_2021_2022 + growth_2022_2023) / 4\n    return round(average_growth, 2)",
    "image_id": "company_12_12_07_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1594",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 4,
          "*": 4,
          "/": 5,
          "%": 0,
          "**": 0
        },
        "total_operators": 16
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 12
      }
    },
    "difficulty": 5.605802066295997,
    "images": [
      "./MultiFinance/images/2153-1.png",
      "./MultiFinance/images/2153-2.png",
      "./MultiFinance/images/2153-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2153-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-865",
    "output": [
      "present_value = 21500\n    interest_rate = 8\n    future_value = 147350\n    \n    # Do math calculation to get the answer\n    years = (np.log(future_value) - np.log(present_value)) / (np.log(1 + interest_rate/100))\n    \n    # return answer\n    return years\n```"
    ],
    "usage": {
      "completion_tokens": 83,
      "prompt_tokens": 338,
      "completion_tokens_details": {
        "text_tokens": 83
      },
      "prompt_tokens_details": {
        "text_tokens": 246,
        "image_tokens": 92
      },
      "total_tokens": 421
    },
    "model": "qwen-omni-turbo",
    "question": "Solve for the unknown number of years in Row 4:<image 1>",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Financial Accounting",
    "source_id": "dev_Accounting_5",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/9-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-866",
    "output": [
      "recovery_initial_bond = 80.0\n    recovery_initial_stock = 20.0\n    recovery_end_bond = 60.0\n    recovery_end_stock = 30.0\n    \n    total_recovery_initial = recovery_initial_bond + recovery_initial_stock\n    total_recovery_end = recovery_end_bond + recovery_end_stock\n    \n    difference = abs(total_recovery_initial - total_recovery_end)\n    \n    # return answer\n    return round(difference, 1)\n\nprint(solution())  \n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 1562,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1300
      },
      "total_tokens": 1669
    },
    "model": "qwen-omni-turbo",
    "question": "请计算复苏初期和复苏末期债券与股票的总占比，并求出这两个阶段总占比的差值；请保留一位小数。",
    "python_solution": "def solution():\n    bond_initial_recovery = 80.0\n    stock_initial_recovery = 20.0\n    bond_late_recovery = 60.0\n    stock_late_recovery = 30.0\n\n    total_initial = bond_initial_recovery + stock_initial_recovery\n    total_late = bond_late_recovery + stock_late_recovery\n    difference = abs(total_initial - total_late)\n    return round(difference, 1)",
    "image_id": "strategy_03_03_12_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2968",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.401197381662156,
    "images": [
      "./MultiFinance/images/2799-1.png",
      "./MultiFinance/images/2799-2.png",
      "./MultiFinance/images/2799-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2799-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-867",
    "output": [
      "hesai_share_2023 = 26\n    robosense_share_2023 = 28\n    \n    total_market_value_2023 = 414\n    \n    # Calculate the sum of Hesai and Robosense's market shares in 2023\n    combined_shares_2023 = hesai_share_2023 + robosense_share_2023\n    \n    # Calculate the percentage of the combined market share as a fraction of the total market value\n    percentage_combined_shares_2023 = (combined_shares_2023 / total_market_value_2023) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(percentage_combined_shares_2023, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 193,
      "prompt_tokens": 1827,
      "completion_tokens_details": {
        "text_tokens": 193
      },
      "prompt_tokens_details": {
        "text_tokens": 269,
        "image_tokens": 1558
      },
      "total_tokens": 2020
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年Hesai和Robosense的市场份额总和，并将其作为2023年市场总值的百分比，保留一位小数。",
    "python_solution": "def solution():\n    hesai_2023 = 25\n    robosense_2023 = 26\n    total_market_value_2023 = 414\n    combined_percentage = ((hesai_2023 + robosense_2023) / 100) * total_market_value_2023\n    percentage_of_total = combined_percentage / total_market_value_2023 * 100\n    return round(percentage_of_total, 1)",
    "image_id": "company_18_18_35_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-767",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2451-1.png",
      "./MultiFinance/images/2451-2.png",
      "./MultiFinance/images/2451-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2451-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-868",
    "output": [
      "year_2021_net_profit_rate = 9.4\n    year_2022_net_profit_rate = 14.2\n    year_2023_net_profit_rate = 14.3\n    \n    # Calculate average growth rate\n    total_growth_rate = (year_2022_net_profit_rate - year_2021_net_profit_rate) + \\\n                        (year_2023_net_profit_rate - year_2022_net_profit_rate)\n    \n    average_growth_rate = total_growth_rate / 2\n    \n    # Return the result as a percentage with two decimal places\n    return round(average_growth_rate * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 163,
      "prompt_tokens": 1499,
      "completion_tokens_details": {
        "text_tokens": 163
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1238
      },
      "total_tokens": 1662
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年到2023年净利润率的平均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    net_profit_margin_2021 = 14.3\n    net_profit_margin_2022 = 12.9\n    net_profit_margin_2023 = 13.6\n\n    growth_2021_2022 = (net_profit_margin_2022 - net_profit_margin_2021) / net_profit_margin_2021 * 100\n    growth_2022_2023 = (net_profit_margin_2023 - net_profit_margin_2022) / net_profit_margin_2022 * 100\n\n    average_growth = (growth_2021_2022 + growth_2022_2023) / 2\n    return round(average_growth, 2)",
    "image_id": "company_39_39_18_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1227",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 8
      }
    },
    "difficulty": 4.477336814478207,
    "images": [
      "./MultiFinance/images/2239-1.png",
      "./MultiFinance/images/2239-2.png",
      "./MultiFinance/images/2239-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2239-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-869",
    "output": [
      "global_regionals_2019 = 5\n    global_regionals_2018 = 6\n    global_regionals_2017 = 5\n    \n    # Do math calculation to get the answer\n    total_global_regionals = global_regionals_2019 + global_regionals_2018 + global_regionals_2017\n    average_global_regionals = total_global_regionals / 3\n    \n    # return answer\n    return round(average_global_regionals, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 115,
      "prompt_tokens": 1504,
      "completion_tokens_details": {
        "text_tokens": 115
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 1244
      },
      "total_tokens": 1619
    },
    "model": "qwen-omni-turbo",
    "question": "What is the average global regional films (excluding Tamil films) from 2017-2019? Answer to two decimal places.",
    "answer": "21.33",
    "program": "global_regional_films_2019 = df[\"Global (India and International) -- Regional films (excluding Tamil films)\"][\"2019\"]\nglobal_regional_films_2018 = df[\"Global (India and International) -- Regional films (excluding Tamil films)\"][\"2018\"]\nglobal_regional_films_2017 = df[\"Global (India and International) -- Regional films (excluding Tamil films)\"][\"2017\"]\nanswer = ( global_regional_films_2019 + global_regional_films_2018 + global_regional_films_2017 ) / 3",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 60,
        "total_numbers": 62
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 14
      }
    },
    "difficulty": 3.4965075614664807,
    "source_id": "test-19",
    "img_type": "['Tables']",
    "source": "CodeTAT-QA",
    "images": [
      "./MultiFinance/images/383-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-870",
    "output": [
      "good_economic_return = ((70/100) * 20) + ((70/100) * 10)\n    bad_economic_return = ((30/100) * 5) + ((30/100) * -10)\n    \n    # Do math calculation to get the answer\n    total_portfolio_return = good_economic_return + bad_economic_return\n    \n    # return answer\n    return round(total_portfolio_return, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 108,
      "prompt_tokens": 1512,
      "completion_tokens_details": {
        "text_tokens": 108
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 1242
      },
      "total_tokens": 1620
    },
    "model": "qwen-omni-turbo",
    "question": "What is the anticipated portfolio return made by an investment company analyst named Maud, under two scenarios of portfolio returns in various economic conditions (expressed as a percentage)? Answer to a single decimal place.",
    "python_solution": "def solution():\n    good_economic_situation_return = 0.2*0.5 + 0.1*0.5\n    bad_economic_situation_return = 0.05*0.6 + -0.1*0.4\n    general_expected_return = 0.7*good_economic_situation_return + 0.3*bad_economic_situation_return\n    return round(general_expected_return*100, 1)",
    "topic": "Quantitative Analysis & Valuation",
    "statistics": {
      "number_statistics": {
        "args_numbers": 9
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 7,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 2
      }
    },
    "difficulty": 4.007333185232471,
    "source_id": "validation-17",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/296-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-871",
    "output": [
      "balance_dec_31_2018 = -470000\n    balance_sep_30_2019 = -100000\n    \n    # Calculate the difference between the two balances\n    difference = balance_sep_30_2019 - balance_dec_31_2018\n    \n    # Calculate the equity growth rate as a percentage\n    equity_growth_rate = (difference / abs(balance_dec_31_2018)) * 100\n    \n    # Return the calculated equity growth rate\n    return equity_growth_rate\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 906,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 283,
        "image_tokens": 623
      },
      "total_tokens": 1047
    },
    "model": "qwen-omni-turbo",
    "question": "What is the equity growth rate from \"Balance at December 31, 2018\" to \"Balance at September 30, 2019\" in percentage?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    equity_2018 = 52958 # Balance at December 31, 2018 (in millions)\n\n    equity_2019 = 68619 # Balance at September 30, 2019 (in millions)\n\n    #Do math calculation to get the answer\n    growth_rate = ((equity_2019 - equity_2018) / equity_2018) * 100 # The formula for growth rate\n    answer = round(growth_rate, 2)\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-126",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2032-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 10
      }
    },
    "difficulty": 3.58351893845611,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-872",
    "output": [
      "year_2020_second_column = 41.98%\n    year_2021_second_column = 11.93%\n    year_2022_second_column = 33.72%\n    \n    # Do math calculation to get the answer\n    total = (year_2022_second_column + year_2021_second_column) - 2 * year_2020_second_column\n    result = total / year_2020_second_column\n    \n    # return answer\n    return round(result, 2)\n\n# Call the function and print the result\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 137,
      "prompt_tokens": 1556,
      "completion_tokens_details": {
        "text_tokens": 137
      },
      "prompt_tokens_details": {
        "text_tokens": 290,
        "image_tokens": 1266
      },
      "total_tokens": 1693
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2022年和2021年第二列数据的总和，然后用这个总和减去2020年第二列数据的两倍，最后将结果除以2020年第二列数据；请保留两位小数。",
    "python_solution": "def solution():\n    value_2020 = 41.98\n    value_2021 = 11.93\n    value_2022 = 33.72\n    sum_2021_2022 = value_2021 + value_2022\n    result = (sum_2021_2022 - 2 * value_2020) / value_2020\n    return round(result, 2)",
    "image_id": "market_09_09_37_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2834",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2782-1.png",
      "./MultiFinance/images/2782-2.png",
      "./MultiFinance/images/2782-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2782-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-873",
    "output": [
      "point_G_utility = 4\n    point_H_utility = 3\n    point_F_utility = 2\n    point_E_utility = 1\n    \n    # Do math calculation to get the answer\n    max_utility = max(point_G_utility, point_H_utility, point_F_utility, point_E_utility)\n    \n    # return answer\n    return int(max_utility)\n\n```"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 650,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 392
      },
      "total_tokens": 737
    },
    "model": "qwen-omni-turbo",
    "question": "<image 1> What indifference curve represents the greatest level of utility that can be achieved by the investor? Answer to the nearest integer.",
    "explanation": "?",
    "img_type": "['Plots and Charts']",
    "subject": "Finance",
    "source_id": "test_Finance_337",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/200-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-874",
    "output": [
      "year_1 = 90.04\n    year_2 = 112.1\n    year_3 = 90.0\n    \n    # Do math calculation to get the answer\n    growth_rate = ((year_3 - year_1) / (year_1 * 2)) + ((year_3 - year_2) / (year_2 * 2))\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 108,
      "prompt_tokens": 2449,
      "completion_tokens_details": {
        "text_tokens": 108
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 2185
      },
      "total_tokens": 2557
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算四川路桥2021年至2023年归母净利润的复合年增长率；请保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2021 = 55.8\n    net_profit_2022 = 112.1\n    net_profit_2023 = 90.0\n    cagr = ((net_profit_2023 / net_profit_2021) ** (1/2) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_26_26_09_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1761",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2493-1.png",
      "./MultiFinance/images/2493-2.png",
      "./MultiFinance/images/2493-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2493-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-875",
    "output": [
      "total_percentage_change = (77 + 64 + 60 + 45 + 40) - (59.1 + 48.5 + 44.5 + 43.5 + 41.5)\n    \n    # Do math calculation to get the answer\n    percentage_change = total_percentage_change / sum([59.1, 48.5, 44.5, 43.5, 41.5])\n    \n    # return answer\n    return round(percentage_change * 100, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 2252,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 1987
      },
      "total_tokens": 2393
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2019年到2025年推理和训练的总百分比变化，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    inference_2019 = 40.9\n    training_2019 = 59.1\n    inference_2025 = 60.8\n    training_2025 = 39.2\n\n    # Multi-step logic\n    total_2019 = inference_2019 + training_2019\n    total_2025 = inference_2025 + training_2025\n    change = total_2025 - total_2019\n    return round(change, 2)",
    "image_id": "industry_07_07_13_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2371",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 3.7841896339182615,
    "images": [
      "./MultiFinance/images/2517-1.png",
      "./MultiFinance/images/2517-2.png",
      "./MultiFinance/images/2517-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2517-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-876",
    "output": [
      "us_holding_1 = -9487\n    us_holding_5 = -34201\n    overseas_holding_2 = 9487\n    \n    # Do math calculation to get the answer\n    average_us_holding = (us_holding_1 + us_holding_5) / 2\n    result = average_us_holding * overseas_holding_2\n    \n    # return answer\n    return round(result, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 3414,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 3142
      },
      "total_tokens": 3520
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算美国本土持仓在1月和5月的平均值，并将该平均值与海外持仓在2月的数值相乘；请保留一位小数。",
    "python_solution": "def solution():\n    us_position_jan = -10000\n    us_position_may = -40000\n    overseas_position_feb = 8000\n\n    avg_us = (us_position_jan + us_position_may) / 2\n    final_result = avg_us * overseas_position_feb\n    return round(final_result, 1)",
    "image_id": "market_00_00_07_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2766",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2580-1.png",
      "./MultiFinance/images/2580-2.png",
      "./MultiFinance/images/2580-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2580-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-877",
    "output": [
      "fixed_assets_2023 = 4040\n    fixed_assets_2026 = 9217\n    \n    difference = fixed_assets_2026 - fixed_assets_2023\n    percentage_difference = (difference / fixed_assets_2023) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 99,
      "prompt_tokens": 2729,
      "completion_tokens_details": {
        "text_tokens": 99
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 2456
      },
      "total_tokens": 2828
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2026年的固定资产的差值，并将该差值占2023年固定资产的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    fixed_assets_2023 = 4040\n    fixed_assets_2026 = 9217\n\n    # Multi-step logic\n    diff = fixed_assets_2026 - fixed_assets_2023\n    ratio = diff / fixed_assets_2023\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_00_00_40_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-260",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2599-1.png",
      "./MultiFinance/images/2599-2.png",
      "./MultiFinance/images/2599-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2599-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-878",
    "output": [
      "total_interest_expense_2019_adjusted = 184.1 - 0.5\n    total_interest_expense_2017 = 184.2\n    total_interest_expense_2018 = 177.9\n    \n    # Do math calculation to get the answer\n    total_interest_expense_years_2017_to_2019 = total_interest_expense_2017 + total_interest_expense_2018 + total_interest_expense_2019_adjusted\n    \n    # return answer\n    return total_interest_expense_years_2017_to_2019\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 159,
      "prompt_tokens": 1902,
      "completion_tokens_details": {
        "text_tokens": 159
      },
      "prompt_tokens_details": {
        "text_tokens": 670,
        "image_tokens": 1232
      },
      "total_tokens": 2061
    },
    "model": "qwen-omni-turbo",
    "question": "If the Total interest expense for year 2019 was adjusted to be lowered by $0.5(in millions), What is the Total interest expense for years 2017-2019? (in million)",
    "python_solution": "def solution():\n    # Define variables name and value\n    interest_expense_2019 = 184.1\n    interest_expense_2018 = 177.9\n    interest_expense_2017 = 184.2\n    adjustment = 0.5\n    \n    # Do math calculation to get the answer\n    answer = (interest_expense_2019 - adjustment) + interest_expense_2018 + interest_expense_2017\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-50",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Interest expense, net includes the stated interest rate on our outstanding debt, as well as the net impact of capitalized interest, interest income, the effects of terminated interest rate swaps and the amortization of capitalized senior debt issuance costs and credit facility fees, bond discounts, and terminated treasury locks. Interest expense, net for the years ended December 31, was as follows: (1) We repaid the notes upon maturity in July 2017. (2) On August 1, 2019, Sealed Air Corporation, on behalf of itself and certain of its subsidiaries, and Sealed Air Corporation (US) entered into an amendment to its existing senior secured credit facility with Bank of America, N.A., as agent, and the other financial institutions party thereto. The amendment provided for a new incremental term facility in an aggregate principal amount of up to $475 million, to be used, in part, to finance the acquisition of Automated. See Note 14, \"Debt and Credit Facilities,\" of the Notes to Consolidated Financial Statements for further details. (3) On July 12, 2018, the Company and certain of its subsidiaries entered into a third amended and restated credit agreement with respect to its existing senior secured credit facility. See Note 14, “Debt and Credit Facilities,” of the Notes to Consolidated Financial Statements for further details. (4) In November 2019, the Company issued $425 million of 4.00% Senior Notes due 2027 and used the proceeds to retire the existing $425 million of 6.50% Senior Notes due 2020. See Note 14, \"Debt and Credit Facilities,\" of the Notes to Consolidated Financial Statements for further details.",
    "images": [
      "./MultiFinance/images/1789-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-879",
    "output": [
      "quantity_demanded_income_12000_at_8 = 40\n    quantity_demanded_income_12000_at_10 = 50\n    price_increase = 10 - 8\n    quantity_decrease = quantity_demanded_income_12000_at_10 - quantity_demanded_income_12000_at_8\n    \n    # Calculate price elasticity of demand\n    price_elasticity_of_demand = (quantity_decrease / quantity_demanded_income_12000_at_10) * (price_increase / price_increase)\n    \n    # Return the calculated price elasticity of demand\n    return round(price_elasticity_of_demand, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 166,
      "prompt_tokens": 626,
      "completion_tokens_details": {
        "text_tokens": 166
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 342
      },
      "total_tokens": 792
    },
    "model": "qwen-omni-turbo",
    "question": "Suppose that your demand schedule for DVDs is as follows: <image 1> what is your price elasticity of demand as the price of DVDs increases from $8 to $10 if your income is $12,000? Answer to two decimal places.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Principals of Economics",
    "source_id": "validation_Economics_6",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/45-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-880",
    "output": [
      "market_share_1 = 28%  # 前一大公司的市场份额\n    market_share_2 = 40%  # 第二大公司的市场份额\n    market_share_3 = 16%  # 第三大公司的市场份额\n    \n    total_market_share = market_share_1 + market_share_2 + market_share_3  # 计算前三大公司的市场份额总和\n    \n    remaining_market_share = 100% - total_market_share  # 计算剩余所有公司的市场份额总和\n    \n    percentage = (total_market_share / 100) * 100  # 计算前三大公司市场份额总和占全部市场份额的百分比\n    \n    # return answer\n    return round(percentage, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 163,
      "prompt_tokens": 1874,
      "completion_tokens_details": {
        "text_tokens": 163
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1600
      },
      "total_tokens": 2037
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中前三大公司的市场份额总和，并将其与剩余所有公司的市场份额总和进行比较，求出前三大公司市场份额总和占全部市场份额的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    company1 = 22.77\n    company2 = 18.68\n    company3 = 11.20\n    total_market_share = 100\n\n    top_three_sum = company1 + company2 + company3\n    remaining_sum = total_market_share - top_three_sum\n    percentage = (top_three_sum / total_market_share) * 100\n    return round(percentage, 1)",
    "image_id": "company_16_16_13_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1886",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 4
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2354-1.png",
      "./MultiFinance/images/2354-2.png",
      "./MultiFinance/images/2354-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2354-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-881",
    "output": [
      "sum_bond_6m = 0\n    \n    # Do math calculation to get the answer\n    for i in range(8):\n        sum_bond_6m += float(table.iloc[i+1]['债券6月涨幅'])\n    \n    # return answer\n    return sum_bond_6m\n\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 68,
      "prompt_tokens": 2751,
      "completion_tokens_details": {
        "text_tokens": 68
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2488
      },
      "total_tokens": 2819
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2014年7月31日至2015年1月31日期间，债券6月涨幅的总和。",
    "python_solution": "def solution():\n    bond_jul = 4.7\n    bond_aug = 3.7\n    bond_sep = 5.0\n    bond_oct = 5.8\n    bond_nov = 5.6\n    bond_dec = 4.3\n    bond_jan = 5.5\n\n    total_bond = bond_jul + bond_aug + bond_sep + bond_oct + bond_nov + bond_dec + bond_jan\n    return total_bond",
    "image_id": "strategy_03_03_25_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2939",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2381-1.png",
      "./MultiFinance/images/2381-2.png",
      "./MultiFinance/images/2381-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2381-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-882",
    "output": [
      "power_generation_2021 = 365.04\n    power_generation_2022 = 460.52\n    difference = power_generation_2022 - power_generation_2021\n    percentage_difference = (difference / power_generation_2021) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 105,
      "prompt_tokens": 3714,
      "completion_tokens_details": {
        "text_tokens": 105
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 3438
      },
      "total_tokens": 3819
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年与2022年的发电量差值，并将该差值占2021年发电量的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    generation_2021 = 365.04\n    generation_2022 = 460.52\n\n    # Multi-step logic\n    diff = generation_2022 - generation_2021\n    ratio = diff / generation_2021\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_31_31_24_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1707",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2640-1.png",
      "./MultiFinance/images/2640-2.png",
      "./MultiFinance/images/2640-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2640-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-883",
    "output": [
      "min_holding_ratio = 100\n    max_holding_ratio = 0\n    for company in companies:\n        if company['持股比例'] < min_holding_ratio:\n            min_holding_ratio = company['持股比例']\n        if company['持股比例'] > max_holding_ratio:\n            max_holding_ratio = company['持股比例']\n    \n    difference = max_holding_ratio - min_holding_ratio\n    percentage_difference = (difference / max_holding_ratio) * 100\n    \n    # return answer\n    return round(percentage_difference, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 123,
      "prompt_tokens": 1979,
      "completion_tokens_details": {
        "text_tokens": 123
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 1709
      },
      "total_tokens": 2102
    },
    "model": "qwen-omni-turbo",
    "question": "请找出图中持股比例最低的子公司，并计算其持股比例与最高持股比例的差值，然后将该差值占最高持股比例的百分比保留一位小数。",
    "python_solution": "def calculate_lowest_highest_difference():\n    holding_ratios = [100.00, 100.00, 100.00, 87.09, 94.38, 76.10, 75.00, 51.00, 87.09, 70.00, 76.10, 76.10, 50.99, 76.10, 100.00, 89.00]\n    min_ratio = min(holding_ratios)\n    max_ratio = max(holding_ratios)\n    difference = max_ratio - min_ratio\n    percentage = (difference / max_ratio) * 100\n    return round(percentage, 1)",
    "image_id": "company_15_15_22_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1967",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 10
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2649-1.png",
      "./MultiFinance/images/2649-2.png",
      "./MultiFinance/images/2649-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2649-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-884",
    "output": [
      "total_percentage_2_to_4_kw_and_4_to_6_kw = (1 - 8/100) * 100\n    \n    # Do math calculation to get the answer\n    answer = round(total_percentage_2_to_4_kw_and_4_to_6_kw, 1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 78,
      "prompt_tokens": 1675,
      "completion_tokens_details": {
        "text_tokens": 78
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1417
      },
      "total_tokens": 1753
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2-4 kw和4-6 kw的总占比，并将结果保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2_to_4_kw = 15\n    value_4_to_6_kw = 45\n    # Multi-step logic\n    total_percentage = (value_2_to_4_kw + value_4_to_6_kw) / 100\n    return round(total_percentage, 1)",
    "image_id": "industry_07_07_22_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2353",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/3011-1.png",
      "./MultiFinance/images/3011-2.png",
      "./MultiFinance/images/3011-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/3011-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-885",
    "output": [
      "year_2024 = 0.48\n    year_2025 = 1.01\n    year_2026 = 1.34\n    year_2027 = 1.7\n    year_2028 = 2.05\n    \n    # Do math calculation to get the answer\n    total_shipment = year_2024 + year_2025 + year_2026 + year_2027 + year_2028\n    \n    # return answer\n    return round(total_shipment, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 136,
      "prompt_tokens": 830,
      "completion_tokens_details": {
        "text_tokens": 136
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 572
      },
      "total_tokens": 966
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年到2028年期间的总出货量，并将结果保留一位小数。",
    "python_solution": "def solution():\n    shipment_2024 = 0.48\n    shipment_2025 = 1.01\n    shipment_2026 = 1.34\n    shipment_2027 = 1.7\n    shipment_2028 = 2.05\n    total_shipment = shipment_2024 + shipment_2025 + shipment_2026 + shipment_2027 + shipment_2028\n    return round(total_shipment, 1)",
    "image_id": "industry_19_19_06_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2415",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2766-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2766-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-886",
    "output": [
      "year_1 = 140\n    year_2 = 149\n    year_3 = 240\n    \n    # Do math calculation to get the answer\n    growth_rate_year_1_to_year_2 = (year_2 - year_1) / year_1 * 100\n    growth_rate_year_2_to_year_3 = (year_3 - year_2) / year_2 * 100\n    average_growth_rate = (growth_rate_year_1_to_year_2 + growth_rate_year_2_to_year_3) / 2\n    \n    # return answer\n    return round(average_growth_rate, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 148,
      "prompt_tokens": 2850,
      "completion_tokens_details": {
        "text_tokens": 148
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 2573
      },
      "total_tokens": 2998
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中2024年、2025年和2033年的数据，计算从2024年到2033年的平均年增长率；请保留两位小数。",
    "python_solution": "def solution():\n    value_2024 = 140\n    value_2033 = 240\n    years = 2033 - 2024\n    average_growth_rate = ((value_2033 / value_2024) ** (1/years) - 1) * 100\n    return round(average_growth_rate, 2)",
    "image_id": "industry_04_04_11_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2202",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2374-1.png",
      "./MultiFinance/images/2374-2.png",
      "./MultiFinance/images/2374-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2374-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-887",
    "output": [
      "total_amount_2022 = 58000 + 165000\n    total_amount_2020 = 40000 + 30000\n    \n    growth_percentage = ((total_amount_2022 - total_amount_2020) / total_amount_2020) * 100\n    \n    # return answer\n    return round(growth_percentage, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 114,
      "prompt_tokens": 2869,
      "completion_tokens_details": {
        "text_tokens": 114
      },
      "prompt_tokens_details": {
        "text_tokens": 287,
        "image_tokens": 2582
      },
      "total_tokens": 2983
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2022年12月增资珠海富山爱旭的总金额，并将其与2020年8月增资天津爱旭的总金额进行比较，求出增长百分比；结果保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2020_tianjin = 40000 + 30000\n    value_2022_zhuhai = 58000 + 165000\n    \n    # Multi-step logic\n    diff = value_2022_zhuhai - value_2020_tianjin\n    ratio = diff / value_2020_tianjin\n    percentage = ratio * 100\n    \n    return round(percentage, 1)",
    "image_id": "company_21_21_05_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-815",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2368-1.png",
      "./MultiFinance/images/2368-2.png",
      "./MultiFinance/images/2368-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2368-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-888",
    "output": [
      "cagr_2021_to_2023 = ((928/550)**(1/2)) - 1\n    answer = round(cagr_2021_to_2023 * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 81,
      "prompt_tokens": 3652,
      "completion_tokens_details": {
        "text_tokens": 81
      },
      "prompt_tokens_details": {
        "text_tokens": 265,
        "image_tokens": 3387
      },
      "total_tokens": 3733
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年制造业贷款余额相较于2021年的复合年增长率（CAGR），并保留两位小数。",
    "python_solution": "def solution():\n    loan_2021 = 550\n    loan_2023 = 928\n    years = 2\n    cagr = ((loan_2023 / loan_2021) ** (1/years) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_07_07_14_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1828",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2494-1.png",
      "./MultiFinance/images/2494-2.png",
      "./MultiFinance/images/2494-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2494-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-889",
    "output": [
      "other_industry_percentage = 1 - (24% + 9%)\n    \n    # Do math calculation to get the answer\n    total_other_industry_percentage = other_industry_percentage * 100\n    \n    # return answer\n    return round(total_other_industry_percentage, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 68,
      "prompt_tokens": 1506,
      "completion_tokens_details": {
        "text_tokens": 68
      },
      "prompt_tokens_details": {
        "text_tokens": 252,
        "image_tokens": 1254
      },
      "total_tokens": 1574
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中除电信行业外其他所有行业的总占比，并将结果保留一位小数。",
    "python_solution": "def solution():\n    financial_percentage = 25\n    internet_percentage = 24\n    energy_percentage = 10\n    bio_percentage = 9\n    other_percentage = 9\n    total_other_percentage = financial_percentage + internet_percentage + energy_percentage + bio_percentage + other_percentage\n    return round(total_other_percentage, 1)",
    "image_id": "company_08_08_12_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-596",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2707-1.png",
      "./MultiFinance/images/2707-2.png",
      "./MultiFinance/images/2707-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2707-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-890",
    "output": [
      "year1 = 4.5\n    year2 = 4.6\n    year3 = 5.1\n    year4 = 3.8\n    year5 = 4.5\n    year6 = 3.9\n    \n    sum_profit = year1 + year2 + year3 + year4 + year5 + year6\n    average_profit = sum_profit / 6\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(average_profit, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 1646,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 1375
      },
      "total_tokens": 1759
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2020年到2023年的归母净利润总和，并求出这四年间的平均归母净利润；请保留两位小数。",
    "python_solution": "def solution():\n    value_2020 = 4.6\n    value_2021 = 5.1\n    value_2022 = 3.8\n    value_2023 = 4.5\n    total = value_2020 + value_2021 + value_2022 + value_2023\n    average = total / 4\n    return round(average, 2)",
    "image_id": "company_12_12_22_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1625",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2743-1.png",
      "./MultiFinance/images/2743-2.png",
      "./MultiFinance/images/2743-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2743-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-891",
    "output": [
      "adjusted_ebitda_2021 = 34708\n    loss_on_debt_repayment_2021 = 15990\n    loss_on_debt_repayment_lower_by_20_percent = loss_on_debt_repayment_2021 * (1 - 0.2)\n    \n    # Do math calculation to get the answer\n    adjusted_ebitda_if_loss_on_debt_repayment_was_20_percent_lower = adjusted_ebitda_2021 + loss_on_debt_repayment_lower_by_20_percent\n    \n    # return answer\n    return adjusted_ebitda_if_loss_on_debt_repayment_was_20_percent_lower\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 164,
      "prompt_tokens": 1183,
      "completion_tokens_details": {
        "text_tokens": 164
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 899
      },
      "total_tokens": 1347
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the Adjusted EBITDA for the six months ended June 30, 2021, if the loss on debt repayment was 20% lower in thousands?",
    "python_solution": "def solution():\n     #Define variables name and value\n    current_loss_on_debt_repayment = 15990 \n    adjusted_ebitda_with_current_loss = 34708\n\n    #Calculate the new loss on debt repayment\n    new_loss_on_debt_repayment = current_loss_on_debt_repayment * 0.8 # 20% lower\n\n    #Adjust the EBITDA accordingly\n    difference = current_loss_on_debt_repayment - new_loss_on_debt_repayment\n    new_adjusted_ebitda = adjusted_ebitda_with_current_loss - difference\n    return new_adjusted_ebitda\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-57",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1974-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 0,
          "%": 1,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 0
      }
    },
    "difficulty": 3.58351893845611,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-892",
    "output": [
      "interest_income_2018 = 74.1\n    interest_income_2019 = 64.1\n    average_interest_income = (interest_income_2018 + interest_income_2019) / 2\n    difference = 77.1 - average_interest_income\n    \n    # Convert to percentage form and round to one decimal place\n    percentage_difference = round((difference / average_interest_income) * 100, 1)\n    \n    # return answer\n    return percentage_difference\n```"
    ],
    "usage": {
      "completion_tokens": 116,
      "prompt_tokens": 2315,
      "completion_tokens_details": {
        "text_tokens": 116
      },
      "prompt_tokens_details": {
        "text_tokens": 286,
        "image_tokens": 2029
      },
      "total_tokens": 2431
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中2018年和2019年的利息净收入，计算这两年的平均值；然后用2020年的利息净收入减去这个平均值，并将结果表示为百分比形式。请保留一位小数。",
    "python_solution": "def solution():\n    net_interest_income_2018 = 65.0\n    net_interest_income_2019 = 63.0\n    net_interest_income_2020 = 75.0\n\n    average_2018_2019 = (net_interest_income_2018 + net_interest_income_2019) / 2\n    difference = net_interest_income_2020 - average_2018_2019\n    percentage = (difference / average_2018_2019) * 100\n    return round(percentage, 1)",
    "image_id": "company_04_04_11_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-703",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2392-1.png",
      "./MultiFinance/images/2392-2.png",
      "./MultiFinance/images/2392-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2392-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-893",
    "output": [
      "traditional_core_price = 100 + 300 + 100\n    new_energy_core_price = 200 + 1500 + 840\n    \n    # Calculate the difference between the two prices\n    price_difference = abs(traditional_core_price - new_energy_core_price)\n    \n    # Return the result with one decimal place\n    return round(price_difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 102,
      "prompt_tokens": 2316,
      "completion_tokens_details": {
        "text_tokens": 102
      },
      "prompt_tokens_details": {
        "text_tokens": 286,
        "image_tokens": 2030
      },
      "total_tokens": 2418
    },
    "model": "qwen-omni-turbo",
    "question": "请计算传统热管理核心组件中冷凝器、油冷器和水泵的总价，并将其与新能源汽车热管理核心组件中的冷凝器、热泵系统和电子系统的总价进行比较，计算两者的差值；请保留一位小数。",
    "python_solution": "def solution():\n    traditional_condenser = 100\n    traditional_oil_cooler = 300\n    traditional_water_pump = 100\n    new_energy_condenser = 200\n    new_energy_heat_pump = 1500\n    new_energy_electronic_system = 840\n\n    traditional_total = traditional_condenser + traditional_oil_cooler + traditional_water_pump\n    new_energy_total = new_energy_condenser + new_energy_heat_pump + new_energy_electronic_system\n    difference = traditional_total - new_energy_total\n    return round(difference, 1)",
    "image_id": "company_08_08_09_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-639",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2351-1.png",
      "./MultiFinance/images/2351-2.png",
      "./MultiFinance/images/2351-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2351-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-894",
    "output": [
      "pe_2025 = 29.90\n    pe_2026 = 164.74\n    average_pe = (pe_2025 + pe_2026) / 2\n    \n    # Do math calculation to get the answer\n    answer = round(average_pe, 1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 3012,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 2752
      },
      "total_tokens": 3099
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中2025年和2026年的PE倍数的平均值，并将结果保留一位小数。",
    "python_solution": "def solution():\n    pe_2025 = (34.19 + 22.68 + 35.14 + 27.60 + 254.00) / 5\n    pe_2026 = (26.23 + 18.71 + 24.09 + 20.38 + 164.74) / 5\n    average_pe = (pe_2025 + pe_2026) / 2\n    return round(average_pe, 1)",
    "image_id": "company_03_03_18_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 11
      },
      "operator_statistics": {
        "operators": {
          "+": 9,
          "-": 0,
          "*": 0,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 12
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 8
      }
    },
    "difficulty": 4.564348191467836,
    "images": [
      "./MultiFinance/images/2225-1.png",
      "./MultiFinance/images/2225-2.png",
      "./MultiFinance/images/2225-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2225-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-895",
    "output": [
      "factory_outside_purchase_price_2018 = 400\n    factory_inside_purchase_price_2018 = 306\n    factory_inside_purchase_cost_2018 = 270\n    \n    # Calculate the difference between factory outside purchase price and inside purchase price in 2018\n    price_difference_2018 = factory_outside_purchase_price_2018 - factory_inside_purchase_price_2018\n    \n    # Calculate the percentage of this difference relative to the inside purchase cost in 2018\n    percentage_difference_2018 = (price_difference_2018 / factory_inside_purchase_cost_2018) * 100\n    \n    # Round the result to one decimal place\n    rounded_percentage_difference_2018 = round(percentage_difference_2018, 1)\n    \n    # Return the calculated percentage difference as a string with two decimal places\n    return f\"{rounded_percentage_difference_2018:.2f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 223,
      "prompt_tokens": 1800,
      "completion_tokens_details": {
        "text_tokens": 223
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1520
      },
      "total_tokens": 2023
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年电厂外购煤价与电厂内购煤价的差值，并将该差值占电厂内购煤成本的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    external_coal_price_2018 = 398\n    internal_coal_price_2018 = 306\n    internal_coal_cost_2018 = 328\n\n    diff = external_coal_price_2018 - internal_coal_price_2018\n    ratio = diff / internal_coal_cost_2018\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_31_31_19_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1711",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2981-1.png",
      "./MultiFinance/images/2981-2.png",
      "./MultiFinance/images/2981-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2981-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-896",
    "output": [
      "market_share_1 = 15\n    market_share_2 = 13\n    market_share_3 = 10\n    market_share_4 = 9\n    market_share_5 = 6\n    \n    total_market_share = market_share_1 + market_share_2 + market_share_3 + market_share_4 + market_share_5\n    \n    # return answer\n    return round(total_market_share, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 99,
      "prompt_tokens": 3312,
      "completion_tokens_details": {
        "text_tokens": 99
      },
      "prompt_tokens_details": {
        "text_tokens": 250,
        "image_tokens": 3062
      },
      "total_tokens": 3411
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中前五大公司的全球市场份额总和，并将结果保留两位小数。",
    "python_solution": "def solution():\n    share_jiantao = 15\n    share_shengyi = 13\n    share_nan_ya_suliao = 10\n    share_taiwang = 9\n    share_lianmao_dianzi = 6\n\n    total_share = (share_jiantao + share_shengyi + share_nan_ya_suliao + share_taiwang + share_lianmao_dianzi) / 100\n    return round(total_share, 2)",
    "image_id": "industry_19_19_36_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2404",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2504-1.png",
      "./MultiFinance/images/2504-2.png",
      "./MultiFinance/images/2504-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2504-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-897",
    "output": [
      "fisher_price = 3.50\n    laweisstine = 5.50\n    yuexiu = 7.30\n    debai = 2.60\n    \n    # Do math calculation to get the answer\n    total_market_share = fisher_price + laweisstine + yuexiu\n    difference = total_market_share - debai\n    \n    # return answer\n    return round(difference, 1)\n```"
    ],
    "usage": {
      "completion_tokens": 102,
      "prompt_tokens": 1471,
      "completion_tokens_details": {
        "text_tokens": 102
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 1190
      },
      "total_tokens": 1573
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中费雪派克、律维施泰因（万曼）和鱼跃医疗的市场份额总和，并将其与德百世的市场份额进行比较，求出它们之间的差值；请保留一位小数。",
    "python_solution": "def solution():\n    fisher_paykel_share = 3.50\n    lvs_tiemann_share = 5.50\n    yuyp_share = 7.30\n    debaish_share = 2.60\n\n    total_fisher_lvs_yuyp = fisher_paykel_share + lvs_tiemann_share + yuyp_share\n    difference = total_fisher_lvs_yuyp - debaish_share\n    return round(difference, 1)",
    "image_id": "company_34_34_15_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-511",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2930-1.png",
      "./MultiFinance/images/2930-2.png",
      "./MultiFinance/images/2930-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2930-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-898",
    "output": [
      "ebit_2021 = 821\n    ebit_2022 = 447\n    main_income_2021 = 6680\n    \n    # Do math calculation to get the answer\n    difference = ebit_2021 - ebit_2022\n    percentage = (difference / main_income_2021) * 100\n    \n    # return answer\n    return round(percentage, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 122,
      "prompt_tokens": 2312,
      "completion_tokens_details": {
        "text_tokens": 122
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 2034
      },
      "total_tokens": 2434
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年和2022年的息税前利润（EBIT）的差值，并将该差值占2021年主营业务收入的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    ebit_2021 = 821\n    ebit_2022 = 447\n    revenue_2021 = 6680\n\n    diff_ebit = ebit_2021 - ebit_2022\n    percentage = (diff_ebit / revenue_2021) * 100\n    return round(percentage, 1)",
    "image_id": "company_02_02_25_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-110",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2905-1.png",
      "./MultiFinance/images/2905-2.png",
      "./MultiFinance/images/2905-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2905-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-899",
    "output": [
      "settlement_2019 = -30.0\n    settlement_2018 = -7.0\n    \n    # Calculate the difference in settlements\n    difference = settlement_2019 - settlement_2018\n    \n    # Calculate the percentage change\n    percentage_change = (difference / abs(settlement_2018)) * 100\n    \n    # Return the answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 1653,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 433,
        "image_tokens": 1220
      },
      "total_tokens": 1759
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in settlements between 2018 and 2019 if settlements in 2019 were -$30.0 million instead? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    settlements_2019 = -30.0\n    settlements_2018 = -7.0\n    \n    # Do math calculation to get the answer\n    answer = (settlements_2019 - settlements_2018) / settlements_2018 * 100\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-71",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n AMERICAN TOWER CORPORATION AND SUBSIDIARIES NOTES TO CONSOLIDATED FINANCIAL STATEMENT(Tabular amounts in millions, unless otherwise disclosed) 11. ASSET RETIREMENT OBLIGATIONS The changes in the carrying amount of the Company’s asset retirement obligations were as follows: (1) Revisions in estimates include decreases to the liability of $6.7 million and $49.4 million related to foreign currency translation for the years ended December 31, 2019 and 2018, respectively. As of December 31, 2019, the estimated undiscounted future cash outlay for asset retirement obligations was $3.2 billion.",
    "images": [
      "./MultiFinance/images/1810-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-900",
    "output": [
      "first_2022 = -48.66\n    first_2023 = 18.90\n    difference = (first_2023 - first_2022) / first_2022 * 100\n    \n    # return answer\n    return round(difference, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 77,
      "prompt_tokens": 1418,
      "completion_tokens_details": {
        "text_tokens": 77
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 1133
      },
      "total_tokens": 1495
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中2022年和2023年的第一项指标值，计算它们之间的差值，并将结果除以2022年的第一项指标值，然后将结果转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_2022_first = -40.74\n    value_2023_first = 1.25\n    diff = value_2023_first - value_2022_first\n    ratio = diff / value_2022_first\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_24_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2811",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2848-1.png",
      "./MultiFinance/images/2848-2.png",
      "./MultiFinance/images/2848-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2848-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-901",
    "output": [
      "deferred_compensation_plan_investments_2012 = 6379\n    deferred_compensation_plan_investments_2013 = 7730\n    \n    # Calculate the annual growth rate\n    growth_rate = ((deferred_compensation_plan_investments_2013 - deferred_compensation_plan_investments_2012) / deferred_compensation_plan_investments_2012) * 100\n    \n    # Return the result\n    return growth_rate\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 125,
      "prompt_tokens": 1396,
      "completion_tokens_details": {
        "text_tokens": 125
      },
      "prompt_tokens_details": {
        "text_tokens": 290,
        "image_tokens": 1106
      },
      "total_tokens": 1521
    },
    "model": "qwen-omni-turbo",
    "question": "What's the annual growth rate of the equity value from December 26, 2012 to September 25, 2013, by using the Deferred compensation plan investments as equity, in percentage?",
    "python_solution": "def solution():\n    from math import pow\n    #Define variables name and value\n\n    equity_Dec_2012 = 6371 # value in thousands\n\n    equity_Sep_2013 = 7730 # value in thousands\n    time_passed = (25+30*8+26) / 365 # time in years\n    #Do math calculation to get the answer\n    growth_rate = pow((equity_Sep_2013 / equity_Dec_2012), (1 / time_passed)) - 1\n    # convert the result from decimal to percentage\n    answer = growth_rate * 100\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-56",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1973-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 8
      }
    },
    "difficulty": 4.718498871295094,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-902",
    "output": [
      "pe_2024_avg = (9 + 8 + 10) / 3\n    pe_2025_avg = (6 + 7 + 11) / 3\n    \n    change = pe_2025_avg - pe_2024_avg\n    \n    # return answer\n    return round(change, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 80,
      "prompt_tokens": 2578,
      "completion_tokens_details": {
        "text_tokens": 80
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 2308
      },
      "total_tokens": 2658
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中2024年PE的平均值，并将其与2025年PE的平均值进行比较，求出变化量；结果保留一位小数。",
    "python_solution": "def solution():\n    pe_2024 = (6 + 8 + 13 + 8) / 4\n    pe_2025 = (6 + 7 + 11 + 8) / 4\n    change = pe_2025 - pe_2024\n    return round(change, 1)",
    "image_id": "company_26_26_15_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1754",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 1,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 6
      }
    },
    "difficulty": 4.143134726391533,
    "images": [
      "./MultiFinance/images/2311-1.png",
      "./MultiFinance/images/2311-2.png",
      "./MultiFinance/images/2311-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2311-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-903",
    "output": [
      "growth_rate_2018 = (2.38 - 1.96) / 1.96 * 100\n    growth_rate_2019 = (4.63 - 2.38) / 2.38 * 100\n    growth_rate_2020 = (2.97 - 4.63) / 4.63 * 100\n    growth_rate_2021 = (5.09 - 2.97) / 2.97 * 100\n    growth_rate_2022 = (3.29 - 5.09) / 5.09 * 100\n    growth_rate_2023 = (4.76 - 3.29) / 3.29 * 100\n    \n    average_growth_rate = (growth_rate_2018 + growth_rate_2019 + growth_rate_2020 + growth_rate_2021 + growth_rate_2022 + growth_rate_2023) / 6\n    \n    # return answer\n    return round(average_growth_rate, 2)\n\n```"
    ],
    "usage": {
      "completion_tokens": 274,
      "prompt_tokens": 682,
      "completion_tokens_details": {
        "text_tokens": 274
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 422
      },
      "total_tokens": 956
    },
    "model": "qwen-omni-turbo",
    "question": "请计算中债新综合指数在2018年到2023年的平均增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    zzhz_2018 = 8.19\n    zzhz_2019 = 4.63\n    zzhz_2020 = 2.97\n    zzhz_2021 = 5.09\n    zzhz_2022 = 3.29\n    zzhz_2023 = 4.76\n\n    # Multi-step logic\n    total_growth = zzhz_2018 + zzhz_2019 + zzhz_2020 + zzhz_2021 + zzhz_2022 + zzhz_2023\n    average_growth = total_growth / 6\n    return round(average_growth, 2)",
    "image_id": "strategy_03_03_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2970",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 2
      }
    },
    "difficulty": 4.430816798843313,
    "images": [
      "./MultiFinance/images/2254-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2254-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-904",
    "output": [
      "packaging_water_production = 194.6\n    beverage_production = 87.6\n    total_production = packaging_water_production + beverage_production\n    \n    production_difference_percentage = ((packaging_water_production - beverage_production) / total_production) * 100\n    \n    # return answer\n    return round(production_difference_percentage, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 89,
      "prompt_tokens": 3033,
      "completion_tokens_details": {
        "text_tokens": 89
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 2761
      },
      "total_tokens": 3122
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算某工厂的包装水产量与饮料产量的差值，并将该差值占该工厂总产量的比例转换为百分比；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    packaged_water_production = 521.3\n    beverage_production = 23.01\n    difference = packaged_water_production - beverage_production\n    total_production = packaged_water_production + beverage_production\n    percentage = (difference / total_production) * 100\n    return round(percentage, 2)",
    "image_id": "company_23_23_16_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-940",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2616-1.png",
      "./MultiFinance/images/2616-2.png",
      "./MultiFinance/images/2616-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2616-3.png",
      "./MultiFinance/images/2616-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-905",
    "output": [
      "global_industry_size_2023 = 84\n    global_industry_size_2029 = 324\n    cagr = (global_industry_size_2029 / global_industry_size_2023) ** (1/6) - 1\n    \n    # Do math calculation to get the answer\n    answer = round(cagr * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 103,
      "prompt_tokens": 2155,
      "completion_tokens_details": {
        "text_tokens": 103
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 1898
      },
      "total_tokens": 2258
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2029年全球产业规模的复合年增长率，并保留两位小数。",
    "python_solution": "def solution():\n    value_2023 = 21.6\n    value_2029 = 324\n    years = 2029 - 2023\n\n    cagr = ((value_2029 / value_2023) ** (1/years)) - 1\n    return round(cagr, 2)",
    "image_id": "company_08_08_15_figure_6",
    "source": "CRRQA",
    "source_id": "CRRQA-company-607",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2444-1.png",
      "./MultiFinance/images/2444-2.png",
      "./MultiFinance/images/2444-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2444-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-906",
    "output": [
      "total_shares = 1 + 2 + 4 + 87.09 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1"
    ],
    "usage": {
      "completion_tokens": 2048,
      "prompt_tokens": 2741,
      "completion_tokens_details": {
        "text_tokens": 2048
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2482
      },
      "total_tokens": 4789
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算雅化集团在民爆业务和锂业务中的总持股比例；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    civil_explosives_percentage = 100 + 100 + 100 + 87.09\n    lithium_percentage = 100 + 37.25\n\n    total_percentage = (civil_explosives_percentage + lithium_percentage) / 2\n    return round(total_percentage, 1)",
    "image_id": "company_15_15_05_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1968",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.737669618283368,
    "images": [
      "./MultiFinance/images/2522-1.png",
      "./MultiFinance/images/2522-2.png",
      "./MultiFinance/images/2522-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2522-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-907",
    "output": [
      "profit_2022 = 4631\n    profit_2023 = 45\n    \n    # Do math calculation to get the answer\n    growth_rate = (profit_2023 - profit_2022) / profit_2022 * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 89,
      "prompt_tokens": 2920,
      "completion_tokens_details": {
        "text_tokens": 89
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 2660
      },
      "total_tokens": 3009
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年与2022年的营业利润增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    profit_2022 = -99.6\n    profit_2023 = 1670.3\n    growth_rate = (profit_2023 - profit_2022) / profit_2022 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_32_32_25_table_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1068",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2958-1.png",
      "./MultiFinance/images/2958-2.png",
      "./MultiFinance/images/2958-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2958-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-908",
    "output": [
      "year_0_machine_a_cost = 40000\n    year_0_machine_b_cost = 50000\n    year_1_machine_a_cost = 10000\n    year_2_machine_a_cost = 10000\n    year_3_machine_a_cost = 10000 + replace_cost\n    year_4_machine_a_cost = 8000 + replace_cost\n    year_1_machine_b_cost = 8000\n    year_2_machine_b_cost = 8000\n    year_3_machine_b_cost = 8000\n    year_4_machine_b_cost = 8000 + replace_cost\n    real_discount_rate = 0.06\n    replace_cost = 10000\n    \n    # Calculate present value of costs for each machine\n    pv_machine_a = (year_0_machine_a_cost + \n                    year_1_machine_a_cost / (1 + real_discount_rate) +\n                    year_2_machine_a_cost / (1 + real_discount_rate)**2 +\n                    year_3_machine_a_cost / (1 + real_discount_rate)**3 +\n                    year_4_machine_a_cost / (1 + real_discount_rate)**4)\n    \n    pv_machine_b = (year_0_machine_b_cost + \n                    year_1_machine_b_cost / (1 + real_discount_rate) +\n                    year_2_machine_b_cost / (1 + real_discount_rate)**2 +\n                    year_3_machine_b_cost / (1 + real_discount_rate)**3 +\n                    year_4_machine_b_cost / (1 + real_discount_rate)**4)\n    \n    # Calculate annual rental payment for Machine A\n    annual_rental_payment = pv_machine_a / 4\n    \n    # Return the annual rental payment\n    return round(annual_rental_payment, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 408,
      "prompt_tokens": 509,
      "completion_tokens_details": {
        "text_tokens": 408
      },
      "prompt_tokens_details": {
        "text_tokens": 331,
        "image_tokens": 178
      },
      "total_tokens": 917
    },
    "model": "qwen-omni-turbo",
    "question": "The Borstal Company has to choose between two machines that do the same job but have different lives. The two machines have the following costs: <image 1> These costs are expressed in real terms. Suppose you are Borstal's financial manager. If you had to buy Machine A and rent it to the production manager for that machine's economic life, what annual rental payment would you have to charge? Assume a 6% real discount rate and ignore taxes. Answer to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Finance",
    "source_id": "test_Finance_67",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/142-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-909",
    "output": [
      "EPS_2023A = 2.10\n    EPS_2024E = 2.29\n    EPS_2025E = 2.55\n    EPS_2026E = 2.87\n    \n    # Do math calculation to get the answer\n    CAGR = ((EPS_2026E / EPS_2023A) ** (1/3)) - 1\n    answer = round(CAGR * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 140,
      "prompt_tokens": 2733,
      "completion_tokens_details": {
        "text_tokens": 140
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 2476
      },
      "total_tokens": 2873
    },
    "model": "qwen-omni-turbo",
    "question": "请计算丽珠集团2023年到2026年的EPS复合增长率，并将其保留两位小数。",
    "python_solution": "def solution():\n    eps_2023 = 2.10\n    eps_2024 = 2.29\n    eps_2025 = 2.55\n    eps_2026 = 2.87\n    cagr = ((eps_2026 / eps_2023) ** (1/3) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_39_39_21_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1252",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 8
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2396-1.png",
      "./MultiFinance/images/2396-2.png",
      "./MultiFinance/images/2396-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2396-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-910",
    "output": [
      "year_1_marginal_profit = -30.91 + (-769.85)\n    year_2_marginal_profit = 2117.08 + 1868.89\n    \n    marginal_profit_growth_rate = (year_2_marginal_profit - year_1_marginal_profit) / abs(year_1_marginal_profit) * 100\n    \n    # return answer\n    return round(marginal_profit_growth_rate, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 120,
      "prompt_tokens": 3767,
      "completion_tokens_details": {
        "text_tokens": 120
      },
      "prompt_tokens_details": {
        "text_tokens": 264,
        "image_tokens": 3503
      },
      "total_tokens": 3887
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年和2024年的毛利总额，并求出这两年的毛利总额的增长率；结果保留两位小数。",
    "python_solution": "def solution():\n    gross_profit_2023 = -30.91\n    gross_profit_2024 = -970.86\n    total_gross_profit_2023 = gross_profit_2023\n    total_gross_profit_2024 = gross_profit_2024\n    growth_rate = (total_gross_profit_2024 - total_gross_profit_2023) / total_gross_profit_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_21_21_18_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-792",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2565-1.png",
      "./MultiFinance/images/2565-2.png",
      "./MultiFinance/images/2565-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2565-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-911",
    "output": [
      "coupon_rate = 0.03\n    maturity_time = 3\n    required_rate_of_return = 0.05\n    par_value_of_the_bond = 100\n    \n    semiannual_coupon_payment = (coupon_rate * par_value_of_the_bond) / 2\n    number_of_periods = maturity_time * 2\n    present_value_of_interest_payments = (semiannual_coupon_payment / ((1 + required_rate_of_return)**(number_of_periods/2))) * (((1 + required_rate_of_return)**(number_of_periods/2)) - 1)\n    present_value_of_par_value = (par_value_of_the_bond / ((1 + required_rate_of_return)**maturity_time))\n    \n    bond_price = present_value_of_interest_payments + present_value_of_par_value\n    \n    # return answer\n    return round(bond_price, 3)\n\n```"
    ],
    "usage": {
      "completion_tokens": 183,
      "prompt_tokens": 1495,
      "completion_tokens_details": {
        "text_tokens": 183
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 1242
      },
      "total_tokens": 1678
    },
    "model": "qwen-omni-turbo",
    "question": "The following information pertains to a bond, what will be the bond's price? Answer to three decimal places.",
    "python_solution": "def solution():\n\n    N = 2 * 3\n    I_Y = 5 / 2\n    PMT = 3 / 2\n    FV = 100\n\n    PV = 0\n\n    for i in range(1, N + 1):\n        PV += PMT / ((1 + I_Y/100) ** i)\n    PV += FV / ((1 + I_Y/100) ** N)\n\n    return PV",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 1,
          "/": 6,
          "%": 0,
          "**": 2
        },
        "total_operators": 14
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 10
      }
    },
    "difficulty": 5.278114659230517,
    "source_id": "validation-15",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/295-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-912",
    "output": [
      "cash = 300\n    checking = 3000\n    savings = 1200\n    ibm_stock = 2000\n    auto_loan = 8000\n    mortgage = 100000\n    medical_bills_payable = 250\n    utility_bills_payable = 150\n    real_estate = 150000\n    \n    total_liquid_assets = cash + checking + savings + ibm_stock + real_estate\n    \n    total_current_liabilities = mortgage + medical_bills_payable + utility_bills_payable\n    \n    net_working_capital = total_liquid_assets - total_current_liabilities\n    \n    # return answer\n    return int(net_working_capital)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 178,
      "prompt_tokens": 644,
      "completion_tokens_details": {
        "text_tokens": 178
      },
      "prompt_tokens_details": {
        "text_tokens": 318,
        "image_tokens": 326
      },
      "total_tokens": 822
    },
    "model": "qwen-omni-turbo",
    "question": "Adam and Arin Adams have collected their personal asset and liability information and have asked you to put together a balance sheet as of December 31, 2015. The following information is received from the Adams family. <image 1> What was their net working capital (NWC) for the year? (Hint: NWC is the difference between total liquid assets and total current liabilities.) Answer to the nearest integer.",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Managerial Finance",
    "source_id": "validation_Finance_21",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/84-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-913",
    "output": [
      "year_2016_to_2023_mining_profit_margin = [9, 11, 7, 2, 11, 19, 32]\n    year_2016_to_2023_lithium_industry_profit_margin = [48, 42, 39, 37, 36, 42, 49]\n\n    sum_year_2016_to_2023_mining_profit_margin = sum(year_2016_to_2023_mining_profit_margin)\n    sum_year_2016_to_2023_lithium_industry_profit_margin = sum(year_2016_to_2023_lithium_industry_profit_margin)\n\n    answer = round(sum_year_2016_to_2023_mining_profit_margin / sum_year_2016_to_2023_lithium_industry_profit_margin, 2)\n\n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 229,
      "prompt_tokens": 1700,
      "completion_tokens_details": {
        "text_tokens": 229
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 1427
      },
      "total_tokens": 1929
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2016年至2023年民爆业务毛利率的总和，并将结果除以锂行业毛利率的总和；请保留两位小数。",
    "python_solution": "def solution():\n    explosive_margin_2016 = 48\n    explosive_margin_2017 = 42\n    explosive_margin_2018 = 39\n    explosive_margin_2019 = 37\n    explosive_margin_2020 = 36\n    explosive_margin_2021 = 29\n    explosive_margin_2022 = 29\n    explosive_margin_2023 = 32\n\n    total_explosive_margin = explosive_margin_2016 + explosive_margin_2017 + explosive_margin_2018 + explosive_margin_2019 + explosive_margin_2020 + explosive_margin_2021 + explosive_margin_2022 + explosive_margin_2023\n\n    lithium_margin_2016 = 21\n    lithium_margin_2017 = 25\n    lithium_margin_2018 = 16\n    lithium_margin_2019 = 1\n    lithium_margin_2020 = 13\n    lithium_margin_2021 = 42\n    lithium_margin_2022 = 49\n    lithium_margin_2023 = 6\n\n    total_lithium_margin = lithium_margin_2016 + lithium_margin_2017 + lithium_margin_2018 + lithium_margin_2019 + lithium_margin_2020 + lithium_margin_2021 + lithium_margin_2022 + lithium_margin_2023\n\n    result = total_explosive_margin / total_lithium_margin\n    return round(result, 2)",
    "image_id": "company_32_32_05_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1101",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 14,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 15
      },
      "code_statistics": {
        "lines": 20,
        "parentheses": 2
      }
    },
    "difficulty": 5.752572638825633,
    "images": [
      "./MultiFinance/images/2150-1.png",
      "./MultiFinance/images/2150-2.png",
      "./MultiFinance/images/2150-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2150-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-914",
    "output": [
      "vake_profit_2023 = 121.6\n    vake_profit_2024 = -98.2\n    profit_difference = vake_profit_2024 - vake_profit_2023\n    result = profit_difference / vake_profit_2023\n    \n    # return answer\n    return round(result, 2)\n\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 4010,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 3730
      },
      "total_tokens": 4097
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算万科A在2023年和2024年的归母净利润之差，并将该差值除以2023年的归母净利润，得到的结果保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2023 = -46\n    net_profit_2024 = -11\n    diff = net_profit_2024 - net_profit_2023\n    ratio = diff / net_profit_2023\n    return round(ratio, 2)",
    "image_id": "industry_05_05_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2028",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2995-1.png",
      "./MultiFinance/images/2995-2.png",
      "./MultiFinance/images/2995-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2995-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-915",
    "output": [
      "market_growth_2022_to_2023 = (41 - 27) / 27 * 100\n    \n    # Do math calculation to get the answer\n    market_growth_rate = round(market_growth_2022_to_2023, 2)\n    \n    # return answer\n    return market_growth_rate\n```"
    ],
    "usage": {
      "completion_tokens": 81,
      "prompt_tokens": 1399,
      "completion_tokens_details": {
        "text_tokens": 81
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1140
      },
      "total_tokens": 1480
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2022年到2023年的市场增长率，并将结果保留两位小数。",
    "python_solution": "def calculate_growth_rate_2022_to_2023():\n    market_size_2022 = 33.0\n    market_size_2023 = 40.0\n    growth_rate = (market_size_2023 - market_size_2022) / market_size_2022 * 100\n    return round(growth_rate, 2)\n",
    "image_id": "company_34_34_14_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-517",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2934-1.png",
      "./MultiFinance/images/2934-2.png",
      "./MultiFinance/images/2934-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2934-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-916",
    "output": [
      "total_capacity = 1821 + 400 + 800 + 600\n    number_of_mines = 4\n    average_capacity = total_capacity / number_of_mines\n    \n    # return answer\n    return round(average_capacity, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 63,
      "prompt_tokens": 2768,
      "completion_tokens_details": {
        "text_tokens": 63
      },
      "prompt_tokens_details": {
        "text_tokens": 248,
        "image_tokens": 2520
      },
      "total_tokens": 2831
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中所有矿井的平均权益产能，并保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    total_entitlement_capacity = 424 + 528 + 509 + 360 + 254 + 800 + 600\n    number_of_mines = 7\n    average_entitlement_capacity = total_entitlement_capacity / number_of_mines\n    return round(average_entitlement_capacity, 2)",
    "image_id": "company_31_31_08_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1694",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 2
      }
    },
    "difficulty": 3.737669618283368,
    "images": [
      "./MultiFinance/images/2521-1.png",
      "./MultiFinance/images/2521-2.png",
      "./MultiFinance/images/2521-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2521-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-917",
    "output": [
      "rental_expense_2002 = 84\n    rental_expense_2001 = 75\n    \n    # Calculate the growth rate\n    growth_rate = ((rental_expense_2002 - rental_expense_2001) / rental_expense_2001) * 100\n    \n    # Return the rounded growth rate\n    return round(growth_rate)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 104,
      "prompt_tokens": 2897,
      "completion_tokens_details": {
        "text_tokens": 104
      },
      "prompt_tokens_details": {
        "text_tokens": 1670,
        "image_tokens": 1227
      },
      "total_tokens": 3001
    },
    "model": "qwen-omni-turbo",
    "question": "what is the growth rate in rental expense included in other operations and maintenance expense in 2002 compare to 2001? Answer to the nearest integer.",
    "answer": "12",
    "context": "power purchase contracts dominion has entered into contracts for long-term purchases of capacity and energy from other utilities , qualifying facilities and independent power producers . as of december 31 , 2002 , dominion had 42 non-utility purchase contracts with a com- bined dependable summer capacity of 3758 megawatts . the table below reflects dominion 2019s minimum commitments as of december 31 , 2002 under these contracts. .\n\n<image 1>\n\ncapacity and other purchases under these contracts totaled $ 691 million , $ 680 million and $ 740 million for 2002 , 2001 and 2000 , respectively . in 2001 , dominion completed the purchase of three gener- ating facilities and the termination of seven long-term power purchase contracts with non-utility generators . dominion recorded an after-tax charge of $ 136 million in connection with the purchase and termination of long-term power purchase contracts . cash payments related to the purchase of three gener- ating facilities totaled $ 207 million . the allocation of the pur- chase price was assigned to the assets and liabilities acquired based upon estimated fair values as of the date of acquisition . substantially all of the value was attributed to the power pur- chase contracts which were terminated and resulted in a charge included in operation and maintenance expense . fuel purchase commitments dominion enters into long-term purchase commitments for fuel used in electric generation and natural gas for purposes other than trading . estimated payments under these commitments for the next five years are as follows : 2003 2014$ 599 million ; 2004 2014$ 311 million ; 2005 2014$ 253 million ; 2006 2014$ 205 mil- lion ; 2007 2014$ 89 million ; and years beyond 2007 2014$ 215 mil- lion . these purchase commitments include those required for regulated operations . dominion recovers the costs of those pur- chases through regulated rates . the natural gas purchase com- mitments of dominion 2019s field services operations are also included , net of related sales commitments . in addition , dominion has committed to purchase certain volumes of nat- ural gas at market index prices determined in the period the natural gas is delivered . these transactions have been designated as normal purchases and sales under sfas no . 133 . natural gas pipeline and storage capacity commitments dominion enters into long-term commitments for the purchase of natural gas pipeline and storage capacity for purposes other than trading . estimated payments under these commitments for the next five years are as follows : 2003 2014$ 34 million ; 2004 2014$ 23 million ; 2005 2014$ 13 million . there were no signifi- cant commitments beyond 2005 . production handling and firm transportation commitments in connection with its gas and oil production operations , dominion has entered into certain transportation and produc- tion handling agreements with minimum commitments expected to be paid in the following years : 2003 2014$ 23 million ; 2004 2014$ 57 million ; 2005 2014$ 56 million ; 2006 2014$ 53 million ; 2007 2014$ 44 million ; and years after 2007 2014$ 68 million . lease commitments dominion leases various facilities , vehicles , aircraft and equip- ment under both operating and capital leases . future minimum lease payments under operating and capital leases that have initial or remaining lease terms in excess of one year as of december 31 , 2002 are as follows : 2003 2014$ 94 million ; 2004 2014 $ 94 million ; 2005 2014$ 82 million ; 2006 2014$ 67 million ; 2007 2014 $ 62 million ; and years beyond 2007 2014$ 79 million . rental expense included in other operations and maintenance expense was $ 84 million , $ 75 million and $ 107 million for 2002 , 2001 , and 2000 , respectively . as of december 31 , 2002 , dominion , through certain sub- sidiaries , has entered into agreements with special purpose enti- ties ( lessors ) in order to finance and lease several new power generation projects , as well as its corporate headquarters and air- craft . the lessors have an aggregate financing commitment from equity and debt investors of $ 2.2 billion , of which $ 1.6 billion has been used for total project costs to date . dominion , in its role as construction agent for the lessors , is responsible for com- pleting construction by a specified date . in the event a project is terminated before completion , dominion has the option to either purchase the project for 100 percent of project costs or terminate the project and make a payment to the lessor of approximately but no more than 89.9 percent of project costs . upon completion of each individual project , dominion has use of the project assets subject to an operating lease . dominion 2019s lease payments to the lessors are sufficient to provide a return to the investors . at the end of each individual project 2019s lease term , dominion may renew the lease at negotiated amounts based on project costs and current market conditions , subject to investors 2019 approval ; purchase the project at its original construction cost ; or sell the project , on behalf of the lessor , to an independent third party . if the project is sold and the proceeds from the sale are insufficient to repay the investors , dominion may be required to make a payment to the lessor up to an amount rang- ing from 81 percent to 85 percent of the project cost depending 85d o m i n i o n 2019 0 2 a n n u a l r e p o r t .\n",
    "program": "increase = 84 - 75\ndecrease = 107 - 84\npercent_increase = increase / 75\npercent_decrease = decrease / 84\nanswer = percent_increase * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 129,
        "total_numbers": 131
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 0
      }
    },
    "difficulty": 3.2188758248682006,
    "source_id": "test-651",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1303-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-918",
    "output": [
      "r_f = 8/100\n    e_r_m = 16/100\n    beta_project = 1.8\n    \n    # Calculate the cost of equity using CAPM formula\n    cost_of_equity = r_f + beta_project * (e_r_m - r_f)\n    \n    # Calculate the present value of the cash flows\n    present_value = (-40) + sum([15/(1+cost_of_equity)**(i-1) for i in range(2, 11)])\n    \n    # Calculate the highest possible beta estimate for the project before its NPV becomes negative\n    highest_beta_estimate = (present_value + 40) / ((sum([15/(1+cost_of_equity)**(i-1) for i in range(2, 11)])) / (1+cost_of_equity))\n    \n    # return answer\n    return highest_beta_estimate\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 212,
      "prompt_tokens": 375,
      "completion_tokens_details": {
        "text_tokens": 212
      },
      "prompt_tokens_details": {
        "text_tokens": 309,
        "image_tokens": 66
      },
      "total_tokens": 587
    },
    "model": "qwen-omni-turbo",
    "question": "You are a consultant to a large manufacturing orporation that is considering a project with thefollowing net after-tax cash flows (in millions of dollars ): <image 1> The project's beta is 1.8. Assuming that rf = 8% and E(rM) = 16%, what is the highest possible beta estimate for the project before its NPV becomes negative?",
    "explanation": "",
    "img_type": "['Tables']",
    "subfield": "Investment",
    "source_id": "validation_Accounting_7",
    "source": "MMMU",
    "images": [
      "./MultiFinance/images/17-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-919",
    "output": [
      "ROA_2021 = -298/282824761\n    ROA_2022 = -264649/283381322\n    \n    # Do math calculation to get the answer\n    ROA = ((ROA_2022-ROA_2021)/ROA_2021)*100\n    \n    # return answer\n    return ROA\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 2625,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 297,
        "image_tokens": 2328
      },
      "total_tokens": 2743
    },
    "model": "qwen-omni-turbo",
    "question": "If the annual operating costs remain the same, what is the expected return on assets (ROA) for 2022 using the total assets at September 30, 2022 as the basis, in percentages?",
    "python_solution": "def solution():\n     #Define variables name and value\n    operating_costs_first_nine_months_2022 = 865212\n    net_income_first_nine_months_2022 = 543580\n    total_assets_sept_2022 = 283381322\n\n    # annualize the operating costs\n    estimated_annual_operating_costs_2022 = (operating_costs_first_nine_months_2022 / 9) * 12\n    # annualize the net income\n    estimated_annual_net_income_2022 = (net_income_first_nine_months_2022 / 9) * 12\n\n    #Do math calculation to get the answer\n    return_on_assets = (estimated_annual_net_income_2022 / total_assets_sept_2022) * 100\n    answer = return_on_assets\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-161",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2051-1.png",
      "./MultiFinance/images/2051-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 0,
          "*": 3,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 6
      }
    },
    "difficulty": 4.499809670330265,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-920",
    "output": [
      "total_assets_2023 = 104651986\n    expenses_2023 = 400728 + 1741734 + (17878729 - 17877839)\n    \n    # Do math calculation to get the answer\n    new_total_assets = total_assets_2023 - expenses_2023\n    \n    # return answer\n    return new_total_assets\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 121,
      "prompt_tokens": 2823,
      "completion_tokens_details": {
        "text_tokens": 121
      },
      "prompt_tokens_details": {
        "text_tokens": 323,
        "image_tokens": 2500
      },
      "total_tokens": 2944
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the new total assets of Papaya Growth Opportunity Corp. I at June 30, 2023, if they had not incurred the general and administrative expense and the losses from unrealized and realized gains on investments held in Trust Account for the first six months of 2023, assuming all other factors remain the same in dollars?",
    "python_solution": "def solution():\n    # Define variable names and values\n\n    total_assets_June_2023 = 104651986  # Existing total assets at June 30, 2023\n\n    general_admin_exp = 968490  # general and administrative expenses\n    unrealized_gain_loss = 0  # Unrealized gain on investments held in Trust Account\n    realized_gain_loss = 479857  # Realized gain on investments held in Trust Account\n\n    # Do math calculation to get the new total assets by adding these expenses back\n    new_total_assets_June_2023 = total_assets_June_2023 + general_admin_exp + unrealized_gain_loss + realized_gain_loss\n    return new_total_assets_June_2023\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-221",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2087-1.png",
      "./MultiFinance/images/2087-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 0
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-921",
    "output": [
      "exercised_options_2019 = 251063\n    weighted_average_exercise_price_2019 = 4.25\n    \n    # Calculate the total price of exercised options\n    total_price_exercised_2019 = exercised_options_2019 * weighted_average_exercise_price_2019\n    \n    # Return the answer\n    return total_price_exercised_2019\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 109,
      "prompt_tokens": 2081,
      "completion_tokens_details": {
        "text_tokens": 109
      },
      "prompt_tokens_details": {
        "text_tokens": 831,
        "image_tokens": 1250
      },
      "total_tokens": 2190
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the total price of exercised or expired options during the fiscal year 2019 if the weighted-average exercise price of exercised options was $4.25?",
    "python_solution": "def solution():\n    # Define variables name and value\n    exercised_options = 251063\n    exercised_price = 4.25\n    expired_options = 89550\n    expired_price = 12.55\n    \n    # Do math calculation to get the answer\n    answer = (exercised_options * exercised_price) + (expired_options * expired_price)\n    \n    return answer",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-66",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n NOTE 11 – STOCK COMPENSATION The Company sponsors a stock-based incentive compensation plan known as the 2013 Equity Compensation Plan (the “Plan”), which was established by the Board of Directors of the Company in June 2013. A total of 500,000 shares were initially reserved for issuance under the Plan. The Plan was amended several times since then to eventually increase the authorized shares to 2,500,000 as of December 31, 2019. A total of 1,624,221 shares of common stock underlying options were outstanding at December 31, 2019. The Company had 236,614 remaining shares available to grant under the Plan at December 31, 2019. The Plan allows the Company to grant incentive stock options, non-qualified stock options, stock appreciation rights, or restricted stock. The incentive stock options are exercisable for up to ten years, at an option price per share not less than the fair market value on the date the option is granted. The incentive stock options are limited to persons who are regular full-time employees of the Company at the date of the grant of the option. Non-qualified options may be granted to any person, including, but not limited to, employees, independent agents, consultants and attorneys, who the Company’s Board or Compensation Committee believes have contributed, or will contribute, to the success of the Company. Non-qualified options may be issued at option prices of less than fair market value on the date of grant and may be exercisable for up to ten years from date of grant. The option vesting schedule for options granted is determined by the Compensation Committee of the Board of Directors at the time of the grant. The Plan provides for accelerated vesting of unvested options if there is a change in control, as defined in the Plan. The compensation cost that has been charged against income related to options for the years ended December 31, 2019 and 2018, was $1,687,745 and $1,317,904, respectively. No income tax benefit was recognized in the income statement and no compensation was capitalized in any of the years presented. The Company had the following option activity during the years ended December 31, 2019 and 2018: Of the options outstanding at December 31, 2019, 1,143,637 were exercisable with a weighted average contractual life of 1.9 years.",
    "images": [
      "./MultiFinance/images/1805-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 2,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.401197381662156,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-922",
    "output": [
      "market_size_2019 = 22\n    market_size_2020 = 42\n    growth_rate = (market_size_2020 - market_size_2019) / market_size_2019 * 100\n    \n    # Do math calculation to get the answer\n    answer = round(growth_rate, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 94,
      "prompt_tokens": 1399,
      "completion_tokens_details": {
        "text_tokens": 94
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1140
      },
      "total_tokens": 1493
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2019年到2020年的市场增长率，并将结果保留两位小数。",
    "python_solution": "def calculate_growth_rate_2019_to_2020():\n    market_size_2019 = 22.5\n    market_size_2020 = 27.09\n    growth_rate = (market_size_2020 - market_size_2019) / market_size_2019 * 100\n    return round(growth_rate, 2)\n",
    "image_id": "company_34_34_14_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-514",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2931-1.png",
      "./MultiFinance/images/2931-2.png",
      "./MultiFinance/images/2931-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2931-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-923",
    "output": [
      "fixed_assets_2024 = 2\n    fixed_assets_2025 = 3\n    \n    # Calculate the difference between 2025 and 2024\n    diff = fixed_assets_2025 - fixed_assets_2024\n    \n    # Calculate the percentage change from 2024 to 2025\n    percentage_change = (diff / fixed_assets_2024) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(percentage_change, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 136,
      "prompt_tokens": 2815,
      "completion_tokens_details": {
        "text_tokens": 136
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 2543
      },
      "total_tokens": 2951
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2025年与2024年固定资产的差值，并将该差值占2024年固定资产的比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    fixed_assets_2024 = 2\n    fixed_assets_2025 = 3\n\n    # Multi-step logic\n    diff = fixed_assets_2025 - fixed_assets_2024\n    ratio = diff / fixed_assets_2024\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_22_22_44_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-262",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2601-1.png",
      "./MultiFinance/images/2601-2.png",
      "./MultiFinance/images/2601-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2601-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-924",
    "output": [
      "july_3_2021_total_investments = 8.2\n    october_2_2021_total_investments = 402.7\n    \n    # Calculate the difference between the two values\n    difference = october_2_2021_total_investments - july_3_2021_total_investments\n    \n    # Calculate the percentage change\n    percentage_change = (difference / july_3_2021_total_investments) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 142,
      "prompt_tokens": 1175,
      "completion_tokens_details": {
        "text_tokens": 142
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 899
      },
      "total_tokens": 1317
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the company's total investments from July 3, 2021 to October 2, 2021?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    total_investment_October = 402.7  # in millions\n    total_investment_July = 8.2  # in millions\n\n    #Do math calculation to get the answer\n    percentage_change = ((total_investment_October - total_investment_July) / total_investment_July) * 100\n    answer = percentage_change\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-294",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2144-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-925",
    "output": [
      "net_profit_2022 = 1416\n    net_profit_2023 = -71\n    \n    # Calculate the difference between 2023 and 2022\n    diff_net_profit = net_profit_2023 - net_profit_2022\n    \n    # Divide by 2022's net profit and multiply by 100\n    percentage_change = (diff_net_profit / net_profit_2022) * 100\n    \n    # Round to one decimal place\n    percentage_change_rounded = round(percentage_change, 1)\n    \n    # Return the result\n    return percentage_change_rounded\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 160,
      "prompt_tokens": 2818,
      "completion_tokens_details": {
        "text_tokens": 160
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 2539
      },
      "total_tokens": 2978
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年的净利润差值，并将该差值除以2022年的净利润，然后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    net_profit_2022 = 1416\n    net_profit_2023 = -71\n    diff = net_profit_2023 - net_profit_2022\n    ratio = diff / net_profit_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_05_05_37_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1553",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2831-1.png",
      "./MultiFinance/images/2831-2.png",
      "./MultiFinance/images/2831-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2831-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-926",
    "output": [
      "consumption = 20.0\n    capital_consumption_allowance = 1.9\n    government_spending = 4.2\n    imports = 2.2\n    gross_private_domestic_investment = 6.0\n    exports = 1.8\n    \n    # Do math calculation to get the answer\n    gdp = consumption + capital_consumption_allowance + government_spending - imports + gross_private_domestic_investment + exports\n    \n    # return answer\n    return round(gdp, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 1501,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1242
      },
      "total_tokens": 1614
    },
    "model": "qwen-omni-turbo",
    "question": "What is the gross domestic product for country B in 2015, according to the provided data? Answer to a single decimal place.",
    "python_solution": "def solution():\n    Consumption = 20\n    Gross_private_domestic_investment = 6\n    Government_Spending = 4.2\n    Exports = 1.8\n    Imports = 2.2\n    GDP = Consumption + Gross_private_domestic_investment + Government_Spending + Exports - Imports\n    return GDP",
    "topic": "Market Analysis & Economics",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 0
      }
    },
    "difficulty": 3.332204510175204,
    "source_id": "validation-69",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/315-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-927",
    "output": [
      "global_sugar_monitoring_systems_market_size_2018 = 3.1\n    global_sugar_monitoring_systems_market_size_2019 = 4.4\n    global_sugar_monitoring_systems_market_size_2020 = 5.7\n    global_sugar_monitoring_systems_market_size_2021E = 7.3\n    global_sugar_monitoring_systems_market_size_2022E = 9\n    global_sugar_monitoring_systems_market_size_2023E = 11.1\n    global_sugar_monitoring_systems_market_size_2024E = 13.6\n    global_sugar_monitoring_systems_market_size_2025E = 16.5\n    global_sugar_monitoring_systems_market_size_2030E = 36.5\n    \n    # Do math calculation to get the answer\n    growth_rate_2020_to_2025 = ((global_sugar_monitoring_systems_market_size_2025E - global_sugar_monitoring_systems_market_size_2020) / global_sugar_monitoring_systems_market_size_2020) * 100\n    \n    # return answer\n    return round(growth_rate_2020_to_2025, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 304,
      "prompt_tokens": 1449,
      "completion_tokens_details": {
        "text_tokens": 304
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1191
      },
      "total_tokens": 1753
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年至2025年全球持续血糖监测系统市场规模的增长率；请保留两位小数。",
    "python_solution": "def solution():\n    global_market_2020 = 5.7\n    global_market_2025 = 16.5\n    years = 2025 - 2020\n\n    growth_rate = ((global_market_2025 / global_market_2020) ** (1/years)) - 1\n    return round(growth_rate, 2)",
    "image_id": "company_34_34_17_figure_5",
    "source": "CRRQA",
    "source_id": "CRRQA-company-497",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 0,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2437-1.png",
      "./MultiFinance/images/2437-2.png",
      "./MultiFinance/images/2437-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2437-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-928",
    "output": [
      "foreign_govt_fair_12m_or_more = 78\n    municipal_fair_12m_or_more = 863\n    rmbs_fair_12m_or_more = 1147\n    us_treasuries_fair_12m_or_more = 119\n    \n    # Do math calculation to get the answer\n    total = foreign_govt_fair_12m_or_more + municipal_fair_12m_or_more + rmbs_fair_12m_or_more + us_treasuries_fair_12m_or_more\n    \n    # return answer\n    return total\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 154,
      "prompt_tokens": 1524,
      "completion_tokens_details": {
        "text_tokens": 154
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1244
      },
      "total_tokens": 1678
    },
    "model": "qwen-omni-turbo",
    "question": "What was the total amount of Foreign govt./govt. agencies, Municipal, RMBS and U.S. Treasuries for Fair of 12 Months or More ?",
    "python_solution": "def solution():\n    # Define variables\n    foreign_govt_12months = 68\n    municipal_12months = 863\n    RMBS_12months = 1147\n    US_treasury_12months = 119\n\n    # Calculate the total amount\n    answer = foreign_govt_12months + municipal_12months + RMBS_12months + US_treasury_12months\n    \n    return answer\n\nsolution()",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-47",
    "img_type": "['Tables']",
    "context": "<image 1>",
    "images": [
      "./MultiFinance/images/1691-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.401197381662156,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-929",
    "output": [
      "q23_total = 2000\n    q24_third = 2589\n    q24_fourth = 2026\n    q23_total = (q24_third - q24_fourth) / q23_total * 100\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(q23_total, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 108,
      "prompt_tokens": 2785,
      "completion_tokens_details": {
        "text_tokens": 108
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 2500
      },
      "total_tokens": 2893
    },
    "model": "qwen-omni-turbo",
    "question": "请计算十五里河污水处理厂在2024年第三季度和第四季度的总处理量之差，并将结果除以2023年第四季度的处理量，然后将该比例转换为百分比；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_3Q24 = 2589\n    value_4Q24 = 2026\n    value_4Q23 = 2000\n\n    # Multi-step logic\n    diff = value_3Q24 - value_4Q24\n    ratio = diff / value_4Q23\n    percentage = ratio * 100\n    return round(percentage, 2)",
    "image_id": "industry_18_18_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2480",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2557-1.png",
      "./MultiFinance/images/2557-2.png",
      "./MultiFinance/images/2557-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2557-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-930",
    "output": [
      "q2_2024_passenger_fee_income = 17254.74\n    q3_2024_passenger_fee_income = 21537.13\n    \n    # Do math calculation to get the answer\n    growth_rate = ((q3_2024_passenger_fee_income - q2_2024_passenger_fee_income) / q2_2024_passenger_fee_income) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 135,
      "prompt_tokens": 3550,
      "completion_tokens_details": {
        "text_tokens": 135
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 3284
      },
      "total_tokens": 3685
    },
    "model": "qwen-omni-turbo",
    "question": "请计算平安广交投广河高速 REIT 在2024年第二季度至第三季度的总通行费收入增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    revenue_2Q24 = 17254.74\n    revenue_3Q24 = 21537.13\n\n    # Multi-step logic\n    growth = (revenue_3Q24 - revenue_2Q24) / revenue_2Q24 * 100\n    return round(growth, 2)",
    "image_id": "industry_18_18_15_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2464",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2770-1.png",
      "./MultiFinance/images/2770-2.png",
      "./MultiFinance/images/2770-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2770-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-931",
    "output": [
      "q2_total = 1168\n    q4_total = 1103\n    q1_total = 970\n    \n    # Do math calculation to get the answer\n    difference = (q2_total - q4_total) / q1_total * 100\n    \n    # return answer\n    return round(difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 92,
      "prompt_tokens": 2780,
      "completion_tokens_details": {
        "text_tokens": 92
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 2500
      },
      "total_tokens": 2872
    },
    "model": "qwen-omni-turbo",
    "question": "请计算福永水质净化厂在2024年第二季度和第四季度的总处理量之差，并将结果除以第一季度的处理量，然后将该比例转换为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    value_2Q24 = 1168\n    value_4Q24 = 1103\n    value_1Q24 = 970\n\n    # Multi-step logic\n    diff = value_2Q24 - value_4Q24\n    ratio = diff / value_1Q24\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "industry_18_18_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2479",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 2
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2556-1.png",
      "./MultiFinance/images/2556-2.png",
      "./MultiFinance/images/2556-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2556-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-932",
    "output": [
      "non_swiss_income_2019 = 58147\n    non_swiss_income_2018 = 54330\n    non_swiss_income_2017 = 53445\n    \n    total_non_swiss_income = non_swiss_income_2019 + non_swiss_income_2018 + non_swiss_income_2017\n    num_years = 3\n    \n    average_non_swiss_income = total_non_swiss_income / num_years\n    \n    # return answer\n    return average_non_swiss_income\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 1705,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 428,
        "image_tokens": 1277
      },
      "total_tokens": 1846
    },
    "model": "qwen-omni-turbo",
    "question": "What is the average of the Non-Swiss income from 2017 to 2019 (in thousand)",
    "python_solution": "def solution():\n    # Define variables name and value\n    non_swiss_2019 = 58147\n    non_swiss_2018 = 54330\n    non_swiss_2017 = 53445\n\n    # Do math calculation to get the average Non-Swiss income\n    answer = (non_swiss_2019 + non_swiss_2018 + non_swiss_2017) / 3\n\n    return answer",
    "source": "TAT-QA",
    "source_id": "simpshort-testmini-97",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n Note 7—Income Taxes The\nCompany\nis\nincorporated\nin\nSwitzerland\nbut\noperates\nin\nvarious\ncountries\nwith\ndiffering\ntax\nlaws\nand\nrates.\nFurther,\na\nportion\nof\nthe\nCompany's\nincome\n(loss)\nbefore\ntaxes\nand\nthe\nprovision\nfor\n(benefit\nfrom)\nincome\ntaxes\nis\ngenerated\noutside\nof\nSwitzerland. Income\nfrom\ncontinuing\noperations\nbefore\nincome\ntaxes\nfor\nfiscal\nyears\n2019\n,\n2018\nand\n2017\nis\nsummarized\nas\nfollows\n(in\nthousands):",
    "images": [
      "./MultiFinance/images/1544-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-933",
    "output": [
      "min_pension_liability_2004 = -26\n    min_pension_liability_2006 = -186\n    \n    # Do math calculation to get the answer\n    percent_increase = ((min_pension_liability_2006 - min_pension_liability_2004) / abs(min_pension_liability_2004)) * 100\n    \n    # return answer\n    return round(percent_increase, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 117,
      "prompt_tokens": 2447,
      "completion_tokens_details": {
        "text_tokens": 117
      },
      "prompt_tokens_details": {
        "text_tokens": 1223,
        "image_tokens": 1224
      },
      "total_tokens": 2564
    },
    "model": "qwen-omni-turbo",
    "question": "what percent did minimum pension liability increase between 2004 and 2006? Answer to three decimal places.",
    "answer": "615.385",
    "context": "defined by fin 46 ( r ) , as a result of the issuance of subordinated notes by the conduits to third-party investors , and we do not record these conduits in our consolidated financial statements . at december 31 , 2006 and 2005 , total assets in unconsolidated conduits were $ 25.25 billion and $ 17.90 billion , respectively . our off-balance sheet commitments to these conduits are disclosed in note 10 . collateralized debt obligations : we manage a series of collateralized debt obligations , or 201ccdos . 201d a cdo is a managed investment vehicle which purchases a portfolio of diversified highly-rated assets . a cdo funds purchases through the issuance of several tranches of debt and equity , the repayment and return of which are linked to the performance of the assets in the cdo . typically , our involvement is as collateral manager . we may also invest in a small percentage of the debt issued . these entities typically meet the definition of a variable interest entity as defined by fin 46 ( r ) . we are not the primary beneficiary of these cdos , as defined by fin 46 ( r ) , and do not record these cdos in our consolidated financial statements . at december 31 , 2006 and 2005 , total assets in these cdos were $ 3.48 billion and $ 2.73 billion , respectively . during 2005 , we acquired and transferred $ 60 million of investment securities from our available-for- sale portfolio into a cdo . this transfer , which was executed at fair market value in exchange for cash , was treated as a sale . we did not acquire or transfer any investment securities to a cdo during 2006 . note 12 . shareholders 2019 equity treasury stock : during the first quarter of 2006 , we purchased 3 million shares of our common stock under a program authorized by our board of directors , or 201cboard , 201d in 2005 . on march 16 , 2006 , the board authorized a new program for the purchase of up to 15 million shares of our common stock for general corporate purposes , including mitigating the dilutive impact of shares issued under employee benefit programs , and terminated the 2005 program . under this new program , we purchased 2.8 million shares of our common stock during 2006 , and as of december 31 , 2006 , 12.2 million shares were available for purchase . we utilize third-party broker-dealers to acquire common shares on the open market in the execution of our stock purchase program . in addition , shares may be acquired for other deferred compensation plans , held by an external trustee , that are not part of the common stock purchase program . as of december 31 , 2006 , on a cumulative basis , approximately 395000 shares have been purchased and are held in trust . these shares are recorded as treasury stock in our consolidated statement of condition . during 2006 , 2005 and 2004 , we purchased and recorded as treasury stock a total of 5.8 million shares , 13.1 million shares and 4.1 million shares , respectively , at an average historical cost per share of $ 63 , $ 51 and $ 43 , respectively . accumulated other comprehensive ( loss ) income: .\n\n<image 1>\n\nfor the year ended december 31 , 2006 , we realized net gains of $ 15 million on sales of available-for- sale securities . unrealized losses of $ 7 million were included in other comprehensive income at december 31 , 2005 , net of deferred taxes of $ 4 million , related to these sales . seq 86 copyarea : 38 . x 54 . trimsize : 8.25 x 10.75 typeset state street corporation serverprocess c:\\\\fc\\\\delivery_1024177\\\\2771-1-dm_p.pdf chksum : 0 cycle 1merrill corporation 07-2771-1 thu mar 01 17:10:46 2007 ( v 2.247w--stp1pae18 ) .\n",
    "program": "increase = 186 - 26\ndecrease = 26 - 73\npercent_increase = increase / 26\npercent_decrease = decrease / 73\nanswer = percent_increase * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 96,
        "total_numbers": 98
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 0
      }
    },
    "difficulty": 3.2188758248682006,
    "source_id": "test-300",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/952-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-934",
    "output": [
      "year_2018_income = 738.52\n    year_2023_income = 718.00\n    \n    # Calculate the total growth rate from 2018 to 2023\n    total_growth_rate = (year_2023_income - year_2018_income) / year_2018_income * 100\n    \n    # Calculate the average annual growth rate over 5 years\n    average_annual_growth_rate = ((total_growth_rate ** (1/5)) - 1) * 100\n    \n    # Return the result rounded to two decimal places\n    return round(average_annual_growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 168,
      "prompt_tokens": 2228,
      "completion_tokens_details": {
        "text_tokens": 168
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1970
      },
      "total_tokens": 2396
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2018年到2023年期间，收入的年均增长率。请保留两位小数。",
    "python_solution": "def solution():\n    income_2018 = 68.01\n    income_2023 = 718.00\n    years = 5\n\n    average_growth_rate = ((income_2023 / income_2018) ** (1/years) - 1) * 100\n    return round(average_growth_rate, 2)",
    "image_id": "company_13_13_23_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-864",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2455-1.png",
      "./MultiFinance/images/2455-2.png",
      "./MultiFinance/images/2455-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2455-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-935",
    "output": [
      "year_2019 = 80\n    year_2024 = 163\n    \n    # Do math calculation to get the answer\n    growth_rate = ((year_2024 - year_2019) / year_2019) ** (1/5)\n    \n    # return answer\n    return round(growth_rate * 100, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 95,
      "prompt_tokens": 2316,
      "completion_tokens_details": {
        "text_tokens": 95
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2054
      },
      "total_tokens": 2411
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2019年到2024年研发费用的年均增长率；请保留两位小数。",
    "python_solution": "def solution():\n    r_d_expense_2019 = 80\n    r_d_expense_2024 = 163\n    years = 5\n    growth_rate = ((r_d_expense_2024 / r_d_expense_2019) ** (1/years) - 1) * 100\n    return round(growth_rate, 2)",
    "image_id": "company_29_29_06_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1302",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2478-1.png",
      "./MultiFinance/images/2478-2.png",
      "./MultiFinance/images/2478-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2478-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-936",
    "output": [
      "other_revenue_2021 = 5\n    other_revenue_2022 = 0\n    \n    # Do math calculation to get the answer\n    year_on_year_growth_rate = ((other_revenue_2022 - other_revenue_2021) / other_revenue_2021) * 100\n    \n    # return answer\n    return round(year_on_year_growth_rate, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 111,
      "prompt_tokens": 2994,
      "completion_tokens_details": {
        "text_tokens": 111
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 2737
      },
      "total_tokens": 3105
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年到2022年其他营收的年增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    revenue_2021 = 5\n    revenue_2022 = 0\n    if revenue_2021 != 0:\n        growth_rate = (revenue_2022 - revenue_2021) / revenue_2021 * 100\n    else:\n        growth_rate = 0\n    return round(growth_rate, 2)",
    "image_id": "company_28_28_16_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-225",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2863-1.png",
      "./MultiFinance/images/2863-2.png",
      "./MultiFinance/images/2863-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2863-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-937",
    "output": [
      "cism = 50\n    module_package = 25\n    voice_coil_motor = 14\n    optical_lens = 19\n    filter_sheet = 6\n    \n    # Do math calculation to get the answer\n    total_cis_module = cism + module_package + voice_coil_motor\n    total_optical_filter = optical_lens + filter_sheet\n    difference = abs(total_cis_module - total_optical_filter)\n    \n    # return answer\n    return round(difference, 1)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 125,
      "prompt_tokens": 1901,
      "completion_tokens_details": {
        "text_tokens": 125
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1621
      },
      "total_tokens": 2026
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算CIS、模组封装和音圈马达的总占比，并将其与光学镜头和滤光片的总占比进行比较，求出两者的差值；请保留一位小数。",
    "python_solution": "def solution():\n    cis_percentage = 50\n    module_packaging_percentage = 25\n    voice_coil_motor_percentage = 5\n    optical_lens_percentage = 14\n    filter_percentage = 6\n\n    total_cis_module_voice = cis_percentage + module_packaging_percentage + voice_coil_motor_percentage\n    total_optical_and_filter = optical_lens_percentage + filter_percentage\n    difference = abs(total_cis_module_voice - total_optical_and_filter)\n    return round(difference, 1)",
    "image_id": "industry_19_19_20_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2413",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 9,
        "parentheses": 4
      }
    },
    "difficulty": 3.7841896339182615,
    "images": [
      "./MultiFinance/images/2518-1.png",
      "./MultiFinance/images/2518-2.png",
      "./MultiFinance/images/2518-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2518-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-938",
    "output": [
      "spot_rate_at_initiation = 1.3983\n    spot_rate_three_months_later = 1.4210\n    spot_rate_at_maturity = 1.4289\n    \n    usd_per_eur_at_initiation = 1/spot_rate_at_initiation\n    usd_per_eur_three_months_later = 1/spot_rate_three_months_later\n    usd_per_eur_at_maturity = 1/spot_rate_at_maturity\n    \n    usd_value_of_shares = 200000 * 90\n    usd_value_of_shares_after_three_months = usd_value_of_shares * usd_per_eur_three_months_later\n    \n    cash_expenditure_to_terminate_forward_agreement = usd_value_of_shares - usd_value_of_shares_after_three_months\n    \n    # return answer\n    return round(cash_expenditure_to_terminate_forward_agreement, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 219,
      "prompt_tokens": 1564,
      "completion_tokens_details": {
        "text_tokens": 219
      },
      "prompt_tokens_details": {
        "text_tokens": 322,
        "image_tokens": 1242
      },
      "total_tokens": 1783
    },
    "model": "qwen-omni-turbo",
    "question": "Martinez took over a Spanish packaging firm. The Spanish venture involved Martinez purchasing 200,000 shares of a packaging firm at EUR90 per share. He resolved to fully secure the position with a six-month USD/EUR forward agreement. Given Exhibit 1, if the Spanish shares were sold after three months, what would have been the cash expenditure (in US dollars) necessary to terminate the forward agreement? Answer to a single decimal place.",
    "python_solution": "def solution():\n    initial_position_eur = 200000 * 90\n    six_month_forward_rate = 1.3935 - 19 / 10000\n    three_month_forward_rate = 1.4210 - 21 / 10000\n    cash_outflow_at_settlement = initial_position_eur * (three_month_forward_rate - six_month_forward_rate)\n    dollar_libor_rate = 0.01266\n    cash_expenditure = cash_outflow_at_settlement / (1 + dollar_libor_rate * 90 / 360)\n    return int(cash_expenditure)",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 3,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 11
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 4.700480365792417,
    "source_id": "validation-3",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/289-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-939",
    "output": [
      "import pandas as pd\n    from io import StringIO\n\n    # Define data for农林牧渔行业 and 沪深300\n    data = \"\"\"\n    Date,农林牧渔行业,沪深300\n    24/1/3,-7.9%,0%\n    24/1/10,-10.1%,-1.1%\n    24/1/17,-11.1%,-1.1%\n    24/1/24,-11.1%,-1.1%\n    24/1/31,-11.1%,-1.1%\n    24/2/7,-11.1%,-1.1%\n    24/2/14,-11.1%,-1.1%\n    24/2/21,-11.1%,-1.1%\n    24/2/28,-11.1%,-1.1%\n    24/3/7,-11.1%,-1.1%\n    24/3/14,-11.1%,-1.1%\n    24/3/21,-11.1%,-1.1%\n    24/3/28,-11.1%,-1.1%\n    24/4/4,-11.1%,-1.1%\n    24/4/11,-11.1%,-1.1%\n    24/4/18,-11.1%,-1.1%\n    24/4/25,-11.1%,-1.1%\n    24/5/2,-11.1%,-1.1%\n    24/5/9,-11.1%,-1.1%\n    24/5/16,-11.1%,-1.1%\n    24/5/23,-11.1%,-1.1%\n    24/5/30,-11.1%,-1.1%\n    24/6/6,-11.1%,-1.1%\n    24/6/13,-11.1%,-1.1%\n    24/6/20,-11.1%,-1.1%\n    24/6/27,-11.1%,-1.1%\n    24/7/4,-11.1%,-1.1%\n    24/7/11,-11.1%,-1.1%\n    24/7/18,-11.1%,-1.1%\n    24/7/25,-11.1%,-1.1%\n    24/8/1,-11.1%,-1.1%\n    24/8/8,-11.1%,-1.1%\n    24/8/15,-11.1%,-1.1%\n    24/8/22,-11.1%,-1.1%\n    24/8/29,-11.1%,-1.1%\n    24/9/5,-11.1%,-1.1%\n    24/9/12,-11.1%,-1.1%\n    24/9/19,-11.1%,-1.1%\n    24/9/26,-11.1%,-1.1%\n    24/10/3,-11.1%,-1.1%\n    24/10/10,-11.1%,-1.1%\n    24/10/17,-11.1%,-1.1%\n    24/10/24,-11.1%,-1.1%\n    24/10/31,-11.1%,-1.1%\n    24/11/7,-11.1%,-1.1%\n    24/11/14,-11.1%,-1.1%\n    24/11/21,-11.1%,-1.1%\n    24/11/28,-11.1%,-1.1%\n    \"\"\"\n\n    df = pd.read_csv(StringIO(data), parse_dates=['Date'], index_col='Date')\n\n    # Calculate average returns\n    avg_return_nonglinmujiuye = df['农林牧渔行业'].mean()\n    avg_return_shenzhen300 = df['沪深300'].mean()\n\n    # Return the result with two decimal places\n    return f\"{avg_return_nonglinmujiuye:.2f}%\", f\"{avg_return_shenzhen300:.2f}%\"\n\n```"
    ],
    "usage": {
      "completion_tokens": 1110,
      "prompt_tokens": 493,
      "completion_tokens_details": {
        "text_tokens": 1110
      },
      "prompt_tokens_details": {
        "text_tokens": 293,
        "image_tokens": 200
      },
      "total_tokens": 1603
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中农林牧渔行业与沪深300指数在24/1/3至24/11/28期间的数据，计算农林牧渔行业的平均收益率，并将其与沪深300指数的平均收益率进行比较；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    agri_avg_return = -0.05  # Example value for average return of Agri-Forestry-Fishery industry\n    hs300_avg_return = 0.10  # Example value for average return of HS300 index\n\n    # Multi-step logic\n    diff = agri_avg_return - hs300_avg_return\n    return round(diff, 2)",
    "image_id": "industry_02_02_00_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2072",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 5,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 2
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2684-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2684-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-940",
    "output": [
      "t1 = -0.28% - 10\n    t2 = -0.31% - 5\n    t3 = -0.29% - -\n    \n    # Do math calculation to get the answer\n    answer = (t1 + t2 + t3) / 3\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 80,
      "prompt_tokens": 1452,
      "completion_tokens_details": {
        "text_tokens": 80
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 1180
      },
      "total_tokens": 1532
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算前五个交易日的日均涨跌幅与次日 T+1 日涨跌的差值，并将结果转换为百分比形式，保留一位小数。",
    "python_solution": "def calculate_percentage_difference():\n    # Numeric values taken from the image\n    previous_five_days_avg_change = -0.28\n    next_day_change = 10\n\n    # Multi-step logic\n    difference = next_day_change - previous_five_days_avg_change\n    percentage_difference = (difference / previous_five_days_avg_change) * 100\n    return round(percentage_difference, 1)",
    "image_id": "macro_03_03_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-macro-2524",
    "subfield": "macro",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 6
      }
    },
    "difficulty": 4.007333185232471,
    "images": [
      "./MultiFinance/images/2358-1.png",
      "./MultiFinance/images/2358-2.png",
      "./MultiFinance/images/2358-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2358-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-941",
    "output": [
      "bond_payments_2017 = 10.6\n    bond_payments_2018 = 11.0\n    bond_payments_2019 = 11.2\n    bond_payments_2020 = 11.6\n    bond_payments_2021 = 11.9\n    \n    # Do math calculation to get the answer\n    total_expected_payments = bond_payments_2017 + bond_payments_2018 + bond_payments_2019 + bond_payments_2020 + bond_payments_2021\n    \n    # return answer\n    return round(total_expected_payments, 3)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 159,
      "prompt_tokens": 2453,
      "completion_tokens_details": {
        "text_tokens": 159
      },
      "prompt_tokens_details": {
        "text_tokens": 1191,
        "image_tokens": 1262
      },
      "total_tokens": 2612
    },
    "model": "qwen-omni-turbo",
    "question": "what is the total expected payments on the bonds for the next 5 years for entergy new orleans storm recovery funding? Answer to three decimal places.",
    "answer": 56.3,
    "context": "entergy corporation and subsidiaries notes to financial statements rate of 2.04% ( 2.04 % ) . although the principal amount is not due until the date given in the tables above , entergy louisiana investment recovery funding expects to make principal payments on the bonds over the next five years in the amounts of $ 21.7 million for 2017 , $ 22.3 million for 2018 , $ 22.7 million for 2019 , $ 23.2 million for 2020 , and $ 11 million for 2021 . with the proceeds , entergy louisiana investment recovery funding purchased from entergy louisiana the investment recovery property , which is the right to recover from customers through an investment recovery charge amounts sufficient to service the bonds . in accordance with the financing order , entergy louisiana will apply the proceeds it received from the sale of the investment recovery property as a reimbursement for previously-incurred investment recovery costs . the investment recovery property is reflected as a regulatory asset on the consolidated entergy louisiana balance sheet . the creditors of entergy louisiana do not have recourse to the assets or revenues of entergy louisiana investment recovery funding , including the investment recovery property , and the creditors of entergy louisiana investment recovery funding do not have recourse to the assets or revenues of entergy louisiana . entergy louisiana has no payment obligations to entergy louisiana investment recovery funding except to remit investment recovery charge collections . entergy new orleans securitization bonds - hurricane isaac in may 2015 the city council issued a financing order authorizing the issuance of securitization bonds to recover entergy new orleans 2019s hurricane isaac storm restoration costs of $ 31.8 million , including carrying costs , the costs of funding and replenishing the storm recovery reserve in the amount of $ 63.9 million , and approximately $ 3 million of up-front financing costs associated with the securitization . in july 2015 , entergy new orleans storm recovery funding i , l.l.c. , a company wholly owned and consolidated by entergy new orleans , issued $ 98.7 million of storm cost recovery bonds . the bonds have a coupon of 2.67% ( 2.67 % ) . although the principal amount is not due until the date given in the tables above , entergy new orleans storm recovery funding expects to make principal payments on the bonds over the next five years in the amounts of $ 10.6 million for 2017 , $ 11 million for 2018 , $ 11.2 million for 2019 , $ 11.6 million for 2020 , and $ 11.9 million for 2021 . with the proceeds , entergy new orleans storm recovery funding purchased from entergy new orleans the storm recovery property , which is the right to recover from customers through a storm recovery charge amounts sufficient to service the securitization bonds . the storm recovery property is reflected as a regulatory asset on the consolidated entergy new orleans balance sheet . the creditors of entergy new orleans do not have recourse to the assets or revenues of entergy new orleans storm recovery funding , including the storm recovery property , and the creditors of entergy new orleans storm recovery funding do not have recourse to the assets or revenues of entergy new orleans . entergy new orleans has no payment obligations to entergy new orleans storm recovery funding except to remit storm recovery charge collections . entergy texas securitization bonds - hurricane rita in april 2007 the puct issued a financing order authorizing the issuance of securitization bonds to recover $ 353 million of entergy texas 2019s hurricane rita reconstruction costs and up to $ 6 million of transaction costs , offset by $ 32 million of related deferred income tax benefits . in june 2007 , entergy gulf states reconstruction funding i , llc , a company that is now wholly-owned and consolidated by entergy texas , issued $ 329.5 million of senior secured transition bonds ( securitization bonds ) as follows : amount ( in thousands ) .\n\n<image 1>\n\n.\n",
    "program": "bond_2017 = 10.6\nbond_2018 = 11\nbond_2019 = 11.2\nbond_2020 = 11.6\nbond_2021 = 11.9\nbond_total = bond_2017 + bond_2018 + bond_2019 + bond_2020 + bond_2021\nanswer = bond_total",
    "statistics": {
      "number_statistics": {
        "question_numbers": 1,
        "context_numbers": 55,
        "total_numbers": 56
      },
      "operator_statistics": {
        "operators": {
          "+": 4,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 0
      }
    },
    "difficulty": 3.332204510175204,
    "source_id": "test-713",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1365-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-942",
    "output": [
      "q1_2016_free_cash_flow = 676.3\n    q1_2015_free_cash_flow = 178.4\n    \n    # Calculate the percentage change\n    percentage_change = ((q1_2016_free_cash_flow - q1_2015_free_cash_flow) / q1_2015_free_cash_flow) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 115,
      "prompt_tokens": 1523,
      "completion_tokens_details": {
        "text_tokens": 115
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 1250
      },
      "total_tokens": 1638
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the Company's free cash flow from Q1 2015 to Q1 2016?",
    "python_solution": "def solution():\n    # Define variables name and value\n    net_income_2016 = 60.7\n    depreciation_amortization_2016 = 56.4\n    changes_trade_receivables_other_assets_2016 = -152.4\n    changes_accounts_payable_accrued_expenses_2016 = 88.7\n    purchses_property_equipment_software_2016 = -36.0\n    net_income_2015 = 54.5\n    depreciation_amortization_2015 = 50.9\n    changes_trade_receivables_other_assets_2015 = -128.1\n    changes_accounts_payable_accrued_expenses_2015 = 105.7\n    purchses_property_equipment_software_2015 = -25.1\n\n    # Do math calculation to get the answer\n    free_cash_flow_2016 = net_income_2016 + depreciation_amortization_2016 + changes_trade_receivables_other_assets_2016 + changes_accounts_payable_accrued_expenses_2016 - purchses_property_equipment_software_2016\n    free_cash_flow_2015 = net_income_2015 + depreciation_amortization_2015 + changes_trade_receivables_other_assets_2015 + changes_accounts_payable_accrued_expenses_2015 - purchses_property_equipment_software_2015\n    percentage_change = ((free_cash_flow_2016 - free_cash_flow_2015) / free_cash_flow_2015) * 100\n    answer = round(percentage_change, 2)\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-269",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2123-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 7,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 15
      },
      "code_statistics": {
        "lines": 17,
        "parentheses": 6
      }
    },
    "difficulty": 5.703782474656201,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-943",
    "output": [
      "year_2018_value = -9.28\n    year_2020_value = -13.29\n    year_2019_value = -2.49\n    \n    average_value = (year_2018_value + year_2020_value) / 2\n    ratio = average_value / year_2019_value * 100\n    \n    # return answer\n    return round(ratio, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 109,
      "prompt_tokens": 2975,
      "completion_tokens_details": {
        "text_tokens": 109
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 2695
      },
      "total_tokens": 3084
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2018年和2020年的某项指标的平均值，并将该平均值与2019年该项指标的比例表示为百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_2018 = 140\n    value_2020 = 180\n    value_2019 = 150\n    average = (value_2018 + value_2020) / 2\n    ratio = average / value_2019\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "strategy_04_04_16_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-3095",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2667-1.png",
      "./MultiFinance/images/2667-2.png",
      "./MultiFinance/images/2667-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2667-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-944",
    "output": [
      "sales_amount_2015 = 1460000000\n    sales_amount_2023 = 5600000000\n    \n    # Do math calculation to get the answer\n    year_growth_rate = ((sales_amount_2023 - sales_amount_2015) / sales_amount_2015) ** (1/8)\n    \n    answer = round(year_growth_rate * 100, 2)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 2599,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 2337
      },
      "total_tokens": 2717
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2015年至2023年销售金额的年均增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    sales_2015 = 1.46\n    sales_2023 = 5.60\n    years = 2023 - 2015\n\n    average_growth_rate = ((sales_2023 / sales_2015) ** (1/years) - 1) * 100\n    return round(average_growth_rate, 2)",
    "image_id": "company_13_13_26_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-908",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2369-1.png",
      "./MultiFinance/images/2369-2.png",
      "./MultiFinance/images/2369-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2369-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-945",
    "output": [
      "indirect_holding_percentage = (1 - 40%) * 79.57%\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(indirect_holding_percentage, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 51,
      "prompt_tokens": 2378,
      "completion_tokens_details": {
        "text_tokens": 51
      },
      "prompt_tokens_details": {
        "text_tokens": 253,
        "image_tokens": 2125
      },
      "total_tokens": 2429
    },
    "model": "qwen-omni-turbo",
    "question": "请计算蜀道集团在本次交易后对清洁能源集团的间接持股比例，并将其保留两位小数。",
    "python_solution": "def solution():\n    # 蜀道集团直接持有四川路桥的比例\n    direct_holding = 79.57 / 100\n    # 四川路桥持有清洁能源集团的比例\n    indirect_holding = 40.00 / 100\n    # 计算蜀道集团间接持有的清洁能源集团的比例\n    indirect_percentage = direct_holding * indirect_holding\n    return round(indirect_percentage, 2)",
    "image_id": "company_26_26_10_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1747",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 0,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2985-1.png",
      "./MultiFinance/images/2985-2.png",
      "./MultiFinance/images/2985-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2985-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-946",
    "output": [
      "IPO_pre_total_capacity_sleeping_bag = 160\n    post_total_capacity_sleeping_bag = 220\n    \n    # Calculate the difference between post and pre total capacity\n    capacity_difference = post_total_capacity_sleeping_bag - IPO_pre_total_capacity_sleeping_bag\n    \n    # Calculate the growth rate by dividing the difference by the pre total capacity\n    growth_rate = (capacity_difference / IPO_pre_total_capacity_sleeping_bag) * 100\n    \n    # Return the growth rate rounded to two decimal places\n    return round(growth_rate, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 132,
      "prompt_tokens": 1472,
      "completion_tokens_details": {
        "text_tokens": 132
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1195
      },
      "total_tokens": 1604
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算睡袋在收购及达产后总产能与IPO前总产能的差值，并将该差值除以IPO前总产能，得到的增长率保留两位小数。",
    "python_solution": "def sleeping_bag_growth_rate():\n    pre_IPO_capacity = 160\n    post_acquisition_capacity = 220\n    difference = post_acquisition_capacity - pre_IPO_capacity\n    growth_rate = (difference / pre_IPO_capacity) * 100\n    return round(growth_rate, 2)\n",
    "image_id": "company_37_37_13_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-553",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2867-1.png",
      "./MultiFinance/images/2867-2.png",
      "./MultiFinance/images/2867-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2867-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-947",
    "output": [
      "equity_capital_2016_june = -1093265\n    equity_capital_2016_december = -705777\n    \n    # Do math calculation to get the answer\n    percentage_change = ((equity_capital_2016_december - equity_capital_2016_june) / abs(equity_capital_2016_june)) * 100\n    \n    # return answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 124,
      "prompt_tokens": 2786,
      "completion_tokens_details": {
        "text_tokens": 124
      },
      "prompt_tokens_details": {
        "text_tokens": 286,
        "image_tokens": 2500
      },
      "total_tokens": 2910
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in Equity Capital (shareholders' deficit) between June 30, 2016 and December 31, 2016?",
    "python_solution": "def solution():\n    #Define variables name and value\n    initial_equity = -1093265\n    final_equity = -705777\n\n    #Do math calculation to get the answer\n    change_in_equity = ((final_equity - initial_equity) / abs(initial_equity)) * 100\n    answer = change_in_equity\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-157",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2049-1.png",
      "./MultiFinance/images/2049-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.9120230054281464,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-948",
    "output": [
      "sum_value = -3.0 + (-6.8) + 6.5\n    count = 3\n    average = sum_value / count\n    \n    # return answer\n    return round(average, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 54,
      "prompt_tokens": 2058,
      "completion_tokens_details": {
        "text_tokens": 54
      },
      "prompt_tokens_details": {
        "text_tokens": 266,
        "image_tokens": 1792
      },
      "total_tokens": 2112
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年7月31日至2023年9月30日商品涨幅的平均值，并将结果保留一位小数。",
    "python_solution": "def solution():\n    commodity_jul = -3.0\n    commodity_aug = 1.4\n    commodity_sep = 6.5\n    average_commodity = (commodity_jul + commodity_aug + commodity_sep) / 3\n    return round(average_commodity, 1)",
    "image_id": "strategy_03_03_24_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-strategy-2943",
    "subfield": "strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.332204510175204,
    "images": [
      "./MultiFinance/images/2855-1.png",
      "./MultiFinance/images/2855-2.png",
      "./MultiFinance/images/2855-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2855-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-949",
    "output": [
      "canada_202412 = 162\n    mexico_202412 = 34\n    canada_202501 = 208\n    mexico_202501 = 24\n    \n    # Do math calculation to get the answer\n    change_canada = canada_202501 - canada_202412\n    change_mexico = mexico_202501 - mexico_202412\n    total_change = change_canada + change_mexico\n    \n    # return answer\n    return int(total_change)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 151,
      "prompt_tokens": 2413,
      "completion_tokens_details": {
        "text_tokens": 151
      },
      "prompt_tokens_details": {
        "text_tokens": 270,
        "image_tokens": 2143
      },
      "total_tokens": 2564
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2024年12月和2025年1月加拿大与墨西哥合计的环比变化量，并将结果保留为整数。",
    "python_solution": "def solution():\n    canada_2024_12 = 162\n    mexico_2024_12 = 34\n    total_2024_12 = canada_2024_12 + mexico_2024_12\n\n    canada_2025_01 = 208\n    mexico_2025_01 = 24\n    total_2025_01 = canada_2025_01 + mexico_2025_01\n\n    change_amount = total_2025_01 - total_2024_12\n    return int(change_amount)",
    "image_id": "industry_06_06_05_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2031",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2884-1.png",
      "./MultiFinance/images/2884-2.png",
      "./MultiFinance/images/2884-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2884-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-950",
    "output": [
      "profit_2024 = -2266\n    profit_2023 = -264\n    \n    # Do math calculation to get the answer\n    difference_profit = (profit_2024 - profit_2023) / abs(profit_2023)\n    \n    # return answer\n    return round(difference_profit * 100, 1)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 93,
      "prompt_tokens": 3171,
      "completion_tokens_details": {
        "text_tokens": 93
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 2910
      },
      "total_tokens": 3264
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年与2023年的营业利润差值，并将结果作为百分比表示，保留一位小数。",
    "python_solution": "def solution():\n    operating_profit_2023 = -264\n    operating_profit_2024 = -2266\n    diff = operating_profit_2024 - operating_profit_2023\n    percentage = diff / abs(operating_profit_2023) * 100\n    return round(percentage, 1)",
    "image_id": "company_05_05_37_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1536",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2678-1.png",
      "./MultiFinance/images/2678-2.png",
      "./MultiFinance/images/2678-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2678-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-951",
    "output": [
      "july_1_deficit = -47293\n    september_30_deficit = -52475\n    \n    # Calculate the rate of decrease in the Accumulated Deficit\n    rate_of_decrease = ((july_1_deficit - september_30_deficit) / july_1_deficit) * 100\n    \n    # Return the answer as a string with two decimal places\n    return f\"{rate_of_decrease:.2f}%\"\n```"
    ],
    "usage": {
      "completion_tokens": 107,
      "prompt_tokens": 2095,
      "completion_tokens_details": {
        "text_tokens": 107
      },
      "prompt_tokens_details": {
        "text_tokens": 285,
        "image_tokens": 1810
      },
      "total_tokens": 2202
    },
    "model": "qwen-omni-turbo",
    "question": "What is the rate of decrease in the Accumulated Deficit from July 1, 2021 to September 30, 2022 in percentage?",
    "python_solution": "def solution():\n    #Define variables name and value\n    accumulated_deficit_jul_2021 = -47293\n    accumulated_deficit_sept_2022 = -228117 \n\n    #Do math calculation to get the answer\n    decrease = accumulated_deficit_sept_2022 - accumulated_deficit_jul_2021\n    rate_of_decrease = decrease/abs(accumulated_deficit_jul_2021) * 100\n    answer = rate_of_decrease\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-288",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2138-1.png",
      "./MultiFinance/images/2138-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-952",
    "output": [
      "vita_milk_percentage = 8.00%\n    huerkang_percentage = 2.40%\n    other_percentage = 5.80%\n    shenhui_percentage = 9.40%\n    \n    total_percentage = vita_milk_percentage + huerkang_percentage + other_percentage\n    ratio = (total_percentage / shenhui_percentage) * 100\n    \n    # return answer\n    return round(ratio, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 101,
      "prompt_tokens": 2269,
      "completion_tokens_details": {
        "text_tokens": 101
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1989
      },
      "total_tokens": 2370
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中维他奶、惠尔康和其他类别的市场份额总和，并将其与深晖的市场份额进行比较，求出这三个类别的市场份额总和占深晖市场份额的百分比；请保留两位小数。",
    "python_solution": "def solution():\n    vitamilk_percentage = 8.00\n    huierkang_percentage = 2.40\n    other_percentage = 5.80\n    shenhui_percentage = 38.50\n\n    combined_percentage = vitamilk_percentage + huierkang_percentage + other_percentage\n    ratio = combined_percentage / shenhui_percentage * 100\n    return round(ratio, 2)",
    "image_id": "company_23_23_20_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-944",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2718-1.png",
      "./MultiFinance/images/2718-2.png",
      "./MultiFinance/images/2718-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2718-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-953",
    "output": [
      "march_31_2018_deficit = -412800\n    march_31_2019_deficit = -179158\n    \n    # Calculate the difference between the two deficits\n    difference = march_31_2019_deficit - march_31_2018_deficit\n    \n    # Calculate the percentage change\n    percentage_change = (difference / abs(march_31_2018_deficit)) * 100\n    \n    # Return the percentage change\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 139,
      "prompt_tokens": 1177,
      "completion_tokens_details": {
        "text_tokens": 139
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 899
      },
      "total_tokens": 1316
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage change in the company's accumulated deficit from March 31, 2018 to March 31, 2019?",
    "python_solution": "def solution():\n     #Define variables name and value\n    accumulated_deficit_March31_2018 = -759959\n    accumulated_deficit_March31_2019 = -526317\n\n    #Do math calculation to get the answer\n    change_in_deficit = accumulated_deficit_March31_2019 - accumulated_deficit_March31_2018\n    percentage_change = (change_in_deficit / abs(accumulated_deficit_March31_2018)) * 100\n    return percentage_change\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-91",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2001-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.8066624897703196,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-954",
    "output": [
      "pe_2023A = 17.9\n    pe_2024E = 83.6\n    pe_2025E = 32.7\n    pe_2026E = 15.0\n    \n    # Do math calculation to get the answer\n    average_pe = (pe_2023A + pe_2024E + pe_2025E + pe_2026E) / 4\n    \n    # return answer\n    return round(average_pe, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 140,
      "prompt_tokens": 1799,
      "completion_tokens_details": {
        "text_tokens": 140
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1538
      },
      "total_tokens": 1939
    },
    "model": "qwen-omni-turbo",
    "question": "请计算汇宇制药2023年到2026年的PE倍数的平均值，并将结果保留一位小数。",
    "python_solution": "def solution():\n    pe_2023 = 43.0\n    pe_2024 = 16.9\n    pe_2025 = 15.7\n    pe_2026 = 14.2\n    \n    average_pe = (pe_2023 + pe_2024 + pe_2025 + pe_2026) / 4\n    return round(average_pe, 1)",
    "image_id": "company_38_38_26_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1157",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2727-1.png",
      "./MultiFinance/images/2727-2.png",
      "./MultiFinance/images/2727-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2727-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-955",
    "output": [
      "flowAsset2023 = 8937\n    flowAsset2022 = 6726\n    \n    # Do math calculation to get the answer\n    growthRate = (flowAsset2023 - flowAsset2022) / flowAsset2022 * 100\n    \n    # return answer\n    return round(growthRate, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 91,
      "prompt_tokens": 2618,
      "completion_tokens_details": {
        "text_tokens": 91
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 2363
      },
      "total_tokens": 2709
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年的流动资产增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2022 = 6726\n    current_assets_2023 = 7841\n    # Multi-step logic\n    growth_rate = (current_assets_2023 - current_assets_2022) / current_assets_2022 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_20_20_14_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-182",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2697-1.png",
      "./MultiFinance/images/2697-2.png",
      "./MultiFinance/images/2697-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2697-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-956",
    "output": [
      "import matplotlib.pyplot as plt\n    \n    # Read data from images\n    power_import_price_2014_2024 = [74, 58, 54, 74, 80, 68, 58, 103, 146, 110, 93]\n    power_import_price_2023_11 = 93\n    \n    # Calculate total for 2021 and 2022\n    total_2021_2022 = sum(power_import_price_2014_2024[8:])\n    \n    # Calculate percentage\n    result = (total_2021_2022 / power_import_price_2014_2024[-1]) * 100\n    \n    # Return result with one decimal place\n    return round(result, 1)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 213,
      "prompt_tokens": 1760,
      "completion_tokens_details": {
        "text_tokens": 213
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1483
      },
      "total_tokens": 1973
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年与2022年的总和，并将结果除以2023年的总和，最后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    total_2021 = 923 + 823 + 859 + 875 + 859 + 828 + 859\n    total_2022 = 1105 + 1119 + 1030 + 956 + 801 + 853 + 926\n    total_2023 = 1214 + 1105 + 886 + 1000 + 859 + 859 + 846\n    sum_2021_2022 = total_2021 + total_2022\n    ratio = sum_2021_2022 / total_2023\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "industry_17_17_16_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2317",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 19,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 21
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 5.123963979403259,
    "images": [
      "./MultiFinance/images/2174-1.png",
      "./MultiFinance/images/2174-2.png",
      "./MultiFinance/images/2174-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2174-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-957",
    "output": [
      "dec_31_2019_sharesholders_equity = 51652\n    sep_30_2020_sharesholders_equity = 76416\n    \n    dec_31_2019_total_assets = 73445\n    sep_30_2020_total_assets = 86068\n    \n    # Calculate the change in shareholders' equity as a percentage of total assets\n    change_in_sharesholders_equity_percentage = ((sep_30_2020_sharesholders_equity - dec_31_2019_sharesholders_equity) / dec_31_2019_total_assets) * 100\n    \n    # Return the calculated percentage\n    return change_in_sharesholders_equity_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 194,
      "prompt_tokens": 1540,
      "completion_tokens_details": {
        "text_tokens": 194
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 1256
      },
      "total_tokens": 1734
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in shareholders' equity as a percentage of total assets from December 31, 2019 to September 30, 2020 (in %)?",
    "python_solution": "def solution():\n     #Define variables name and value\n\n    total_assets_2020 = 86068  # September 30, 2020\n    total_assets_2019 = 73445  # December 31, 2019\n\n    shareholders_equity_2020 = 76416  # September 30, 2020\n    shareholders_equity_2019 = 51652  # December 31, 2019\n\n    #Do math calculation to get the answer\n    Change_2019_2020_equity_pct = ((shareholders_equity_2020 - shareholders_equity_2019) / total_assets_2019) * 100\n    return Change_2019_2020_equity_pct\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-122",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2028-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.401197381662156,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-958",
    "output": [
      "year_1 = 1\n    year_2 = 2.9\n    year_3 = 5.63\n    \n    # Do math calculation to get the answer\n    growth_rate_year_1_to_year_2 = ((year_2 - year_1) / year_1)\n    growth_rate_year_2_to_year_3 = ((year_3 - year_2) / year_2)\n    \n    compound_growth_rate = (growth_rate_year_1_to_year_2 * growth_rate_year_2_to_year_3)**(1/2)\n    answer = round(compound_growth_rate * 100, 2)\n    \n    # return answer\n    return answer\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 160,
      "prompt_tokens": 3325,
      "completion_tokens_details": {
        "text_tokens": 160
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 3068
      },
      "total_tokens": 3485
    },
    "model": "qwen-omni-turbo",
    "question": "请计算光峰科技在2024年到2026年的净利润复合增长率，并保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2024 = 1.0\n    net_profit_2025 = 2.1\n    net_profit_2026 = 2.9\n\n    cagr = ((net_profit_2026 / net_profit_2024) ** (1/3) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_24_24_20_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-695",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2448-1.png",
      "./MultiFinance/images/2448-2.png",
      "./MultiFinance/images/2448-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2448-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-959",
    "output": [
      "trust_account_value_q3_2022 = 376499146\n    trust_account_value_end_of_year = 376652705\n    quarterly_net_gain_rate = 0.05\n    \n    # Calculate the Trust Account Net gain from investments between Q3 2022 and the end of the same year\n    q3_to_end_of_year_net_gain = (trust_account_value_end_of_year - trust_account_value_q3_2022) * quarterly_net_gain_rate\n    \n    # return answer\n    return q3_to_end_of_year_net_gain\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 145,
      "prompt_tokens": 1546,
      "completion_tokens_details": {
        "text_tokens": 145
      },
      "prompt_tokens_details": {
        "text_tokens": 284,
        "image_tokens": 1262
      },
      "total_tokens": 1691
    },
    "model": "qwen-omni-turbo",
    "question": "What is the change in Trust Account Net gain from investments between Q3 2022 and the end of the same year if the Trust Accounts quarterly net gain rate is 5% consistently?",
    "python_solution": "def solution():\n     #Define variables name and value\n    Trust_Account_Balance_Q3 = 376499146 \n    Interest_Rate = 0.05\n\n    #Do math calculation to get the answer\n    Trust_Account_Balance_end_of_year = Trust_Account_Balance_Q3 * ((1 + Interest_Rate) ** 2)\n    Increase_in_Trust_Account_Balance = Trust_Account_Balance_end_of_year - Trust_Account_Balance_Q3\n    return Increase_in_Trust_Account_Balance\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-298",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2148-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 0,
          "%": 0,
          "**": 1
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-960",
    "output": [
      "sales_expense_rate_2017_to_2023 = [4.4, 5.0, 4.5, 4.2, 4.5, 4.3, 4.1, 3.9]\n    management_expense_rate_2017_to_2023 = [8.3, 7.0, 7.9, 6.7, 5.2, 4.2, 4.5, 3.9]\n    financial_expense_rate_2017_to_2023 = [6.1, 5.0, 4.5, 2.6, 1.8, 1.8, 1.2, 1.1]\n    research_and_development_expense_rate_2017_to_2023 = [2.2, 2.4, 2.3, 1.7, 1.1, 1.0, 1.0, 1.3]\n    \n    total_expense_rates = sum(sales_expense_rate_2017_to_2023 + \n                             management_expense_rate_2017_to_2023 +\n                             financial_expense_rate_2017_to_2023 +\n                             research_and_development_expense_rate_2017_to_2023)\n    \n    average_expense_rate = total_expense_rates / len(total_expense_rates)\n    \n    # Do math calculation to get the answer\n    answer = round(average_expense_rate, 2)\n    \n    # return answer\n    return answer\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 377,
      "prompt_tokens": 1811,
      "completion_tokens_details": {
        "text_tokens": 377
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1549
      },
      "total_tokens": 2188
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2017年到2023年间期间费用率的平均值；请保留两位小数。",
    "python_solution": "def solution():\n    operating_expense_ratio_2017 = 20.9\n    operating_expense_ratio_2018 = 26.4\n    operating_expense_ratio_2019 = 20.3\n    operating_expense_ratio_2020 = 16.1\n    operating_expense_ratio_2021 = 12.3\n    operating_expense_ratio_2022 = 11.8\n    operating_expense_ratio_2023 = 9.8\n\n    total_operating_expense_ratio = operating_expense_ratio_2017 + operating_expense_ratio_2018 + operating_expense_ratio_2019 + operating_expense_ratio_2020 + operating_expense_ratio_2021 + operating_expense_ratio_2022 + operating_expense_ratio_2023\n    average_operating_expense_ratio = total_operating_expense_ratio / 7\n    return round(average_operating_expense_ratio, 2)",
    "image_id": "company_16_16_08_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1905",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 6,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 7
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 4.343805421853684,
    "images": [
      "./MultiFinance/images/2273-1.png",
      "./MultiFinance/images/2273-2.png",
      "./MultiFinance/images/2273-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2273-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-961",
    "output": [
      "ebitda_2023 = -5195\n    ebitda_2024 = -3374\n    revenue_2023 = 17423\n    \n    # Do math calculation to get the answer\n    sum_ebitda = ebitda_2023 + ebitda_2024\n    percentage = (sum_ebitda / revenue_2023) * 100\n    \n    # return answer\n    return round(percentage, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 131,
      "prompt_tokens": 2778,
      "completion_tokens_details": {
        "text_tokens": 131
      },
      "prompt_tokens_details": {
        "text_tokens": 272,
        "image_tokens": 2506
      },
      "total_tokens": 2909
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年和2024年的EBITDA之和，并将该和值除以2023年的营业收入，得到的百分比保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values from the image\n    ebitda_2023 = -5195\n    ebitda_2024 = -3374\n    revenue_2023 = 17423\n\n    # Multi-step logic\n    sum_ebitda = ebitda_2023 + ebitda_2024\n    ratio = sum_ebitda / revenue_2023 * 100\n    return round(ratio, 2)",
    "image_id": "company_00_00_40_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-235",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2363-1.png",
      "./MultiFinance/images/2363-2.png",
      "./MultiFinance/images/2363-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2363-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-962",
    "output": [
      "net_income_after_credit_loss_2022 = 159601\n    net_income_after_credit_loss_2021 = 100091\n    \n    # Do math calculation to get the answer\n    percentage_increase = ((net_income_after_credit_loss_2022 - net_income_after_credit_loss_2021) / net_income_after_credit_loss_2021) * 100\n    \n    # return answer\n    return percentage_increase\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 119,
      "prompt_tokens": 1502,
      "completion_tokens_details": {
        "text_tokens": 119
      },
      "prompt_tokens_details": {
        "text_tokens": 281,
        "image_tokens": 1221
      },
      "total_tokens": 1621
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage increase of the net income after provision for credit losses for the three months ended September 30, from 2021 to 2022?",
    "python_solution": "def solution():\n    #Define variables name and value\n    net_income_2022 = 159601\n    net_income_2021 = 100091\n\n    #Do math calculation to get the answer\n    increase_rate = ((net_income_2022 - net_income_2021) / net_income_2021) * 100\n    answer = increase_rate\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-52",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1970-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-963",
    "output": [
      "year_1 = 3.11\n    year_2 = 3.40\n    year_3 = 3.84\n    year_4 = 5.58\n    \n    # Do math calculation to get the answer\n    CAGR = ((year_4/year_1)**(1/3) - 1)*100\n    \n    # return answer\n    return round(CAGR, 2)\n\nprint(solution()) \n```"
    ],
    "usage": {
      "completion_tokens": 99,
      "prompt_tokens": 2999,
      "completion_tokens_details": {
        "text_tokens": 99
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 2740
      },
      "total_tokens": 3098
    },
    "model": "qwen-omni-turbo",
    "question": "请计算财富趋势2023年到2026年的归母净利润的复合年增长率，并保留两位小数。",
    "python_solution": "def solution():\n    net_profit_2023 = 3.11\n    net_profit_2026 = 3.84\n    years = 3\n    cagr = ((net_profit_2026 / net_profit_2023) ** (1/years) - 1) * 100\n    return round(cagr, 2)",
    "image_id": "company_29_29_19_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1273",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 1
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2474-1.png",
      "./MultiFinance/images/2474-2.png",
      "./MultiFinance/images/2474-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2474-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-964",
    "output": [
      "uhme_pe_density = 0.97\n    carbon_fiber_density = 1.80\n    para_aramid_strength_min = 2.70\n    para_aramid_strength_max = 3.30\n    para_aramid_strength_avg = (para_aramid_strength_min + para_aramid_strength_max) / 2\n    \n    # Do math calculation to get the answer\n    density_difference = carbon_fiber_density - uhme_pe_density\n    result = density_difference * para_aramid_strength_avg\n    \n    # return answer\n    return round(result, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 131,
      "prompt_tokens": 2781,
      "completion_tokens_details": {
        "text_tokens": 131
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 2513
      },
      "total_tokens": 2912
    },
    "model": "qwen-omni-turbo",
    "question": "请计算UHMW-PE的密度与碳纤维密度之差，并将结果乘以对位芳纶的强度范围的平均值；请保留两位小数。",
    "python_solution": "def solution():\n    density_UHMW_PE = 0.97\n    density_carbon_fiber = 1.80\n    strength_aromatic_polyamide = (2.70 + 3.30) / 2\n\n    diff_density = density_UHMW_PE - density_carbon_fiber\n    result = diff_density * strength_aromatic_polyamide\n    return round(result, 2)",
    "image_id": "industry_04_04_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2183",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 5
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2760-1.png",
      "./MultiFinance/images/2760-2.png",
      "./MultiFinance/images/2760-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2760-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-965",
    "output": [
      "transaction_ratio = 40.00 / (1 - 40.00)\n    \n    # Do math calculation to get the answer\n    equity_percentage = 100 * transaction_ratio / (transaction_ratio + 1)\n    \n    # return answer\n    return round(equity_percentage, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 82,
      "prompt_tokens": 1537,
      "completion_tokens_details": {
        "text_tokens": 82
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1278
      },
      "total_tokens": 1619
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算本次交易后路桥矿业的股权比例，并将其转换为百分比形式；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share_roadbridge_after = 40.00\n    share_mineralgroup_after = 60.00\n\n    # Multi-step logic\n    total_share_after = share_roadbridge_after + share_mineralgroup_after\n    roadbridge_mineral_percentage = (share_roadbridge_after / total_share_after) * 100\n    return round(roadbridge_mineral_percentage, 1)",
    "image_id": "company_26_26_10_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1750",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 2
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 4
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2643-1.png",
      "./MultiFinance/images/2643-2.png",
      "./MultiFinance/images/2643-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2643-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-966",
    "output": [
      "indirect_holding_percentage = (1 - 0.6055) * 100\n    \n    # Do math calculation to get the answer\n    result = indirect_holding_percentage\n    \n    # return answer\n    return result\n\nprint(solution())"
    ],
    "usage": {
      "completion_tokens": 54,
      "prompt_tokens": 3273,
      "completion_tokens_details": {
        "text_tokens": 54
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 3010
      },
      "total_tokens": 3327
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算华润医药集团通过华润医药控股间接持有的江中药业股份有限公司的股份比例，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    huaren_medical_group_percentage = 100.00\n    huaren_medical_holding_percentage = 60.55\n    jiangzhong_pharmaceutical_group_percentage = 43.09\n\n    # Multi-step logic\n    indirect_percentage = (huaren_medical_group_percentage * huaren_medical_holding_percentage / 100) * (jiangzhong_pharmaceutical_group_percentage / 100)\n    return round(indirect_percentage, 2)",
    "image_id": "company_30_30_04_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-999",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 6
      }
    },
    "difficulty": 3.9120230054281464,
    "images": [
      "./MultiFinance/images/2395-1.png",
      "./MultiFinance/images/2395-2.png",
      "./MultiFinance/images/2395-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2395-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-967",
    "output": [
      "profit_2023A = 11895\n    profit_2024E = 7797\n    \n    # Do math calculation to get the answer\n    growth_rate_2023 = (profit_2024E - profit_2023A) / profit_2023A * 100\n    growth_rate_2024 = (profit_2025E - profit_2024E) / profit_2024E * 100\n    \n    # return answer\n    return round(growth_rate_2023, 2), round(growth_rate_2024, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 156,
      "prompt_tokens": 3186,
      "completion_tokens_details": {
        "text_tokens": 156
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 2926
      },
      "total_tokens": 3342
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年和2024年的营业利润增长率，并将结果保留两位小数。",
    "python_solution": "def solution():\n    # 从图中获取的数据\n    profit_2023 = 22\n    profit_2024 = 366\n    # 计算增长率\n    growth_rate = (profit_2024 - profit_2023) / profit_2023 * 100\n    return round(growth_rate, 2)",
    "image_id": "company_15_15_26_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1941",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2991-1.png",
      "./MultiFinance/images/2991-2.png",
      "./MultiFinance/images/2991-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2991-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-968",
    "output": [
      "q24_rental_level_1Q24 = 1.79\n    q24_rental_level_4Q24 = 1.29\n    last_year_rental_level_1Q24 = 1.77\n    last_year_rental_level_4Q24 = 1.29\n    \n    # Do math calculation to get the answer\n    rental_level_change_percentage = ((q24_rental_level_1Q24 - last_year_rental_level_1Q24) + (q24_rental_level_4Q24 - last_year_rental_level_4Q24)) / 2 * 100\n    \n    # return answer\n    return round(rental_level_change_percentage, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 180,
      "prompt_tokens": 3132,
      "completion_tokens_details": {
        "text_tokens": 180
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 2869
      },
      "total_tokens": 3312
    },
    "model": "qwen-omni-turbo",
    "question": "请计算中金普洛斯REIT在2024年第四季度的租金水平与去年同期相比的变化百分比，并保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    rent_level_4Q24 = 35.74\n    rent_level_4Q23 = 37.52\n\n    # Multi-step logic\n    change_percentage = ((rent_level_4Q24 - rent_level_4Q23) / rent_level_4Q23) * 100\n    return round(change_percentage, 1)",
    "image_id": "industry_18_18_22_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2488",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2653-1.png",
      "./MultiFinance/images/2653-2.png",
      "./MultiFinance/images/2653-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2653-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-969",
    "output": [
      "total_racks = 1800 + 3200 + 8000 + 5467 + 25000\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(total_racks)\n```"
    ],
    "usage": {
      "completion_tokens": 60,
      "prompt_tokens": 1962,
      "completion_tokens_details": {
        "text_tokens": 60
      },
      "prompt_tokens_details": {
        "text_tokens": 255,
        "image_tokens": 1707
      },
      "total_tokens": 2022
    },
    "model": "qwen-omni-turbo",
    "question": "请计算京津冀地区所有数据中心的机柜总数，并将结果四舍五入到最接近的整数。",
    "python_solution": "def solution():\n    m7 = 1300\n    m8 = 1800\n    deyi = 3200\n    wuqing = 8000\n    xunyun = 5467\n    guan = 25000\n    total_cabinets = m7 + m8 + deyi + wuqing + xunyun + guan\n    return round(total_cabinets)",
    "image_id": "industry_07_07_33_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2343",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 0,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2503-1.png",
      "./MultiFinance/images/2503-2.png",
      "./MultiFinance/images/2503-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2503-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-970",
    "output": [
      "year_1 = 2023\n    year_2 = 2024\n   营总收1 = 11866\n   营总收2 = 12224\n    \n    # Do math calculation to get the answer\n    growth_rate = ((营总收2 - 营总收1) / 营总收1) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 106,
      "prompt_tokens": 636,
      "completion_tokens_details": {
        "text_tokens": 106
      },
      "prompt_tokens_details": {
        "text_tokens": 260,
        "image_tokens": 376
      },
      "total_tokens": 742
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2023年和2024年的营业总收入增长率，并将结果保留两位小数。",
    "python_solution": "def calculate_growth_rate():\n    revenue_2023 = 11866\n    revenue_2024 = 12224\n    growth_rate_2024 = (revenue_2024 - revenue_2023) / revenue_2023 * 100\n    return round(growth_rate_2024, 2)",
    "image_id": "company_04_04_00_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-715",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 6
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2945-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2945-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-971",
    "output": [
      "shanghai_yin_cun_zhongliu_youxianggongsi_shouying = 24.84\n    nanjing_zi_quan_touzhi_houyue_youxianggongsi_shouying = 5.00\n    hcm_kw_hk_holdings_limited_shouying = 6.44\n    \n    # Do math calculation to get the answer\n    total_top_three_shareholders = shanghai_yin_cun_zhongliu_youxianggongsi_shouying + \\\n                                   nanjing_zi_quan_touzhi_houyue_youxianggongsi_shouying + \\\n                                   hcm_kw_hk_holdings_limited_shouying\n    \n    # return answer\n    return round(total_top_three_shareholders, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 190,
      "prompt_tokens": 2228,
      "completion_tokens_details": {
        "text_tokens": 190
      },
      "prompt_tokens_details": {
        "text_tokens": 257,
        "image_tokens": 1971
      },
      "total_tokens": 2418
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中各投资方的持股比例，计算前三大股东的总持股比例；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share1 = 25\n    share2 = 11\n    share3 = 6\n\n    # Multi-step logic\n    total_share = share1 + share2 + share3\n    return round(total_share, 1)",
    "image_id": "company_25_25_07_figure_3",
    "source": "CRRQA",
    "source_id": "CRRQA-company-164",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 1,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2910-1.png",
      "./MultiFinance/images/2910-2.png",
      "./MultiFinance/images/2910-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2910-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-972",
    "output": [
      "forward_mining = 26\n    yipu = 9\n    berli = 11\n    \n    total_market_share = forward_mining + yipu + berli\n    \n    percentage = (total_market_share / 100) * 100\n    \n    # return answer\n    return round(percentage, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 76,
      "prompt_tokens": 2073,
      "completion_tokens_details": {
        "text_tokens": 76
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 1805
      },
      "total_tokens": 2149
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算前进民爆、易普力和保利联合化工控股集团的市场份额总和，并将其占整个市场的百分比；结果保留两位小数。",
    "python_solution": "def solution():\n    qianjin_group = 7\n    epryli = 7\n    boli_group = 6\n\n    total_market_share = qianjin_group + epryli + boli_group\n    percentage_of_total = (total_market_share / 100) * 100\n    return round(percentage_of_total, 2)",
    "image_id": "company_15_15_21_figure_6",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1948",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2754-1.png",
      "./MultiFinance/images/2754-2.png",
      "./MultiFinance/images/2754-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2754-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-973",
    "output": [
      "google = 40\n    openai = 20\n    meta = 19\n    microsoft = 18\n    deepmind = 15\n    \n    top_two_sum = google + openai\n    third_to_fifth_sum = meta + microsoft + deepmind\n    \n    difference = abs(top_two_sum - third_to_fifth_sum)\n    \n    # return answer\n    return difference\n```"
    ],
    "usage": {
      "completion_tokens": 87,
      "prompt_tokens": 1870,
      "completion_tokens_details": {
        "text_tokens": 87
      },
      "prompt_tokens_details": {
        "text_tokens": 268,
        "image_tokens": 1602
      },
      "total_tokens": 1957
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中前两名公司的总和，并将其与第三名至第五名的总和进行比较，求出两者的差值；结果请保留为整数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    company1 = 6\n    company2 = 4\n    company3 = 3\n    company4 = 3\n    company5 = 2\n\n    # Multi-step logic\n    top_two_sum = company1 + company2\n    next_three_sum = company3 + company4 + company5\n    difference = top_two_sum - next_three_sum\n    return int(difference)\n",
    "image_id": "market_05_05_14_figure_1",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2735",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 2,
          "*": 0,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 2
      }
    },
    "difficulty": 4.0943445622221,
    "images": [
      "./MultiFinance/images/2337-1.png",
      "./MultiFinance/images/2337-2.png",
      "./MultiFinance/images/2337-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2337-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-974",
    "output": [
      "net_income_2019 = -2097\n    net_cash_provided_by_operating_activities_2019 = -3841\n    net_income_2018 = 3104\n    net_cash_provided_by_operating_activities_2018 = 2452\n    \n    # Calculate the percentage change\n    percentage_change = ((net_income_2019 - net_income_2018) / net_income_2018) * 100\n    \n    # Return the result\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 140,
      "prompt_tokens": 1502,
      "completion_tokens_details": {
        "text_tokens": 140
      },
      "prompt_tokens_details": {
        "text_tokens": 276,
        "image_tokens": 1226
      },
      "total_tokens": 1642
    },
    "model": "qwen-omni-turbo",
    "question": "What is the increase or decrease in the percentage of net income to net cash provided by operating activities from 2018 to 2019?",
    "python_solution": "def solution():\n     #Define variables name and value\n    net_income_2018 = 3104\n    net_income_2019 = -2097\n    op_cash_2018 = 2452\n    op_cash_2019 = -3841\n\n    # Calculate the percentage of net income to net cash provided by operating activities for both years\n    net_income_to_op_cash_2018 = net_income_2018 / op_cash_2018 * 100\n    net_income_to_op_cash_2019 = net_income_2019 / op_cash_2019 * 100\n\n    #Calculate the percentage change from 2018 to 2019\n    percentage_change = (net_income_to_op_cash_2019 - net_income_to_op_cash_2018) / net_income_to_op_cash_2018 * 100\n    answer = percentage_change\n    return answer\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-101",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/2010-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 3,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 12,
        "parentheses": 2
      }
    },
    "difficulty": 4.762173934797756,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-975",
    "output": [
      "service_cost_2015 = 150\n    interest_cost_2015 = 242\n    employer_contributions_2015 = 103\n    \n    # Do math calculation to get the answer\n    total = service_cost_2015 + interest_cost_2015 + employer_contributions_2015\n    average = total / 3\n    \n    # return answer\n    return average\n\n```"
    ],
    "usage": {
      "completion_tokens": 100,
      "prompt_tokens": 1547,
      "completion_tokens_details": {
        "text_tokens": 100
      },
      "prompt_tokens_details": {
        "text_tokens": 303,
        "image_tokens": 1244
      },
      "total_tokens": 1647
    },
    "model": "qwen-omni-turbo",
    "question": "What was the average value of Service cost, Interest cost, Employer contributions in 2015 for Pension Benefits? (in million)",
    "python_solution": "def solution():\n    # Define variables name and value\n    service_cost = 150\n    interest_cost = 242\n    employer_contributions = 103\n    const_3 = 3\n\n    # Do math calculation to get the answer\n    average_value = (service_cost + interest_cost + employer_contributions) / const_3\n    \n    return average_value",
    "source": "MultiHiertt",
    "source_id": "simplong-testmini-38",
    "img_type": "['Tables']",
    "context": "The funded status of the Company's plans as of December 31, 2015 and 2014, was as follows\n<image 1>",
    "images": [
      "./MultiFinance/images/1682-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-976",
    "output": [
      "noan_pioneer_mixed_a = 1.97\n    xusen_investment = 1.26\n    jiayang_investment = 1.21\n    xiangyi_investment = 1.15\n    xunjia_investment = 1.1\n    noan_optimal_return_hybrid = 1.03\n    \n    total_shares = noan_pioneer_mixed_a + xusen_investment + jiayang_investment + \\\n                   xiangyi_investment + xunjia_investment + noan_optimal_return_hybrid\n    \n    percentage = (total_shares / 10) * 100\n    \n    # return answer\n    return round(percentage, 2)\n\n# Call function and print result\nresult = solution()\nprint(result)\n```"
    ],
    "usage": {
      "completion_tokens": 176,
      "prompt_tokens": 2297,
      "completion_tokens_details": {
        "text_tokens": 176
      },
      "prompt_tokens_details": {
        "text_tokens": 292,
        "image_tokens": 2005
      },
      "total_tokens": 2473
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算诺安先锋混合A、旭晟投资、佳扬投资、翔谊投资、迅嘉投资和诺安优选回报混合的持股比例总和，并将其占杭州联德精密机械股份有限公司的比例表示为百分比；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    share_d = 1.97\n    share_e = 1.26\n    share_f = 1.21\n    share_g = 1.15\n    share_h = 1.1\n    share_i = 1.03\n\n    # Multi-step logic\n    total_small_shares = share_d + share_e + share_f + share_g + share_h + share_i\n    percentage = (total_small_shares / 100) * 100\n    return round(percentage, 2)",
    "image_id": "company_17_17_04_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-76",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 7
      },
      "operator_statistics": {
        "operators": {
          "+": 5,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 11,
        "parentheses": 4
      }
    },
    "difficulty": 4.6443908991413725,
    "images": [
      "./MultiFinance/images/2210-1.png",
      "./MultiFinance/images/2210-2.png",
      "./MultiFinance/images/2210-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2210-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-977",
    "output": [
      "office_consumption_2020 = 8.90\n    office_consumption_2023 = 8.50\n    instant_drink_consumption_2020 = 61.43\n    \n    # Calculate the change in office consumption from 2020 to 2023\n    change_office_consumption = office_consumption_2020 - office_consumption_2023\n    \n    # Compare with the instant drink consumption in 2020\n    comparison_value = instant_drink_consumption_2020\n    \n    # Return the result rounded to two decimal places\n    return round(change_office_consumption, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 162,
      "prompt_tokens": 1433,
      "completion_tokens_details": {
        "text_tokens": 162
      },
      "prompt_tokens_details": {
        "text_tokens": 271,
        "image_tokens": 1162
      },
      "total_tokens": 1595
    },
    "model": "qwen-omni-turbo",
    "question": "请计算办公消费从2020年到2023年的变化量，并将其与即饮消费的2020年值进行比较，结果保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    office_consumption_2020 = 8.90\n    office_consumption_2023E = 8.50\n    ready_to_drink_consumption_2020 = 61.43\n\n    # Multi-step logic\n    change = office_consumption_2023E - office_consumption_2020\n    comparison = change / ready_to_drink_consumption_2020 * 100\n    return round(comparison, 2)",
    "image_id": "company_23_23_13_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-923",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2613-1.png",
      "./MultiFinance/images/2613-2.png",
      "./MultiFinance/images/2613-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2613-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-978",
    "output": [
      "high_price = 15.48\n    low_price = 4.85\n    latest_close_price = 14.24\n    \n    # Calculate the difference between highest price and lowest price\n    price_difference = high_price - low_price\n    \n    # Divide the difference by the latest close price\n    ratio = price_difference / latest_close_price\n    \n    # Multiply the result by 100 to get percentage\n    percentage = ratio * 100\n    \n    # Round the result to one decimal place\n    rounded_percentage = round(percentage, 1)\n    \n    # Return the final result\n    return rounded_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 148,
      "prompt_tokens": 594,
      "completion_tokens_details": {
        "text_tokens": 148
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 317
      },
      "total_tokens": 742
    },
    "model": "qwen-omni-turbo",
    "question": "请计算该股票的52周最高价与最低价之间的差值，然后将这个差值除以最新收盘价，最后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    highest_price = 15.48\n    lowest_price = 4.85\n    latest_closing_price = 14.24\n\n    diff = highest_price - lowest_price\n    ratio = diff / latest_closing_price\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_25_25_00_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-138",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2908-1.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2908-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-979",
    "output": [
      "year_2018 = 49.10\n    year_2019 = 58.52\n    year_2020 = 55.10\n    year_2021 = 55.67\n    year_2022 = 56.87\n    year_2023 = 57.00\n    \n    # Calculate average of 2020-2023\n    average_2020_to_2023 = (year_2020 + year_2021 + year_2022 + year_2023) / 4\n    \n    # Calculate growth percentage\n    growth_percentage = ((average_2020_to_2023 - year_2018) / year_2018) * 100\n    \n    # Round to two decimal places\n    growth_percentage_rounded = round(growth_percentage, 2)\n    \n    # Return the result\n    return growth_percentage_rounded\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 248,
      "prompt_tokens": 1605,
      "completion_tokens_details": {
        "text_tokens": 248
      },
      "prompt_tokens_details": {
        "text_tokens": 273,
        "image_tokens": 1332
      },
      "total_tokens": 1853
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2020年到2023年境外占比的平均值，并将其与2018年的境外占比进行比较，计算增长百分比；请保留两位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    offshore_2018 = 57.98\n    offshore_2020 = 54.65\n    offshore_2021 = 45.20\n    offshore_2022 = 47.38\n    offshore_2023 = 46.42\n\n    # Multi-step logic\n    average_offshore = (offshore_2020 + offshore_2021 + offshore_2022 + offshore_2023) / 4\n    growth_percentage = ((average_offshore - offshore_2018) / offshore_2018) * 100\n    return round(growth_percentage, 2)",
    "image_id": "company_13_13_11_figure_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-881",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 6
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 8
      }
    },
    "difficulty": 4.718498871295094,
    "images": [
      "./MultiFinance/images/2199-1.png",
      "./MultiFinance/images/2199-2.png",
      "./MultiFinance/images/2199-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2199-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-980",
    "output": [
      "never_married_freq = 140\n    married_freq = 238\n    widowed_freq = 2\n    divorced_separated_freq = 20\n    \n    expected_freq = [125.2, 224.4, 10, 40.4]\n    \n    chi_squared_test_statistic = (\n        ((never_married_freq - expected_freq[0]) ** 2) / expected_freq[0] +\n        ((married_freq - expected_freq[1]) ** 2) / expected_freq[1] +\n        ((widowed_freq - expected_freq[2]) ** 2) / expected_freq[2] +\n        ((divorced_separated_freq - expected_freq[3]) ** 2) / expected_freq[3]\n    )\n    \n    # Do math calculation to get the answer\n    \n    # return answer\n    return round(chi_squared_test_statistic, 2)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 210,
      "prompt_tokens": 1500,
      "completion_tokens_details": {
        "text_tokens": 210
      },
      "prompt_tokens_details": {
        "text_tokens": 339,
        "image_tokens": 1161
      },
      "total_tokens": 1710
    },
    "model": "qwen-omni-turbo",
    "question": "The marital status distribution of the U.S. male population, ages 15 and older, is as shown in Table 11.56. <image 1> Suppose that a random sample of 400 U.S. young adult males, 18 to 24 years old, yielded the following frequency distribution. We are interested in whether this age group of males fits the distribution of the U.S. adult population. <image 2> $\\chi $2 test statistic = ______ Answer to two decimal places.",
    "explanation": "?",
    "img_type": "['Tables']",
    "subject": "Marketing",
    "source_id": "test_Marketing_2",
    "source": "MMMU-Pro",
    "images": [
      "./MultiFinance/images/186-1.png",
      "./MultiFinance/images/186-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-981",
    "output": [
      "market_share_1 = 21\n    market_share_2 = 18\n    market_share_3 = 14\n    smallest_market_share = 4\n    \n    # Calculate the sum of the three largest market shares\n    total_largest_shares = market_share_1 + market_share_2 + market_share_3\n    \n    # Calculate the ratio between the sum of the three largest market shares and the smallest market share\n    ratio = total_largest_shares / smallest_market_share\n    \n    # Return the result rounded to one decimal place\n    return round(ratio, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 139,
      "prompt_tokens": 2137,
      "completion_tokens_details": {
        "text_tokens": 139
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1874
      },
      "total_tokens": 2276
    },
    "model": "qwen-omni-turbo",
    "question": "请计算图中前三大公司的市场份额总和，并将其与最小的市场份额进行比较，求出两者的比值；请保留一位小数。",
    "python_solution": "def solution():\n    # 市场份额数值\n    share_top1 = 21\n    share_top2 = 16\n    share_top3 = 14\n    share_smallest = 4\n\n    # 计算前三大公司市场份额总和\n    total_top3 = share_top1 + share_top2 + share_top3\n\n    # 计算比值\n    ratio = total_top3 / share_smallest\n    return round(ratio, 1)",
    "image_id": "company_18_18_15_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-745",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 2
      }
    },
    "difficulty": 3.4965075614664807,
    "images": [
      "./MultiFinance/images/2692-1.png",
      "./MultiFinance/images/2692-2.png",
      "./MultiFinance/images/2692-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2692-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-982",
    "output": [
      "sales_expenses_2023 = 4800\n    total_income_2023 = 96773\n    sales_expenses_ratio_2023 = sales_expenses_2023 / total_income_2023\n\n    sales_expenses_2024 = 5150\n    total_income_2024 = 97690\n    sales_expenses_ratio_2024 = sales_expenses_2024 / total_income_2024\n\n    average_sales_expenses_ratio = (sales_expenses_ratio_2023 + sales_expenses_ratio_2024) / 2\n\n    # return answer\n    return round(average_sales_expenses_ratio * 100, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 177,
      "prompt_tokens": 2133,
      "completion_tokens_details": {
        "text_tokens": 177
      },
      "prompt_tokens_details": {
        "text_tokens": 263,
        "image_tokens": 1870
      },
      "total_tokens": 2310
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年和2024年的销售费用占营业收入的比例，并求出这两年的平均比例；请保留两位小数。",
    "python_solution": "def solution():\n    sales_expense_2023 = 4800\n    sales_expense_2024 = 5150\n    revenue_2023 = 96773\n    revenue_2024 = 97690\n    ratio_2023 = sales_expense_2023 / revenue_2023\n    ratio_2024 = sales_expense_2024 / revenue_2024\n    average_ratio = (ratio_2023 + ratio_2024) / 2\n    return round(average_ratio, 2)",
    "image_id": "company_19_19_01_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1037",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 0,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "images": [
      "./MultiFinance/images/2543-1.png",
      "./MultiFinance/images/2543-2.png",
      "./MultiFinance/images/2543-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2543-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-983",
    "output": [
      "fourth_item_2021 = -4.97\n    fifth_item_2021 = 8.97\n    sixth_item_2021 = 1.97\n    \n    # Do math calculation to get the answer\n    difference = (fourth_item_2021 - fifth_item_2021) / sixth_item_2021 * 100\n    \n    # return answer\n    return round(difference, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 118,
      "prompt_tokens": 1395,
      "completion_tokens_details": {
        "text_tokens": 118
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 1118
      },
      "total_tokens": 1513
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2021年第四项指标与第五项指标的差值，并将该差值除以第六项指标，然后将结果乘以100得到百分比；请保留一位小数。",
    "python_solution": "def solution():\n    value_4 = 37.51\n    value_5 = -0.34\n    value_6 = 5.48\n    diff = value_4 - value_5\n    ratio = diff / value_6\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "market_09_09_20_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-market-2840",
    "subfield": "market",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.465735902799726,
    "images": [
      "./MultiFinance/images/2783-1.png",
      "./MultiFinance/images/2783-2.png",
      "./MultiFinance/images/2783-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2783-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-984",
    "output": [
      "net_income_2016 = 77.8\n    equity_based_compensation_expense_2016 = 8.4\n    equity_based_compensation_expense_percentage_2016 = (equity_based_compensation_expense_2016 / net_income_2016) * 100\n    \n    net_income_2015 = 54.7\n    equity_based_compensation_expense_2015 = 4.7\n    equity_based_compensation_expense_percentage_2015 = (equity_based_compensation_expense_2015 / net_income_2015) * 100\n    \n    difference_in_equity_based_compensation_expense_percentage = equity_based_compensation_expense_percentage_2016 - equity_based_compensation_expense_percentage_2015\n    \n    # return answer\n    return difference_in_equity_based_compensation_expense_percentage\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 220,
      "prompt_tokens": 1518,
      "completion_tokens_details": {
        "text_tokens": 220
      },
      "prompt_tokens_details": {
        "text_tokens": 274,
        "image_tokens": 1244
      },
      "total_tokens": 1738
    },
    "model": "qwen-omni-turbo",
    "question": "What is the difference in equity-based compensation expense as a percentage of net income between the years 2015 and 2016?",
    "python_solution": "def solution():\n     #Define variables name and value\n    net_income_2016 = 77.8  \n    net_income_2015 = 54.7\n    equity_based_compensation_expense_2016 = 8.4\n    equity_based_compensation_expense_2015 = 4.7\n\n    #Do math calculation to get the answer\n    equity_based_compensation_expense_percentage_2016 = (equity_based_compensation_expense_2016 / net_income_2016) * 100\n    equity_based_compensation_expense_percentage_2015 = (equity_based_compensation_expense_2015 / net_income_2015) * 100\n    difference_in_expense_percentage = equity_based_compensation_expense_percentage_2016 - equity_based_compensation_expense_percentage_2015\n    return difference_in_expense_percentage\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-80",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1992-1.png"
    ],
    "context": "<image 1>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 2,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 10,
        "parentheses": 4
      }
    },
    "difficulty": 4.0943445622221,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-985",
    "output": [
      "cost_of_gold_bullion_inception = 9325500\n    fair_value_of_gold_bullion_september_30_2021 = 607260237\n    \n    # Calculate the percentage increase\n    percentage_increase = ((fair_value_of_gold_bullion_september_30_2021 - cost_of_gold_bullion_inception) / cost_of_gold_bullion_inception) * 100\n    \n    # Return the result\n    return percentage_increase\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 131,
      "prompt_tokens": 1869,
      "completion_tokens_details": {
        "text_tokens": 131
      },
      "prompt_tokens_details": {
        "text_tokens": 278,
        "image_tokens": 1591
      },
      "total_tokens": 2000
    },
    "model": "qwen-omni-turbo",
    "question": "What is the percentage increase in the value of gold bullion from the date of inception until September 30, 2021?",
    "python_solution": "def solution():\n     #Define variables name and value\n    value_september_30_2021 = 607260237\n    inception_value = 9325500\n\n    #Do math calculation to get the answer\n    change_in_value = value_september_30_2021 - inception_value\n    increase_percentage = (change_in_value / inception_value)*100\n    return increase_percentage\n",
    "source": "DocMath-Eval",
    "source_id": "complong-testmini-13",
    "img_type": "['Tables']",
    "images": [
      "./MultiFinance/images/1947-1.png",
      "./MultiFinance/images/1947-2.png"
    ],
    "context": "<image 1>\n<image 2>",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 7,
        "parentheses": 2
      }
    },
    "difficulty": 3.1780538303479453,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-986",
    "output": [
      "rent_2012 = 133\n    rent_2013 = 137\n    \n    # Do math calculation to get the answer\n    growth_rate = ((rent_2013 - rent_2012) / rent_2012) * 100\n    \n    # return answer\n    return round(growth_rate)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 95,
      "prompt_tokens": 3061,
      "completion_tokens_details": {
        "text_tokens": 95
      },
      "prompt_tokens_details": {
        "text_tokens": 1819,
        "image_tokens": 1242
      },
      "total_tokens": 3156
    },
    "model": "qwen-omni-turbo",
    "question": "what is the growth rate in rent expense and certain office equipment expense from 2012 to 2013? Answer to the nearest integer.",
    "answer": "3",
    "context": "on the 4.25% ( 4.25 % ) notes due in 2021 ( 201c2021 notes 201d ) is payable semi-annually on may 24 and november 24 of each year , which commenced november 24 , 2011 , and is approximately $ 32 million per year . the 2021 notes may be redeemed prior to maturity at any time in whole or in part at the option of the company at a 201cmake-whole 201d redemption price . the 2021 notes were issued at a discount of $ 4 million . at december 31 , 2014 , $ 3 million of unamortized debt issuance costs was included in other assets on the consolidated statement of financial condition and are being amortized over the remaining term of the 2021 notes . in may 2011 , in conjunction with the issuance of the 2013 floating rate notes , the company entered into a $ 750 million notional interest rate swapmaturing in 2013 to hedge the future cash flows of its obligation at a fixed rate of 1.03% ( 1.03 % ) . during the second quarter of 2013 , the interest rate swapmatured and the 2013 floating rate notes were fully repaid . 2019 notes . in december 2009 , the company issued $ 2.5 billion in aggregate principal amount of unsecured and unsubordinated obligations . these notes were issued as three separate series of senior debt securities including $ 0.5 billion of 2.25% ( 2.25 % ) notes , which were repaid in december 2012 , $ 1.0 billion of 3.50% ( 3.50 % ) notes , which were repaid in december 2014 at maturity , and $ 1.0 billion of 5.0% ( 5.0 % ) notes maturing in december 2019 ( the 201c2019 notes 201d ) . net proceeds of this offering were used to repay borrowings under the cp program , which was used to finance a portion of the acquisition of barclays global investors ( 201cbgi 201d ) from barclays on december 1 , 2009 ( the 201cbgi transaction 201d ) , and for general corporate purposes . interest on the 2019 notes of approximately $ 50 million per year is payable semi-annually in arrears on june 10 and december 10 of each year . these notes may be redeemed prior to maturity at any time in whole or in part at the option of the company at a 201cmake- whole 201d redemption price . these notes were issued collectively at a discount of $ 5 million . at december 31 , 2014 , $ 3 million of unamortized debt issuance costs was included in other assets on the consolidated statement of financial condition and are being amortized over the remaining term of the 2019 notes . 2017 notes . in september 2007 , the company issued $ 700 million in aggregate principal amount of 6.25% ( 6.25 % ) senior unsecured and unsubordinated notes maturing on september 15 , 2017 ( the 201c2017 notes 201d ) . a portion of the net proceeds of the 2017 notes was used to fund the initial cash payment for the acquisition of the fund-of-funds business of quellos and the remainder was used for general corporate purposes . interest is payable semi-annually in arrears on march 15 and september 15 of each year , or approximately $ 44 million per year . the 2017 notes may be redeemed prior to maturity at any time in whole or in part at the option of the company at a 201cmake-whole 201d redemption price . the 2017 notes were issued at a discount of $ 6 million , which is being amortized over their ten-year term . the company incurred approximately $ 4 million of debt issuance costs , which are being amortized over ten years . at december 31 , 2014 , $ 1 million of unamortized debt issuance costs was included in other assets on the consolidated statement of financial condition . 13 . commitments and contingencies operating lease commitments the company leases its primary office spaces under agreements that expire through 2035 . future minimum commitments under these operating leases are as follows : ( in millions ) .\n\n<image 1>\n\nrent expense and certain office equipment expense under agreements amounted to $ 132 million , $ 137 million and $ 133 million in 2014 , 2013 and 2012 , respectively . investment commitments . at december 31 , 2014 , the company had $ 161 million of various capital commitments to fund sponsored investment funds , including funds of private equity funds , real estate funds , infrastructure funds , opportunistic funds and distressed credit funds . this amount excludes additional commitments made by consolidated funds of funds to underlying third-party funds as third-party noncontrolling interest holders have the legal obligation to fund the respective commitments of such funds of funds . in addition to the capital commitments of $ 161 million , the company had approximately $ 35 million of contingent commitments for certain funds which have investment periods that have expired . generally , the timing of the funding of these commitments is unknown and the commitments are callable on demand at any time prior to the expiration of the commitment . these unfunded commitments are not recorded on the consolidated statements of financial condition . these commitments do not include potential future commitments approved by the company that are not yet legally binding . the company intends to make additional capital commitments from time to time to fund additional investment products for , and with , its clients . contingencies contingent payments . the company acts as the portfolio manager in a series of derivative transactions and has a maximum potential exposure of $ 17 million under a derivative between the company and counterparty . see note 7 , derivatives and hedging , for further discussion . contingent payments related to business acquisitions . in connection with the credit suisse etf transaction , blackrock is required to make contingent payments annually to credit suisse , subject to achieving specified thresholds during a seven-year period , subsequent to the 2013 acquisition date . in addition , blackrock is required to make contingent payments related to the mgpa transaction during a five-year period , subject to achieving specified thresholds , subsequent to the 2013 acquisition date . the fair value of the remaining contingent payments at december 31 , 2014 is not significant to the consolidated statement of financial condition and is included in other liabilities . legal proceedings . from time to time , blackrock receives subpoenas or other requests for information from various u.s . federal , state governmental and domestic and .\n",
    "program": "increase = 137 - 133\ndecrease = 133 - 111\npercent_increase = increase / 133\npercent_decrease = decrease / 111\nanswer = percent_increase * 100",
    "statistics": {
      "number_statistics": {
        "question_numbers": 2,
        "context_numbers": 118,
        "total_numbers": 120
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 0
      }
    },
    "difficulty": 3.2188758248682006,
    "source_id": "test-660",
    "img_type": "['Tables']",
    "source": "CodeFinQA",
    "images": [
      "./MultiFinance/images/1312-1.png"
    ],
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-987",
    "output": [
      "cagr_2017_2023 = (42.6 ** (1/6) - 1) * 100\n    \n    # Do math calculation to get the answer\n    answer = round(cagr_2017_2023, 1)\n    \n    # return answer\n    return answer\n```"
    ],
    "usage": {
      "completion_tokens": 77,
      "prompt_tokens": 2153,
      "completion_tokens_details": {
        "text_tokens": 77
      },
      "prompt_tokens_details": {
        "text_tokens": 262,
        "image_tokens": 1891
      },
      "total_tokens": 2230
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2017-2023年健康生活消费品业务的复合年增长率，并保留一位小数。",
    "python_solution": "def solution():\n    value_2017 = 42.6\n    cagr_2017_2020 = 17.9\n    cagr_2020_2023 = 6.6\n\n    # Calculate the compound annual growth rate for 2017-2023\n    cagr_2017_2023 = ((1 + cagr_2017_2020/100) * (1 + cagr_2020_2023/100))**(1/6) - 1\n    return round(cagr_2017_2023 * 100, 1)",
    "image_id": "company_36_36_07_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-318",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 2,
          "*": 2,
          "/": 3,
          "%": 0,
          "**": 1
        },
        "total_operators": 10
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 10
      }
    },
    "difficulty": 4.700480365792417,
    "images": [
      "./MultiFinance/images/2202-1.png",
      "./MultiFinance/images/2202-2.png",
      "./MultiFinance/images/2202-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2202-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-988",
    "output": [
      "aeronautics_severance_2011 = 49\n    total_severance_2011 = 136\n    \n    # Do math calculation to get the answer\n    percentage_aeronautics = (aeronautics_severance_2011 / total_severance_2011) * 100\n    \n    # return answer\n    return percentage_aeronautics\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 108,
      "prompt_tokens": 2488,
      "completion_tokens_details": {
        "text_tokens": 108
      },
      "prompt_tokens_details": {
        "text_tokens": 1246,
        "image_tokens": 1242
      },
      "total_tokens": 2596
    },
    "model": "qwen-omni-turbo",
    "question": "what was the percentage of the total severance actions related to our aeronautics , space systems , and our is&gs business segments and corporate headquarters in 2011 related to the aeronautics (in percentage)",
    "python_solution": "def solution():\n    # Define variables name and value\n    aeronautics = 49\n    space_systems = 48\n    isgs_corporate_headquarters = 39\n    \n    # Do math calculation to get the answer\n    total_severance = aeronautics + space_systems + isgs_corporate_headquarters\n    percentage_aeronautics = (aeronautics / total_severance) * 100\n    \n    return percentage_aeronautics",
    "source": "FinQA",
    "source_id": "simpshort-testmini-12",
    "img_type": "['Tables']",
    "context": "note 2 2013 restructuring charges 2013 actions during 2013 , we recorded charges related to certain severance actions totaling $ 201 million , net of state tax benefits , of which $ 83 million , $ 37 million , and $ 81 million related to our information systems & global solutions ( is&gs ) , mission systems and training ( mst ) , and space systems business segments . these charges reduced our net earnings by $ 130 million ( $ .40 per share ) and primarily related to a plan we committed to in november 2013 to close and consolidate certain facilities and reduce our total workforce by approximately 4000 positions within our is&gs , mst , and space systems business segments . these charges also include $ 30 million related to certain severance actions at our is&gs business segment that occurred in the first quarter of 2013 , which were subsequently paid in 2013 . the november 2013 plan resulted from a strategic review of these businesses 2019 facility capacity and future workload projections and is intended to better align our organization and cost structure and improve the affordability of our products and services given the continued decline in u.s . government spending as well as the rapidly changing competitive and economic landscape . upon separation , terminated employees will receive lump-sum severance payments primarily based on years of service . during 2013 , we paid approximately $ 15 million in severance payments associated with these actions , with the remainder expected to be paid through the middle of 2015 . in addition to the severance charges described above , we expect to incur accelerated and incremental costs ( e.g. , accelerated depreciation expense related to long-lived assets at the sites to be closed , relocation of equipment and other employee related costs ) of approximately $ 15 million , $ 50 million , and $ 135 million at our is&gs , mst , and space systems business segments related to the facility closures and consolidations . the accelerated and incremental costs will be expensed as incurred in the respective business segment 2019s results of operations through their completion in 2015 . we expect to recover a substantial amount of the restructuring charges through the pricing of our products and services to the u.s . government and other customers in future periods , with the impact included in the respective business segment 2019s results of operations . 2012 and 2011 actions during 2012 , we recorded charges related to certain severance actions totaling $ 48 million , net of state tax benefits , of which $ 25 million related to our aeronautics business segment and $ 23 million related to the reorganization of our former electronic systems business segment . these charges reduced our net earnings by $ 31 million ( $ .09 per share ) and consisted of severance costs associated with the elimination of certain positions through either voluntary or involuntary actions . these severance actions resulted from cost reduction initiatives to better align our organization with changing economic conditions . upon separation , terminated employees received lump-sum severance payments primarily based on years of service , all of which were paid in 2013 . during 2011 , we recorded charges related to certain severance actions totaling $ 136 million , net of state tax benefits , of which $ 49 million , $ 48 million , and $ 39 million related to our aeronautics , space systems , and our is&gs business segments and corporate headquarters . these charges reduced our net earnings by $ 88 million ( $ .26 per share ) and consisted of severance costs associated with the elimination of certain positions through either voluntary or involuntary actions . these severance actions resulted from a strategic review of these businesses and our corporate headquarters and are intended to better align our organization and cost structure with changing economic conditions . the workforce reductions at the business segments also reflected changes in program lifecycles , where several of our major programs were either transitioning out of development and into production or were ending . upon separation , terminated employees received lump-sum severance payments based on years of service . during 2011 , we made approximately half of the severance payments associated with these 2011 severance actions , and paid the remaining amounts in 2012 . note 3 2013 earnings per share the weighted average number of shares outstanding used to compute earnings per common share were as follows ( in millions ) : . \n<image 1>\n .",
    "images": [
      "./MultiFinance/images/1459-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-989",
    "output": [
      "year_2021_production = 4789\n    year_2022_production = 4900\n    year_2023_production = 5000\n    \n    average_production = (year_2021_production + year_2022_production) / 2\n    growth_rate = ((year_2023_production - average_production) / average_production) * 100\n    \n    # return answer\n    return round(growth_rate, 2)\n```"
    ],
    "usage": {
      "completion_tokens": 113,
      "prompt_tokens": 2362,
      "completion_tokens_details": {
        "text_tokens": 113
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 2082
      },
      "total_tokens": 2475
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算2021年和2022年某省生产总值的平均值，并将该平均值与2023年生产总值进行比较，计算增长率；结果请保留两位小数。",
    "python_solution": "def solution():\n    value_2021 = 35.53\n    value_2022 = 40.00\n    value_2023 = 45.00\n    average = (value_2021 + value_2022) / 2\n    growth = (value_2023 - average) / average * 100\n    return round(growth, 2)",
    "image_id": "company_32_32_13_figure_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1134",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 2,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 6
      }
    },
    "difficulty": 3.8066624897703196,
    "images": [
      "./MultiFinance/images/2468-1.png",
      "./MultiFinance/images/2468-2.png",
      "./MultiFinance/images/2468-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2468-1.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-990",
    "output": [
      "pv_2020_2023 = 1706\n    hydropower_2020_2023 = 563\n    total_2020_2023 = pv_2020_2023 + hydropower_2020_2023\n    total_14th_five_year = 6110\n    percentage = (total_2020_2023 / total_14th_five_year) * 100\n    \n    # return answer\n    return round(percentage, 1)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 151,
      "prompt_tokens": 1712,
      "completion_tokens_details": {
        "text_tokens": 151
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 1432
      },
      "total_tokens": 1863
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算光伏和水电在2020-2023年的增量总和，并将其与“十四五”总量进行比较，求出增量占总量的百分比；请保留一位小数。",
    "python_solution": "def solution():\n    pv_increment = 1706\n    hydro_increment = 563\n    total_increment = pv_increment + hydro_increment\n    total_quantity = 6110\n    percentage = (total_increment / total_quantity) * 100\n    return round(percentage, 1)",
    "image_id": "company_01_01_12_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1411",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 0,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.1780538303479453,
    "images": [
      "./MultiFinance/images/2969-1.png",
      "./MultiFinance/images/2969-2.png",
      "./MultiFinance/images/2969-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2969-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-991",
    "output": [
      "growth_rate_1 = -79.3\n    growth_rate_2 = -6.2\n    growth_rate_3 = 3.5\n    growth_rate_4 = 7.4\n    \n    # Do math calculation to get the answer\n    average_growth_rate = (growth_rate_1 + growth_rate_2 + growth_rate_3 + growth_rate_4) / 4\n    \n    # return answer\n    return round(average_growth_rate, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 103,
      "prompt_tokens": 2704,
      "completion_tokens_details": {
        "text_tokens": 103
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 2446
      },
      "total_tokens": 2807
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年到2026年期间，营业收入增长率的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    growth_2023 = 6.5\n    growth_2024 = -6.2\n    growth_2025 = 3.5\n    growth_2026 = 7.4\n\n    average_growth = (growth_2023 + growth_2024 + growth_2025 + growth_2026) / 4\n    return round(average_growth, 1)",
    "image_id": "company_35_35_18_table_2",
    "source": "CRRQA",
    "source_id": "CRRQA-company-663",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 3,
          "-": 1,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 6,
        "parentheses": 4
      }
    },
    "difficulty": 3.688879454113936,
    "images": [
      "./MultiFinance/images/2563-1.png",
      "./MultiFinance/images/2563-2.png",
      "./MultiFinance/images/2563-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2563-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-992",
    "output": [
      "sa8650p_top = 100\n    sa8775p_top = 72\n    sa8650p_process = 4\n    sa8775p_process = 4\n    \n    # Do math calculation to get the answer\n    total_top = sa8650p_top + sa8775p_top\n    total_process = sa8650p_process + sa8775p_process\n    answer = total_top / total_process\n    \n    # return answer\n    return round(answer, 2)\n\n# Call function and print result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 135,
      "prompt_tokens": 3696,
      "completion_tokens_details": {
        "text_tokens": 135
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 3417
      },
      "total_tokens": 3831
    },
    "model": "qwen-omni-turbo",
    "question": "请根据图中数据，计算高通SA8650P和SA8775P芯片算力之和，并将结果除以它们的制程（nm）之和；请保留两位小数。",
    "python_solution": "def solution():\n    sa8650p = 100\n    sa8775p = 72\n    process_sa8650p = 7\n    process_sa8775p = 4\n    sum_sa = sa8650p + sa8775p\n    sum_process = process_sa8650p + process_sa8775p\n    result = sum_sa / sum_process\n    return round(result, 2)",
    "image_id": "industry_13_13_27_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2019",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 0,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 3
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.295836866004329,
    "images": [
      "./MultiFinance/images/2882-1.png",
      "./MultiFinance/images/2882-2.png",
      "./MultiFinance/images/2882-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2882-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-993",
    "output": [
      "mid_value = (20 + 22) / 2\n    result = (mid_value / 4.5) * ((73 + 138) / 2)\n    \n    # return answer\n    return round(result, 1)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 61,
      "prompt_tokens": 2793,
      "completion_tokens_details": {
        "text_tokens": 61
      },
      "prompt_tokens_details": {
        "text_tokens": 280,
        "image_tokens": 2513
      },
      "total_tokens": 2854
    },
    "model": "qwen-omni-turbo",
    "question": "请计算间位芳纶的断裂伸长率范围的中位数，并将其除以E-玻璃纤维的断裂伸长率，然后乘以碳纤维的模量范围的平均值；请保留一位小数。",
    "python_solution": "def solution():\n    elongation_metas_aromatic_polyamide = (20.0 + 22) / 2\n    elongation_E_glass_fiber = 4.5\n    modulus_carbon_fiber = (230 + 460) / 2\n\n    result = (elongation_metas_aromatic_polyamide / elongation_E_glass_fiber) * modulus_carbon_fiber\n    return round(result, 1)",
    "image_id": "industry_04_04_11_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-industry-2184",
    "subfield": "industry",
    "statistics": {
      "number_statistics": {
        "args_numbers": 3
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 1,
          "/": 3,
          "%": 0,
          "**": 0
        },
        "total_operators": 6
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 8
      }
    },
    "difficulty": 3.9889840465642745,
    "images": [
      "./MultiFinance/images/2373-1.png",
      "./MultiFinance/images/2373-2.png",
      "./MultiFinance/images/2373-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2373-2.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-994",
    "output": [
      "domestic_portfolio_return = 25\n    domestic_benchmark_return = 15\n    bond_portfolio_return = 9\n    bond_benchmark_return = 5\n    international_portfolio_return = 15\n    international_benchmark_return = 18\n    \n    # Do math calculation to get the answer\n    domestic_value_added = domestic_portfolio_return - domestic_benchmark_return\n    bond_value_added = bond_portfolio_return - bond_benchmark_return\n    international_value_added = international_portfolio_return - international_benchmark_return\n    total_value_added = domestic_value_added + bond_value_added + international_value_added\n    \n    # return answer\n    return round(total_value_added, 1)\n\n```"
    ],
    "usage": {
      "completion_tokens": 141,
      "prompt_tokens": 1503,
      "completion_tokens_details": {
        "text_tokens": 141
      },
      "prompt_tokens_details": {
        "text_tokens": 261,
        "image_tokens": 1242
      },
      "total_tokens": 1644
    },
    "model": "qwen-omni-turbo",
    "question": "According to the given table, can you compute the value added from the choice of security (expressed as a percentage)? Answer to a single decimal place.",
    "python_solution": "def solution():\n    # Define variables name and value\n    portfolio_return_domestic = 0.25\n    benchmark_return_domestic = 0.15\n    portfolio_weight_domestic = 0.50\n\n    portfolio_return_bond = 0.09\n    benchmark_return_bond = 0.05\n    portfolio_weight_bond = 0.30\n\n    portfolio_return_international = 0.15\n    benchmark_return_international = 0.18\n    portfolio_weight_international = 0.20\n\n    # Security Selection Effect calculation for each segment\n    security_selection_effect_domestic = (portfolio_return_domestic - benchmark_return_domestic) * portfolio_weight_domestic\n    security_selection_effect_bond = (portfolio_return_bond - benchmark_return_bond) * portfolio_weight_bond\n    security_selection_effect_international = (portfolio_return_international - benchmark_return_international) * portfolio_weight_international\n\n    # Total Security Selection Effect across all segments\n    total_security_selection_effect = (security_selection_effect_domestic +\n                                       security_selection_effect_bond +\n                                       security_selection_effect_international)\n\n    # return answer\n    return round(total_security_selection_effect * 100, 1)\n",
    "topic": "Portfolio Management & Strategy",
    "statistics": {
      "number_statistics": {
        "args_numbers": 9
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 3,
          "*": 4,
          "/": 0,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 20,
        "parentheses": 10
      }
    },
    "difficulty": 5.41610040220442,
    "source_id": "validation-44",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/306-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-995",
    "output": [
      "sugar_november_price = 0.90\n    cotton_november_price = 0.60\n    sugar_december_price = 1.00\n    cotton_december_price = 0.80\n    \n    sugar_november_quantity = 70\n    cotton_november_quantity = 60\n    sugar_december_quantity = 120\n    cotton_december_quantity = 50\n    \n    paasche_index = (sugar_december_price * sugar_december_quantity + cotton_december_price * cotton_december_quantity) / \\\n                    (sugar_november_price * sugar_november_quantity + cotton_november_price * cotton_november_quantity)\n    \n    # return answer\n    return round(paasche_index, 3)\n\n```"
    ],
    "usage": {
      "completion_tokens": 169,
      "prompt_tokens": 1500,
      "completion_tokens_details": {
        "text_tokens": 169
      },
      "prompt_tokens_details": {
        "text_tokens": 258,
        "image_tokens": 1242
      },
      "total_tokens": 1669
    },
    "model": "qwen-omni-turbo",
    "question": "What is the value of the Paasche index for the consumption basket shown in Exhibit 1 for December? Answer to three decimal places.",
    "python_solution": "def solution():\n    numerator = (120 * 1) + (50 * 0.8)\n    denominator = (120 * 0.9) + (50 * 0.6)\n    paasche_index = (numerator/denominator) * 100\n    return paasche_index",
    "topic": "Market Analysis & Economics",
    "statistics": {
      "number_statistics": {
        "args_numbers": 4
      },
      "operator_statistics": {
        "operators": {
          "+": 2,
          "-": 0,
          "*": 5,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 8
      },
      "code_statistics": {
        "lines": 4,
        "parentheses": 10
      }
    },
    "difficulty": 4.276666119016055,
    "source_id": "validation-118",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/338-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-996",
    "output": [
      "investment_cash_flow_2024 = -7515\n    investment_cash_flow_2023 = -3977\n    difference = investment_cash_flow_2024 - investment_cash_flow_2023\n    percentage_difference = (difference / investment_cash_flow_2023) * 100\n    \n    # return answer\n    return round(percentage_difference, 2)\n\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 95,
      "prompt_tokens": 2149,
      "completion_tokens_details": {
        "text_tokens": 95
      },
      "prompt_tokens_details": {
        "text_tokens": 279,
        "image_tokens": 1870
      },
      "total_tokens": 2244
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2024年与2023年的投资活动现金流量的差值，并将该差值占2023年投资活动现金流量的比例以百分比形式表示；请保留两位小数。",
    "python_solution": "def solution():\n    inv_cash_flow_2023 = -3977\n    inv_cash_flow_2024 = -7515\n    diff = inv_cash_flow_2024 - inv_cash_flow_2023\n    ratio = diff / abs(inv_cash_flow_2023) * 100\n    return round(ratio, 2)",
    "image_id": "company_06_06_39_table_4",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1462",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 3,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 5
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 4
      }
    },
    "difficulty": 3.5553480614894135,
    "images": [
      "./MultiFinance/images/2672-1.png",
      "./MultiFinance/images/2672-2.png",
      "./MultiFinance/images/2672-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2672-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-997",
    "output": [
      "year_2022_flow_asset = 24923\n    year_2023_flow_asset = 21512\n    \n    # Calculate the difference between 2023 and 2022 flow asset\n    diff_flow_asset = year_2023_flow_asset - year_2022_flow_asset\n    \n    # Calculate the percentage change in flow asset from 2022 to 2023\n    percent_change_flow_asset = (diff_flow_asset / year_2022_flow_asset) * 100\n    \n    # Return the result rounded to one decimal place\n    return round(percent_change_flow_asset, 1)\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 161,
      "prompt_tokens": 2830,
      "completion_tokens_details": {
        "text_tokens": 161
      },
      "prompt_tokens_details": {
        "text_tokens": 277,
        "image_tokens": 2553
      },
      "total_tokens": 2991
    },
    "model": "qwen-omni-turbo",
    "question": "请计算2023年与2022年流动资产合计的差值，并将该差值占2022年流动资产合计的比例以百分比形式表示；请保留一位小数。",
    "python_solution": "def solution():\n    # Numeric values taken from the image\n    current_assets_2022 = 24923\n    current_assets_2023 = 21512\n\n    # Multi-step logic\n    diff = current_assets_2023 - current_assets_2022\n    ratio = diff / current_assets_2022\n    percentage = ratio * 100\n    return round(percentage, 1)",
    "image_id": "company_01_01_31_table_1",
    "source": "CRRQA",
    "source_id": "CRRQA-company-1405",
    "subfield": "company",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 0,
          "-": 2,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 2
      }
    },
    "difficulty": 3.58351893845611,
    "images": [
      "./MultiFinance/images/2629-1.png",
      "./MultiFinance/images/2629-2.png",
      "./MultiFinance/images/2629-3.png"
    ],
    "ground_images": [
      "./MultiFinance/images/2629-3.png"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-998",
    "output": [
      "shares_repurchased_2018 = 74880\n    shares_repurchased_2019 = 75113 + 5000\n    \n    # Calculate the percentage change\n    percentage_change = ((shares_repurchased_2019 - shares_repurchased_2018) / shares_repurchased_2018) * 100\n    \n    # Return the answer\n    return percentage_change\n\n# Call the function and print the result\nprint(solution())\n```"
    ],
    "usage": {
      "completion_tokens": 111,
      "prompt_tokens": 1870,
      "completion_tokens_details": {
        "text_tokens": 111
      },
      "prompt_tokens_details": {
        "text_tokens": 614,
        "image_tokens": 1256
      },
      "total_tokens": 1981
    },
    "model": "qwen-omni-turbo",
    "question": "What would be the percentage change in the shares of common stock repurchased between fiscal 2018 and 2019 if the number of shares repurchased in 2019 is increased by 5,000? (in percent)",
    "python_solution": "def solution():\n    # Define variables name and value\n    shares_repurchased_2018 = 74880\n    shares_repurchased_2019 = 75113\n    additional_shares = 5000\n    \n    # Do math calculation to get the answer\n    new_shares_repurchased_2019 = shares_repurchased_2019 + additional_shares\n    percentage_change = ((new_shares_repurchased_2019 - shares_repurchased_2018) / shares_repurchased_2018) * 100\n    \n    return percentage_change",
    "source": "TAT-HQA",
    "source_id": "compshort-testmini-188",
    "img_type": "['Tables']",
    "context": "\n<image 1>\n REPURCHASE OF COMPANY SHARES The Company repurchased a total of 75,113 and 74,880 shares of its common stock during fiscal 2019 and fiscal 2018, respectively, for cash totaling approximately $7.5 million and $7.7 million, respectively. All repurchased shares were recorded in treasury stock at cost. At September 2019, 34,846 shares of the Company’s common shares remained authorized for repurchase in either the open market or privately negotiated transactions, as previously approved by the Company’s Board of Directors. In October 2019, our Board of Directors renewed the repurchase authorization for up to 75,000 shares of the Company’s common stock. During the fourth quarter of fiscal 2019, the Company repurchased shares of its common stock for cash totaling approximately $4.3 million. The following table summarizes these repurchases made by or on behalf of our Company or certain affiliated purchasers of shares of our common stock for the quarterly period ended September 30, 2019: * In October 2019 and subsequent to the end of fiscal 2019, our Board of Directors authorized purchases of up to\n75,000 shares of our Company’s common stock in open market or negotiated transactions. Management was\ngiven discretion to determine the number and pricing of the shares to be purchased, as well as the timing of any\nsuch purchases.",
    "images": [
      "./MultiFinance/images/1927-1.png"
    ],
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 1,
          "*": 1,
          "/": 1,
          "%": 0,
          "**": 0
        },
        "total_operators": 4
      },
      "code_statistics": {
        "lines": 8,
        "parentheses": 4
      }
    },
    "difficulty": 3.6888794541139367,
    "grade": "Hard",
    "language": "English"
  },
  {
    "question_id": "hard-test-999",
    "output": [
      "start_index_value = 121\n    stock_x_weighted_value = (15 + 20) / 2 * 100 / 1000\n    stock_y_weighted_value = (20 + 30) / 2 * 1000 / 1000\n    stock_z_weighted_value = (30 + 25) / 2 * 2000 / 1000\n    \n    # Do math calculation to get the answer\n    equal_weighted_index_value = start_index_value * (stock_x_weighted_value + stock_y_weighted_value + stock_z_weighted_value)\n    \n    # return answer\n    return round(equal_weighted_index_value, 3)\n\n```"
    ],
    "usage": {
      "completion_tokens": 162,
      "prompt_tokens": 1501,
      "completion_tokens_details": {
        "text_tokens": 162
      },
      "prompt_tokens_details": {
        "text_tokens": 259,
        "image_tokens": 1242
      },
      "total_tokens": 1663
    },
    "model": "qwen-omni-turbo",
    "question": "Compute the equal-weighted index value for these three shares, assuming the starting index value is 121. Answer to three decimal places.",
    "python_solution": "def solution():\n    starting_index = 121\n    shares = [(20/15-1), (30/20-1), (25/30-1)]\n    average_share = sum(shares) / len(shares)\n    new_index = starting_index * (1 + average_share)\n    return new_index",
    "topic": "Asset Classes & Derivatives",
    "statistics": {
      "number_statistics": {
        "args_numbers": 1
      },
      "operator_statistics": {
        "operators": {
          "+": 1,
          "-": 3,
          "*": 1,
          "/": 4,
          "%": 0,
          "**": 0
        },
        "total_operators": 9
      },
      "code_statistics": {
        "lines": 5,
        "parentheses": 12
      }
    },
    "difficulty": 4.595119850134591,
    "source_id": "validation-166",
    "img_type": "['Tables']",
    "source": "FinanceMath",
    "images": [
      "./MultiFinance/images/352-1.jpg"
    ],
    "context": "",
    "grade": "Hard",
    "language": "English"
  }
]